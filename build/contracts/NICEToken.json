{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minterAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "MintersEdit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "bridgeAddress",
          "type": "address"
        }
      ],
      "name": "SetBridge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "bridgeBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "bridgeBurnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bridgeAddress",
          "type": "address"
        }
      ],
      "name": "setBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newMinter",
          "type": "address"
        }
      ],
      "name": "toggleMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBurned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validMinters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "12": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "16": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "23": "contracts/NICEToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/NICEToken.sol",
    "exportedSymbols": {
      "Address": [
        12694
      ],
      "Context": [
        12716
      ],
      "NICEToken": [
        7859
      ],
      "Ownable": [
        11128
      ],
      "SafeMath": [
        11664
      ]
    },
    "id": 7860,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7169,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:23"
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7860,
        "sourceUnit": 11129,
        "src": "56:52:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7860,
        "sourceUnit": 11665,
        "src": "109:57:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 7172,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7860,
        "sourceUnit": 12695,
        "src": "167:51:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7173,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11128,
              "src": "242:7:23"
            },
            "id": 7174,
            "nodeType": "InheritanceSpecifier",
            "src": "242:7:23"
          }
        ],
        "canonicalName": "NICEToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7859,
        "linearizedBaseContracts": [
          7859,
          11128,
          12716
        ],
        "name": "NICEToken",
        "nameLocation": "229:9:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7178,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "284:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "256:36:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 7177,
              "keyType": {
                "id": 7175,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "264:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "256:27:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 7176,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 7181,
            "libraryName": {
              "id": 7179,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11664,
              "src": "305:8:23"
            },
            "nodeType": "UsingForDirective",
            "src": "299:27:23",
            "typeName": {
              "id": 7180,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 7184,
            "libraryName": {
              "id": 7182,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12694,
              "src": "337:7:23"
            },
            "nodeType": "UsingForDirective",
            "src": "331:26:23",
            "typeName": {
              "id": 7183,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 7188,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "399:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "363:45:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 7187,
              "keyType": {
                "id": 7185,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "371:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "363:27:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 7186,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "382:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7194,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "470:11:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "414:67:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 7193,
              "keyType": {
                "id": 7189,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "422:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "414:47:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 7192,
                "keyType": {
                  "id": 7190,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "433:27:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 7191,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "09cd3e7f",
            "id": 7198,
            "mutability": "mutable",
            "name": "validMinters",
            "nameLocation": "519:12:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "487:44:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7197,
              "keyType": {
                "id": 7195,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "495:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "487:24:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7196,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "506:4:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7200,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "554:12:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "538:28:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7199,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "538:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7202,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "588:5:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "573:20:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7201,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "573:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7204,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "614:7:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "599:22:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7203,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "599:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7206,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "641:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "627:23:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 7205,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "627:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "e78cea92",
            "id": 7208,
            "mutability": "mutable",
            "name": "bridge",
            "nameLocation": "672:6:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "657:21:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7207,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d89135cd",
            "id": 7210,
            "mutability": "mutable",
            "name": "totalBurned",
            "nameLocation": "699:11:23",
            "nodeType": "VariableDeclaration",
            "scope": 7859,
            "src": "684:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7209,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "684:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 7218,
            "name": "Approval",
            "nameLocation": "723:8:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7212,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "757:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "741:21:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7214,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "788:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "772:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7216,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "813:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "805:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "731:93:23"
            },
            "src": "717:108:23"
          },
          {
            "anonymous": false,
            "id": 7226,
            "name": "Transfer",
            "nameLocation": "836:8:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7220,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "861:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7226,
                  "src": "845:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7222,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "883:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7226,
                  "src": "867:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7224,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "895:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7226,
                  "src": "887:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "844:57:23"
            },
            "src": "830:72:23"
          },
          {
            "anonymous": false,
            "id": 7232,
            "name": "MintersEdit",
            "nameLocation": "914:11:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minterAddress",
                  "nameLocation": "934:13:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7232,
                  "src": "926:21:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7230,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "954:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7232,
                  "src": "949:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7229,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "925:36:23"
            },
            "src": "908:54:23"
          },
          {
            "anonymous": false,
            "id": 7236,
            "name": "SetBridge",
            "nameLocation": "973:9:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7234,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bridgeAddress",
                  "nameLocation": "991:13:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7236,
                  "src": "983:21:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "982:23:23"
            },
            "src": "967:39:23"
          },
          {
            "body": {
              "id": 7247,
              "nodeType": "Block",
              "src": "1054:76:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7239,
                          "name": "validMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7198,
                          "src": "1072:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 7242,
                        "indexExpression": {
                          "expression": {
                            "id": 7240,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1085:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1085:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1072:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c794d696e74657273",
                        "id": 7243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1098:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_772bf205f0ce71597812a022350661f3a5e11b5b9290339d05934da4589106e8",
                          "typeString": "literal_string \"onlyMinters\""
                        },
                        "value": "onlyMinters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_772bf205f0ce71597812a022350661f3a5e11b5b9290339d05934da4589106e8",
                          "typeString": "literal_string \"onlyMinters\""
                        }
                      ],
                      "id": 7238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1064:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7245,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:48:23"
                },
                {
                  "id": 7246,
                  "nodeType": "PlaceholderStatement",
                  "src": "1122:1:23"
                }
              ]
            },
            "id": 7248,
            "name": "onlyMinter",
            "nameLocation": "1041:10:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:23"
            },
            "src": "1032:98:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7259,
              "nodeType": "Block",
              "src": "1158:71:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7251,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1176:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1176:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7253,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7208,
                          "src": "1190:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1176:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79427269646765",
                        "id": 7255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1198:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_368bc218fdc9a2a2c6932145e94ca95d0255ee9651deb73f4b20f03ed32847c0",
                          "typeString": "literal_string \"onlyBridge\""
                        },
                        "value": "onlyBridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_368bc218fdc9a2a2c6932145e94ca95d0255ee9651deb73f4b20f03ed32847c0",
                          "typeString": "literal_string \"onlyBridge\""
                        }
                      ],
                      "id": 7250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1168:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1168:43:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7257,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:43:23"
                },
                {
                  "id": 7258,
                  "nodeType": "PlaceholderStatement",
                  "src": "1221:1:23"
                }
              ]
            },
            "id": 7260,
            "name": "onlyBridge",
            "nameLocation": "1145:10:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:2:23"
            },
            "src": "1136:93:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7291,
              "nodeType": "Block",
              "src": "1299:177:23",
              "statements": [
                {
                  "expression": {
                    "id": 7269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7267,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7202,
                      "src": "1309:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7268,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7262,
                      "src": "1317:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1309:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7270,
                  "nodeType": "ExpressionStatement",
                  "src": "1309:17:23"
                },
                {
                  "expression": {
                    "id": 7273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7271,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7204,
                      "src": "1336:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7272,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7264,
                      "src": "1346:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1336:21:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7274,
                  "nodeType": "ExpressionStatement",
                  "src": "1336:21:23"
                },
                {
                  "expression": {
                    "id": 7277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7275,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7206,
                      "src": "1367:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3138",
                      "id": 7276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1379:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "1367:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 7278,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:14:23"
                },
                {
                  "expression": {
                    "id": 7282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7279,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7208,
                      "src": "1391:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7280,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1400:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1400:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1391:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7283,
                  "nodeType": "ExpressionStatement",
                  "src": "1391:19:23"
                },
                {
                  "expression": {
                    "id": 7289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7284,
                        "name": "validMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7198,
                        "src": "1420:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7287,
                      "indexExpression": {
                        "expression": {
                          "id": 7285,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1433:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1433:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1420:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1447:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1420:31:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7290,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:31:23"
                }
              ]
            },
            "id": 7292,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7262,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1261:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7292,
                  "src": "1247:23:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7261,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7264,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1286:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7292,
                  "src": "1272:25:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7263,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1272:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:52:23"
            },
            "returnParameters": {
              "id": 7266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1299:0:23"
            },
            "scope": 7859,
            "src": "1235:241:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7300,
              "nodeType": "Block",
              "src": "1610:29:23",
              "statements": [
                {
                  "expression": {
                    "id": 7298,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7202,
                    "src": "1627:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7297,
                  "id": 7299,
                  "nodeType": "Return",
                  "src": "1620:12:23"
                }
              ]
            },
            "documentation": {
              "id": 7293,
              "nodeType": "StructuredDocumentation",
              "src": "1506:47:23",
              "text": " @dev Returns the token name."
            },
            "functionSelector": "06fdde03",
            "id": 7301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1567:4:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1571:2:23"
            },
            "returnParameters": {
              "id": 7297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7296,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7301,
                  "src": "1595:13:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7295,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:15:23"
            },
            "scope": 7859,
            "src": "1558:81:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7309,
              "nodeType": "Block",
              "src": "1749:33:23",
              "statements": [
                {
                  "expression": {
                    "id": 7307,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7206,
                    "src": "1766:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 7306,
                  "id": 7308,
                  "nodeType": "Return",
                  "src": "1759:16:23"
                }
              ]
            },
            "documentation": {
              "id": 7302,
              "nodeType": "StructuredDocumentation",
              "src": "1645:51:23",
              "text": " @dev Returns the token decimals."
            },
            "functionSelector": "313ce567",
            "id": 7310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1710:8:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:2:23"
            },
            "returnParameters": {
              "id": 7306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7310,
                  "src": "1742:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7304,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1741:7:23"
            },
            "scope": 7859,
            "src": "1701:81:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7318,
              "nodeType": "Block",
              "src": "1896:31:23",
              "statements": [
                {
                  "expression": {
                    "id": 7316,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7204,
                    "src": "1913:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7315,
                  "id": 7317,
                  "nodeType": "Return",
                  "src": "1906:14:23"
                }
              ]
            },
            "documentation": {
              "id": 7311,
              "nodeType": "StructuredDocumentation",
              "src": "1788:49:23",
              "text": " @dev Returns the token symbol."
            },
            "functionSelector": "95d89b41",
            "id": 7319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1851:6:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1857:2:23"
            },
            "returnParameters": {
              "id": 7315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7314,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7319,
                  "src": "1881:13:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:15:23"
            },
            "scope": 7859,
            "src": "1842:85:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7327,
              "nodeType": "Block",
              "src": "2039:36:23",
              "statements": [
                {
                  "expression": {
                    "id": 7325,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7200,
                    "src": "2056:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7324,
                  "id": 7326,
                  "nodeType": "Return",
                  "src": "2049:19:23"
                }
              ]
            },
            "documentation": {
              "id": 7320,
              "nodeType": "StructuredDocumentation",
              "src": "1933:48:23",
              "text": " @dev See {BEP20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 7328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1995:11:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2006:2:23"
            },
            "returnParameters": {
              "id": 7324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7328,
                  "src": "2030:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:9:23"
            },
            "scope": 7859,
            "src": "1986:89:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7340,
              "nodeType": "Block",
              "src": "2198:42:23",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7336,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7188,
                      "src": "2215:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 7338,
                    "indexExpression": {
                      "id": 7337,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7331,
                      "src": "2225:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2215:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7335,
                  "id": 7339,
                  "nodeType": "Return",
                  "src": "2208:25:23"
                }
              ]
            },
            "documentation": {
              "id": 7329,
              "nodeType": "StructuredDocumentation",
              "src": "2081:46:23",
              "text": " @dev See {BEP20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 7341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2141:9:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7331,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2159:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "2151:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2150:17:23"
            },
            "returnParameters": {
              "id": 7335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7334,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "2189:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2188:9:23"
            },
            "scope": 7859,
            "src": "2132:108:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7360,
              "nodeType": "Block",
              "src": "2517:80:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7352,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12706,
                          "src": "2537:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2537:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7354,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7344,
                        "src": "2551:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7355,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7346,
                        "src": "2562:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7351,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7572,
                      "src": "2527:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2527:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7357,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:42:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2586:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7350,
                  "id": 7359,
                  "nodeType": "Return",
                  "src": "2579:11:23"
                }
              ]
            },
            "documentation": {
              "id": 7342,
              "nodeType": "StructuredDocumentation",
              "src": "2246:191:23",
              "text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 7361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2451:8:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7344,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2468:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7361,
                  "src": "2460:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7346,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2487:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7361,
                  "src": "2479:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2459:35:23"
            },
            "returnParameters": {
              "id": 7350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7361,
                  "src": "2511:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7348,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2511:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2510:6:23"
            },
            "scope": 7859,
            "src": "2442:155:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7377,
              "nodeType": "Block",
              "src": "2763:51:23",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 7371,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7194,
                        "src": "2780:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 7373,
                      "indexExpression": {
                        "id": 7372,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7364,
                        "src": "2792:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2780:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 7375,
                    "indexExpression": {
                      "id": 7374,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7366,
                      "src": "2799:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2780:27:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7370,
                  "id": 7376,
                  "nodeType": "Return",
                  "src": "2773:34:23"
                }
              ]
            },
            "documentation": {
              "id": 7362,
              "nodeType": "StructuredDocumentation",
              "src": "2603:46:23",
              "text": " @dev See {BEP20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 7378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "2663:9:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7364,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2681:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7378,
                  "src": "2673:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7366,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2696:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7378,
                  "src": "2688:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2672:32:23"
            },
            "returnParameters": {
              "id": 7370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7378,
                  "src": "2750:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2750:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2749:9:23"
            },
            "scope": 7859,
            "src": "2654:160:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7397,
              "nodeType": "Block",
              "src": "3023:77:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7389,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12706,
                          "src": "3042:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3042:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7391,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7381,
                        "src": "3056:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7383,
                        "src": "3065:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7388,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7710,
                      "src": "3033:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3033:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7394,
                  "nodeType": "ExpressionStatement",
                  "src": "3033:39:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3089:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7387,
                  "id": 7396,
                  "nodeType": "Return",
                  "src": "3082:11:23"
                }
              ]
            },
            "documentation": {
              "id": 7379,
              "nodeType": "StructuredDocumentation",
              "src": "2820:126:23",
              "text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 7398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2960:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7381,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2976:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7398,
                  "src": "2968:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2968:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7383,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2993:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7398,
                  "src": "2985:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2967:33:23"
            },
            "returnParameters": {
              "id": 7387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7398,
                  "src": "3017:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3016:6:23"
            },
            "scope": 7859,
            "src": "2951:149:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7434,
              "nodeType": "Block",
              "src": "3682:297:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7411,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7401,
                        "src": "3702:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7412,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7403,
                        "src": "3710:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7413,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7405,
                        "src": "3721:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7410,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7572,
                      "src": "3692:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3692:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7415,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:36:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7417,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7401,
                        "src": "3760:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7418,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12706,
                          "src": "3780:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3780:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7427,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7405,
                            "src": "3861:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 7428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3885:42:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
                              "typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
                            },
                            "value": "BEP20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
                              "typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7420,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7194,
                                "src": "3806:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 7422,
                              "indexExpression": {
                                "id": 7421,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7401,
                                "src": "3818:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3806:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7425,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 7423,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12706,
                                "src": "3826:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 7424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3826:12:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3806:33:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11613,
                          "src": "3806:37:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 7429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3806:135:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7416,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7710,
                      "src": "3738:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3738:213:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7431,
                  "nodeType": "ExpressionStatement",
                  "src": "3738:213:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3968:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7409,
                  "id": 7433,
                  "nodeType": "Return",
                  "src": "3961:11:23"
                }
              ]
            },
            "documentation": {
              "id": 7399,
              "nodeType": "StructuredDocumentation",
              "src": "3106:446:23",
              "text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 7435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3566:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7401,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3596:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "3588:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3588:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7403,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3620:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "3612:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7405,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3647:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "3639:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3639:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3578:81:23"
            },
            "returnParameters": {
              "id": 7409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "3676:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3676:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3675:6:23"
            },
            "scope": 7859,
            "src": "3557:422:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7462,
              "nodeType": "Block",
              "src": "4479:167:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7446,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12706,
                          "src": "4511:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4511:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7448,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7438,
                        "src": "4537:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7456,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7440,
                            "src": "4597:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7449,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7194,
                                "src": "4558:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 7452,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 7450,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12706,
                                  "src": "4570:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 7451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4570:12:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4558:25:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7454,
                            "indexExpression": {
                              "id": 7453,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7438,
                              "src": "4584:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4558:34:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11528,
                          "src": "4558:38:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4558:50:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7445,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7710,
                      "src": "4489:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4489:129:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7459,
                  "nodeType": "ExpressionStatement",
                  "src": "4489:129:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4635:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7444,
                  "id": 7461,
                  "nodeType": "Return",
                  "src": "4628:11:23"
                }
              ]
            },
            "documentation": {
              "id": 7436,
              "nodeType": "StructuredDocumentation",
              "src": "3985:383:23",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 7463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "4382:17:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7438,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4408:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "4400:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4400:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7440,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "4425:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "4417:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4399:37:23"
            },
            "returnParameters": {
              "id": 7444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7443,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "4469:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7442,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4469:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4468:6:23"
            },
            "scope": 7859,
            "src": "4373:273:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7491,
              "nodeType": "Block",
              "src": "5243:259:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7474,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12706,
                          "src": "5275:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5275:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7476,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "5301:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7484,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7468,
                            "src": "5378:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 7485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5411:39:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
                              "typeString": "literal_string \"BEP20: decreased allowance below zero\""
                            },
                            "value": "BEP20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
                              "typeString": "literal_string \"BEP20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7477,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7194,
                                "src": "5322:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 7480,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 7478,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12706,
                                  "src": "5334:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 7479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5334:12:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5322:25:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7482,
                            "indexExpression": {
                              "id": 7481,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7466,
                              "src": "5348:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5322:34:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11613,
                          "src": "5322:38:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 7486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5322:142:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7473,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7710,
                      "src": "5253:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5253:221:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7488,
                  "nodeType": "ExpressionStatement",
                  "src": "5253:221:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5491:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7472,
                  "id": 7490,
                  "nodeType": "Return",
                  "src": "5484:11:23"
                }
              ]
            },
            "documentation": {
              "id": 7464,
              "nodeType": "StructuredDocumentation",
              "src": "4652:475:23",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 7492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "5141:17:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7466,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5167:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7492,
                  "src": "5159:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5159:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7468,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "5184:15:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7492,
                  "src": "5176:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5176:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5158:42:23"
            },
            "returnParameters": {
              "id": 7472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7471,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7492,
                  "src": "5233:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7470,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5233:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5232:6:23"
            },
            "scope": 7859,
            "src": "5132:370:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7511,
              "nodeType": "Block",
              "src": "5659:89:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7499,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5675:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5675:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7501,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7495,
                        "src": "5687:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7498,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7665,
                      "src": "5669:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5669:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7503,
                  "nodeType": "ExpressionStatement",
                  "src": "5669:25:23"
                },
                {
                  "expression": {
                    "id": 7509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7504,
                      "name": "totalBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7210,
                      "src": "5704:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7507,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7495,
                          "src": "5734:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7505,
                          "name": "totalBurned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7210,
                          "src": "5718:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "5718:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5718:23:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5704:37:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7510,
                  "nodeType": "ExpressionStatement",
                  "src": "5704:37:23"
                }
              ]
            },
            "documentation": {
              "id": 7493,
              "nodeType": "StructuredDocumentation",
              "src": "5508:107:23",
              "text": "@notice burns from msg.sender's wallet, adds to totalBurned\n @param amount is the amount to mint"
            },
            "functionSelector": "42966c68",
            "id": 7512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5629:4:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7495,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5642:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7512,
                  "src": "5634:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5633:16:23"
            },
            "returnParameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5659:0:23"
            },
            "scope": 7859,
            "src": "5620:128:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7571,
              "nodeType": "Block",
              "src": "6331:419:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7523,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7515,
                          "src": "6349:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6367:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6359:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7524,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6359:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6359:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6349:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 7529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6371:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                          "typeString": "literal_string \"BEP20: transfer from the zero address\""
                        },
                        "value": "BEP20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                          "typeString": "literal_string \"BEP20: transfer from the zero address\""
                        }
                      ],
                      "id": 7522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6341:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:70:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7531,
                  "nodeType": "ExpressionStatement",
                  "src": "6341:70:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7533,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7517,
                          "src": "6429:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6450:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6442:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7534,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6442:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6442:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6429:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 7539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6454:37:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                          "typeString": "literal_string \"BEP20: transfer to the zero address\""
                        },
                        "value": "BEP20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                          "typeString": "literal_string \"BEP20: transfer to the zero address\""
                        }
                      ],
                      "id": 7532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6421:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6421:71:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7541,
                  "nodeType": "ExpressionStatement",
                  "src": "6421:71:23"
                },
                {
                  "expression": {
                    "id": 7552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7542,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7188,
                        "src": "6503:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7544,
                      "indexExpression": {
                        "id": 7543,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7515,
                        "src": "6513:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6503:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7549,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7519,
                          "src": "6558:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 7550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6578:40:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                            "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                          },
                          "value": "BEP20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                            "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 7545,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7188,
                            "src": "6523:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 7547,
                          "indexExpression": {
                            "id": 7546,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7515,
                            "src": "6533:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6523:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11613,
                        "src": "6523:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 7551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6523:105:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6503:125:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7553,
                  "nodeType": "ExpressionStatement",
                  "src": "6503:125:23"
                },
                {
                  "expression": {
                    "id": 7563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7554,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7188,
                        "src": "6638:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7556,
                      "indexExpression": {
                        "id": 7555,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7517,
                        "src": "6648:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6638:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7561,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7519,
                          "src": "6686:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 7557,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7188,
                            "src": "6661:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 7559,
                          "indexExpression": {
                            "id": 7558,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7517,
                            "src": "6671:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6661:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "6661:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6661:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6638:55:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7564,
                  "nodeType": "ExpressionStatement",
                  "src": "6638:55:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7566,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7515,
                        "src": "6717:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7567,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7517,
                        "src": "6725:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7568,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "6736:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7565,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7226,
                      "src": "6708:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6708:35:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7570,
                  "nodeType": "EmitStatement",
                  "src": "6703:40:23"
                }
              ]
            },
            "documentation": {
              "id": 7513,
              "nodeType": "StructuredDocumentation",
              "src": "5754:463:23",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 7572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "6231:9:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7515,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6258:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7572,
                  "src": "6250:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6250:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7517,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6282:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7572,
                  "src": "6274:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6274:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7519,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6309:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7572,
                  "src": "6301:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6301:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6240:81:23"
            },
            "returnParameters": {
              "id": 7521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6331:0:23"
            },
            "scope": 7859,
            "src": "6222:528:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7617,
              "nodeType": "Block",
              "src": "7077:245:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7581,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7575,
                          "src": "7095:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7114:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7106:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7582,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7106:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7106:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7095:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 7587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7118:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        },
                        "value": "BEP20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        }
                      ],
                      "id": 7580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7087:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7087:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7589,
                  "nodeType": "ExpressionStatement",
                  "src": "7087:65:23"
                },
                {
                  "expression": {
                    "id": 7595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7590,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7200,
                      "src": "7163:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7593,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7577,
                          "src": "7195:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7591,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7200,
                          "src": "7178:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "7178:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7178:24:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7163:39:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7596,
                  "nodeType": "ExpressionStatement",
                  "src": "7163:39:23"
                },
                {
                  "expression": {
                    "id": 7606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7597,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7188,
                        "src": "7212:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7599,
                      "indexExpression": {
                        "id": 7598,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7575,
                        "src": "7222:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7212:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7604,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7577,
                          "src": "7256:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 7600,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7188,
                            "src": "7233:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 7602,
                          "indexExpression": {
                            "id": 7601,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7575,
                            "src": "7243:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7233:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "7233:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7233:30:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7212:51:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7607,
                  "nodeType": "ExpressionStatement",
                  "src": "7212:51:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 7611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7295:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 7610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7287:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7609,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7287:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7287:10:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7613,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7575,
                        "src": "7299:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7614,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7577,
                        "src": "7308:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7608,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7226,
                      "src": "7278:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7278:37:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7616,
                  "nodeType": "EmitStatement",
                  "src": "7273:42:23"
                }
              ]
            },
            "documentation": {
              "id": 7573,
              "nodeType": "StructuredDocumentation",
              "src": "6756:259:23",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
            },
            "id": 7618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7029:5:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7575,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7043:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7618,
                  "src": "7035:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7035:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7577,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7060:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7618,
                  "src": "7052:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7052:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7034:33:23"
            },
            "returnParameters": {
              "id": 7579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7077:0:23"
            },
            "scope": 7859,
            "src": "7020:302:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7664,
              "nodeType": "Block",
              "src": "7698:319:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7627,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7621,
                          "src": "7716:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7735:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7727:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7628,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7727:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7727:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7716:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 7633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7739:35:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                          "typeString": "literal_string \"BEP20: burn from the zero address\""
                        },
                        "value": "BEP20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                          "typeString": "literal_string \"BEP20: burn from the zero address\""
                        }
                      ],
                      "id": 7626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7708:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7708:67:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7635,
                  "nodeType": "ExpressionStatement",
                  "src": "7708:67:23"
                },
                {
                  "expression": {
                    "id": 7646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7636,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7188,
                        "src": "7786:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7638,
                      "indexExpression": {
                        "id": 7637,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7621,
                        "src": "7796:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7786:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7643,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7623,
                          "src": "7843:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 7644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7863:36:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                            "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                          },
                          "value": "BEP20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                            "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 7639,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7188,
                            "src": "7807:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 7641,
                          "indexExpression": {
                            "id": 7640,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7621,
                            "src": "7817:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7807:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11613,
                        "src": "7807:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 7645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7807:102:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7786:123:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7647,
                  "nodeType": "ExpressionStatement",
                  "src": "7786:123:23"
                },
                {
                  "expression": {
                    "id": 7653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7648,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7200,
                      "src": "7919:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7651,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7623,
                          "src": "7951:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7649,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7200,
                          "src": "7934:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "7934:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7934:24:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7919:39:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7654,
                  "nodeType": "ExpressionStatement",
                  "src": "7919:39:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7656,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7621,
                        "src": "7982:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 7659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7999:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 7658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7991:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7657,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7991:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7991:10:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7661,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7623,
                        "src": "8003:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7655,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7226,
                      "src": "7973:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7973:37:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7663,
                  "nodeType": "EmitStatement",
                  "src": "7968:42:23"
                }
              ]
            },
            "documentation": {
              "id": 7619,
              "nodeType": "StructuredDocumentation",
              "src": "7328:308:23",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 7665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "7650:5:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7621,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7664:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7665,
                  "src": "7656:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7656:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7623,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7681:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7665,
                  "src": "7673:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7673:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7655:33:23"
            },
            "returnParameters": {
              "id": 7625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7698:0:23"
            },
            "scope": 7859,
            "src": "7641:376:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7709,
              "nodeType": "Block",
              "src": "8547:257:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7676,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7668,
                          "src": "8565:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8582:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8574:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7677,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8574:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8574:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8565:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 7682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8586:38:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                          "typeString": "literal_string \"BEP20: approve from the zero address\""
                        },
                        "value": "BEP20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                          "typeString": "literal_string \"BEP20: approve from the zero address\""
                        }
                      ],
                      "id": 7675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8557:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8557:68:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7684,
                  "nodeType": "ExpressionStatement",
                  "src": "8557:68:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7686,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7670,
                          "src": "8643:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8662:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8654:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7687,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8654:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8654:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8643:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 7692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8666:36:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                          "typeString": "literal_string \"BEP20: approve to the zero address\""
                        },
                        "value": "BEP20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                          "typeString": "literal_string \"BEP20: approve to the zero address\""
                        }
                      ],
                      "id": 7685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8635:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8635:68:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7694,
                  "nodeType": "ExpressionStatement",
                  "src": "8635:68:23"
                },
                {
                  "expression": {
                    "id": 7701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 7695,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7194,
                          "src": "8714:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 7698,
                        "indexExpression": {
                          "id": 7696,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7668,
                          "src": "8726:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8714:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7699,
                      "indexExpression": {
                        "id": 7697,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7670,
                        "src": "8733:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8714:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7700,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7672,
                      "src": "8744:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8714:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7702,
                  "nodeType": "ExpressionStatement",
                  "src": "8714:36:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7704,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7668,
                        "src": "8774:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7705,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7670,
                        "src": "8781:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7706,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7672,
                        "src": "8790:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7703,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7218,
                      "src": "8765:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8765:32:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7708,
                  "nodeType": "EmitStatement",
                  "src": "8760:37:23"
                }
              ]
            },
            "documentation": {
              "id": 7666,
              "nodeType": "StructuredDocumentation",
              "src": "8023:414:23",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 7710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "8451:8:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7668,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8477:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7710,
                  "src": "8469:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8469:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7670,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8500:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7710,
                  "src": "8492:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8492:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7672,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8525:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7710,
                  "src": "8517:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8517:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8459:78:23"
            },
            "returnParameters": {
              "id": 7674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8547:0:23"
            },
            "scope": 7859,
            "src": "8442:362:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7739,
              "nodeType": "Block",
              "src": "9043:260:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7719,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7713,
                        "src": "9059:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7720,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7715,
                        "src": "9068:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7718,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7665,
                      "src": "9053:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9053:22:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7722,
                  "nodeType": "ExpressionStatement",
                  "src": "9053:22:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7724,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7713,
                        "src": "9107:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7725,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12706,
                          "src": "9128:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9128:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7734,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7715,
                            "src": "9210:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 7735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9234:38:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                              "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                            },
                            "value": "BEP20: burn amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                              "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7727,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7194,
                                "src": "9154:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 7729,
                              "indexExpression": {
                                "id": 7728,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7713,
                                "src": "9166:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9154:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7732,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 7730,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12706,
                                "src": "9175:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 7731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9175:12:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9154:34:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11613,
                          "src": "9154:38:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 7736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9154:132:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7723,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7710,
                      "src": "9085:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9085:211:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7738,
                  "nodeType": "ExpressionStatement",
                  "src": "9085:211:23"
                }
              ]
            },
            "documentation": {
              "id": 7711,
              "nodeType": "StructuredDocumentation",
              "src": "8810:167:23",
              "text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
            },
            "id": 7740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnFrom",
            "nameLocation": "8991:9:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7713,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9009:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7740,
                  "src": "9001:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9001:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7715,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9026:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7740,
                  "src": "9018:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9018:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9000:33:23"
            },
            "returnParameters": {
              "id": 7717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9043:0:23"
            },
            "scope": 7859,
            "src": "8982:321:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7756,
              "nodeType": "Block",
              "src": "9608:71:23",
              "statements": [
                {
                  "expression": {
                    "id": 7750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7748,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7208,
                      "src": "9618:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7749,
                      "name": "bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7743,
                      "src": "9627:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9618:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7751,
                  "nodeType": "ExpressionStatement",
                  "src": "9618:22:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7753,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7208,
                        "src": "9665:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7752,
                      "name": "SetBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7236,
                      "src": "9655:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9655:17:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7755,
                  "nodeType": "EmitStatement",
                  "src": "9650:22:23"
                }
              ]
            },
            "documentation": {
              "id": 7741,
              "nodeType": "StructuredDocumentation",
              "src": "9366:178:23",
              "text": "@notice Sets Bridge when it's ready. This is the bridge that will be able to use onlyBridge functions.\n @param bridgeAddress is the address of the bridge on this chain"
            },
            "functionSelector": "8dd14802",
            "id": 7757,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7746,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7745,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "9598:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "9598:9:23"
              }
            ],
            "name": "setBridge",
            "nameLocation": "9558:9:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7743,
                  "mutability": "mutable",
                  "name": "bridgeAddress",
                  "nameLocation": "9576:13:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7757,
                  "src": "9568:21:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9568:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9567:23:23"
            },
            "returnParameters": {
              "id": 7747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9608:0:23"
            },
            "scope": 7859,
            "src": "9549:130:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7776,
              "nodeType": "Block",
              "src": "9914:60:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7770,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7760,
                        "src": "9930:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7771,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7762,
                        "src": "9939:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7769,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7618,
                      "src": "9924:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9924:22:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7773,
                  "nodeType": "ExpressionStatement",
                  "src": "9924:22:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9963:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7768,
                  "id": 7775,
                  "nodeType": "Return",
                  "src": "9956:11:23"
                }
              ]
            },
            "documentation": {
              "id": 7758,
              "nodeType": "StructuredDocumentation",
              "src": "9685:114:23",
              "text": "@notice mint function\n @param account is the target address\n @param amount is the amount to mint"
            },
            "functionSelector": "40c10f19",
            "id": 7777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7764,
                  "name": "onlyMinter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7248,
                  "src": "9876:10:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "9876:10:23"
              }
            ],
            "name": "mint",
            "nameLocation": "9813:4:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7760,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9826:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7777,
                  "src": "9818:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9818:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7762,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9843:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7777,
                  "src": "9835:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9835:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9817:33:23"
            },
            "returnParameters": {
              "id": 7768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7777,
                  "src": "9904:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7766,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9904:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9903:6:23"
            },
            "scope": 7859,
            "src": "9804:170:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7796,
              "nodeType": "Block",
              "src": "10309:60:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7790,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7780,
                        "src": "10325:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7791,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7782,
                        "src": "10334:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7789,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7665,
                      "src": "10319:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10319:22:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7793,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:22:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10358:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7788,
                  "id": 7795,
                  "nodeType": "Return",
                  "src": "10351:11:23"
                }
              ]
            },
            "documentation": {
              "id": 7778,
              "nodeType": "StructuredDocumentation",
              "src": "9980:208:23",
              "text": "@notice Allows bridge to burn from its own wallet. User must be msg.sender.\n @param account is the address of the bridge on this chain\n @param amount is the amount to burn from sender wallet"
            },
            "functionSelector": "74f4f547",
            "id": 7797,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7785,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7784,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7260,
                  "src": "10271:10:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "10271:10:23"
              }
            ],
            "name": "bridgeBurn",
            "nameLocation": "10202:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7780,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10221:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7797,
                  "src": "10213:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10213:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7782,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10238:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7797,
                  "src": "10230:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10230:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10212:33:23"
            },
            "returnParameters": {
              "id": 7788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7787,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7797,
                  "src": "10299:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7786,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10299:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10298:6:23"
            },
            "scope": 7859,
            "src": "10193:176:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7832,
              "nodeType": "Block",
              "src": "10768:281:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7810,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7800,
                        "src": "10784:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7811,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7802,
                        "src": "10793:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7809,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7665,
                      "src": "10778:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10778:22:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7813,
                  "nodeType": "ExpressionStatement",
                  "src": "10778:22:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7815,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7800,
                        "src": "10832:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7816,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12706,
                          "src": "10853:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10853:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7825,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7802,
                            "src": "10935:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 7826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10959:38:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                              "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                            },
                            "value": "BEP20: burn amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                              "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7818,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7194,
                                "src": "10879:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 7820,
                              "indexExpression": {
                                "id": 7819,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7800,
                                "src": "10891:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10879:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7823,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 7821,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12706,
                                "src": "10900:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 7822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10900:12:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10879:34:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11613,
                          "src": "10879:38:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 7827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10879:132:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7814,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7710,
                      "src": "10810:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10810:211:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7829,
                  "nodeType": "ExpressionStatement",
                  "src": "10810:211:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11038:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7808,
                  "id": 7831,
                  "nodeType": "Return",
                  "src": "11031:11:23"
                }
              ]
            },
            "documentation": {
              "id": 7798,
              "nodeType": "StructuredDocumentation",
              "src": "10375:268:23",
              "text": "@notice Allows bridge to burn from a user's wallet with previous approval\n @param account is the address of the user that wants to transfer tokens\n @param amount is the amount to burn from the user wallet. Must be <= than the amount approved by user."
            },
            "functionSelector": "77be18a8",
            "id": 7833,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7805,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7804,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7260,
                  "src": "10730:10:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "10730:10:23"
              }
            ],
            "name": "bridgeBurnFrom",
            "nameLocation": "10657:14:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7800,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10680:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7833,
                  "src": "10672:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10672:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7802,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10697:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7833,
                  "src": "10689:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10689:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10671:33:23"
            },
            "returnParameters": {
              "id": 7808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7833,
                  "src": "10758:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7806,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10758:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10757:6:23"
            },
            "scope": 7859,
            "src": "10648:401:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7857,
              "nodeType": "Block",
              "src": "11249:129:23",
              "statements": [
                {
                  "expression": {
                    "id": 7848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7841,
                        "name": "validMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7198,
                        "src": "11259:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7843,
                      "indexExpression": {
                        "id": 7842,
                        "name": "newMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7836,
                        "src": "11272:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11259:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11285:24:23",
                      "subExpression": {
                        "baseExpression": {
                          "id": 7844,
                          "name": "validMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7198,
                          "src": "11286:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 7846,
                        "indexExpression": {
                          "id": 7845,
                          "name": "newMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7836,
                          "src": "11299:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11286:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11259:50:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7849,
                  "nodeType": "ExpressionStatement",
                  "src": "11259:50:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7851,
                        "name": "newMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7836,
                        "src": "11336:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7852,
                          "name": "validMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7198,
                          "src": "11347:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 7854,
                        "indexExpression": {
                          "id": 7853,
                          "name": "newMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7836,
                          "src": "11360:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11347:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7850,
                      "name": "MintersEdit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7232,
                      "src": "11324:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 7855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11324:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7856,
                  "nodeType": "EmitStatement",
                  "src": "11319:52:23"
                }
              ]
            },
            "documentation": {
              "id": 7834,
              "nodeType": "StructuredDocumentation",
              "src": "11055:129:23",
              "text": "@notice Allows owner to assign minter privileges to other addresses\n @param newMinter is the address of desired minter"
            },
            "functionSelector": "62f6c9d5",
            "id": 7858,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7839,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7838,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "11239:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "11239:9:23"
              }
            ],
            "name": "toggleMinter",
            "nameLocation": "11198:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7836,
                  "mutability": "mutable",
                  "name": "newMinter",
                  "nameLocation": "11219:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7858,
                  "src": "11211:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11211:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11210:19:23"
            },
            "returnParameters": {
              "id": 7840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11249:0:23"
            },
            "scope": 7859,
            "src": "11189:189:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7860,
        "src": "220:11160:23",
        "usedErrors": []
      }
    ],
    "src": "31:11350:23"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620013b7380380620013b783398101604081905262000034916200026f565b6200003f33620000ac565b815162000054906006906020850190620000fc565b5080516200006a906007906020840190620000fc565b5050600880543361010081026001600160a81b0319909216919091176012179091556000908152600460205260409020805460ff191660011790555062000316565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200010a90620002d9565b90600052602060002090601f0160209004810192826200012e576000855562000179565b82601f106200014957805160ff191683800117855562000179565b8280016001018555821562000179579182015b82811115620001795782518255916020019190600101906200015c565b50620001879291506200018b565b5090565b5b808211156200018757600081556001016200018c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ca57600080fd5b81516001600160401b0380821115620001e757620001e7620001a2565b604051601f8301601f19908116603f01168101908282118183101715620002125762000212620001a2565b816040528381526020925086838588010111156200022f57600080fd5b600091505b8382101562000253578582018301518183018401529082019062000234565b83821115620002655760008385830101525b9695505050505050565b600080604083850312156200028357600080fd5b82516001600160401b03808211156200029b57600080fd5b620002a986838701620001b8565b93506020850151915080821115620002c057600080fd5b50620002cf85828601620001b8565b9150509250929050565b600181811c90821680620002ee57607f821691505b602082108114156200031057634e487b7160e01b600052602260045260246000fd5b50919050565b61109180620003266000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d7146102d5578063a9059cbb146102e8578063d89135cd146102fb578063dd62ed3e14610304578063e78cea921461033d578063f2fde38b1461035557600080fd5b8063715018a61461026757806374f4f5471461026f57806377be18a8146102825780638da5cb5b146102955780638dd14802146102ba57806395d89b41146102cd57600080fd5b8063313ce56711610115578063313ce567146101db57806339509351146101f057806340c10f191461020357806342966c681461021657806362f6c9d51461022b57806370a082311461023e57600080fd5b806306fdde0314610152578063095ea7b31461017057806309cd3e7f1461019357806318160ddd146101b657806323b872dd146101c8575b600080fd5b61015a610368565b6040516101679190610daf565b60405180910390f35b61018361017e366004610e20565b6103fa565b6040519015158152602001610167565b6101836101a1366004610e4a565b60046020526000908152604090205460ff1681565b6005545b604051908152602001610167565b6101836101d6366004610e65565b610410565b60085460405160ff9091168152602001610167565b6101836101fe366004610e20565b61048a565b610183610211366004610e20565b6104c0565b610229610224366004610ea1565b61051c565b005b610229610239366004610e4a565b610539565b6101ba61024c366004610e4a565b6001600160a01b031660009081526002602052604090205490565b6102296105cd565b61018361027d366004610e20565b610603565b610183610290366004610e20565b61065c565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610167565b6102296102c8366004610e4a565b6106f6565b61015a610779565b6101836102e3366004610e20565b610788565b6101836102f6366004610e20565b6107d7565b6101ba60095481565b6101ba610312366004610eba565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6008546102a29061010090046001600160a01b031681565b610229610363366004610e4a565b6107e4565b60606006805461037790610eed565b80601f01602080910402602001604051908101604052809291908181526020018280546103a390610eed565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b5050505050905090565b600061040733848461087f565b50600192915050565b600061041d8484846109a4565b610480843361047b85604051806060016040528060288152602001610fa3602891396001600160a01b038a16600090815260036020526040812090335b6001600160a01b031681526020810191909152604001600020549190610b2a565b61087f565b5060019392505050565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161040791859061047b9086610b56565b3360009081526004602052604081205460ff166105125760405162461bcd60e51b815260206004820152600b60248201526a6f6e6c794d696e7465727360a81b60448201526064015b60405180910390fd5b6104078383610b69565b6105263382610c4f565b6009546105339082610b56565b60095550565b6000546001600160a01b031633146105635760405162461bcd60e51b815260040161050990610f28565b6001600160a01b038116600081815260046020908152604091829020805460ff8082161560ff1990921682179092558351948552161515908301527f82413450dd272b542292a5f21ed2fc53eb0fbaf78bbabdb95b6453c7335e662091015b60405180910390a150565b6000546001600160a01b031633146105f75760405162461bcd60e51b815260040161050990610f28565b6106016000610d53565b565b60085460009061010090046001600160a01b031633146106525760405162461bcd60e51b815260206004820152600a6024820152696f6e6c7942726964676560b01b6044820152606401610509565b6104078383610c4f565b60085460009061010090046001600160a01b031633146106ab5760405162461bcd60e51b815260206004820152600a6024820152696f6e6c7942726964676560b01b6044820152606401610509565b6106b58383610c4f565b610407833361047b85604051806060016040528060248152602001611038602491396001600160a01b0389166000908152600360205260408120903361045a565b6000546001600160a01b031633146107205760405162461bcd60e51b815260040161050990610f28565b60088054610100600160a81b0319166101006001600160a01b038481168202929092179283905560405192041681527fe605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e906020016105c2565b60606007805461037790610eed565b6000610407338461047b85604051806060016040528060258152602001610ff1602591393360009081526003602090815260408083206001600160a01b038d1684529091529020549190610b2a565b60006104073384846109a4565b6000546001600160a01b0316331461080e5760405162461bcd60e51b815260040161050990610f28565b6001600160a01b0381166108735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610509565b61087c81610d53565b50565b6001600160a01b0383166108e15760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610509565b6001600160a01b0382166109425760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610509565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610a085760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610509565b6001600160a01b038216610a6a5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610509565b610aa781604051806060016040528060268152602001610fcb602691396001600160a01b0386166000908152600260205260409020549190610b2a565b6001600160a01b038085166000908152600260205260408082209390935590841681522054610ad69082610b56565b6001600160a01b0380841660008181526002602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109979085815260200190565b60008184841115610b4e5760405162461bcd60e51b81526004016105099190610daf565b505050900390565b6000610b628284610f73565b9392505050565b6001600160a01b038216610bbf5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610509565b600554610bcc9082610b56565b6005556001600160a01b038216600090815260026020526040902054610bf29082610b56565b6001600160a01b0383166000818152600260205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c439085815260200190565b60405180910390a35050565b6001600160a01b038216610caf5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610509565b610cec81604051806060016040528060228152602001611016602291396001600160a01b0385166000908152600260205260409020549190610b2a565b6001600160a01b038316600090815260026020526040902055600554610d129082610da3565b6005556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c43565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b628284610f8b565b600060208083528351808285015260005b81811015610ddc57858101830151858201604001528201610dc0565b81811115610dee576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e1b57600080fd5b919050565b60008060408385031215610e3357600080fd5b610e3c83610e04565b946020939093013593505050565b600060208284031215610e5c57600080fd5b610b6282610e04565b600080600060608486031215610e7a57600080fd5b610e8384610e04565b9250610e9160208501610e04565b9150604084013590509250925092565b600060208284031215610eb357600080fd5b5035919050565b60008060408385031215610ecd57600080fd5b610ed683610e04565b9150610ee460208401610e04565b90509250929050565b600181811c90821680610f0157607f821691505b60208210811415610f2257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f8657610f86610f5d565b500190565b600082821015610f9d57610f9d610f5d565b50039056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220e1d3af58c8261f64a63797cd88b80ee844a852b5b5f927ee73c789061220bdd064736f6c634300080c0033",
  "bytecodeSha1": "d26f87bea3ba5016f2621c3ad1820a4f42cebc93",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "NICEToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "59": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "16": {
        "SafeMath.sub": {
          "60": [
            5112,
            5118,
            true
          ]
        }
      },
      "23": {
        "NICEToken._approve": {
          "53": [
            8565,
            8584,
            true
          ],
          "54": [
            8643,
            8664,
            true
          ]
        },
        "NICEToken._burn": {
          "58": [
            7716,
            7737,
            true
          ]
        },
        "NICEToken._mint": {
          "57": [
            7095,
            7116,
            true
          ]
        },
        "NICEToken._transfer": {
          "55": [
            6349,
            6369,
            true
          ],
          "56": [
            6429,
            6452,
            true
          ]
        },
        "NICEToken.mint": {
          "52": [
            1072,
            1096,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "49": [
            2378,
            2395
          ],
          "50": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "3": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "18": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "27": [
            1998,
            2071
          ],
          "28": [
            2081,
            2109
          ]
        }
      },
      "11": {},
      "12": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "16": {
        "SafeMath.add": {
          "40": [
            2818,
            2830
          ]
        },
        "SafeMath.sub": {
          "38": [
            5104,
            5133
          ],
          "39": [
            5147,
            5159
          ],
          "51": [
            3185,
            3197
          ]
        }
      },
      "23": {
        "NICEToken._approve": {
          "29": [
            8557,
            8625
          ],
          "30": [
            8635,
            8703
          ],
          "31": [
            8714,
            8750
          ],
          "32": [
            8760,
            8797
          ]
        },
        "NICEToken._burn": {
          "45": [
            7708,
            7775
          ],
          "46": [
            7786,
            7909
          ],
          "47": [
            7919,
            7958
          ],
          "48": [
            7968,
            8010
          ]
        },
        "NICEToken._mint": {
          "41": [
            7087,
            7152
          ],
          "42": [
            7163,
            7202
          ],
          "43": [
            7212,
            7263
          ],
          "44": [
            7273,
            7315
          ]
        },
        "NICEToken._transfer": {
          "33": [
            6341,
            6411
          ],
          "34": [
            6421,
            6492
          ],
          "35": [
            6503,
            6628
          ],
          "36": [
            6638,
            6693
          ],
          "37": [
            6703,
            6743
          ]
        },
        "NICEToken.allowance": {
          "4": [
            2773,
            2807
          ]
        },
        "NICEToken.approve": {
          "6": [
            3033,
            3072
          ],
          "8": [
            3082,
            3093
          ]
        },
        "NICEToken.balanceOf": {
          "2": [
            2208,
            2233
          ]
        },
        "NICEToken.bridgeBurn": {
          "19": [
            10319,
            10341
          ]
        },
        "NICEToken.bridgeBurnFrom": {
          "20": [
            10778,
            10800
          ],
          "21": [
            10810,
            11021
          ]
        },
        "NICEToken.burn": {
          "14": [
            5669,
            5694
          ],
          "15": [
            5704,
            5741
          ]
        },
        "NICEToken.decimals": {
          "1": [
            1759,
            1775
          ]
        },
        "NICEToken.decreaseAllowance": {
          "25": [
            5253,
            5474
          ]
        },
        "NICEToken.increaseAllowance": {
          "12": [
            4489,
            4618
          ]
        },
        "NICEToken.mint": {
          "13": [
            9924,
            9946
          ]
        },
        "NICEToken.name": {
          "5": [
            1620,
            1632
          ]
        },
        "NICEToken.setBridge": {
          "22": [
            9618,
            9640
          ],
          "23": [
            9650,
            9672
          ]
        },
        "NICEToken.symbol": {
          "24": [
            1906,
            1920
          ]
        },
        "NICEToken.toggleMinter": {
          "16": [
            11259,
            11309
          ],
          "17": [
            11319,
            11371
          ]
        },
        "NICEToken.totalSupply": {
          "0": [
            2049,
            2068
          ]
        },
        "NICEToken.transfer": {
          "26": [
            2527,
            2569
          ]
        },
        "NICEToken.transferFrom": {
          "9": [
            3692,
            3728
          ],
          "10": [
            3738,
            3951
          ],
          "11": [
            3961,
            3972
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d7146102d5578063a9059cbb146102e8578063d89135cd146102fb578063dd62ed3e14610304578063e78cea921461033d578063f2fde38b1461035557600080fd5b8063715018a61461026757806374f4f5471461026f57806377be18a8146102825780638da5cb5b146102955780638dd14802146102ba57806395d89b41146102cd57600080fd5b8063313ce56711610115578063313ce567146101db57806339509351146101f057806340c10f191461020357806342966c681461021657806362f6c9d51461022b57806370a082311461023e57600080fd5b806306fdde0314610152578063095ea7b31461017057806309cd3e7f1461019357806318160ddd146101b657806323b872dd146101c8575b600080fd5b61015a610368565b6040516101679190610daf565b60405180910390f35b61018361017e366004610e20565b6103fa565b6040519015158152602001610167565b6101836101a1366004610e4a565b60046020526000908152604090205460ff1681565b6005545b604051908152602001610167565b6101836101d6366004610e65565b610410565b60085460405160ff9091168152602001610167565b6101836101fe366004610e20565b61048a565b610183610211366004610e20565b6104c0565b610229610224366004610ea1565b61051c565b005b610229610239366004610e4a565b610539565b6101ba61024c366004610e4a565b6001600160a01b031660009081526002602052604090205490565b6102296105cd565b61018361027d366004610e20565b610603565b610183610290366004610e20565b61065c565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610167565b6102296102c8366004610e4a565b6106f6565b61015a610779565b6101836102e3366004610e20565b610788565b6101836102f6366004610e20565b6107d7565b6101ba60095481565b6101ba610312366004610eba565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6008546102a29061010090046001600160a01b031681565b610229610363366004610e4a565b6107e4565b60606006805461037790610eed565b80601f01602080910402602001604051908101604052809291908181526020018280546103a390610eed565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b5050505050905090565b600061040733848461087f565b50600192915050565b600061041d8484846109a4565b610480843361047b85604051806060016040528060288152602001610fa3602891396001600160a01b038a16600090815260036020526040812090335b6001600160a01b031681526020810191909152604001600020549190610b2a565b61087f565b5060019392505050565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161040791859061047b9086610b56565b3360009081526004602052604081205460ff166105125760405162461bcd60e51b815260206004820152600b60248201526a6f6e6c794d696e7465727360a81b60448201526064015b60405180910390fd5b6104078383610b69565b6105263382610c4f565b6009546105339082610b56565b60095550565b6000546001600160a01b031633146105635760405162461bcd60e51b815260040161050990610f28565b6001600160a01b038116600081815260046020908152604091829020805460ff8082161560ff1990921682179092558351948552161515908301527f82413450dd272b542292a5f21ed2fc53eb0fbaf78bbabdb95b6453c7335e662091015b60405180910390a150565b6000546001600160a01b031633146105f75760405162461bcd60e51b815260040161050990610f28565b6106016000610d53565b565b60085460009061010090046001600160a01b031633146106525760405162461bcd60e51b815260206004820152600a6024820152696f6e6c7942726964676560b01b6044820152606401610509565b6104078383610c4f565b60085460009061010090046001600160a01b031633146106ab5760405162461bcd60e51b815260206004820152600a6024820152696f6e6c7942726964676560b01b6044820152606401610509565b6106b58383610c4f565b610407833361047b85604051806060016040528060248152602001611038602491396001600160a01b0389166000908152600360205260408120903361045a565b6000546001600160a01b031633146107205760405162461bcd60e51b815260040161050990610f28565b60088054610100600160a81b0319166101006001600160a01b038481168202929092179283905560405192041681527fe605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e906020016105c2565b60606007805461037790610eed565b6000610407338461047b85604051806060016040528060258152602001610ff1602591393360009081526003602090815260408083206001600160a01b038d1684529091529020549190610b2a565b60006104073384846109a4565b6000546001600160a01b0316331461080e5760405162461bcd60e51b815260040161050990610f28565b6001600160a01b0381166108735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610509565b61087c81610d53565b50565b6001600160a01b0383166108e15760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610509565b6001600160a01b0382166109425760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610509565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610a085760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610509565b6001600160a01b038216610a6a5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610509565b610aa781604051806060016040528060268152602001610fcb602691396001600160a01b0386166000908152600260205260409020549190610b2a565b6001600160a01b038085166000908152600260205260408082209390935590841681522054610ad69082610b56565b6001600160a01b0380841660008181526002602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109979085815260200190565b60008184841115610b4e5760405162461bcd60e51b81526004016105099190610daf565b505050900390565b6000610b628284610f73565b9392505050565b6001600160a01b038216610bbf5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610509565b600554610bcc9082610b56565b6005556001600160a01b038216600090815260026020526040902054610bf29082610b56565b6001600160a01b0383166000818152600260205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c439085815260200190565b60405180910390a35050565b6001600160a01b038216610caf5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610509565b610cec81604051806060016040528060228152602001611016602291396001600160a01b0385166000908152600260205260409020549190610b2a565b6001600160a01b038316600090815260026020526040902055600554610d129082610da3565b6005556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c43565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b628284610f8b565b600060208083528351808285015260005b81811015610ddc57858101830151858201604001528201610dc0565b81811115610dee576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e1b57600080fd5b919050565b60008060408385031215610e3357600080fd5b610e3c83610e04565b946020939093013593505050565b600060208284031215610e5c57600080fd5b610b6282610e04565b600080600060608486031215610e7a57600080fd5b610e8384610e04565b9250610e9160208501610e04565b9150604084013590509250925092565b600060208284031215610eb357600080fd5b5035919050565b60008060408385031215610ecd57600080fd5b610ed683610e04565b9150610ee460208401610e04565b90509250929050565b600181811c90821680610f0157607f821691505b60208210811415610f2257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f8657610f86610f5d565b500190565b600082821015610f9d57610f9d610f5d565b50039056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220e1d3af58c8261f64a63797cd88b80ee844a852b5b5f927ee73c789061220bdd064736f6c634300080c0033",
  "deployedSourceMap": "220:11160:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1558:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2951:149;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:33;;1211:22;1193:41;;1181:2;1166:18;2951:149:23;1053:187:33;487:44:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1986:89;2056:12;;1986:89;;;1582:25:33;;;1570:2;1555:18;1986:89:23;1436:177:33;3557:422:23;;;;;;:::i;:::-;;:::i;1701:81::-;1766:9;;1701:81;;1766:9;;;;2093:36:33;;2081:2;2066:18;1701:81:23;1951:184:33;4373:273:23;;;;;;:::i;:::-;;:::i;9804:170::-;;;;;;:::i;:::-;;:::i;5620:128::-;;;;;;:::i;:::-;;:::i;:::-;;11189:189;;;;;;:::i;:::-;;:::i;2132:108::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2215:18:23;2189:7;2215:18;;;:9;:18;;;;;;;2132:108;1668:101:0;;;:::i;10193:176:23:-;;;;;;:::i;:::-;;:::i;10648:401::-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;2489:32:33;;;2471:51;;2459:2;2444:18;1036:85:0;2325:203:33;9549:130:23;;;;;;:::i;:::-;;:::i;1842:85::-;;;:::i;5132:370::-;;;;;;:::i;:::-;;:::i;2442:155::-;;;;;;:::i;:::-;;:::i;684:26::-;;;;;;2654:160;;;;;;:::i;:::-;-1:-1:-1;;;;;2780:18:23;;;2750:7;2780:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2654:160;657:21;;;;;;;;-1:-1:-1;;;;;657:21:23;;;1918:198:0;;;;;;:::i;:::-;;:::i;1558:81:23:-;1595:13;1627:5;1620:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1558:81;:::o;2951:149::-;3017:4;3033:39;719:10:12;3056:7:23;3065:6;3033:8;:39::i;:::-;-1:-1:-1;3089:4:23;2951:149;;;;:::o;3557:422::-;3676:4;3692:36;3702:6;3710:9;3721:6;3692:9;:36::i;:::-;3738:213;3760:6;719:10:12;3806:135:23;3861:6;3806:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3806:19:23;;;;;;:11;:19;;;;;;719:10:12;3826:12:23;-1:-1:-1;;;;;3806:33:23;;;;;;;;;;;;-1:-1:-1;3806:33:23;;;:135;:37;:135::i;:::-;3738:8;:213::i;:::-;-1:-1:-1;3968:4:23;3557:422;;;;;:::o;4373:273::-;719:10:12;4469:4:23;4558:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4558:34:23;;;;;;;;;;4469:4;;4489:129;;4537:7;;4558:50;;4597:10;4558:38;:50::i;9804:170::-;1085:10;9904:4;1072:24;;;:12;:24;;;;;;;;1064:48;;;;-1:-1:-1;;;1064:48:23;;3385:2:33;1064:48:23;;;3367:21:33;3424:2;3404:18;;;3397:30;-1:-1:-1;;;3443:18:33;;;3436:41;3494:18;;1064:48:23;;;;;;;;;9924:22:::1;9930:7;9939:6;9924:5;:22::i;5620:128::-:0;5669:25;5675:10;5687:6;5669:5;:25::i;:::-;5718:11;;:23;;5734:6;5718:15;:23::i;:::-;5704:11;:37;-1:-1:-1;5620:128:23:o;11189:189::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;11286:23:23;::::1;;::::0;;;:12:::1;:23;::::0;;;;;;;;;;::::1;::::0;;::::1;11285:24;-1:-1:-1::0;;11259:50:23;;::::1;::::0;::::1;::::0;;;11324:47;;4052:51:33;;;11347:23:23;4146:14:33;4139:22;4119:18;;;4112:50;11324:47:23::1;::::0;4025:18:33;11324:47:23::1;;;;;;;;11189:189:::0;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;10193:176:23:-;1190:6;;10299:4;;1190:6;;;-1:-1:-1;;;;;1190:6:23;1176:10;:20;1168:43;;;;-1:-1:-1;;;1168:43:23;;4375:2:33;1168:43:23;;;4357:21:33;4414:2;4394:18;;;4387:30;-1:-1:-1;;;4433:18:33;;;4426:40;4483:18;;1168:43:23;4173:334:33;1168:43:23;10319:22:::1;10325:7;10334:6;10319:5;:22::i;10648:401::-:0;1190:6;;10758:4;;1190:6;;;-1:-1:-1;;;;;1190:6:23;1176:10;:20;1168:43;;;;-1:-1:-1;;;1168:43:23;;4375:2:33;1168:43:23;;;4357:21:33;4414:2;4394:18;;;4387:30;-1:-1:-1;;;4433:18:33;;;4426:40;4483:18;;1168:43:23;4173:334:33;1168:43:23;10778:22:::1;10784:7;10793:6;10778:5;:22::i;:::-;10810:211;10832:7:::0;719:10:12;10879:132:23::1;10935:6;10879:132;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;10879:20:23;::::1;;::::0;;;:11:::1;:20;::::0;;;;;719:10:12;10900:12:23::1;640:96:12::0;9549:130:23;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9618:6:23::1;:22:::0;;-1:-1:-1;;;;;;9618:22:23::1;;-1:-1:-1::0;;;;;9618:22:23;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;9655:17:::1;::::0;9665:6;::::1;;2471:51:33::0;;9655:17:23::1;::::0;2459:2:33;2444:18;9655:17:23::1;2325:203:33::0;1842:85:23;1881:13;1913:7;1906:14;;;;;:::i;5132:370::-;5233:4;5253:221;719:10:12;5301:7:23;5322:142;5378:15;5322:142;;;;;;;;;;;;;;;;;719:10:12;5322:25:23;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5322:34:23;;;;;;;;;;;;:38;:142::i;2442:155::-;2511:4;2527:42;719:10:12;2551:9:23;2562:6;2527:9;:42::i;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4714:2:33;1998:73:0::1;::::0;::::1;4696:21:33::0;4753:2;4733:18;;;4726:30;4792:34;4772:18;;;4765:62;-1:-1:-1;;;4843:18:33;;;4836:36;4889:19;;1998:73:0::1;4512:402:33::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;8442:362:23:-;-1:-1:-1;;;;;8565:19:23;;8557:68;;;;-1:-1:-1;;;8557:68:23;;5121:2:33;8557:68:23;;;5103:21:33;5160:2;5140:18;;;5133:30;5199:34;5179:18;;;5172:62;-1:-1:-1;;;5250:18:33;;;5243:34;5294:19;;8557:68:23;4919:400:33;8557:68:23;-1:-1:-1;;;;;8643:21:23;;8635:68;;;;-1:-1:-1;;;8635:68:23;;5526:2:33;8635:68:23;;;5508:21:33;5565:2;5545:18;;;5538:30;5604:34;5584:18;;;5577:62;-1:-1:-1;;;5655:18:33;;;5648:32;5697:19;;8635:68:23;5324:398:33;8635:68:23;-1:-1:-1;;;;;8714:18:23;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;8765:32;;1582:25:33;;;8765:32:23;;1555:18:33;8765:32:23;;;;;;;;8442:362;;;:::o;6222:528::-;-1:-1:-1;;;;;6349:20:23;;6341:70;;;;-1:-1:-1;;;6341:70:23;;5929:2:33;6341:70:23;;;5911:21:33;5968:2;5948:18;;;5941:30;6007:34;5987:18;;;5980:62;-1:-1:-1;;;6058:18:33;;;6051:35;6103:19;;6341:70:23;5727:401:33;6341:70:23;-1:-1:-1;;;;;6429:23:23;;6421:71;;;;-1:-1:-1;;;6421:71:23;;6335:2:33;6421:71:23;;;6317:21:33;6374:2;6354:18;;;6347:30;6413:34;6393:18;;;6386:62;-1:-1:-1;;;6464:18:33;;;6457:33;6507:19;;6421:71:23;6133:399:33;6421:71:23;6523:105;6558:6;6523:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6523:17:23;;;;;;:9;:17;;;;;;;:105;:21;:105::i;:::-;-1:-1:-1;;;;;6503:17:23;;;;;;;:9;:17;;;;;;:125;;;;6661:20;;;;;;;:32;;6686:6;6661:24;:32::i;:::-;-1:-1:-1;;;;;6638:20:23;;;;;;;:9;:20;;;;;;;:55;;;;6708:35;;;;;;;;;;6736:6;1582:25:33;;1570:2;1555:18;;1436:177;4945:231:16;5061:7;5120:12;5112:6;;;;5104:29;;;;-1:-1:-1;;;5104:29:16;;;;;;;;:::i;:::-;-1:-1:-1;;;5154:5:16;;;4945:231::o;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:16:o;7020:302:23:-;-1:-1:-1;;;;;7095:21:23;;7087:65;;;;-1:-1:-1;;;7087:65:23;;7004:2:33;7087:65:23;;;6986:21:33;7043:2;7023:18;;;7016:30;7082:33;7062:18;;;7055:61;7133:18;;7087:65:23;6802:355:33;7087:65:23;7178:12;;:24;;7195:6;7178:16;:24::i;:::-;7163:12;:39;-1:-1:-1;;;;;7233:18:23;;;;;;:9;:18;;;;;;:30;;7256:6;7233:22;:30::i;:::-;-1:-1:-1;;;;;7212:18:23;;;;;;:9;:18;;;;;;:51;;;;7278:37;;7212:18;;;7278:37;;;;7308:6;1582:25:33;;1570:2;1555:18;;1436:177;7278:37:23;;;;;;;;7020:302;;:::o;7641:376::-;-1:-1:-1;;;;;7716:21:23;;7708:67;;;;-1:-1:-1;;;7708:67:23;;7364:2:33;7708:67:23;;;7346:21:33;7403:2;7383:18;;;7376:30;7442:34;7422:18;;;7415:62;-1:-1:-1;;;7493:18:33;;;7486:31;7534:19;;7708:67:23;7162:397:33;7708:67:23;7807:102;7843:6;7807:102;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7807:18:23;;;;;;:9;:18;;;;;;;:102;:22;:102::i;:::-;-1:-1:-1;;;;;7786:18:23;;;;;;:9;:18;;;;;:123;7934:12;;:24;;7951:6;7934:16;:24::i;:::-;7919:12;:39;7973:37;;1582:25:33;;;7999:1:23;;-1:-1:-1;;;;;7973:37:23;;;;;1570:2:33;1555:18;7973:37:23;1436:177:33;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3108:96:16:-;3166:7;3192:5;3196:1;3192;:5;:::i;14:597:33:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:33;574:15;-1:-1:-1;;570:29:33;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:33:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:33;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:33:o;1245:186::-;1304:6;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;1396:29;1415:9;1396:29;:::i;1618:328::-;1695:6;1703;1711;1764:2;1752:9;1743:7;1739:23;1735:32;1732:52;;;1780:1;1777;1770:12;1732:52;1803:29;1822:9;1803:29;:::i;:::-;1793:39;;1851:38;1885:2;1874:9;1870:18;1851:38;:::i;:::-;1841:48;;1936:2;1925:9;1921:18;1908:32;1898:42;;1618:328;;;;;:::o;2140:180::-;2199:6;2252:2;2240:9;2231:7;2227:23;2223:32;2220:52;;;2268:1;2265;2258:12;2220:52;-1:-1:-1;2291:23:33;;2140:180;-1:-1:-1;2140:180:33:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:380::-;2877:1;2873:12;;;;2920;;;2941:61;;2995:4;2987:6;2983:17;2973:27;;2941:61;3048:2;3040:6;3037:14;3017:18;3014:38;3011:161;;;3094:10;3089:3;3085:20;3082:1;3075:31;3129:4;3126:1;3119:15;3157:4;3154:1;3147:15;3011:161;;2798:380;;;:::o;3523:356::-;3725:2;3707:21;;;3744:18;;;3737:30;3803:34;3798:2;3783:18;;3776:62;3870:2;3855:18;;3523:356::o;6537:127::-;6598:10;6593:3;6589:20;6586:1;6579:31;6629:4;6626:1;6619:15;6653:4;6650:1;6643:15;6669:128;6709:3;6740:1;6736:6;6733:1;6730:13;6727:39;;;6746:18;;:::i;:::-;-1:-1:-1;6782:9:33;;6669:128::o;7564:125::-;7604:4;7632:1;7629;7626:8;7623:34;;;7637:18;;:::i;:::-;-1:-1:-1;7674:9:33;;7564:125::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "bridgeBurn(address,uint256)": {
        "notice": "Allows bridge to burn from its own wallet. User must be msg.sender.",
        "params": {
          "account": "is the address of the bridge on this chain",
          "amount": "is the amount to burn from sender wallet"
        }
      },
      "bridgeBurnFrom(address,uint256)": {
        "notice": "Allows bridge to burn from a user's wallet with previous approval",
        "params": {
          "account": "is the address of the user that wants to transfer tokens",
          "amount": "is the amount to burn from the user wallet. Must be <= than the amount approved by user."
        }
      },
      "burn(uint256)": {
        "notice": "burns from msg.sender's wallet, adds to totalBurned",
        "params": {
          "amount": "is the amount to mint"
        }
      },
      "decimals()": {
        "details": "Returns the token decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "notice": "mint function",
        "params": {
          "account": "is the target address",
          "amount": "is the amount to mint"
        }
      },
      "name()": {
        "details": "Returns the token name."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setBridge(address)": {
        "notice": "Sets Bridge when it's ready. This is the bridge that will be able to use onlyBridge functions.",
        "params": {
          "bridgeAddress": "is the address of the bridge on this chain"
        }
      },
      "symbol()": {
        "details": "Returns the token symbol."
      },
      "toggleMinter(address)": {
        "notice": "Allows owner to assign minter privileges to other addresses",
        "params": {
          "newMinter": "is the address of desired minter"
        }
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    220,
    11380
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xE78CEA92 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x74F4F547 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x77BE18A8 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x8DD14802 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x62F6C9D5 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x9CD3E7F EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x183 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x779 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x377 SWAP1 PUSH2 0xEED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A3 SWAP1 PUSH2 0xEED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 CALLER DUP5 DUP5 PUSH2 0x87F JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP5 DUP5 DUP5 PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x480 DUP5 CALLER PUSH2 0x47B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFA3 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x407 SWAP2 DUP6 SWAP1 PUSH2 0x47B SWAP1 DUP7 PUSH2 0xB56 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x6F6E6C794D696E74657273 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x407 DUP4 DUP4 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x526 CALLER DUP3 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x533 SWAP1 DUP3 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SWAP3 SSTORE DUP4 MLOAD SWAP5 DUP6 MSTORE AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH32 0x82413450DD272B542292A5F21ED2FC53EB0FBAF78BBABDB95B6453C7335E6620 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x601 PUSH1 0x0 PUSH2 0xD53 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6F6E6C79427269646765 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x509 JUMP JUMPDEST PUSH2 0x407 DUP4 DUP4 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6F6E6C79427269646765 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x509 JUMP JUMPDEST PUSH2 0x6B5 DUP4 DUP4 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x407 DUP4 CALLER PUSH2 0x47B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1038 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 CALLER PUSH2 0x45A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DIV AND DUP2 MSTORE PUSH32 0xE605AC02EA219003EC58FC9CF4D4B3C5F2D62EC39807B1C63886DDD47A6FCD6E SWAP1 PUSH1 0x20 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x377 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 CALLER DUP5 PUSH2 0x47B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF1 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 CALLER DUP5 DUP5 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x509 JUMP JUMPDEST PUSH2 0x87C DUP2 PUSH2 0xD53 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x509 JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFCB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xAD6 SWAP1 DUP3 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x997 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 DUP5 PUSH2 0xF73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xBCC SWAP1 DUP3 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBF2 SWAP1 DUP3 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xC43 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x509 JUMP JUMPDEST PUSH2 0xCEC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1016 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 SLOAD PUSH2 0xD12 SWAP1 DUP3 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDDC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xDC0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xDEE JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3C DUP4 PUSH2 0xE04 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB62 DUP3 PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE83 DUP5 PUSH2 0xE04 JUMP JUMPDEST SWAP3 POP PUSH2 0xE91 PUSH1 0x20 DUP6 ADD PUSH2 0xE04 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED6 DUP4 PUSH2 0xE04 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE4 PUSH1 0x20 DUP5 ADD PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF01 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF86 JUMPI PUSH2 0xF86 PUSH2 0xF5D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF9D JUMPI PUSH2 0xF9D PUSH2 0xF5D JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E636542455032303A206275 PUSH19 0x6E20616D6F756E74206578636565647320616C PUSH13 0x6F77616E6365A2646970667358 0x22 SLT KECCAK256 0xE1 0xD3 0xAF PC 0xC8 0x26 0x1F PUSH5 0xA63797CD88 0xB8 0xE 0xE8 DIFFICULTY 0xA8 MSTORE 0xB5 0xB5 0xF9 0x27 0xEE PUSH20 0xC789061220BDD064736F6C634300080C00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "6": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "REVERT",
      "path": "23"
    },
    "16": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "17": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "POP",
      "path": "23"
    },
    "18": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "21": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "LT",
      "path": "23"
    },
    "22": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "25": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "26": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "29": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "SHR",
      "path": "23"
    },
    "32": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "33": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "GT",
      "path": "23"
    },
    "39": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "43": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "44": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "GT",
      "path": "23"
    },
    "50": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "54": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "55": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "61": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D5"
    },
    "64": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "65": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "66": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "72": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E8"
    },
    "75": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "76": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "77": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD89135CD"
    },
    "82": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "83": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FB"
    },
    "86": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "87": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "88": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "94": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x304"
    },
    "97": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "98": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "99": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xE78CEA92"
    },
    "104": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "105": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33D"
    },
    "108": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "109": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "110": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "116": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x355"
    },
    "119": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "120": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "123": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "REVERT",
      "path": "23"
    },
    "124": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "125": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "126": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "132": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x267"
    },
    "135": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "136": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "137": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x74F4F547"
    },
    "142": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "143": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26F"
    },
    "146": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "147": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "148": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x77BE18A8"
    },
    "153": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "154": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x282"
    },
    "157": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "158": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "159": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8DA5CB5B"
    },
    "164": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "165": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "168": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "169": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "170": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8DD14802"
    },
    "175": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "176": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BA"
    },
    "179": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "180": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "181": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95D89B41"
    },
    "186": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "187": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CD"
    },
    "190": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "191": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "194": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "REVERT",
      "path": "23"
    },
    "195": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "196": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "197": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "GT",
      "path": "23"
    },
    "203": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "207": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "208": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "213": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "214": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DB"
    },
    "217": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "218": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "219": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x39509351"
    },
    "224": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "225": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F0"
    },
    "228": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "229": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "230": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x40C10F19"
    },
    "235": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "236": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x203"
    },
    "239": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "240": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "241": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x42966C68"
    },
    "246": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "247": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x216"
    },
    "250": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "251": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "252": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x62F6C9D5"
    },
    "257": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "258": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22B"
    },
    "261": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "262": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "263": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "268": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "269": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "272": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "273": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "276": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "REVERT",
      "path": "23"
    },
    "277": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "278": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "279": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6FDDE03"
    },
    "284": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "285": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x152"
    },
    "288": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "289": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "290": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95EA7B3"
    },
    "295": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "296": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x170"
    },
    "299": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "300": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "301": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x9CD3E7F"
    },
    "306": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "307": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x193"
    },
    "310": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "311": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "312": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x18160DDD"
    },
    "317": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "318": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B6"
    },
    "321": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "322": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "323": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x23B872DD"
    },
    "328": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "EQ",
      "path": "23"
    },
    "329": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C8"
    },
    "332": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "333": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "334": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "336": {
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "DUP1",
      "path": "23"
    },
    "337": {
      "first_revert": true,
      "fn": null,
      "offset": [
        220,
        11380
      ],
      "op": "REVERT",
      "path": "23"
    },
    "338": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "339": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15A"
    },
    "342": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x368"
    },
    "345": {
      "fn": "NICEToken.name",
      "jump": "i",
      "offset": [
        1558,
        1639
      ],
      "op": "JUMP",
      "path": "23"
    },
    "346": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "347": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "349": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "350": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x167"
    },
    "353": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "354": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "355": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDAF"
    },
    "358": {
      "fn": "NICEToken.name",
      "jump": "i",
      "offset": [
        1558,
        1639
      ],
      "op": "JUMP",
      "path": "23"
    },
    "359": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "360": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "362": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "363": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "DUP1",
      "path": "23"
    },
    "364": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "365": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "SUB",
      "path": "23"
    },
    "366": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "367": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "RETURN",
      "path": "23"
    },
    "368": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "369": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "372": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17E"
    },
    "375": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "376": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "378": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE20"
    },
    "381": {
      "fn": "NICEToken.approve",
      "jump": "i",
      "offset": [
        2951,
        3100
      ],
      "op": "JUMP",
      "path": "23"
    },
    "382": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "383": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3FA"
    },
    "386": {
      "fn": "NICEToken.approve",
      "jump": "i",
      "offset": [
        2951,
        3100
      ],
      "op": "JUMP",
      "path": "23"
    },
    "387": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "388": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "390": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "ISZERO"
    },
    "393": {
      "op": "ISZERO"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x167"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "offset": [
        487,
        531
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "404": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "407": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A1"
    },
    "410": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "411": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "413": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE4A"
    },
    "416": {
      "fn": "NICEToken.approve",
      "jump": "i",
      "offset": [
        487,
        531
      ],
      "op": "JUMP",
      "path": "23"
    },
    "417": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "418": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "420": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "422": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "423": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "425": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "426": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "DUP2",
      "path": "23"
    },
    "427": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "428": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "430": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "431": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "432": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "433": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "435": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "AND",
      "path": "23"
    },
    "436": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "DUP2",
      "path": "23"
    },
    "437": {
      "fn": "NICEToken.approve",
      "offset": [
        487,
        531
      ],
      "op": "JUMP",
      "path": "23"
    },
    "438": {
      "fn": "NICEToken.totalSupply",
      "offset": [
        1986,
        2075
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "439": {
      "fn": "NICEToken.totalSupply",
      "offset": [
        2056,
        2068
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 0,
      "value": "0x5"
    },
    "441": {
      "fn": "NICEToken.totalSupply",
      "offset": [
        2056,
        2068
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "442": {
      "fn": "NICEToken.totalSupply",
      "offset": [
        1986,
        2075
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "443": {
      "fn": "NICEToken.totalSupply",
      "offset": [
        1986,
        2075
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "445": {
      "fn": "NICEToken.totalSupply",
      "offset": [
        1986,
        2075
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "446": {
      "op": "SWAP1"
    },
    "447": {
      "op": "DUP2"
    },
    "448": {
      "op": "MSTORE"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "451": {
      "op": "ADD"
    },
    "452": {
      "fn": "NICEToken.totalSupply",
      "offset": [
        1986,
        2075
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x167"
    },
    "455": {
      "op": "JUMP"
    },
    "456": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "457": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "460": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D6"
    },
    "463": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "464": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "466": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE65"
    },
    "469": {
      "fn": "NICEToken.transferFrom",
      "jump": "i",
      "offset": [
        3557,
        3979
      ],
      "op": "JUMP",
      "path": "23"
    },
    "470": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "471": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x410"
    },
    "474": {
      "fn": "NICEToken.transferFrom",
      "jump": "i",
      "offset": [
        3557,
        3979
      ],
      "op": "JUMP",
      "path": "23"
    },
    "475": {
      "fn": "NICEToken.decimals",
      "offset": [
        1701,
        1782
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "476": {
      "fn": "NICEToken.decimals",
      "offset": [
        1766,
        1775
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 1,
      "value": "0x8"
    },
    "478": {
      "fn": "NICEToken.decimals",
      "offset": [
        1766,
        1775
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "479": {
      "fn": "NICEToken.decimals",
      "offset": [
        1701,
        1782
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "481": {
      "fn": "NICEToken.decimals",
      "offset": [
        1701,
        1782
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "482": {
      "fn": "NICEToken.decimals",
      "offset": [
        1766,
        1775
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "484": {
      "fn": "NICEToken.decimals",
      "offset": [
        1766,
        1775
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "485": {
      "fn": "NICEToken.decimals",
      "offset": [
        1766,
        1775
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "486": {
      "fn": "NICEToken.decimals",
      "offset": [
        1766,
        1775
      ],
      "op": "AND",
      "path": "23"
    },
    "487": {
      "op": "DUP2"
    },
    "488": {
      "op": "MSTORE"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "491": {
      "op": "ADD"
    },
    "492": {
      "fn": "NICEToken.decimals",
      "offset": [
        1701,
        1782
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x167"
    },
    "495": {
      "op": "JUMP"
    },
    "496": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "497": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "500": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FE"
    },
    "503": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "504": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "506": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE20"
    },
    "509": {
      "fn": "NICEToken.increaseAllowance",
      "jump": "i",
      "offset": [
        4373,
        4646
      ],
      "op": "JUMP",
      "path": "23"
    },
    "510": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "511": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48A"
    },
    "514": {
      "fn": "NICEToken.increaseAllowance",
      "jump": "i",
      "offset": [
        4373,
        4646
      ],
      "op": "JUMP",
      "path": "23"
    },
    "515": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "516": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "519": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x211"
    },
    "522": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "523": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "525": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE20"
    },
    "528": {
      "fn": "NICEToken.mint",
      "jump": "i",
      "offset": [
        9804,
        9974
      ],
      "op": "JUMP",
      "path": "23"
    },
    "529": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "530": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4C0"
    },
    "533": {
      "fn": "NICEToken.mint",
      "jump": "i",
      "offset": [
        9804,
        9974
      ],
      "op": "JUMP",
      "path": "23"
    },
    "534": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "535": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x229"
    },
    "538": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x224"
    },
    "541": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "542": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "544": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEA1"
    },
    "547": {
      "fn": "NICEToken.burn",
      "jump": "i",
      "offset": [
        5620,
        5748
      ],
      "op": "JUMP",
      "path": "23"
    },
    "548": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "549": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x51C"
    },
    "552": {
      "fn": "NICEToken.burn",
      "jump": "i",
      "offset": [
        5620,
        5748
      ],
      "op": "JUMP",
      "path": "23"
    },
    "553": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "554": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "STOP",
      "path": "23"
    },
    "555": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "556": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x229"
    },
    "559": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x239"
    },
    "562": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "563": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "565": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE4A"
    },
    "568": {
      "fn": "NICEToken.toggleMinter",
      "jump": "i",
      "offset": [
        11189,
        11378
      ],
      "op": "JUMP",
      "path": "23"
    },
    "569": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "570": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x539"
    },
    "573": {
      "fn": "NICEToken.toggleMinter",
      "jump": "i",
      "offset": [
        11189,
        11378
      ],
      "op": "JUMP",
      "path": "23"
    },
    "574": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2132,
        2240
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "575": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2132,
        2240
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BA"
    },
    "578": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2132,
        2240
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24C"
    },
    "581": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2132,
        2240
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "582": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2132,
        2240
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "584": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2132,
        2240
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE4A"
    },
    "587": {
      "fn": "NICEToken.balanceOf",
      "jump": "i",
      "offset": [
        2132,
        2240
      ],
      "op": "JUMP",
      "path": "23"
    },
    "588": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2132,
        2240
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "AND",
      "path": "23",
      "statement": 2
    },
    "598": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2189,
        2196
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "600": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "601": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "DUP2",
      "path": "23"
    },
    "602": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "603": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2224
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "605": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "607": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "608": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "610": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "611": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "612": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "613": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2215,
        2233
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "614": {
      "fn": "NICEToken.balanceOf",
      "offset": [
        2132,
        2240
      ],
      "op": "JUMP",
      "path": "23"
    },
    "615": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229"
    },
    "619": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CD"
    },
    "622": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "623": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "624": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "627": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27D"
    },
    "630": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "631": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "633": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE20"
    },
    "636": {
      "fn": "NICEToken.bridgeBurn",
      "jump": "i",
      "offset": [
        10193,
        10369
      ],
      "op": "JUMP",
      "path": "23"
    },
    "637": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "638": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x603"
    },
    "641": {
      "fn": "NICEToken.bridgeBurn",
      "jump": "i",
      "offset": [
        10193,
        10369
      ],
      "op": "JUMP",
      "path": "23"
    },
    "642": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "643": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "646": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x290"
    },
    "649": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "650": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "652": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE20"
    },
    "655": {
      "fn": "NICEToken.bridgeBurnFrom",
      "jump": "i",
      "offset": [
        10648,
        11049
      ],
      "op": "JUMP",
      "path": "23"
    },
    "656": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "657": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x65C"
    },
    "660": {
      "fn": "NICEToken.bridgeBurnFrom",
      "jump": "i",
      "offset": [
        10648,
        11049
      ],
      "op": "JUMP",
      "path": "23"
    },
    "661": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "662": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "664": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 3
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "671": {
      "op": "SHL"
    },
    "672": {
      "op": "SUB"
    },
    "673": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "674": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "675": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "677": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "op": "SUB"
    },
    "686": {
      "op": "SWAP1"
    },
    "687": {
      "op": "SWAP2"
    },
    "688": {
      "op": "AND"
    },
    "689": {
      "op": "DUP2"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "693": {
      "op": "ADD"
    },
    "694": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "697": {
      "op": "JUMP"
    },
    "698": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "699": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x229"
    },
    "702": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C8"
    },
    "705": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "706": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "708": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE4A"
    },
    "711": {
      "fn": "NICEToken.setBridge",
      "jump": "i",
      "offset": [
        9549,
        9679
      ],
      "op": "JUMP",
      "path": "23"
    },
    "712": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "713": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6F6"
    },
    "716": {
      "fn": "NICEToken.setBridge",
      "jump": "i",
      "offset": [
        9549,
        9679
      ],
      "op": "JUMP",
      "path": "23"
    },
    "717": {
      "fn": "NICEToken.symbol",
      "offset": [
        1842,
        1927
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "718": {
      "fn": "NICEToken.symbol",
      "offset": [
        1842,
        1927
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15A"
    },
    "721": {
      "fn": "NICEToken.symbol",
      "offset": [
        1842,
        1927
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x779"
    },
    "724": {
      "fn": "NICEToken.symbol",
      "jump": "i",
      "offset": [
        1842,
        1927
      ],
      "op": "JUMP",
      "path": "23"
    },
    "725": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "726": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "729": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E3"
    },
    "732": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "733": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "735": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE20"
    },
    "738": {
      "fn": "NICEToken.decreaseAllowance",
      "jump": "i",
      "offset": [
        5132,
        5502
      ],
      "op": "JUMP",
      "path": "23"
    },
    "739": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "740": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x788"
    },
    "743": {
      "fn": "NICEToken.decreaseAllowance",
      "jump": "i",
      "offset": [
        5132,
        5502
      ],
      "op": "JUMP",
      "path": "23"
    },
    "744": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "745": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x183"
    },
    "748": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F6"
    },
    "751": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "752": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "754": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE20"
    },
    "757": {
      "fn": "NICEToken.transfer",
      "jump": "i",
      "offset": [
        2442,
        2597
      ],
      "op": "JUMP",
      "path": "23"
    },
    "758": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "759": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7D7"
    },
    "762": {
      "fn": "NICEToken.transfer",
      "jump": "i",
      "offset": [
        2442,
        2597
      ],
      "op": "JUMP",
      "path": "23"
    },
    "763": {
      "offset": [
        684,
        710
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "764": {
      "fn": "NICEToken.transfer",
      "offset": [
        684,
        710
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BA"
    },
    "767": {
      "fn": "NICEToken.transfer",
      "offset": [
        684,
        710
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x9"
    },
    "769": {
      "fn": "NICEToken.transfer",
      "offset": [
        684,
        710
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "770": {
      "fn": "NICEToken.transfer",
      "offset": [
        684,
        710
      ],
      "op": "DUP2",
      "path": "23"
    },
    "771": {
      "fn": "NICEToken.transfer",
      "offset": [
        684,
        710
      ],
      "op": "JUMP",
      "path": "23"
    },
    "772": {
      "fn": "NICEToken.allowance",
      "offset": [
        2654,
        2814
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "773": {
      "fn": "NICEToken.allowance",
      "offset": [
        2654,
        2814
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BA"
    },
    "776": {
      "fn": "NICEToken.allowance",
      "offset": [
        2654,
        2814
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x312"
    },
    "779": {
      "fn": "NICEToken.allowance",
      "offset": [
        2654,
        2814
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "780": {
      "fn": "NICEToken.allowance",
      "offset": [
        2654,
        2814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "782": {
      "fn": "NICEToken.allowance",
      "offset": [
        2654,
        2814
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEBA"
    },
    "785": {
      "fn": "NICEToken.allowance",
      "jump": "i",
      "offset": [
        2654,
        2814
      ],
      "op": "JUMP",
      "path": "23"
    },
    "786": {
      "fn": "NICEToken.allowance",
      "offset": [
        2654,
        2814
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "SUB"
    },
    "795": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "SWAP2",
      "path": "23",
      "statement": 4
    },
    "796": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "DUP3",
      "path": "23"
    },
    "797": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "AND",
      "path": "23"
    },
    "798": {
      "fn": "NICEToken.allowance",
      "offset": [
        2750,
        2757
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "800": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "801": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "DUP2",
      "path": "23"
    },
    "802": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "803": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "805": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "807": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "808": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "DUP2",
      "path": "23"
    },
    "809": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "810": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "812": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "DUP1",
      "path": "23"
    },
    "813": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "DUP4",
      "path": "23"
    },
    "814": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2798
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "815": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "816": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "817": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "818": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "AND",
      "path": "23"
    },
    "819": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "DUP3",
      "path": "23"
    },
    "820": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "821": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "822": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "823": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "824": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "825": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "826": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "827": {
      "fn": "NICEToken.allowance",
      "offset": [
        2780,
        2807
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "828": {
      "fn": "NICEToken.allowance",
      "offset": [
        2654,
        2814
      ],
      "op": "JUMP",
      "path": "23"
    },
    "829": {
      "offset": [
        657,
        678
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "830": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "832": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "833": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A2"
    },
    "836": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "837": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "840": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "841": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "DIV",
      "path": "23"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "848": {
      "op": "SHL"
    },
    "849": {
      "op": "SUB"
    },
    "850": {
      "offset": [
        657,
        678
      ],
      "op": "AND",
      "path": "23"
    },
    "851": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "DUP2",
      "path": "23"
    },
    "852": {
      "fn": "NICEToken.allowance",
      "offset": [
        657,
        678
      ],
      "op": "JUMP",
      "path": "23"
    },
    "853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229"
    },
    "857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x363"
    },
    "860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4A"
    },
    "866": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E4"
    },
    "871": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "872": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "873": {
      "fn": "NICEToken.name",
      "offset": [
        1595,
        1608
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "875": {
      "fn": "NICEToken.name",
      "offset": [
        1627,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 5,
      "value": "0x6"
    },
    "877": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "878": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "879": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x377"
    },
    "882": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "883": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEED"
    },
    "886": {
      "fn": "NICEToken.name",
      "jump": "i",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMP",
      "path": "23"
    },
    "887": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "888": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "889": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "891": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "892": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "894": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "895": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "896": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DIV",
      "path": "23"
    },
    "897": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "MUL",
      "path": "23"
    },
    "898": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "900": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "901": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "903": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "904": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "905": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP2",
      "path": "23"
    },
    "906": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "907": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "909": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "910": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "911": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "912": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "913": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "914": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP2",
      "path": "23"
    },
    "915": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP2",
      "path": "23"
    },
    "916": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "917": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "919": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "920": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP3",
      "path": "23"
    },
    "921": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "922": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "923": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A3"
    },
    "926": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "927": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEED"
    },
    "930": {
      "fn": "NICEToken.name",
      "jump": "i",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMP",
      "path": "23"
    },
    "931": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "932": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "933": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "934": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F0"
    },
    "937": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "938": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "939": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "941": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "LT",
      "path": "23"
    },
    "942": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3C5"
    },
    "945": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "946": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "949": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "950": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP4",
      "path": "23"
    },
    "951": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "952": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DIV",
      "path": "23"
    },
    "953": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "MUL",
      "path": "23"
    },
    "954": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP4",
      "path": "23"
    },
    "955": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "956": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "957": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "959": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "960": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "961": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F0"
    },
    "964": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMP",
      "path": "23"
    },
    "965": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "966": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP3",
      "path": "23"
    },
    "967": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "968": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "969": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "970": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "972": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "973": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "975": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "977": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "978": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "979": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "980": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP2",
      "path": "23"
    },
    "981": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "982": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP2",
      "path": "23"
    },
    "983": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "984": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "985": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "987": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "988": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "989": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "991": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "992": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP1",
      "path": "23"
    },
    "993": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP4",
      "path": "23"
    },
    "994": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "GT",
      "path": "23"
    },
    "995": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3D3"
    },
    "998": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "999": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1000": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1001": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SUB",
      "path": "23"
    },
    "1002": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "1004": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "AND",
      "path": "23"
    },
    "1005": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1006": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "ADD",
      "path": "23"
    },
    "1007": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1008": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1009": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "POP",
      "path": "23"
    },
    "1010": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "POP",
      "path": "23"
    },
    "1011": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "POP",
      "path": "23"
    },
    "1012": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "POP",
      "path": "23"
    },
    "1013": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "POP",
      "path": "23"
    },
    "1014": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1015": {
      "fn": "NICEToken.name",
      "offset": [
        1620,
        1632
      ],
      "op": "POP",
      "path": "23"
    },
    "1016": {
      "fn": "NICEToken.name",
      "offset": [
        1558,
        1639
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1017": {
      "fn": "NICEToken.name",
      "jump": "o",
      "offset": [
        1558,
        1639
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1018": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1019": {
      "fn": "NICEToken.approve",
      "offset": [
        3017,
        3021
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1021": {
      "fn": "NICEToken.approve",
      "offset": [
        3033,
        3072
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 6,
      "value": "0x407"
    },
    "1024": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 7
    },
    "1025": {
      "fn": "NICEToken.approve",
      "offset": [
        3056,
        3063
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1026": {
      "fn": "NICEToken.approve",
      "offset": [
        3065,
        3071
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1027": {
      "fn": "NICEToken.approve",
      "offset": [
        3033,
        3041
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x87F"
    },
    "1030": {
      "fn": "NICEToken.approve",
      "jump": "i",
      "offset": [
        3033,
        3072
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1031": {
      "fn": "NICEToken.approve",
      "offset": [
        3033,
        3072
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1032": {
      "op": "POP"
    },
    "1033": {
      "fn": "NICEToken.approve",
      "offset": [
        3089,
        3093
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 8,
      "value": "0x1"
    },
    "1035": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1036": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1037": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "POP",
      "path": "23"
    },
    "1038": {
      "fn": "NICEToken.approve",
      "offset": [
        2951,
        3100
      ],
      "op": "POP",
      "path": "23"
    },
    "1039": {
      "fn": "NICEToken.approve",
      "jump": "o",
      "offset": [
        2951,
        3100
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1040": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1041": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3676,
        3680
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1043": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3692,
        3728
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 9,
      "value": "0x41D"
    },
    "1046": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3702,
        3708
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1047": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3710,
        3719
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1048": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3721,
        3727
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1049": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3692,
        3701
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9A4"
    },
    "1052": {
      "fn": "NICEToken.transferFrom",
      "jump": "i",
      "offset": [
        3692,
        3728
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1053": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3692,
        3728
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1054": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3738,
        3951
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 10,
      "value": "0x480"
    },
    "1057": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3760,
        3766
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1058": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1059": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47B"
    },
    "1062": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3861,
        3867
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1063": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1065": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1066": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1067": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1069": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "ADD",
      "path": "23"
    },
    "1070": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1072": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1073": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1074": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x28"
    },
    "1076": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1077": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1078": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1080": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "ADD",
      "path": "23"
    },
    "1081": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFA3"
    },
    "1084": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x28"
    },
    "1086": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1087": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "CODECOPY",
      "path": "23"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "SUB"
    },
    "1096": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "DUP11",
      "path": "23"
    },
    "1097": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "AND",
      "path": "23"
    },
    "1098": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1100": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1101": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1102": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1103": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3817
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1105": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1107": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1108": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1110": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1111": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1112": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3825
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1113": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1114": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3826,
        3838
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "op": "SUB"
    },
    "1123": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "AND",
      "path": "23"
    },
    "1124": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1125": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1126": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1128": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1129": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "ADD",
      "path": "23"
    },
    "1130": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1131": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1132": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1133": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1134": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1136": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "ADD",
      "path": "23"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1139": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1140": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1141": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3839
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1142": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1143": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3843
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB2A"
    },
    "1146": {
      "fn": "NICEToken.transferFrom",
      "jump": "i",
      "offset": [
        3806,
        3941
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1147": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3806,
        3941
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1148": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3738,
        3746
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x87F"
    },
    "1151": {
      "fn": "NICEToken.transferFrom",
      "jump": "i",
      "offset": [
        3738,
        3951
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1152": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3738,
        3951
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3968,
        3972
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 11,
      "value": "0x1"
    },
    "1156": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1157": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1158": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "POP",
      "path": "23"
    },
    "1159": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "POP",
      "path": "23"
    },
    "1160": {
      "fn": "NICEToken.transferFrom",
      "offset": [
        3557,
        3979
      ],
      "op": "POP",
      "path": "23"
    },
    "1161": {
      "fn": "NICEToken.transferFrom",
      "jump": "o",
      "offset": [
        3557,
        3979
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1162": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4373,
        4646
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1163": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1164": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4469,
        4473
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1166": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 12
    },
    "1167": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1168": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1169": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4569
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1171": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1173": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1174": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1175": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1176": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1178": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1179": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1180": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4583
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1187": {
      "op": "SHL"
    },
    "1188": {
      "op": "SUB"
    },
    "1189": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1190": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "AND",
      "path": "23"
    },
    "1191": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1192": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1193": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1194": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1195": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1196": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1197": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1198": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4592
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1199": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4469,
        4473
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1200": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4469,
        4473
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1201": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4489,
        4618
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x407"
    },
    "1204": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4489,
        4618
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1205": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4537,
        4544
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1206": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4537,
        4544
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1207": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4608
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47B"
    },
    "1210": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4608
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1211": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4597,
        4607
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1212": {
      "fn": "NICEToken.increaseAllowance",
      "offset": [
        4558,
        4596
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB56"
    },
    "1215": {
      "fn": "NICEToken.increaseAllowance",
      "jump": "i",
      "offset": [
        4558,
        4608
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1216": {
      "fn": "NICEToken.mint",
      "offset": [
        9804,
        9974
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1217": {
      "offset": [
        1085,
        1095
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1218": {
      "fn": "NICEToken.mint",
      "offset": [
        9904,
        9908
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1220": {
      "offset": [
        1072,
        1096
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1221": {
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1222": {
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1223": {
      "offset": [
        1072,
        1084
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1225": {
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1227": {
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1228": {
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1230": {
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1231": {
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1232": {
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1233": {
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1235": {
      "branch": 52,
      "fn": "NICEToken.mint",
      "offset": [
        1072,
        1096
      ],
      "op": "AND",
      "path": "23"
    },
    "1236": {
      "offset": [
        1064,
        1112
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x512"
    },
    "1239": {
      "branch": 52,
      "offset": [
        1064,
        1112
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1240": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1242": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "offset": [
        1064,
        1112
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1251": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1254": {
      "offset": [
        1064,
        1112
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1256": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1257": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "ADD",
      "path": "23"
    },
    "1258": {
      "op": "MSTORE"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1263": {
      "op": "DUP3"
    },
    "1264": {
      "op": "ADD"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH11",
      "value": "0x6F6E6C794D696E74657273"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1283": {
      "op": "DUP3"
    },
    "1284": {
      "op": "ADD"
    },
    "1285": {
      "op": "MSTORE"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1288": {
      "op": "ADD"
    },
    "1289": {
      "offset": [
        1064,
        1112
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1290": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1292": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1293": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1294": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1295": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "SUB",
      "path": "23"
    },
    "1296": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1297": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "23"
    },
    "1298": {
      "fn": "NICEToken.mint",
      "offset": [
        1064,
        1112
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1299": {
      "fn": "NICEToken.mint",
      "offset": [
        9924,
        9946
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 13,
      "value": "0x407"
    },
    "1302": {
      "fn": "NICEToken.mint",
      "offset": [
        9930,
        9937
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1303": {
      "fn": "NICEToken.mint",
      "offset": [
        9939,
        9945
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1304": {
      "fn": "NICEToken.mint",
      "offset": [
        9924,
        9929
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB69"
    },
    "1307": {
      "fn": "NICEToken.mint",
      "jump": "i",
      "offset": [
        9924,
        9946
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1308": {
      "fn": "NICEToken.burn",
      "offset": [
        5620,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1309": {
      "fn": "NICEToken.burn",
      "offset": [
        5669,
        5694
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 14,
      "value": "0x526"
    },
    "1312": {
      "fn": "NICEToken.burn",
      "offset": [
        5675,
        5685
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1313": {
      "fn": "NICEToken.burn",
      "offset": [
        5687,
        5693
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1314": {
      "fn": "NICEToken.burn",
      "offset": [
        5669,
        5674
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC4F"
    },
    "1317": {
      "fn": "NICEToken.burn",
      "jump": "i",
      "offset": [
        5669,
        5694
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1318": {
      "fn": "NICEToken.burn",
      "offset": [
        5669,
        5694
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1319": {
      "fn": "NICEToken.burn",
      "offset": [
        5718,
        5729
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 15,
      "value": "0x9"
    },
    "1321": {
      "fn": "NICEToken.burn",
      "offset": [
        5718,
        5729
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1322": {
      "fn": "NICEToken.burn",
      "offset": [
        5718,
        5741
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x533"
    },
    "1325": {
      "fn": "NICEToken.burn",
      "offset": [
        5718,
        5741
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1326": {
      "fn": "NICEToken.burn",
      "offset": [
        5734,
        5740
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1327": {
      "fn": "NICEToken.burn",
      "offset": [
        5718,
        5733
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB56"
    },
    "1330": {
      "fn": "NICEToken.burn",
      "jump": "i",
      "offset": [
        5718,
        5741
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1331": {
      "fn": "NICEToken.burn",
      "offset": [
        5718,
        5741
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1332": {
      "fn": "NICEToken.burn",
      "offset": [
        5704,
        5715
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x9"
    },
    "1334": {
      "fn": "NICEToken.burn",
      "offset": [
        5704,
        5741
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "fn": "NICEToken.burn",
      "jump": "o",
      "offset": [
        5620,
        5748
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1337": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1338": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1340": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "op": "SUB"
    },
    "1349": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1350": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1351": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1352": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x563"
    },
    "1355": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1356": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1358": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1368": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1370": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1371": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "1374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF28"
    },
    "1378": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1386": {
      "op": "SHL"
    },
    "1387": {
      "op": "SUB"
    },
    "1388": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 16
    },
    "1389": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "AND",
      "path": "23"
    },
    "1390": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1392": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1393": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1394": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1395": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11298
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1397": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1399": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1400": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1401": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1402": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1404": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1405": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1406": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1407": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1408": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1409": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1410": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1412": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1413": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1414": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11286,
        11309
      ],
      "op": "AND",
      "path": "23"
    },
    "1415": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11285,
        11309
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1418": {
      "op": "NOT"
    },
    "1419": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11259,
        11309
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1420": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11259,
        11309
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1421": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11259,
        11309
      ],
      "op": "AND",
      "path": "23"
    },
    "1422": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11259,
        11309
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1423": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11259,
        11309
      ],
      "op": "OR",
      "path": "23"
    },
    "1424": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11259,
        11309
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1425": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11259,
        11309
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1426": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11259,
        11309
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1427": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 17
    },
    "1428": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1429": {
      "op": "SWAP5"
    },
    "1430": {
      "op": "DUP6"
    },
    "1431": {
      "op": "MSTORE"
    },
    "1432": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11347,
        11370
      ],
      "op": "AND",
      "path": "23"
    },
    "1433": {
      "op": "ISZERO"
    },
    "1434": {
      "op": "ISZERO"
    },
    "1435": {
      "op": "SWAP1"
    },
    "1436": {
      "op": "DUP4"
    },
    "1437": {
      "op": "ADD"
    },
    "1438": {
      "op": "MSTORE"
    },
    "1439": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x82413450DD272B542292A5F21ED2FC53EB0FBAF78BBABDB95B6453C7335E6620"
    },
    "1472": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1473": {
      "op": "ADD"
    },
    "1474": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1475": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1477": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1478": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1479": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1480": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "SUB",
      "path": "23"
    },
    "1481": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1482": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11324,
        11371
      ],
      "op": "LOG1",
      "path": "23"
    },
    "1483": {
      "fn": "NICEToken.toggleMinter",
      "offset": [
        11189,
        11378
      ],
      "op": "POP",
      "path": "23"
    },
    "1484": {
      "fn": "NICEToken.toggleMinter",
      "jump": "o",
      "offset": [
        11189,
        11378
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1485": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1486": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1488": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "op": "SUB"
    },
    "1497": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1498": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1499": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1500": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F7"
    },
    "1503": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1504": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1506": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1515": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1516": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1519": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "1522": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1523": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF28"
    },
    "1526": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1527": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1528": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x601"
    },
    "1531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1533": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD53"
    },
    "1536": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1537": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1538": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1539": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10193,
        10369
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1540": {
      "offset": [
        1190,
        1196
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "1542": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        1190,
        1196
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1543": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10299,
        10303
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1545": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10299,
        10303
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1546": {
      "offset": [
        1190,
        1196
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1549": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        1190,
        1196
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1550": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        1190,
        1196
      ],
      "op": "DIV",
      "path": "23"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "op": "SUB"
    },
    "1559": {
      "offset": [
        1190,
        1196
      ],
      "op": "AND",
      "path": "23"
    },
    "1560": {
      "offset": [
        1176,
        1186
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1561": {
      "offset": [
        1176,
        1196
      ],
      "op": "EQ",
      "path": "23"
    },
    "1562": {
      "offset": [
        1168,
        1211
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x652"
    },
    "1565": {
      "offset": [
        1168,
        1211
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1566": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        1168,
        1211
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1568": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        1168,
        1211
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "offset": [
        1168,
        1211
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1577": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        1168,
        1211
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1580": {
      "offset": [
        1168,
        1211
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1582": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        1168,
        1211
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1583": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        1168,
        1211
      ],
      "op": "ADD",
      "path": "23"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1589": {
      "op": "DUP3"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH10",
      "value": "0x6F6E6C79427269646765"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1608": {
      "op": "DUP3"
    },
    "1609": {
      "op": "ADD"
    },
    "1610": {
      "op": "MSTORE"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1613": {
      "op": "ADD"
    },
    "1614": {
      "offset": [
        1168,
        1211
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "1617": {
      "op": "JUMP"
    },
    "1618": {
      "offset": [
        1168,
        1211
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1619": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10319,
        10341
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 19,
      "value": "0x407"
    },
    "1622": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10325,
        10332
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1623": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10334,
        10340
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1624": {
      "fn": "NICEToken.bridgeBurn",
      "offset": [
        10319,
        10324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC4F"
    },
    "1627": {
      "fn": "NICEToken.bridgeBurn",
      "jump": "i",
      "offset": [
        10319,
        10341
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1628": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10648,
        11049
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1629": {
      "offset": [
        1190,
        1196
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "1631": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        1190,
        1196
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1632": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10758,
        10762
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1634": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10758,
        10762
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1635": {
      "offset": [
        1190,
        1196
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1638": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        1190,
        1196
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1639": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        1190,
        1196
      ],
      "op": "DIV",
      "path": "23"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "offset": [
        1190,
        1196
      ],
      "op": "AND",
      "path": "23"
    },
    "1649": {
      "offset": [
        1176,
        1186
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1650": {
      "offset": [
        1176,
        1196
      ],
      "op": "EQ",
      "path": "23"
    },
    "1651": {
      "offset": [
        1168,
        1211
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6AB"
    },
    "1654": {
      "offset": [
        1168,
        1211
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1655": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        1168,
        1211
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1657": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        1168,
        1211
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "offset": [
        1168,
        1211
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1666": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        1168,
        1211
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1669": {
      "offset": [
        1168,
        1211
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1671": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        1168,
        1211
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1672": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        1168,
        1211
      ],
      "op": "ADD",
      "path": "23"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "op": "MSTORE"
    },
    "1681": {
      "op": "PUSH10",
      "value": "0x6F6E6C79427269646765"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1697": {
      "op": "DUP3"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "op": "MSTORE"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1702": {
      "op": "ADD"
    },
    "1703": {
      "offset": [
        1168,
        1211
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "1706": {
      "op": "JUMP"
    },
    "1707": {
      "offset": [
        1168,
        1211
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1708": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10778,
        10800
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 20,
      "value": "0x6B5"
    },
    "1711": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10784,
        10791
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1712": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10793,
        10799
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1713": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10778,
        10783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC4F"
    },
    "1716": {
      "fn": "NICEToken.bridgeBurnFrom",
      "jump": "i",
      "offset": [
        10778,
        10800
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1717": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10778,
        10800
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1718": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10810,
        11021
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 21,
      "value": "0x407"
    },
    "1721": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10832,
        10839
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1722": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1723": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47B"
    },
    "1726": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10935,
        10941
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1727": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1729": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1730": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1731": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1733": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "ADD",
      "path": "23"
    },
    "1734": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1736": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1737": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1738": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "1740": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1741": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1742": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1744": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "ADD",
      "path": "23"
    },
    "1745": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1038"
    },
    "1748": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "1750": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1751": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        11011
      ],
      "op": "CODECOPY",
      "path": "23"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1761": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "AND",
      "path": "23"
    },
    "1762": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1764": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1765": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1766": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1767": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10890
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1769": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1771": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1772": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1774": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1775": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1776": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1777": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1778": {
      "fn": "NICEToken.bridgeBurnFrom",
      "offset": [
        10900,
        10912
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45A"
    },
    "1781": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1782": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9549,
        9679
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1783": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1785": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1792": {
      "op": "SHL"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1795": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1796": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1797": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x720"
    },
    "1800": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1801": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1810": {
      "op": "SHL"
    },
    "1811": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1812": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1813": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1815": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1816": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "1819": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1820": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF28"
    },
    "1823": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1824": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1825": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9624
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 22,
      "value": "0x8"
    },
    "1827": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1828": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1829": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "SUB"
    },
    "1838": {
      "op": "NOT"
    },
    "1839": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "AND",
      "path": "23"
    },
    "1840": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1852": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1853": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "AND",
      "path": "23"
    },
    "1854": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1855": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "MUL",
      "path": "23"
    },
    "1856": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1857": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1858": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1859": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "OR",
      "path": "23"
    },
    "1860": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1861": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1862": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1863": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9618,
        9640
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1864": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9655,
        9672
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 23,
      "value": "0x40"
    },
    "1866": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9655,
        9672
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1867": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9665,
        9671
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1868": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9665,
        9671
      ],
      "op": "DIV",
      "path": "23"
    },
    "1869": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9665,
        9671
      ],
      "op": "AND",
      "path": "23"
    },
    "1870": {
      "op": "DUP2"
    },
    "1871": {
      "op": "MSTORE"
    },
    "1872": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9655,
        9672
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xE605AC02EA219003EC58FC9CF4D4B3C5F2D62EC39807B1C63886DDD47A6FCD6E"
    },
    "1905": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9655,
        9672
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1908": {
      "op": "ADD"
    },
    "1909": {
      "fn": "NICEToken.setBridge",
      "offset": [
        9655,
        9672
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5C2"
    },
    "1912": {
      "op": "JUMP"
    },
    "1913": {
      "fn": "NICEToken.symbol",
      "offset": [
        1842,
        1927
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1914": {
      "fn": "NICEToken.symbol",
      "offset": [
        1881,
        1894
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1916": {
      "fn": "NICEToken.symbol",
      "offset": [
        1913,
        1920
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 24,
      "value": "0x7"
    },
    "1918": {
      "fn": "NICEToken.symbol",
      "offset": [
        1906,
        1920
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1919": {
      "fn": "NICEToken.symbol",
      "offset": [
        1906,
        1920
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1920": {
      "fn": "NICEToken.symbol",
      "offset": [
        1906,
        1920
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x377"
    },
    "1923": {
      "fn": "NICEToken.symbol",
      "offset": [
        1906,
        1920
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1924": {
      "fn": "NICEToken.symbol",
      "offset": [
        1906,
        1920
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEED"
    },
    "1927": {
      "fn": "NICEToken.symbol",
      "jump": "i",
      "offset": [
        1906,
        1920
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1928": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5132,
        5502
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1929": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5233,
        5237
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1931": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5253,
        5474
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 25,
      "value": "0x407"
    },
    "1934": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1935": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5301,
        5308
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1936": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47B"
    },
    "1939": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5378,
        5393
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1940": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1942": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1943": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1944": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1946": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "ADD",
      "path": "23"
    },
    "1947": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1949": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1950": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1951": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x25"
    },
    "1953": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1954": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1955": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1957": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "ADD",
      "path": "23"
    },
    "1958": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF1"
    },
    "1961": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x25"
    },
    "1963": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1964": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5464
      ],
      "op": "CODECOPY",
      "path": "23"
    },
    "1965": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1966": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1968": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1969": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1970": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1971": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1973": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1975": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1976": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1977": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1978": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1980": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1981": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1982": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5347
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "DUP14",
      "path": "23"
    },
    "1992": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "AND",
      "path": "23"
    },
    "1993": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1994": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1995": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1996": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1997": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1998": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1999": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2000": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2001": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2002": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5356
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2003": {
      "fn": "NICEToken.decreaseAllowance",
      "offset": [
        5322,
        5360
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB2A"
    },
    "2006": {
      "fn": "NICEToken.decreaseAllowance",
      "jump": "i",
      "offset": [
        5322,
        5464
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2007": {
      "fn": "NICEToken.transfer",
      "offset": [
        2442,
        2597
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2008": {
      "fn": "NICEToken.transfer",
      "offset": [
        2511,
        2515
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2010": {
      "fn": "NICEToken.transfer",
      "offset": [
        2527,
        2569
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 26,
      "value": "0x407"
    },
    "2013": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2014": {
      "fn": "NICEToken.transfer",
      "offset": [
        2551,
        2560
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2015": {
      "fn": "NICEToken.transfer",
      "offset": [
        2562,
        2568
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2016": {
      "fn": "NICEToken.transfer",
      "offset": [
        2527,
        2536
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9A4"
    },
    "2019": {
      "fn": "NICEToken.transfer",
      "jump": "i",
      "offset": [
        2527,
        2569
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2020": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2021": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2023": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2030": {
      "op": "SHL"
    },
    "2031": {
      "op": "SUB"
    },
    "2032": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2033": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2034": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2035": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80E"
    },
    "2038": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2048": {
      "op": "SHL"
    },
    "2049": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2050": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2054": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "2057": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF28"
    },
    "2061": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2062": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 27
    },
    "2072": {
      "branch": 59,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2073": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "2076": {
      "branch": 59,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2088": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2091": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2100": {
      "op": "DUP3"
    },
    "2101": {
      "op": "ADD"
    },
    "2102": {
      "op": "MSTORE"
    },
    "2103": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2138": {
      "op": "DUP3"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "MSTORE"
    },
    "2141": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2150": {
      "op": "SHL"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2153": {
      "op": "DUP3"
    },
    "2154": {
      "op": "ADD"
    },
    "2155": {
      "op": "MSTORE"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2158": {
      "op": "ADD"
    },
    "2159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "2162": {
      "op": "JUMP"
    },
    "2163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x87C"
    },
    "2167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD53"
    },
    "2171": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2172": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2174": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2175": {
      "fn": "NICEToken._approve",
      "offset": [
        8442,
        8804
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2182": {
      "op": "SHL"
    },
    "2183": {
      "op": "SUB"
    },
    "2184": {
      "fn": "NICEToken._approve",
      "offset": [
        8565,
        8584
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 29
    },
    "2185": {
      "branch": 53,
      "fn": "NICEToken._approve",
      "offset": [
        8565,
        8584
      ],
      "op": "AND",
      "path": "23"
    },
    "2186": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8E1"
    },
    "2189": {
      "branch": 53,
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2190": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2192": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2199": {
      "op": "SHL"
    },
    "2200": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2201": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2204": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2206": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2207": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "ADD",
      "path": "23"
    },
    "2208": {
      "op": "MSTORE"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2211": {
      "op": "DUP1"
    },
    "2212": {
      "op": "DUP3"
    },
    "2213": {
      "op": "ADD"
    },
    "2214": {
      "op": "MSTORE"
    },
    "2215": {
      "op": "PUSH32",
      "value": "0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2250": {
      "op": "DUP3"
    },
    "2251": {
      "op": "ADD"
    },
    "2252": {
      "op": "MSTORE"
    },
    "2253": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "2272": {
      "op": "JUMP"
    },
    "2273": {
      "fn": "NICEToken._approve",
      "offset": [
        8557,
        8625
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2280": {
      "op": "SHL"
    },
    "2281": {
      "op": "SUB"
    },
    "2282": {
      "fn": "NICEToken._approve",
      "offset": [
        8643,
        8664
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 30
    },
    "2283": {
      "branch": 54,
      "fn": "NICEToken._approve",
      "offset": [
        8643,
        8664
      ],
      "op": "AND",
      "path": "23"
    },
    "2284": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x942"
    },
    "2287": {
      "branch": 54,
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2288": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2290": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2297": {
      "op": "SHL"
    },
    "2298": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2299": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2302": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2304": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2305": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "ADD",
      "path": "23"
    },
    "2306": {
      "op": "MSTORE"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2311": {
      "op": "DUP3"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "MSTORE"
    },
    "2314": {
      "op": "PUSH32",
      "value": "0x42455032303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2349": {
      "op": "DUP3"
    },
    "2350": {
      "op": "ADD"
    },
    "2351": {
      "op": "MSTORE"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2357": {
      "op": "SHL"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2360": {
      "op": "DUP3"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "op": "MSTORE"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2365": {
      "op": "ADD"
    },
    "2366": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "2369": {
      "op": "JUMP"
    },
    "2370": {
      "fn": "NICEToken._approve",
      "offset": [
        8635,
        8703
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "op": "SUB"
    },
    "2379": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 31
    },
    "2380": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2381": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "AND",
      "path": "23"
    },
    "2382": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2384": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2385": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2386": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2387": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2389": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2391": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2392": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2393": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2394": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2396": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2397": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2398": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8732
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2399": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "2400": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "DUP8",
      "path": "23"
    },
    "2401": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "AND",
      "path": "23"
    },
    "2402": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2403": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2404": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2405": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "2406": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2407": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2408": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2409": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2410": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2411": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8741
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2412": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8750
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2413": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8750
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2414": {
      "fn": "NICEToken._approve",
      "offset": [
        8714,
        8750
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2415": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "SWAP1",
      "path": "23",
      "statement": 32
    },
    "2416": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2417": {
      "op": "DUP5"
    },
    "2418": {
      "op": "DUP2"
    },
    "2419": {
      "op": "MSTORE"
    },
    "2420": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2453": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2456": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2458": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2459": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2460": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2461": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "SUB",
      "path": "23"
    },
    "2462": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2463": {
      "fn": "NICEToken._approve",
      "offset": [
        8765,
        8797
      ],
      "op": "LOG3",
      "path": "23"
    },
    "2464": {
      "fn": "NICEToken._approve",
      "offset": [
        8442,
        8804
      ],
      "op": "POP",
      "path": "23"
    },
    "2465": {
      "fn": "NICEToken._approve",
      "offset": [
        8442,
        8804
      ],
      "op": "POP",
      "path": "23"
    },
    "2466": {
      "fn": "NICEToken._approve",
      "offset": [
        8442,
        8804
      ],
      "op": "POP",
      "path": "23"
    },
    "2467": {
      "fn": "NICEToken._approve",
      "jump": "o",
      "offset": [
        8442,
        8804
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2468": {
      "fn": "NICEToken._transfer",
      "offset": [
        6222,
        6750
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "op": "SUB"
    },
    "2477": {
      "fn": "NICEToken._transfer",
      "offset": [
        6349,
        6369
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 33
    },
    "2478": {
      "branch": 55,
      "fn": "NICEToken._transfer",
      "offset": [
        6349,
        6369
      ],
      "op": "AND",
      "path": "23"
    },
    "2479": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA08"
    },
    "2482": {
      "branch": 55,
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2483": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2485": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2492": {
      "op": "SHL"
    },
    "2493": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2494": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2497": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2499": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2500": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "ADD",
      "path": "23"
    },
    "2501": {
      "op": "MSTORE"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2506": {
      "op": "DUP3"
    },
    "2507": {
      "op": "ADD"
    },
    "2508": {
      "op": "MSTORE"
    },
    "2509": {
      "op": "PUSH32",
      "value": "0x42455032303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2544": {
      "op": "DUP3"
    },
    "2545": {
      "op": "ADD"
    },
    "2546": {
      "op": "MSTORE"
    },
    "2547": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2558": {
      "op": "DUP3"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "MSTORE"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2563": {
      "op": "ADD"
    },
    "2564": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "2567": {
      "op": "JUMP"
    },
    "2568": {
      "fn": "NICEToken._transfer",
      "offset": [
        6341,
        6411
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "op": "SUB"
    },
    "2577": {
      "fn": "NICEToken._transfer",
      "offset": [
        6429,
        6452
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 34
    },
    "2578": {
      "branch": 56,
      "fn": "NICEToken._transfer",
      "offset": [
        6429,
        6452
      ],
      "op": "AND",
      "path": "23"
    },
    "2579": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA6A"
    },
    "2582": {
      "branch": 56,
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2583": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2585": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2592": {
      "op": "SHL"
    },
    "2593": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2594": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2597": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2599": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2600": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "ADD",
      "path": "23"
    },
    "2601": {
      "op": "MSTORE"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2606": {
      "op": "DUP3"
    },
    "2607": {
      "op": "ADD"
    },
    "2608": {
      "op": "MSTORE"
    },
    "2609": {
      "op": "PUSH32",
      "value": "0x42455032303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2644": {
      "op": "DUP3"
    },
    "2645": {
      "op": "ADD"
    },
    "2646": {
      "op": "MSTORE"
    },
    "2647": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2656": {
      "op": "DUP3"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "MSTORE"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2661": {
      "op": "ADD"
    },
    "2662": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "2665": {
      "op": "JUMP"
    },
    "2666": {
      "fn": "NICEToken._transfer",
      "offset": [
        6421,
        6492
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2667": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 35,
      "value": "0xAA7"
    },
    "2670": {
      "fn": "NICEToken._transfer",
      "offset": [
        6558,
        6564
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2671": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2673": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2674": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2675": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "2677": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "ADD",
      "path": "23"
    },
    "2678": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2680": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2681": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2682": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x26"
    },
    "2684": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2685": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2686": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2688": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "ADD",
      "path": "23"
    },
    "2689": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFCB"
    },
    "2692": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x26"
    },
    "2694": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2695": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "CODECOPY",
      "path": "23"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2702": {
      "op": "SHL"
    },
    "2703": {
      "op": "SUB"
    },
    "2704": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2705": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "AND",
      "path": "23"
    },
    "2706": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2708": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2709": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2710": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2711": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6532
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2713": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2715": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2716": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2718": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2719": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2720": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2721": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6540
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2722": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2723": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6544
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB2A"
    },
    "2726": {
      "fn": "NICEToken._transfer",
      "jump": "i",
      "offset": [
        6523,
        6628
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2727": {
      "fn": "NICEToken._transfer",
      "offset": [
        6523,
        6628
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2734": {
      "op": "SHL"
    },
    "2735": {
      "op": "SUB"
    },
    "2736": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2737": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2738": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "AND",
      "path": "23"
    },
    "2739": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2741": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2742": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2743": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2744": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6512
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2746": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2748": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2749": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2751": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2752": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2753": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6520
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2754": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2755": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2756": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6628
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2757": {
      "fn": "NICEToken._transfer",
      "offset": [
        6503,
        6628
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2758": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6681
      ],
      "op": "SWAP1",
      "path": "23",
      "statement": 36
    },
    "2759": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6681
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2760": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6681
      ],
      "op": "AND",
      "path": "23"
    },
    "2761": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6681
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2762": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6681
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2763": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6681
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2764": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6681
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2765": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6693
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAD6"
    },
    "2768": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6693
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2769": {
      "fn": "NICEToken._transfer",
      "offset": [
        6686,
        6692
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2770": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6685
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB56"
    },
    "2773": {
      "fn": "NICEToken._transfer",
      "jump": "i",
      "offset": [
        6661,
        6693
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2774": {
      "fn": "NICEToken._transfer",
      "offset": [
        6661,
        6693
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2781": {
      "op": "SHL"
    },
    "2782": {
      "op": "SUB"
    },
    "2783": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2784": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2785": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "AND",
      "path": "23"
    },
    "2786": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2788": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2789": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2790": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2791": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6647
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2793": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2795": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2796": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2798": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2799": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2800": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2801": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6658
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2802": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6693
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2803": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6693
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2804": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6693
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2805": {
      "fn": "NICEToken._transfer",
      "offset": [
        6638,
        6693
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2806": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "SWAP2",
      "path": "23",
      "statement": 37
    },
    "2807": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2808": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2809": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2810": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "AND",
      "path": "23"
    },
    "2811": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2812": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2845": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2846": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x997"
    },
    "2849": {
      "fn": "NICEToken._transfer",
      "offset": [
        6708,
        6743
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2850": {
      "fn": "NICEToken._transfer",
      "offset": [
        6736,
        6742
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2851": {
      "op": "DUP2"
    },
    "2852": {
      "op": "MSTORE"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2855": {
      "op": "ADD"
    },
    "2856": {
      "op": "SWAP1"
    },
    "2857": {
      "op": "JUMP"
    },
    "2858": {
      "fn": "SafeMath.sub",
      "offset": [
        4945,
        5176
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2859": {
      "fn": "SafeMath.sub",
      "offset": [
        5061,
        5068
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2861": {
      "fn": "SafeMath.sub",
      "offset": [
        5120,
        5132
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 38
    },
    "2862": {
      "fn": "SafeMath.sub",
      "offset": [
        5112,
        5118
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2863": {
      "fn": "SafeMath.sub",
      "offset": [
        5112,
        5118
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2864": {
      "fn": "SafeMath.sub",
      "offset": [
        5112,
        5118
      ],
      "op": "GT",
      "path": "16"
    },
    "2865": {
      "branch": 60,
      "fn": "SafeMath.sub",
      "offset": [
        5112,
        5118
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2866": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB4E"
    },
    "2869": {
      "branch": 60,
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2870": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2872": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2879": {
      "op": "SHL"
    },
    "2880": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2881": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2882": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2884": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "ADD",
      "path": "16"
    },
    "2885": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x509"
    },
    "2888": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2889": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2890": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDAF"
    },
    "2893": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        5104,
        5133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2894": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "op": "POP"
    },
    "2898": {
      "fn": "SafeMath.sub",
      "offset": [
        5154,
        5159
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 39
    },
    "2899": {
      "fn": "SafeMath.sub",
      "offset": [
        5154,
        5159
      ],
      "op": "SUB",
      "path": "16"
    },
    "2900": {
      "fn": "SafeMath.sub",
      "offset": [
        5154,
        5159
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2901": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        4945,
        5176
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2902": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2903": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2905": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 40,
      "value": "0xB62"
    },
    "2908": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2909": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2910": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF73"
    },
    "2913": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2914": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2915": {
      "fn": "SafeMath.add",
      "offset": [
        2818,
        2830
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2916": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2921": {
      "fn": "NICEToken._mint",
      "offset": [
        7020,
        7322
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2928": {
      "op": "SHL"
    },
    "2929": {
      "op": "SUB"
    },
    "2930": {
      "fn": "NICEToken._mint",
      "offset": [
        7095,
        7116
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 41
    },
    "2931": {
      "branch": 57,
      "fn": "NICEToken._mint",
      "offset": [
        7095,
        7116
      ],
      "op": "AND",
      "path": "23"
    },
    "2932": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBBF"
    },
    "2935": {
      "branch": 57,
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2936": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2938": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2945": {
      "op": "SHL"
    },
    "2946": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2947": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2950": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2952": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2953": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "ADD",
      "path": "23"
    },
    "2954": {
      "op": "MSTORE"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2959": {
      "op": "DUP3"
    },
    "2960": {
      "op": "ADD"
    },
    "2961": {
      "op": "MSTORE"
    },
    "2962": {
      "op": "PUSH32",
      "value": "0x42455032303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2997": {
      "op": "DUP3"
    },
    "2998": {
      "op": "ADD"
    },
    "2999": {
      "op": "MSTORE"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3002": {
      "op": "ADD"
    },
    "3003": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "3006": {
      "op": "JUMP"
    },
    "3007": {
      "fn": "NICEToken._mint",
      "offset": [
        7087,
        7152
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3008": {
      "fn": "NICEToken._mint",
      "offset": [
        7178,
        7190
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 42,
      "value": "0x5"
    },
    "3010": {
      "fn": "NICEToken._mint",
      "offset": [
        7178,
        7190
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3011": {
      "fn": "NICEToken._mint",
      "offset": [
        7178,
        7202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBCC"
    },
    "3014": {
      "fn": "NICEToken._mint",
      "offset": [
        7178,
        7202
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3015": {
      "fn": "NICEToken._mint",
      "offset": [
        7195,
        7201
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3016": {
      "fn": "NICEToken._mint",
      "offset": [
        7178,
        7194
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB56"
    },
    "3019": {
      "fn": "NICEToken._mint",
      "jump": "i",
      "offset": [
        7178,
        7202
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3020": {
      "fn": "NICEToken._mint",
      "offset": [
        7178,
        7202
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3021": {
      "fn": "NICEToken._mint",
      "offset": [
        7163,
        7175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "3023": {
      "fn": "NICEToken._mint",
      "offset": [
        7163,
        7202
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "op": "SUB"
    },
    "3032": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 43
    },
    "3033": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "AND",
      "path": "23"
    },
    "3034": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3036": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3037": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3038": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3039": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7242
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3041": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3043": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3044": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3046": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3047": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3048": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7251
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3049": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7263
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBF2"
    },
    "3052": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7263
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3053": {
      "fn": "NICEToken._mint",
      "offset": [
        7256,
        7262
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3054": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7255
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB56"
    },
    "3057": {
      "fn": "NICEToken._mint",
      "jump": "i",
      "offset": [
        7233,
        7263
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3058": {
      "fn": "NICEToken._mint",
      "offset": [
        7233,
        7263
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "op": "SUB"
    },
    "3067": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3068": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "AND",
      "path": "23"
    },
    "3069": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3071": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3072": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3073": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3074": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7221
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3076": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3078": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3079": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3081": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3082": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3083": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3084": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7263
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3085": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7263
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3086": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7263
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3087": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7263
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3088": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "SWAP2",
      "path": "23",
      "statement": 44
    },
    "3089": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3090": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3091": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3092": {
      "fn": "NICEToken._mint",
      "offset": [
        7212,
        7230
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3093": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3126": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3127": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC43"
    },
    "3130": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3131": {
      "fn": "NICEToken._mint",
      "offset": [
        7308,
        7314
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3132": {
      "op": "DUP2"
    },
    "3133": {
      "op": "MSTORE"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3136": {
      "op": "ADD"
    },
    "3137": {
      "op": "SWAP1"
    },
    "3138": {
      "op": "JUMP"
    },
    "3139": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3140": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3142": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3143": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3144": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3145": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "SUB",
      "path": "23"
    },
    "3146": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3147": {
      "fn": "NICEToken._mint",
      "offset": [
        7278,
        7315
      ],
      "op": "LOG3",
      "path": "23"
    },
    "3148": {
      "fn": "NICEToken._mint",
      "offset": [
        7020,
        7322
      ],
      "op": "POP",
      "path": "23"
    },
    "3149": {
      "fn": "NICEToken._mint",
      "offset": [
        7020,
        7322
      ],
      "op": "POP",
      "path": "23"
    },
    "3150": {
      "fn": "NICEToken._mint",
      "jump": "o",
      "offset": [
        7020,
        7322
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3151": {
      "fn": "NICEToken._burn",
      "offset": [
        7641,
        8017
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "fn": "NICEToken._burn",
      "offset": [
        7716,
        7737
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 45
    },
    "3161": {
      "branch": 58,
      "fn": "NICEToken._burn",
      "offset": [
        7716,
        7737
      ],
      "op": "AND",
      "path": "23"
    },
    "3162": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCAF"
    },
    "3165": {
      "branch": 58,
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3166": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3168": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3177": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3180": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3182": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3183": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "ADD",
      "path": "23"
    },
    "3184": {
      "op": "MSTORE"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3189": {
      "op": "DUP3"
    },
    "3190": {
      "op": "ADD"
    },
    "3191": {
      "op": "MSTORE"
    },
    "3192": {
      "op": "PUSH32",
      "value": "0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3227": {
      "op": "DUP3"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "MSTORE"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3234": {
      "op": "SHL"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3237": {
      "op": "DUP3"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "op": "MSTORE"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3242": {
      "op": "ADD"
    },
    "3243": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "3246": {
      "op": "JUMP"
    },
    "3247": {
      "fn": "NICEToken._burn",
      "offset": [
        7708,
        7775
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3248": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 46,
      "value": "0xCEC"
    },
    "3251": {
      "fn": "NICEToken._burn",
      "offset": [
        7843,
        7849
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3252": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3254": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3255": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3256": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "3258": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "ADD",
      "path": "23"
    },
    "3259": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3261": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3262": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3263": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x22"
    },
    "3265": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3266": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3267": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3269": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "ADD",
      "path": "23"
    },
    "3270": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1016"
    },
    "3273": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x22"
    },
    "3275": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3276": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "CODECOPY",
      "path": "23"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "op": "SUB"
    },
    "3285": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3286": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "AND",
      "path": "23"
    },
    "3287": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3289": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3290": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3291": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3292": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7816
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3294": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3296": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3297": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3299": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3300": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3301": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3302": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7825
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3303": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3304": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7829
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB2A"
    },
    "3307": {
      "fn": "NICEToken._burn",
      "jump": "i",
      "offset": [
        7807,
        7909
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3308": {
      "fn": "NICEToken._burn",
      "offset": [
        7807,
        7909
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3315": {
      "op": "SHL"
    },
    "3316": {
      "op": "SUB"
    },
    "3317": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3318": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "AND",
      "path": "23"
    },
    "3319": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3321": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3322": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3323": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3324": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7795
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3326": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3328": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3329": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3331": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3332": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7804
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3333": {
      "fn": "NICEToken._burn",
      "offset": [
        7786,
        7909
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3334": {
      "fn": "NICEToken._burn",
      "offset": [
        7934,
        7946
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 47,
      "value": "0x5"
    },
    "3336": {
      "fn": "NICEToken._burn",
      "offset": [
        7934,
        7946
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3337": {
      "fn": "NICEToken._burn",
      "offset": [
        7934,
        7958
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD12"
    },
    "3340": {
      "fn": "NICEToken._burn",
      "offset": [
        7934,
        7958
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3341": {
      "fn": "NICEToken._burn",
      "offset": [
        7951,
        7957
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3342": {
      "fn": "NICEToken._burn",
      "offset": [
        7934,
        7950
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDA3"
    },
    "3345": {
      "fn": "NICEToken._burn",
      "jump": "i",
      "offset": [
        7934,
        7958
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3346": {
      "fn": "NICEToken._burn",
      "offset": [
        7934,
        7958
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3347": {
      "fn": "NICEToken._burn",
      "offset": [
        7919,
        7931
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "3349": {
      "fn": "NICEToken._burn",
      "offset": [
        7919,
        7958
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3350": {
      "fn": "NICEToken._burn",
      "offset": [
        7973,
        8010
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 48,
      "value": "0x40"
    },
    "3352": {
      "fn": "NICEToken._burn",
      "offset": [
        7973,
        8010
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3353": {
      "op": "DUP2"
    },
    "3354": {
      "op": "DUP2"
    },
    "3355": {
      "op": "MSTORE"
    },
    "3356": {
      "fn": "NICEToken._burn",
      "offset": [
        7999,
        8000
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3358": {
      "fn": "NICEToken._burn",
      "offset": [
        7999,
        8000
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3365": {
      "op": "SHL"
    },
    "3366": {
      "op": "SUB"
    },
    "3367": {
      "fn": "NICEToken._burn",
      "offset": [
        7973,
        8010
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3368": {
      "fn": "NICEToken._burn",
      "offset": [
        7973,
        8010
      ],
      "op": "AND",
      "path": "23"
    },
    "3369": {
      "fn": "NICEToken._burn",
      "offset": [
        7973,
        8010
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3370": {
      "fn": "NICEToken._burn",
      "offset": [
        7973,
        8010
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3403": {
      "fn": "NICEToken._burn",
      "offset": [
        7973,
        8010
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "fn": "NICEToken._burn",
      "offset": [
        7973,
        8010
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC43"
    },
    "3410": {
      "op": "JUMP"
    },
    "3411": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3412": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3414": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3422": {
      "op": "SHL"
    },
    "3423": {
      "op": "SUB"
    },
    "3424": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 49
    },
    "3425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3433": {
      "op": "SHL"
    },
    "3434": {
      "op": "SUB"
    },
    "3435": {
      "op": "NOT"
    },
    "3436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3439": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3441": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3442": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x40"
    },
    "3444": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3445": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3446": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3447": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3448": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3449": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3452": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3485": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3486": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3487": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3488": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3489": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3490": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3491": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3492": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3494": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 51,
      "value": "0xB62"
    },
    "3497": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3498": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3499": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF8B"
    },
    "3502": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3503": {
      "op": "JUMPDEST"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3508": {
      "op": "DUP1"
    },
    "3509": {
      "op": "DUP4"
    },
    "3510": {
      "op": "MSTORE"
    },
    "3511": {
      "op": "DUP4"
    },
    "3512": {
      "op": "MLOAD"
    },
    "3513": {
      "op": "DUP1"
    },
    "3514": {
      "op": "DUP3"
    },
    "3515": {
      "op": "DUP6"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "MSTORE"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3520": {
      "op": "JUMPDEST"
    },
    "3521": {
      "op": "DUP2"
    },
    "3522": {
      "op": "DUP2"
    },
    "3523": {
      "op": "LT"
    },
    "3524": {
      "op": "ISZERO"
    },
    "3525": {
      "op": "PUSH2",
      "value": "0xDDC"
    },
    "3528": {
      "op": "JUMPI"
    },
    "3529": {
      "op": "DUP6"
    },
    "3530": {
      "op": "DUP2"
    },
    "3531": {
      "op": "ADD"
    },
    "3532": {
      "op": "DUP4"
    },
    "3533": {
      "op": "ADD"
    },
    "3534": {
      "op": "MLOAD"
    },
    "3535": {
      "op": "DUP6"
    },
    "3536": {
      "op": "DUP3"
    },
    "3537": {
      "op": "ADD"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3540": {
      "op": "ADD"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "DUP3"
    },
    "3543": {
      "op": "ADD"
    },
    "3544": {
      "op": "PUSH2",
      "value": "0xDC0"
    },
    "3547": {
      "op": "JUMP"
    },
    "3548": {
      "op": "JUMPDEST"
    },
    "3549": {
      "op": "DUP2"
    },
    "3550": {
      "op": "DUP2"
    },
    "3551": {
      "op": "GT"
    },
    "3552": {
      "op": "ISZERO"
    },
    "3553": {
      "op": "PUSH2",
      "value": "0xDEE"
    },
    "3556": {
      "op": "JUMPI"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3561": {
      "op": "DUP4"
    },
    "3562": {
      "op": "DUP8"
    },
    "3563": {
      "op": "ADD"
    },
    "3564": {
      "op": "ADD"
    },
    "3565": {
      "op": "MSTORE"
    },
    "3566": {
      "op": "JUMPDEST"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3570": {
      "op": "ADD"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3573": {
      "op": "NOT"
    },
    "3574": {
      "op": "AND"
    },
    "3575": {
      "op": "SWAP3"
    },
    "3576": {
      "op": "SWAP1"
    },
    "3577": {
      "op": "SWAP3"
    },
    "3578": {
      "op": "ADD"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3581": {
      "op": "ADD"
    },
    "3582": {
      "op": "SWAP4"
    },
    "3583": {
      "op": "SWAP3"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "op": "POP"
    },
    "3586": {
      "op": "POP"
    },
    "3587": {
      "jump": "o",
      "op": "JUMP"
    },
    "3588": {
      "op": "JUMPDEST"
    },
    "3589": {
      "op": "DUP1"
    },
    "3590": {
      "op": "CALLDATALOAD"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3597": {
      "op": "SHL"
    },
    "3598": {
      "op": "SUB"
    },
    "3599": {
      "op": "DUP2"
    },
    "3600": {
      "op": "AND"
    },
    "3601": {
      "op": "DUP2"
    },
    "3602": {
      "op": "EQ"
    },
    "3603": {
      "op": "PUSH2",
      "value": "0xE1B"
    },
    "3606": {
      "op": "JUMPI"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3609": {
      "op": "DUP1"
    },
    "3610": {
      "op": "REVERT"
    },
    "3611": {
      "op": "JUMPDEST"
    },
    "3612": {
      "op": "SWAP2"
    },
    "3613": {
      "op": "SWAP1"
    },
    "3614": {
      "op": "POP"
    },
    "3615": {
      "jump": "o",
      "op": "JUMP"
    },
    "3616": {
      "op": "JUMPDEST"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3619": {
      "op": "DUP1"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3622": {
      "op": "DUP4"
    },
    "3623": {
      "op": "DUP6"
    },
    "3624": {
      "op": "SUB"
    },
    "3625": {
      "op": "SLT"
    },
    "3626": {
      "op": "ISZERO"
    },
    "3627": {
      "op": "PUSH2",
      "value": "0xE33"
    },
    "3630": {
      "op": "JUMPI"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3633": {
      "op": "DUP1"
    },
    "3634": {
      "op": "REVERT"
    },
    "3635": {
      "op": "JUMPDEST"
    },
    "3636": {
      "op": "PUSH2",
      "value": "0xE3C"
    },
    "3639": {
      "op": "DUP4"
    },
    "3640": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3643": {
      "jump": "i",
      "op": "JUMP"
    },
    "3644": {
      "op": "JUMPDEST"
    },
    "3645": {
      "op": "SWAP5"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3648": {
      "op": "SWAP4"
    },
    "3649": {
      "op": "SWAP1"
    },
    "3650": {
      "op": "SWAP4"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "op": "CALLDATALOAD"
    },
    "3653": {
      "op": "SWAP4"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "jump": "o",
      "op": "JUMP"
    },
    "3658": {
      "op": "JUMPDEST"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3663": {
      "op": "DUP3"
    },
    "3664": {
      "op": "DUP5"
    },
    "3665": {
      "op": "SUB"
    },
    "3666": {
      "op": "SLT"
    },
    "3667": {
      "op": "ISZERO"
    },
    "3668": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3671": {
      "op": "JUMPI"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3674": {
      "op": "DUP1"
    },
    "3675": {
      "op": "REVERT"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xB62"
    },
    "3680": {
      "op": "DUP3"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3684": {
      "jump": "i",
      "op": "JUMP"
    },
    "3685": {
      "op": "JUMPDEST"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3688": {
      "op": "DUP1"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3693": {
      "op": "DUP5"
    },
    "3694": {
      "op": "DUP7"
    },
    "3695": {
      "op": "SUB"
    },
    "3696": {
      "op": "SLT"
    },
    "3697": {
      "op": "ISZERO"
    },
    "3698": {
      "op": "PUSH2",
      "value": "0xE7A"
    },
    "3701": {
      "op": "JUMPI"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3704": {
      "op": "DUP1"
    },
    "3705": {
      "op": "REVERT"
    },
    "3706": {
      "op": "JUMPDEST"
    },
    "3707": {
      "op": "PUSH2",
      "value": "0xE83"
    },
    "3710": {
      "op": "DUP5"
    },
    "3711": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3714": {
      "jump": "i",
      "op": "JUMP"
    },
    "3715": {
      "op": "JUMPDEST"
    },
    "3716": {
      "op": "SWAP3"
    },
    "3717": {
      "op": "POP"
    },
    "3718": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3723": {
      "op": "DUP6"
    },
    "3724": {
      "op": "ADD"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3728": {
      "jump": "i",
      "op": "JUMP"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "SWAP2"
    },
    "3731": {
      "op": "POP"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3734": {
      "op": "DUP5"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "CALLDATALOAD"
    },
    "3737": {
      "op": "SWAP1"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "SWAP3"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "SWAP3"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "SWAP3"
    },
    "3744": {
      "jump": "o",
      "op": "JUMP"
    },
    "3745": {
      "op": "JUMPDEST"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3750": {
      "op": "DUP3"
    },
    "3751": {
      "op": "DUP5"
    },
    "3752": {
      "op": "SUB"
    },
    "3753": {
      "op": "SLT"
    },
    "3754": {
      "op": "ISZERO"
    },
    "3755": {
      "op": "PUSH2",
      "value": "0xEB3"
    },
    "3758": {
      "op": "JUMPI"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3761": {
      "op": "DUP1"
    },
    "3762": {
      "op": "REVERT"
    },
    "3763": {
      "op": "JUMPDEST"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "op": "CALLDATALOAD"
    },
    "3766": {
      "op": "SWAP2"
    },
    "3767": {
      "op": "SWAP1"
    },
    "3768": {
      "op": "POP"
    },
    "3769": {
      "jump": "o",
      "op": "JUMP"
    },
    "3770": {
      "op": "JUMPDEST"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3773": {
      "op": "DUP1"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3776": {
      "op": "DUP4"
    },
    "3777": {
      "op": "DUP6"
    },
    "3778": {
      "op": "SUB"
    },
    "3779": {
      "op": "SLT"
    },
    "3780": {
      "op": "ISZERO"
    },
    "3781": {
      "op": "PUSH2",
      "value": "0xECD"
    },
    "3784": {
      "op": "JUMPI"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3787": {
      "op": "DUP1"
    },
    "3788": {
      "op": "REVERT"
    },
    "3789": {
      "op": "JUMPDEST"
    },
    "3790": {
      "op": "PUSH2",
      "value": "0xED6"
    },
    "3793": {
      "op": "DUP4"
    },
    "3794": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3797": {
      "jump": "i",
      "op": "JUMP"
    },
    "3798": {
      "op": "JUMPDEST"
    },
    "3799": {
      "op": "SWAP2"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "PUSH2",
      "value": "0xEE4"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3806": {
      "op": "DUP5"
    },
    "3807": {
      "op": "ADD"
    },
    "3808": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3811": {
      "jump": "i",
      "op": "JUMP"
    },
    "3812": {
      "op": "JUMPDEST"
    },
    "3813": {
      "op": "SWAP1"
    },
    "3814": {
      "op": "POP"
    },
    "3815": {
      "op": "SWAP3"
    },
    "3816": {
      "op": "POP"
    },
    "3817": {
      "op": "SWAP3"
    },
    "3818": {
      "op": "SWAP1"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "jump": "o",
      "op": "JUMP"
    },
    "3821": {
      "op": "JUMPDEST"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3824": {
      "op": "DUP2"
    },
    "3825": {
      "op": "DUP2"
    },
    "3826": {
      "op": "SHR"
    },
    "3827": {
      "op": "SWAP1"
    },
    "3828": {
      "op": "DUP3"
    },
    "3829": {
      "op": "AND"
    },
    "3830": {
      "op": "DUP1"
    },
    "3831": {
      "op": "PUSH2",
      "value": "0xF01"
    },
    "3834": {
      "op": "JUMPI"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3837": {
      "op": "DUP3"
    },
    "3838": {
      "op": "AND"
    },
    "3839": {
      "op": "SWAP2"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "op": "JUMPDEST"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3844": {
      "op": "DUP3"
    },
    "3845": {
      "op": "LT"
    },
    "3846": {
      "op": "DUP2"
    },
    "3847": {
      "op": "EQ"
    },
    "3848": {
      "op": "ISZERO"
    },
    "3849": {
      "op": "PUSH2",
      "value": "0xF22"
    },
    "3852": {
      "op": "JUMPI"
    },
    "3853": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3860": {
      "op": "SHL"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3863": {
      "op": "MSTORE"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3868": {
      "op": "MSTORE"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3873": {
      "op": "REVERT"
    },
    "3874": {
      "op": "JUMPDEST"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "op": "SWAP2"
    },
    "3877": {
      "op": "SWAP1"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "jump": "o",
      "op": "JUMP"
    },
    "3880": {
      "op": "JUMPDEST"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3883": {
      "op": "DUP1"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "MSTORE"
    },
    "3886": {
      "op": "DUP2"
    },
    "3887": {
      "op": "DUP2"
    },
    "3888": {
      "op": "ADD"
    },
    "3889": {
      "op": "MSTORE"
    },
    "3890": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3925": {
      "op": "DUP3"
    },
    "3926": {
      "op": "ADD"
    },
    "3927": {
      "op": "MSTORE"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3930": {
      "op": "ADD"
    },
    "3931": {
      "op": "SWAP1"
    },
    "3932": {
      "jump": "o",
      "op": "JUMP"
    },
    "3933": {
      "op": "JUMPDEST"
    },
    "3934": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3941": {
      "op": "SHL"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3944": {
      "op": "MSTORE"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3949": {
      "op": "MSTORE"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3954": {
      "op": "REVERT"
    },
    "3955": {
      "op": "JUMPDEST"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3958": {
      "op": "DUP3"
    },
    "3959": {
      "op": "NOT"
    },
    "3960": {
      "op": "DUP3"
    },
    "3961": {
      "op": "GT"
    },
    "3962": {
      "op": "ISZERO"
    },
    "3963": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "3966": {
      "op": "JUMPI"
    },
    "3967": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "3970": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "3973": {
      "jump": "i",
      "op": "JUMP"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "POP"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "SWAP1"
    },
    "3978": {
      "jump": "o",
      "op": "JUMP"
    },
    "3979": {
      "op": "JUMPDEST"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3982": {
      "op": "DUP3"
    },
    "3983": {
      "op": "DUP3"
    },
    "3984": {
      "op": "LT"
    },
    "3985": {
      "op": "ISZERO"
    },
    "3986": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "3989": {
      "op": "JUMPI"
    },
    "3990": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "3993": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "3996": {
      "jump": "i",
      "op": "JUMP"
    },
    "3997": {
      "op": "JUMPDEST"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "op": "SUB"
    },
    "4000": {
      "op": "SWAP1"
    },
    "4001": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d41466416ae6fb368c97f0d15203f0983f645967",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\ncontract NICEToken is Ownable {\n    mapping(address => uint256) balances;\n\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n    mapping(address => bool) public validMinters;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    address public bridge;\n    uint256 public totalBurned;\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event MintersEdit(address minterAddress, bool status);\n    event SetBridge(address bridgeAddress);\n\n    // validMinters\n    modifier onlyMinter() {\n        require(validMinters[msg.sender], \"onlyMinters\");\n        _;\n    }\n\n    modifier onlyBridge() {\n        require(msg.sender == bridge, \"onlyBridge\");\n        _;\n    }\n\n    constructor(string memory tokenName, string memory tokenSymbol) {\n        _name = tokenName;\n        _symbol = tokenSymbol;\n        _decimals = 18;\n        bridge = msg.sender;\n        validMinters[msg.sender] = true; // owner can mint\n    }\n\n    //BEP 20 Functions\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {BEP20-totalSupply}.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {BEP20-balanceOf}.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {BEP20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-allowance}.\n     */\n    function allowance(address owner, address spender)\n        public\n        view\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {BEP20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {BEP20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()].sub(\n                amount,\n                \"BEP20: transfer amount exceeds allowance\"\n            )\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue)\n        public\n        returns (bool)\n    {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].add(addedValue)\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue)\n        public\n        returns (bool)\n    {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].sub(\n                subtractedValue,\n                \"BEP20: decreased allowance below zero\"\n            )\n        );\n        return true;\n    }\n\n    /// @notice burns from msg.sender's wallet, adds to totalBurned\n    /// @param amount is the amount to mint\n    function burn(uint256 amount) external {\n        _burn(msg.sender, amount);\n        totalBurned = totalBurned.add(amount);\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal {\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(\n            amount,\n            \"BEP20: transfer amount exceeds balance\"\n        );\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(\n            amount,\n            \"BEP20: burn amount exceeds balance\"\n        );\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal {\n        require(owner != address(0), \"BEP20: approve from the zero address\");\n        require(spender != address(0), \"BEP20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(\n            account,\n            _msgSender(),\n            _allowances[account][_msgSender()].sub(\n                amount,\n                \"BEP20: burn amount exceeds allowance\"\n            )\n        );\n    }\n\n    /**\n     * @dev Bridge and minter Functions\n     */\n\n    /// @notice Sets Bridge when it's ready. This is the bridge that will be able to use onlyBridge functions.\n    /// @param bridgeAddress is the address of the bridge on this chain\n    function setBridge(address bridgeAddress) public onlyOwner {\n        bridge = bridgeAddress;\n        emit SetBridge(bridge);\n    }\n\n    /// @notice mint function\n    /// @param account is the target address\n    /// @param amount is the amount to mint\n    function mint(address account, uint256 amount)\n        external\n        onlyMinter\n        returns (bool)\n    {\n        _mint(account, amount);\n        return true;\n    }\n\n    /// @notice Allows bridge to burn from its own wallet. User must be msg.sender.\n    /// @param account is the address of the bridge on this chain\n    /// @param amount is the amount to burn from sender wallet\n    function bridgeBurn(address account, uint256 amount)\n        external\n        onlyBridge\n        returns (bool)\n    {\n        _burn(account, amount);\n        return true;\n    }\n\n    /// @notice Allows bridge to burn from a user's wallet with previous approval\n    /// @param account is the address of the user that wants to transfer tokens\n    /// @param amount is the amount to burn from the user wallet. Must be <= than the amount approved by user.\n    function bridgeBurnFrom(address account, uint256 amount)\n        external\n        onlyBridge\n        returns (bool)\n    {\n        _burn(account, amount);\n        _approve(\n            account,\n            _msgSender(),\n            _allowances[account][_msgSender()].sub(\n                amount,\n                \"BEP20: burn amount exceeds allowance\"\n            )\n        );\n        return true;\n    }\n\n    /// @notice Allows owner to assign minter privileges to other addresses\n    /// @param newMinter is the address of desired minter\n    function toggleMinter(address newMinter) external onlyOwner {\n        validMinters[newMinter] = !validMinters[newMinter];\n        emit MintersEdit(newMinter, validMinters[newMinter]);\n    }\n}\n",
  "sourceMap": "220:11160:23:-:0;;;1235:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:12;921:18:0;:32::i;:::-;1309:17:23;;;;:5;;:17;;;;;:::i;:::-;-1:-1:-1;1336:21:23;;;;:7;;:21;;;;;:::i;:::-;-1:-1:-1;;1367:9:23;:14;;1400:10;1367:14;1391:19;;-1:-1:-1;;;;;;1391:19:23;;;;;;;1379:2;1391:19;;;;1367:9;1420:24;;;:12;:24;;;;;:31;;-1:-1:-1;;1420:31:23;1367:14;1420:31;;;-1:-1:-1;220:11160:23;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;220:11160:23:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;220:11160:23;;;-1:-1:-1;220:11160:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:33;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:33;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:33;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:33:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:33;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;220:11160:23;;;;;;",
  "sourcePath": "contracts/NICEToken.sol",
  "type": "contract"
}