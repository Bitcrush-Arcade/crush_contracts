{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "crushGodNft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stakingV2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_busd",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "data2",
          "type": "string"
        }
      ],
      "name": "LogEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "busd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nice",
          "type": "uint256"
        }
      ],
      "name": "NiceBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NiceClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        }
      ],
      "name": "SaleStarts",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "WhitelistStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_avail",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "busd",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "buyNice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRaised",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crushGod",
      "outputs": [
        {
          "internalType": "contract ERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxRaise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftUsed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "niceToken",
      "outputs": [
        {
          "internalType": "contract NICEToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDec",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pricePerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "qualify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_isQualified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "setNiceToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract StakingTest",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBought",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountBought",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOwed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vesting",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "whitelistSelf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "10": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "11": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "12": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "13": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Strings.sol",
    "14": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "16": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "2": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "23": "contracts/NICEToken.sol",
    "26": "contracts/PrevSale.sol",
    "28": "contracts/TestStaking2.sol",
    "3": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "6": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "7": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "8": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "9": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/PrevSale.sol",
    "exportedSymbols": {
      "Address": [
        12694
      ],
      "Context": [
        12716
      ],
      "ERC165": [
        14626
      ],
      "ERC20": [
        12296
      ],
      "ERC721": [
        14238
      ],
      "IERC165": [
        14638
      ],
      "IERC20": [
        12374
      ],
      "IERC20Metadata": [
        12399
      ],
      "IERC721": [
        14354
      ],
      "IERC721Metadata": [
        14399
      ],
      "IERC721Receiver": [
        14372
      ],
      "NICEToken": [
        7859
      ],
      "Ownable": [
        11128
      ],
      "PrevSale": [
        9523
      ],
      "ReentrancyGuard": [
        13306
      ],
      "SafeERC20": [
        11352
      ],
      "SafeMath": [
        11664
      ],
      "StakingTest": [
        11023
      ],
      "Strings": [
        14602
      ]
    },
    "id": 9524,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8897,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:26"
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8898,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9524,
        "sourceUnit": 11129,
        "src": "113:52:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 8899,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9524,
        "sourceUnit": 11665,
        "src": "166:57:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 8900,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9524,
        "sourceUnit": 14239,
        "src": "224:57:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 8901,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9524,
        "sourceUnit": 12297,
        "src": "282:55:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 8902,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9524,
        "sourceUnit": 11353,
        "src": "338:65:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 8903,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9524,
        "sourceUnit": 13307,
        "src": "404:62:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/NICEToken.sol",
        "file": "./NICEToken.sol",
        "id": 8904,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9524,
        "sourceUnit": 7860,
        "src": "467:25:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TestStaking2.sol",
        "file": "./TestStaking2.sol",
        "id": 8905,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9524,
        "sourceUnit": 11024,
        "src": "501:28:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8906,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11128,
              "src": "552:7:26"
            },
            "id": 8907,
            "nodeType": "InheritanceSpecifier",
            "src": "552:7:26"
          },
          {
            "baseName": {
              "id": 8908,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13306,
              "src": "561:15:26"
            },
            "id": 8909,
            "nodeType": "InheritanceSpecifier",
            "src": "561:15:26"
          }
        ],
        "canonicalName": "PrevSale",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9523,
        "linearizedBaseContracts": [
          9523,
          13306,
          11128,
          12716
        ],
        "name": "PrevSale",
        "nameLocation": "540:8:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8912,
            "libraryName": {
              "id": 8910,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11664,
              "src": "589:8:26"
            },
            "nodeType": "UsingForDirective",
            "src": "583:27:26",
            "typeName": {
              "id": 8911,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "602:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 8916,
            "libraryName": {
              "id": 8913,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11352,
              "src": "621:9:26"
            },
            "nodeType": "UsingForDirective",
            "src": "615:26:26",
            "typeName": {
              "id": 8915,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8914,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12296,
                "src": "635:5:26"
              },
              "referencedDeclaration": 12296,
              "src": "635:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$12296",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "3410fe6e",
            "id": 8919,
            "mutability": "constant",
            "name": "DIVISOR",
            "nameLocation": "671:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "647:39:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8917,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "647:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 8918,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "681:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PrevSale.Buy",
            "id": 8926,
            "members": [
              {
                "constant": false,
                "id": 8921,
                "mutability": "mutable",
                "name": "amountBought",
                "nameLocation": "722:12:26",
                "nodeType": "VariableDeclaration",
                "scope": 8926,
                "src": "714:20:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8920,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "714:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8923,
                "mutability": "mutable",
                "name": "amountClaimed",
                "nameLocation": "752:13:26",
                "nodeType": "VariableDeclaration",
                "scope": 8926,
                "src": "744:21:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8922,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "744:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8925,
                "mutability": "mutable",
                "name": "amountOwed",
                "nameLocation": "783:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 8926,
                "src": "775:18:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8924,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "775:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Buy",
            "nameLocation": "700:3:26",
            "nodeType": "StructDefinition",
            "scope": 9523,
            "src": "693:107:26",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ab0bcc41",
            "id": 8929,
            "mutability": "constant",
            "name": "saleStart",
            "nameLocation": "830:9:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "806:46:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8927,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31363435343031363030",
              "id": 8928,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "842:10:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1645401600_by_1",
                "typeString": "int_const 1645401600"
              },
              "value": "1645401600"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "c10b9358",
            "id": 8932,
            "mutability": "constant",
            "name": "saleEnd",
            "nameLocation": "882:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "858:44:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8930,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "858:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31363435363630383030",
              "id": 8931,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "892:10:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1645660800_by_1",
                "typeString": "int_const 1645660800"
              },
              "value": "1645660800"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1514617e",
            "id": 8935,
            "mutability": "constant",
            "name": "vestingDuration",
            "nameLocation": "932:15:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "908:49:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8933,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "908:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 8934,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "950:7:26",
              "subdenomination": "weeks",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1209600_by_1",
                "typeString": "int_const 1209600"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4cf088d9",
            "id": 8938,
            "mutability": "immutable",
            "name": "staking",
            "nameLocation": "992:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "963:36:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingTest_$11023",
              "typeString": "contract StakingTest"
            },
            "typeName": {
              "id": 8937,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8936,
                "name": "StakingTest",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11023,
                "src": "963:11:26"
              },
              "referencedDeclaration": 11023,
              "src": "963:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingTest_$11023",
                "typeString": "contract StakingTest"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3df62df0",
            "id": 8941,
            "mutability": "immutable",
            "name": "crushGod",
            "nameLocation": "1029:8:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1005:32:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721_$14238",
              "typeString": "contract ERC721"
            },
            "typeName": {
              "id": 8940,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8939,
                "name": "ERC721",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14238,
                "src": "1005:6:26"
              },
              "referencedDeclaration": 14238,
              "src": "1005:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$14238",
                "typeString": "contract ERC721"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eb04c9d7",
            "id": 8944,
            "mutability": "mutable",
            "name": "niceToken",
            "nameLocation": "1060:9:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1043:26:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NICEToken_$7859",
              "typeString": "contract NICEToken"
            },
            "typeName": {
              "id": 8943,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8942,
                "name": "NICEToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7859,
                "src": "1043:9:26"
              },
              "referencedDeclaration": 7859,
              "src": "1043:9:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NICEToken_$7859",
                "typeString": "contract NICEToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3ca5b234",
            "id": 8947,
            "mutability": "immutable",
            "name": "busd",
            "nameLocation": "1098:4:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1075:27:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$12296",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 8946,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8945,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12296,
                "src": "1075:5:26"
              },
              "referencedDeclaration": 12296,
              "src": "1075:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$12296",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ea4ce239",
            "id": 8950,
            "mutability": "mutable",
            "name": "totalSale",
            "nameLocation": "1123:9:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1108:41:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8948,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1108:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3236353935373435",
              "id": 8949,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1135:14:26",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_26595745000000000000000000_by_1",
                "typeString": "int_const 26595745000000000000000000"
              },
              "value": "26595745"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "44c63eec",
            "id": 8953,
            "mutability": "constant",
            "name": "vesting",
            "nameLocation": "1179:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1155:38:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8951,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1155:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32353030",
              "id": 8952,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1189:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2500_by_1",
                "typeString": "int_const 2500"
              },
              "value": "2500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "91433883",
            "id": 8956,
            "mutability": "mutable",
            "name": "priceDec",
            "nameLocation": "1214:8:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1199:31:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8954,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1199:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 8955,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1225:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b1b1de6",
            "id": 8959,
            "mutability": "mutable",
            "name": "pricePerToken",
            "nameLocation": "1251:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1236:33:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8957,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3437",
              "id": 8958,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1267:2:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_47_by_1",
                "typeString": "int_const 47"
              },
              "value": "47"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "719ec6b1",
            "id": 8962,
            "mutability": "mutable",
            "name": "maxRaise",
            "nameLocation": "1290:8:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1275:38:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8960,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1275:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313235303030",
              "id": 8961,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1301:12:26",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_125000000000000000000000_by_1",
                "typeString": "int_const 125000000000000000000000"
              },
              "value": "125000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5c4744c",
            "id": 8964,
            "mutability": "mutable",
            "name": "totalRaised",
            "nameLocation": "1334:11:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1319:26:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8963,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1319:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3ad10ef6",
            "id": 8966,
            "mutability": "immutable",
            "name": "devAddress",
            "nameLocation": "1377:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1352:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8965,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1352:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b19251a",
            "id": 8970,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "1429:9:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1394:44:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8969,
              "keyType": {
                "id": 8967,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1402:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1394:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8968,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1413:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "223d65d4",
            "id": 8974,
            "mutability": "mutable",
            "name": "nftUsed",
            "nameLocation": "1479:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1444:42:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 8973,
              "keyType": {
                "id": 8971,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1452:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1444:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 8972,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1463:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c4a717cf",
            "id": 8979,
            "mutability": "mutable",
            "name": "userBought",
            "nameLocation": "1523:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 9523,
            "src": "1492:41:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buy_$8926_storage_$",
              "typeString": "mapping(address => struct PrevSale.Buy)"
            },
            "typeName": {
              "id": 8978,
              "keyType": {
                "id": 8975,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1500:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1492:23:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buy_$8926_storage_$",
                "typeString": "mapping(address => struct PrevSale.Buy)"
              },
              "valueType": {
                "id": 8977,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8976,
                  "name": "Buy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8926,
                  "src": "1511:3:26"
                },
                "referencedDeclaration": 8926,
                "src": "1511:3:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                  "typeString": "struct PrevSale.Buy"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8983,
            "name": "WhitelistStarted",
            "nameLocation": "1560:16:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8981,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1582:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 8983,
                  "src": "1577:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8980,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1576:13:26"
            },
            "src": "1554:36:26"
          },
          {
            "anonymous": false,
            "id": 8987,
            "name": "SaleStarts",
            "nameLocation": "1601:10:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8985,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startBlock",
                  "nameLocation": "1620:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 8987,
                  "src": "1612:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1611:20:26"
            },
            "src": "1595:37:26"
          },
          {
            "anonymous": false,
            "id": 8995,
            "name": "NiceBought",
            "nameLocation": "1643:10:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8989,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1670:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 8995,
                  "src": "1654:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "busd",
                  "nameLocation": "1685:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 8995,
                  "src": "1677:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8993,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nice",
                  "nameLocation": "1699:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 8995,
                  "src": "1691:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1653:51:26"
            },
            "src": "1637:68:26"
          },
          {
            "anonymous": false,
            "id": 9001,
            "name": "NiceClaimed",
            "nameLocation": "1716:11:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8997,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1744:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9001,
                  "src": "1728:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8999,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1759:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9001,
                  "src": "1751:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1727:39:26"
            },
            "src": "1710:57:26"
          },
          {
            "anonymous": false,
            "id": 9007,
            "name": "LogEvent",
            "nameLocation": "1778:8:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9003,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data1",
                  "nameLocation": "1795:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9007,
                  "src": "1787:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9005,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data2",
                  "nameLocation": "1809:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9007,
                  "src": "1802:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9004,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1786:29:26"
            },
            "src": "1772:44:26"
          },
          {
            "body": {
              "id": 9038,
              "nodeType": "Block",
              "src": "1919:183:26",
              "statements": [
                {
                  "expression": {
                    "id": 9020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9016,
                      "name": "crushGod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8941,
                      "src": "1929:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$14238",
                        "typeString": "contract ERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9018,
                          "name": "crushGodNft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9009,
                          "src": "1947:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9017,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14238,
                        "src": "1940:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$14238_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 9019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1940:19:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$14238",
                        "typeString": "contract ERC721"
                      }
                    },
                    "src": "1929:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$14238",
                      "typeString": "contract ERC721"
                    }
                  },
                  "id": 9021,
                  "nodeType": "ExpressionStatement",
                  "src": "1929:30:26"
                },
                {
                  "expression": {
                    "id": 9026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9022,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8938,
                      "src": "1969:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingTest_$11023",
                        "typeString": "contract StakingTest"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9024,
                          "name": "stakingV2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9011,
                          "src": "1991:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9023,
                        "name": "StakingTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11023,
                        "src": "1979:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingTest_$11023_$",
                          "typeString": "type(contract StakingTest)"
                        }
                      },
                      "id": 9025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1979:22:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingTest_$11023",
                        "typeString": "contract StakingTest"
                      }
                    },
                    "src": "1969:32:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingTest_$11023",
                      "typeString": "contract StakingTest"
                    }
                  },
                  "id": 9027,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:32:26"
                },
                {
                  "expression": {
                    "id": 9032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9028,
                      "name": "busd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8947,
                      "src": "2011:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$12296",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9030,
                          "name": "_busd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9013,
                          "src": "2024:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9029,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12296,
                        "src": "2018:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$12296_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 9031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2018:12:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$12296",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2011:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$12296",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 9033,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:19:26"
                },
                {
                  "expression": {
                    "id": 9036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9034,
                      "name": "devAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8966,
                      "src": "2040:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307841446462324235396431423738326538333932456530336437453263456141323430653766316330",
                      "id": 9035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2053:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xADdb2B59d1B782e8392Ee03d7E2cEaA240e7f1c0"
                    },
                    "src": "2040:55:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9037,
                  "nodeType": "ExpressionStatement",
                  "src": "2040:55:26"
                }
              ]
            },
            "id": 9039,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9009,
                  "mutability": "mutable",
                  "name": "crushGodNft",
                  "nameLocation": "1851:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9039,
                  "src": "1843:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9011,
                  "mutability": "mutable",
                  "name": "stakingV2",
                  "nameLocation": "1880:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9039,
                  "src": "1872:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9013,
                  "mutability": "mutable",
                  "name": "_busd",
                  "nameLocation": "1907:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9039,
                  "src": "1899:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:85:26"
            },
            "returnParameters": {
              "id": 9015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1919:0:26"
            },
            "scope": 9523,
            "src": "1822:280:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9071,
              "nodeType": "Block",
              "src": "2302:193:26",
              "statements": [
                {
                  "assignments": [
                    null,
                    9046,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 9046,
                      "mutability": "mutable",
                      "name": "staked",
                      "nameLocation": "2323:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 9071,
                      "src": "2315:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9045,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2315:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 9052,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2364:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2364:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9047,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8938,
                        "src": "2347:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingTest_$11023",
                          "typeString": "contract StakingTest"
                        }
                      },
                      "id": 9048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10978,
                      "src": "2347:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 9051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:28:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2312:63:26"
                },
                {
                  "assignments": [
                    9054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9054,
                      "mutability": "mutable",
                      "name": "nfts",
                      "nameLocation": "2393:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 9071,
                      "src": "2385:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2385:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9060,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9057,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2419:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2419:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9055,
                        "name": "crushGod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8941,
                        "src": "2400:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$14238",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 9056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "2400:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2400:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2385:45:26"
                },
                {
                  "expression": {
                    "id": 9069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9061,
                      "name": "_isQualified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9043,
                      "src": "2440:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 9068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9062,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9054,
                          "src": "2455:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2462:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2455:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9065,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9046,
                          "src": "2467:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 9066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2477:11:26",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000000"
                          },
                          "value": "10000"
                        },
                        "src": "2467:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2455:33:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2440:48:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9070,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:48:26"
                }
              ]
            },
            "documentation": {
              "id": 9040,
              "nodeType": "StructuredDocumentation",
              "src": "2108:130:26",
              "text": "@notice qualify only checks quantity\n @dev qualify is an overlook of the amount of CrushGod NFTs held and tokens staked"
            },
            "functionSelector": "d862bcf5",
            "id": 9072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "qualify",
            "nameLocation": "2252:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2259:2:26"
            },
            "returnParameters": {
              "id": 9044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9043,
                  "mutability": "mutable",
                  "name": "_isQualified",
                  "nameLocation": "2288:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9072,
                  "src": "2283:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9042,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2283:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2282:19:26"
            },
            "scope": 9523,
            "src": "2243:252:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9135,
              "nodeType": "Block",
              "src": "2730:384:26",
              "statements": [
                {
                  "assignments": [
                    9079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9079,
                      "mutability": "mutable",
                      "name": "isQualified",
                      "nameLocation": "2745:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 9135,
                      "src": "2740:16:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9078,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2740:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9082,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9080,
                      "name": "qualify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9072,
                      "src": "2759:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 9081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:9:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2740:28:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9084,
                        "name": "isQualified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9079,
                        "src": "2786:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e7175616c6966696564",
                        "id": 9085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2799:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a8fe4fd634171e71c6d431eb7c81eea9dfe879ba24a7ee5ef51070df55bbff2",
                          "typeString": "literal_string \"Unqualified\""
                        },
                        "value": "Unqualified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a8fe4fd634171e71c6d431eb7c81eea9dfe879ba24a7ee5ef51070df55bbff2",
                          "typeString": "literal_string \"Unqualified\""
                        }
                      ],
                      "id": 9083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2778:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9087,
                  "nodeType": "ExpressionStatement",
                  "src": "2778:35:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9089,
                            "name": "whitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8970,
                            "src": "2831:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 9092,
                          "indexExpression": {
                            "expression": {
                              "id": 9090,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2841:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2841:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2831:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2856:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2831:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792077686974656c6973746564",
                        "id": 9095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2859:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
                          "typeString": "literal_string \"Already whitelisted\""
                        },
                        "value": "Already whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
                          "typeString": "literal_string \"Already whitelisted\""
                        }
                      ],
                      "id": 9088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2823:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2823:58:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9097,
                  "nodeType": "ExpressionStatement",
                  "src": "2823:58:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9099,
                            "name": "nftUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8974,
                            "src": "2899:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 9101,
                          "indexExpression": {
                            "id": 9100,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9075,
                            "src": "2907:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2899:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2927:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2919:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9102,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2919:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2919:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2899:30:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616c72656164792075736564",
                        "id": 9107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2931:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_930952802130a1f93a920fc20d1afe5aa29d2c67a6a89a44b9f87980f51c1241",
                          "typeString": "literal_string \"Token already used\""
                        },
                        "value": "Token already used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_930952802130a1f93a920fc20d1afe5aa29d2c67a6a89a44b9f87980f51c1241",
                          "typeString": "literal_string \"Token already used\""
                        }
                      ],
                      "id": 9098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2891:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2891:61:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9109,
                  "nodeType": "ExpressionStatement",
                  "src": "2891:61:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9113,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9075,
                              "src": "2987:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 9111,
                              "name": "crushGod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8941,
                              "src": "2970:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$14238",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 9112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13518,
                            "src": "2970:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 9114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2970:25:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2999:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2999:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2970:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496c6c6567616c206f776e6572",
                        "id": 9118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3011:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57223e5b7b3bb59088372def1de301bb6716abbf63b28c91d838efd47f3b862d",
                          "typeString": "literal_string \"Illegal owner\""
                        },
                        "value": "Illegal owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57223e5b7b3bb59088372def1de301bb6716abbf63b28c91d838efd47f3b862d",
                          "typeString": "literal_string \"Illegal owner\""
                        }
                      ],
                      "id": 9110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2962:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2962:65:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9120,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:65:26"
                },
                {
                  "expression": {
                    "id": 9126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9121,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8970,
                        "src": "3037:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 9124,
                      "indexExpression": {
                        "expression": {
                          "id": 9122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3047:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3047:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3037:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9125,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9075,
                      "src": "3061:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3037:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9127,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:31:26"
                },
                {
                  "expression": {
                    "id": 9133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9128,
                        "name": "nftUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8974,
                        "src": "3078:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 9130,
                      "indexExpression": {
                        "id": 9129,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9075,
                        "src": "3086:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3078:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9131,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3097:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3097:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3078:29:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9134,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:29:26"
                }
              ]
            },
            "documentation": {
              "id": 9073,
              "nodeType": "StructuredDocumentation",
              "src": "2501:177:26",
              "text": "@notice user will need to self whitelist prior to the sale\n @param tokenId the NFT Id to register with\n @dev once whitelisted, the token locked to that wallet."
            },
            "functionSelector": "f78213e3",
            "id": 9136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whitelistSelf",
            "nameLocation": "2692:13:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9075,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2714:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9136,
                  "src": "2706:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2706:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2705:17:26"
            },
            "returnParameters": {
              "id": 9077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2730:0:26"
            },
            "scope": 9523,
            "src": "2683:431:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9162,
              "nodeType": "Block",
              "src": "3184:125:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9146,
                              "name": "niceToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8944,
                              "src": "3210:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NICEToken_$7859",
                                "typeString": "contract NICEToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NICEToken_$7859",
                                "typeString": "contract NICEToken"
                              }
                            ],
                            "id": 9145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3202:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9144,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3202:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3202:18:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3232:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3224:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9148,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3224:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3224:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3202:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "244e49434520616c726561647920736574",
                        "id": 9153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3236:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a620f4cf2247be8aa2ae74d3c572558240e687573dadf0029b117ad203067dd",
                          "typeString": "literal_string \"$NICE already set\""
                        },
                        "value": "$NICE already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a620f4cf2247be8aa2ae74d3c572558240e687573dadf0029b117ad203067dd",
                          "typeString": "literal_string \"$NICE already set\""
                        }
                      ],
                      "id": 9143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3194:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3194:62:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9155,
                  "nodeType": "ExpressionStatement",
                  "src": "3194:62:26"
                },
                {
                  "expression": {
                    "id": 9160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9156,
                      "name": "niceToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8944,
                      "src": "3266:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NICEToken_$7859",
                        "typeString": "contract NICEToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9158,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9138,
                          "src": "3288:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9157,
                        "name": "NICEToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7859,
                        "src": "3278:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NICEToken_$7859_$",
                          "typeString": "type(contract NICEToken)"
                        }
                      },
                      "id": 9159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3278:24:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NICEToken_$7859",
                        "typeString": "contract NICEToken"
                      }
                    },
                    "src": "3266:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NICEToken_$7859",
                      "typeString": "contract NICEToken"
                    }
                  },
                  "id": 9161,
                  "nodeType": "ExpressionStatement",
                  "src": "3266:36:26"
                }
              ]
            },
            "functionSelector": "055ef013",
            "id": 9163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9140,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "3174:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3174:9:26"
              }
            ],
            "name": "setNiceToken",
            "nameLocation": "3129:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9138,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3150:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9163,
                  "src": "3142:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3141:23:26"
            },
            "returnParameters": {
              "id": 9142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3184:0:26"
            },
            "scope": 9523,
            "src": "3120:189:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9313,
              "nodeType": "Block",
              "src": "3615:1149:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 9174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3645:7:26",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 9172,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9166,
                              "src": "3633:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 9173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11588,
                            "src": "3633:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 9175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3633:20:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3657:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3633:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457861637420616d6f756e7473206f6e6c79",
                        "id": 9178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3660:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8d40a681e43c0ed0901db3eaae0ebae50f8fdaaa6fbcb81b287c23c2b6e96ef",
                          "typeString": "literal_string \"Exact amounts only\""
                        },
                        "value": "Exact amounts only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8d40a681e43c0ed0901db3eaae0ebae50f8fdaaa6fbcb81b287c23c2b6e96ef",
                          "typeString": "literal_string \"Exact amounts only\""
                        }
                      ],
                      "id": 9171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3625:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3625:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9180,
                  "nodeType": "ExpressionStatement",
                  "src": "3625:56:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9182,
                            "name": "whitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8970,
                            "src": "3699:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 9185,
                          "indexExpression": {
                            "expression": {
                              "id": 9183,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3709:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3709:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3699:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3723:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3699:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206f6e6c79",
                        "id": 9188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3726:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2402f06bb4bedceb2556ac43db94a07afdbe087bb6ea32f5f654a4cc686ff8d",
                          "typeString": "literal_string \"Whitelist only\""
                        },
                        "value": "Whitelist only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2402f06bb4bedceb2556ac43db94a07afdbe087bb6ea32f5f654a4cc686ff8d",
                          "typeString": "literal_string \"Whitelist only\""
                        }
                      ],
                      "id": 9181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3691:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3691:52:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9190,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:52:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9192,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3761:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 9193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3761:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 9194,
                          "name": "saleEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8932,
                          "src": "3779:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3761:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616c65456e646564",
                        "id": 9196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3788:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3954a22f347bb347fd71a4015a2f1d0ddeda0dad905175d4f43ff92372f445d7",
                          "typeString": "literal_string \"SaleEnded\""
                        },
                        "value": "SaleEnded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3954a22f347bb347fd71a4015a2f1d0ddeda0dad905175d4f43ff92372f445d7",
                          "typeString": "literal_string \"SaleEnded\""
                        }
                      ],
                      "id": 9191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3753:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3753:47:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9198,
                  "nodeType": "ExpressionStatement",
                  "src": "3753:47:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9200,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9166,
                          "src": "3818:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 9201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3829:9:26",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100"
                        },
                        "src": "3818:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d756d206e6f74206d6574",
                        "id": 9203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3840:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af4e754ea1c260eb24364a8f103735068bd7691ac08c6293d2846bbff5a051a3",
                          "typeString": "literal_string \"Minimum not met\""
                        },
                        "value": "Minimum not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af4e754ea1c260eb24364a8f103735068bd7691ac08c6293d2846bbff5a051a3",
                          "typeString": "literal_string \"Minimum not met\""
                        }
                      ],
                      "id": 9199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3810:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3810:48:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9205,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:48:26"
                },
                {
                  "assignments": [
                    9208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9208,
                      "mutability": "mutable",
                      "name": "userInfo",
                      "nameLocation": "3880:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 9313,
                      "src": "3868:20:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                        "typeString": "struct PrevSale.Buy"
                      },
                      "typeName": {
                        "id": 9207,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9206,
                          "name": "Buy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8926,
                          "src": "3868:3:26"
                        },
                        "referencedDeclaration": 8926,
                        "src": "3868:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                          "typeString": "struct PrevSale.Buy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9213,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9209,
                      "name": "userBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8979,
                      "src": "3891:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buy_$8926_storage_$",
                        "typeString": "mapping(address => struct PrevSale.Buy storage ref)"
                      }
                    },
                    "id": 9212,
                    "indexExpression": {
                      "expression": {
                        "id": 9210,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3902:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3902:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3891:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Buy_$8926_storage",
                      "typeString": "struct PrevSale.Buy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3868:45:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9215,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9166,
                            "src": "3944:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "35303030",
                            "id": 9216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3955:10:26",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5000000000000000000000_by_1",
                              "typeString": "int_const 5000000000000000000000"
                            },
                            "value": "5000"
                          },
                          "src": "3944:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 9220,
                                  "name": "userInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9208,
                                  "src": "3997:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                                    "typeString": "struct PrevSale.Buy storage pointer"
                                  }
                                },
                                "id": 9221,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountBought",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8921,
                                "src": "3997:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9218,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9166,
                                "src": "3985:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "3985:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3985:34:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "35303030",
                            "id": 9223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4023:10:26",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5000000000000000000000_by_1",
                              "typeString": "int_const 5000000000000000000000"
                            },
                            "value": "5000"
                          },
                          "src": "3985:48:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3944:89:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436170206f766572666c6f77",
                        "id": 9226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4047:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8afd431b921cf9f469b1e66255d37c12c06dcf38e3fc2977ee4e90b10f4e564",
                          "typeString": "literal_string \"Cap overflow\""
                        },
                        "value": "Cap overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8afd431b921cf9f469b1e66255d37c12c06dcf38e3fc2977ee4e90b10f4e564",
                          "typeString": "literal_string \"Cap overflow\""
                        }
                      ],
                      "id": 9214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3923:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3923:148:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9228,
                  "nodeType": "ExpressionStatement",
                  "src": "3923:148:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9230,
                          "name": "totalRaised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8964,
                          "src": "4089:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 9231,
                          "name": "maxRaise",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8962,
                          "src": "4103:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4089:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696d6974204578636565646564",
                        "id": 9233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4113:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df4e07bf933827966d35572534885d0adcbe59958d5e0db396bc4c98786ca83e",
                          "typeString": "literal_string \"Limit Exceeded\""
                        },
                        "value": "Limit Exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df4e07bf933827966d35572534885d0adcbe59958d5e0db396bc4c98786ca83e",
                          "typeString": "literal_string \"Limit Exceeded\""
                        }
                      ],
                      "id": 9229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4081:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4081:49:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9235,
                  "nodeType": "ExpressionStatement",
                  "src": "4081:49:26"
                },
                {
                  "assignments": [
                    9237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9237,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4148:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 9313,
                      "src": "4140:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9236,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4140:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9239,
                  "initialValue": {
                    "id": 9238,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9166,
                    "src": "4157:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4140:24:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 9242,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "4247:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 9240,
                          "name": "totalRaised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8964,
                          "src": "4231:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "4231:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4231:23:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 9244,
                      "name": "maxRaise",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8962,
                      "src": "4257:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4231:34:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9254,
                  "nodeType": "IfStatement",
                  "src": "4227:99:26",
                  "trueBody": {
                    "id": 9253,
                    "nodeType": "Block",
                    "src": "4267:59:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 9251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9246,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9237,
                            "src": "4281:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 9249,
                                "name": "totalRaised",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8964,
                                "src": "4303:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9247,
                                "name": "maxRaise",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8962,
                                "src": "4290:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "4290:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4290:25:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4281:34:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9252,
                        "nodeType": "ExpressionStatement",
                        "src": "4281:34:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9258,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4358:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4358:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9262,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4378:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrevSale_$9523",
                              "typeString": "contract PrevSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrevSale_$9523",
                              "typeString": "contract PrevSale"
                            }
                          ],
                          "id": 9261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4370:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9260,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4370:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4370:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9264,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "4385:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9255,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8947,
                        "src": "4336:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12296",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 9257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11185,
                      "src": "4336:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 9265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9266,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:56:26"
                },
                {
                  "expression": {
                    "id": 9281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9267,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9208,
                        "src": "4402:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                          "typeString": "struct PrevSale.Buy storage pointer"
                        }
                      },
                      "id": 9269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8925,
                      "src": "4402:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 9278,
                              "name": "pricePerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8959,
                              "src": "4486:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 9275,
                                  "name": "priceDec",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8956,
                                  "src": "4472:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 9273,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9237,
                                  "src": "4461:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 9274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "4461:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 9276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4461:20:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 9277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "4461:24:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 9279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4461:39:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 9270,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9208,
                            "src": "4424:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                              "typeString": "struct PrevSale.Buy storage pointer"
                            }
                          },
                          "id": 9271,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOwed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8925,
                          "src": "4424:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "4424:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4424:86:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4402:108:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9282,
                  "nodeType": "ExpressionStatement",
                  "src": "4402:108:26"
                },
                {
                  "expression": {
                    "id": 9291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9283,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9208,
                        "src": "4520:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                          "typeString": "struct PrevSale.Buy storage pointer"
                        }
                      },
                      "id": 9285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountBought",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8921,
                      "src": "4520:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9289,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "4570:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 9286,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9208,
                            "src": "4544:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                              "typeString": "struct PrevSale.Buy storage pointer"
                            }
                          },
                          "id": 9287,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountBought",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8921,
                          "src": "4544:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "4544:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4544:33:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4520:57:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9292,
                  "nodeType": "ExpressionStatement",
                  "src": "4520:57:26"
                },
                {
                  "expression": {
                    "id": 9298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9293,
                      "name": "totalRaised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8964,
                      "src": "4587:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9296,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "4617:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 9294,
                          "name": "totalRaised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8964,
                          "src": "4601:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "4601:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4601:23:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4587:37:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9299,
                  "nodeType": "ExpressionStatement",
                  "src": "4587:37:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9301,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4664:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4664:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9303,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "4688:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9309,
                            "name": "pricePerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8959,
                            "src": "4733:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9306,
                                "name": "priceDec",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8956,
                                "src": "4719:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9304,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9237,
                                "src": "4708:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11558,
                              "src": "4708:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4708:20:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 9308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11573,
                          "src": "4708:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 9310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4708:39:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9300,
                      "name": "NiceBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8995,
                      "src": "4640:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 9311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4640:117:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9312,
                  "nodeType": "EmitStatement",
                  "src": "4635:122:26"
                }
              ]
            },
            "documentation": {
              "id": 9164,
              "nodeType": "StructuredDocumentation",
              "src": "3315:239:26",
              "text": "@notice Reserve NICE allocation with BUSD\n @param _amount Amount of BUSD to lock NICE amount\n @dev minimum of $100 BUSD, max of $5K BUSD\n @dev if maxRaise is exceeded we will allocate just a portion of that amount."
            },
            "functionSelector": "9181951b",
            "id": 9314,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9168,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13305,
                  "src": "3602:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3602:12:26"
              }
            ],
            "name": "buyNice",
            "nameLocation": "3568:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9166,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3584:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9314,
                  "src": "3576:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3576:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3575:17:26"
            },
            "returnParameters": {
              "id": 9170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3615:0:26"
            },
            "scope": 9523,
            "src": "3559:1205:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9336,
              "nodeType": "Block",
              "src": "4820:126:26",
              "statements": [
                {
                  "assignments": [
                    9320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9320,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nameLocation": "4838:14:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 9336,
                      "src": "4830:22:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4830:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9328,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9325,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4878:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrevSale_$9523",
                              "typeString": "contract PrevSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrevSale_$9523",
                              "typeString": "contract PrevSale"
                            }
                          ],
                          "id": 9324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4870:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9323,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4870:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4870:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9321,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8947,
                        "src": "4855:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12296",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 9322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11807,
                      "src": "4855:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:29:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4830:54:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9332,
                        "name": "devAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8966,
                        "src": "4912:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9333,
                        "name": "currentBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9320,
                        "src": "4924:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9329,
                        "name": "busd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8947,
                        "src": "4894:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12296",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 9331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "4894:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 9334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4894:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9335,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:45:26"
                }
              ]
            },
            "functionSelector": "e52a7e24",
            "id": 9337,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9317,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9316,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "4810:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "4810:9:26"
              }
            ],
            "name": "claimRaised",
            "nameLocation": "4787:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4798:2:26"
            },
            "returnParameters": {
              "id": 9318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4820:0:26"
            },
            "scope": 9523,
            "src": "4778:168:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9435,
              "nodeType": "Block",
              "src": "5148:742:26",
              "statements": [
                {
                  "assignments": [
                    9345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9345,
                      "mutability": "mutable",
                      "name": "userInfo",
                      "nameLocation": "5170:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 9435,
                      "src": "5158:20:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                        "typeString": "struct PrevSale.Buy"
                      },
                      "typeName": {
                        "id": 9344,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9343,
                          "name": "Buy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8926,
                          "src": "5158:3:26"
                        },
                        "referencedDeclaration": 8926,
                        "src": "5158:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                          "typeString": "struct PrevSale.Buy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9350,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9346,
                      "name": "userBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8979,
                      "src": "5181:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buy_$8926_storage_$",
                        "typeString": "mapping(address => struct PrevSale.Buy storage ref)"
                      }
                    },
                    "id": 9349,
                    "indexExpression": {
                      "expression": {
                        "id": 9347,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5192:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5192:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5181:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Buy_$8926_storage",
                      "typeString": "struct PrevSale.Buy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5158:45:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9352,
                            "name": "saleEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8932,
                            "src": "5234:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5244:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5234:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9355,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5249:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 9356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5249:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 9359,
                                "name": "vestingDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8935,
                                "src": "5279:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9357,
                                "name": "saleEnd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8932,
                                "src": "5267:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "5267:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5267:28:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5249:46:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5234:61:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d20556e617661696c61626c65",
                        "id": 9363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5309:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b9c0acc23fedd784d51e01ef9182f06ea44495bf5f4e202689c37e0cd25c752",
                          "typeString": "literal_string \"Claim Unavailable\""
                        },
                        "value": "Claim Unavailable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b9c0acc23fedd784d51e01ef9182f06ea44495bf5f4e202689c37e0cd25c752",
                          "typeString": "literal_string \"Claim Unavailable\""
                        }
                      ],
                      "id": 9351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5213:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5213:125:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9365,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:125:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9369,
                              "name": "niceToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8944,
                              "src": "5364:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NICEToken_$7859",
                                "typeString": "contract NICEToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NICEToken_$7859",
                                "typeString": "contract NICEToken"
                              }
                            ],
                            "id": 9368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5356:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9367,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5356:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5356:18:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5386:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5378:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9371,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5378:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5378:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5356:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e204e6f74206164646564",
                        "id": 9376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5390:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ac4949265c603ac257a04c38ba78bd7e25e539a3804d6cf20365c29dcf8ba09",
                          "typeString": "literal_string \"Token Not added\""
                        },
                        "value": "Token Not added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ac4949265c603ac257a04c38ba78bd7e25e539a3804d6cf20365c29dcf8ba09",
                          "typeString": "literal_string \"Token Not added\""
                        }
                      ],
                      "id": 9366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5348:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5348:60:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9378,
                  "nodeType": "ExpressionStatement",
                  "src": "5348:60:26"
                },
                {
                  "assignments": [
                    9380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9380,
                      "mutability": "mutable",
                      "name": "claimable",
                      "nameLocation": "5426:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 9435,
                      "src": "5418:17:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5418:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9383,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9381,
                      "name": "availableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9522,
                      "src": "5438:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 9382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5438:17:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5418:37:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9385,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9345,
                            "src": "5473:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                              "typeString": "struct PrevSale.Buy storage pointer"
                            }
                          },
                          "id": 9386,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountClaimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8923,
                          "src": "5473:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 9387,
                          "name": "claimable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9380,
                          "src": "5498:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5473:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920636c61696d6564",
                        "id": 9389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5509:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
                          "typeString": "literal_string \"Already claimed\""
                        },
                        "value": "Already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
                          "typeString": "literal_string \"Already claimed\""
                        }
                      ],
                      "id": 9384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5465:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5465:62:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9391,
                  "nodeType": "ExpressionStatement",
                  "src": "5465:62:26"
                },
                {
                  "expression": {
                    "id": 9398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9392,
                      "name": "claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9380,
                      "src": "5597:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 9395,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9345,
                            "src": "5623:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                              "typeString": "struct PrevSale.Buy storage pointer"
                            }
                          },
                          "id": 9396,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountClaimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8923,
                          "src": "5623:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 9393,
                          "name": "claimable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9380,
                          "src": "5609:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "5609:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5609:37:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5597:49:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9399,
                  "nodeType": "ExpressionStatement",
                  "src": "5597:49:26"
                },
                {
                  "expression": {
                    "id": 9408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9400,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9345,
                        "src": "5656:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                          "typeString": "struct PrevSale.Buy storage pointer"
                        }
                      },
                      "id": 9402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8923,
                      "src": "5656:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9406,
                          "name": "claimable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9380,
                          "src": "5708:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 9403,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9345,
                            "src": "5681:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                              "typeString": "struct PrevSale.Buy storage pointer"
                            }
                          },
                          "id": 9404,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountClaimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8923,
                          "src": "5681:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "5681:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5681:37:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5656:62:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9409,
                  "nodeType": "ExpressionStatement",
                  "src": "5656:62:26"
                },
                {
                  "expression": {
                    "id": 9419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9410,
                      "name": "claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9380,
                      "src": "5728:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9417,
                          "name": "DIVISOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8919,
                          "src": "5779:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 9414,
                              "name": "claimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9380,
                              "src": "5764:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 9411,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9345,
                                "src": "5740:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Buy_$8926_storage_ptr",
                                  "typeString": "struct PrevSale.Buy storage pointer"
                                }
                              },
                              "id": 9412,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amountOwed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8925,
                              "src": "5740:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 9413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11558,
                            "src": "5740:23:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 9415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5740:34:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11573,
                        "src": "5740:38:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5740:47:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5728:59:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9420,
                  "nodeType": "ExpressionStatement",
                  "src": "5728:59:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5812:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5812:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9426,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9380,
                        "src": "5824:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9421,
                        "name": "niceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8944,
                        "src": "5797:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NICEToken_$7859",
                          "typeString": "contract NICEToken"
                        }
                      },
                      "id": 9423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7777,
                      "src": "5797:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5797:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9428,
                  "nodeType": "ExpressionStatement",
                  "src": "5797:37:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9430,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5861:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5861:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9432,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9380,
                        "src": "5873:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9429,
                      "name": "NiceClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9001,
                      "src": "5849:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:34:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9434,
                  "nodeType": "EmitStatement",
                  "src": "5844:39:26"
                }
              ]
            },
            "documentation": {
              "id": 9338,
              "nodeType": "StructuredDocumentation",
              "src": "4952:146:26",
              "text": "@notice function that gets available tokens to the user.\n @dev transfers NICE to the user directly by minting straight to their wallets"
            },
            "functionSelector": "48c54b9d",
            "id": 9436,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9340,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13305,
                  "src": "5135:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "5135:12:26"
              }
            ],
            "name": "claimTokens",
            "nameLocation": "5112:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5123:2:26"
            },
            "returnParameters": {
              "id": 9342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5148:0:26"
            },
            "scope": 9523,
            "src": "5103:787:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9521,
              "nodeType": "Block",
              "src": "6154:534:26",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9442,
                        "name": "saleEnd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8932,
                        "src": "6168:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 9443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6178:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6168:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 9445,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6183:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 9446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6183:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 9447,
                        "name": "saleEnd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8932,
                        "src": "6201:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6183:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6168:40:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9520,
                  "nodeType": "IfStatement",
                  "src": "6164:518:26",
                  "trueBody": {
                    "id": 9519,
                    "nodeType": "Block",
                    "src": "6210:472:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9450,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6228:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 9451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6228:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 9454,
                                "name": "vestingDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8935,
                                "src": "6258:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9452,
                                "name": "saleEnd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8932,
                                "src": "6246:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "6246:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6246:28:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6228:46:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9464,
                        "nodeType": "IfStatement",
                        "src": "6224:96:26",
                        "trueBody": {
                          "expression": {
                            "id": 9462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 9457,
                              "name": "_avail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9440,
                              "src": "6292:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 9460,
                                  "name": "vesting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8953,
                                  "src": "6312:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 9458,
                                  "name": "_avail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9440,
                                  "src": "6301:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 9459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11528,
                                "src": "6301:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 9461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6301:19:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6292:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 9463,
                          "nodeType": "ExpressionStatement",
                          "src": "6292:28:26"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9465,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6338:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 9466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6338:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 9471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6388:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "expression": {
                                    "id": 9469,
                                    "name": "vestingDuration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8935,
                                    "src": "6368:15:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 9470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11558,
                                  "src": "6368:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 9472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6368:22:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9467,
                                "name": "saleEnd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8932,
                                "src": "6356:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "6356:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6356:35:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6338:53:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9482,
                        "nodeType": "IfStatement",
                        "src": "6334:103:26",
                        "trueBody": {
                          "expression": {
                            "id": 9480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 9475,
                              "name": "_avail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9440,
                              "src": "6409:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 9478,
                                  "name": "vesting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8953,
                                  "src": "6429:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 9476,
                                  "name": "_avail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9440,
                                  "src": "6418:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 9477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11528,
                                "src": "6418:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 9479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6418:19:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6409:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 9481,
                          "nodeType": "ExpressionStatement",
                          "src": "6409:28:26"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9483,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6455:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 9484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6455:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "33",
                                    "id": 9489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6505:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    }
                                  ],
                                  "expression": {
                                    "id": 9487,
                                    "name": "vestingDuration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8935,
                                    "src": "6485:15:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 9488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11558,
                                  "src": "6485:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 9490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6485:22:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9485,
                                "name": "saleEnd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8932,
                                "src": "6473:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "6473:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6473:35:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6455:53:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9500,
                        "nodeType": "IfStatement",
                        "src": "6451:103:26",
                        "trueBody": {
                          "expression": {
                            "id": 9498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 9493,
                              "name": "_avail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9440,
                              "src": "6526:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 9496,
                                  "name": "vesting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8953,
                                  "src": "6546:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 9494,
                                  "name": "_avail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9440,
                                  "src": "6535:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 9495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11528,
                                "src": "6535:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 9497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6535:19:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6526:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 9499,
                          "nodeType": "ExpressionStatement",
                          "src": "6526:28:26"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9501,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6572:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 9502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6572:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "34",
                                    "id": 9507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6622:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    }
                                  ],
                                  "expression": {
                                    "id": 9505,
                                    "name": "vestingDuration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8935,
                                    "src": "6602:15:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 9506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11558,
                                  "src": "6602:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 9508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6602:22:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9503,
                                "name": "saleEnd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8932,
                                "src": "6590:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "6590:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6590:35:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6572:53:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9518,
                        "nodeType": "IfStatement",
                        "src": "6568:103:26",
                        "trueBody": {
                          "expression": {
                            "id": 9516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 9511,
                              "name": "_avail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9440,
                              "src": "6643:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 9514,
                                  "name": "vesting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8953,
                                  "src": "6663:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 9512,
                                  "name": "_avail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9440,
                                  "src": "6652:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 9513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11528,
                                "src": "6652:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 9515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6652:19:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6643:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 9517,
                          "nodeType": "ExpressionStatement",
                          "src": "6643:28:26"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9437,
              "nodeType": "StructuredDocumentation",
              "src": "5896:189:26",
              "text": "@notice get claimable percentage after sale end\n @return _avail percentage available to claim\n @dev this function checks if time has passed to set the max amount claimable"
            },
            "functionSelector": "91f7cfb9",
            "id": 9522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableAmount",
            "nameLocation": "6099:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6114:2:26"
            },
            "returnParameters": {
              "id": 9441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9440,
                  "mutability": "mutable",
                  "name": "_avail",
                  "nameLocation": "6146:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9522,
                  "src": "6138:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6138:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6137:16:26"
            },
            "scope": 9523,
            "src": "6090:598:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9524,
        "src": "531:6159:26",
        "usedErrors": []
      }
    ],
    "src": "31:6660:26"
  },
  "bytecode": "6101006040526a15ffde39b363d8e9e40000600355612710600455602f600555691a784379d99db42000006006553480156200003a57600080fd5b5060405162001824380380620018248339810160408190526200005d916200010f565b6200006833620000a2565b600180556001600160a01b0392831660a0529082166080521660c05273addb2b59d1b782e8392ee03d7e2ceaa240e7f1c060e05262000159565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010a57600080fd5b919050565b6000806000606084860312156200012557600080fd5b6200013084620000f2565b92506200014060208501620000f2565b91506200015060408501620000f2565b90509250925092565b60805160a05160c05160e051611660620001c46000396000818161024a0152610d87015260008181610271015281816109cb01528181610ce30152610d6501526000818161029801528181610c080152610f5b0152600081816102d00152610b7501526116606000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806391433883116100f9578063c5c4744c11610097578063ea4ce23911610071578063ea4ce239146103ea578063eb04c9d7146103f3578063f2fde38b14610406578063f78213e31461041957600080fd5b8063c5c4744c146103c1578063d862bcf5146103ca578063e52a7e24146103e257600080fd5b80639b19251a116100d35780639b19251a14610341578063ab0bcc4114610361578063c10b93581461036c578063c4a717cf1461037757600080fd5b8063914338831461031d5780639181951b1461032657806391f7cfb91461033957600080fd5b806344c63eec11610166578063715018a611610140578063715018a6146102f2578063719ec6b1146102fa5780637b1b1de6146103035780638da5cb5b1461030c57600080fd5b806344c63eec146102ba57806348c54b9d146102c35780634cf088d9146102cb57600080fd5b80633410fe6e116101a25780633410fe6e1461023c5780633ad10ef6146102455780633ca5b2341461026c5780633df62df01461029357600080fd5b8063055ef013146101c95780631514617e146101de578063223d65d4146101fb575b600080fd5b6101dc6101d73660046113e1565b61042c565b005b6101e86212750081565b6040519081526020015b60405180910390f35b6102246102093660046113fe565b6009602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101f2565b6101e861271081565b6102247f000000000000000000000000000000000000000000000000000000000000000081565b6102247f000000000000000000000000000000000000000000000000000000000000000081565b6102247f000000000000000000000000000000000000000000000000000000000000000081565b6101e86109c481565b6101dc6104ce565b6102247f000000000000000000000000000000000000000000000000000000000000000081565b6101dc61071b565b6101e860065481565b6101e860055481565b6000546001600160a01b0316610224565b6101e860045481565b6101dc6103343660046113fe565b610751565b6101e8610a9b565b6101e861034f3660046113e1565b60086020526000908152604090205481565b6101e8636212d60081565b6101e8636216ca8081565b6103a66103853660046113e1565b600a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101f2565b6101e860075481565b6103d2610b53565b60405190151581526020016101f2565b6101dc610ca1565b6101e860035481565b600254610224906001600160a01b031681565b6101dc6104143660046113e1565b610daf565b6101dc6104273660046113fe565b610e47565b6000546001600160a01b0316331461045f5760405162461bcd60e51b815260040161045690611417565b60405180910390fd5b6002546001600160a01b0316156104ac5760405162461bcd60e51b815260206004820152601160248201527009139250d148185b1c9958591e481cd95d607a1b6044820152606401610456565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600260015414156105215760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610456565b6002600155336000908152600a60205260409020610546636216ca8062127500611040565b42116105885760405162461bcd60e51b8152602060048201526011602482015270436c61696d20556e617661696c61626c6560781b6044820152606401610456565b6002546001600160a01b03166105d25760405162461bcd60e51b815260206004820152600f60248201526e151bdad95b88139bdd081859191959608a1b6044820152606401610456565b60006105dc610a9b565b9050808260010154106106235760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610456565b6001820154610633908290611053565b60018301549091506106459082611040565b600183015560028201546106679061271090610661908461105f565b9061106b565b6002546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b0316906340c10f19906044016020604051808303816000875af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd919061144c565b5060405181815233907f577416e982a24935e58003a2bc88755d1018671696e08d0fc6ca1dd95e370a1d9060200160405180910390a2505060018055565b6000546001600160a01b031633146107455760405162461bcd60e51b815260040161045690611417565b61074f6000611077565b565b600260015414156107a45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610456565b60026001556107bb81670de0b6b3a76400006110c7565b156107fd5760405162461bcd60e51b8152602060048201526012602482015271457861637420616d6f756e7473206f6e6c7960701b6044820152606401610456565b3360009081526008602052604090205461084a5760405162461bcd60e51b815260206004820152600e60248201526d57686974656c697374206f6e6c7960901b6044820152606401610456565b636216ca8042106108895760405162461bcd60e51b815260206004820152600960248201526814d85b19515b99195960ba1b6044820152606401610456565b68056bc75e2d631000008110156108d45760405162461bcd60e51b815260206004820152600f60248201526e135a5b9a5b5d5b481b9bdd081b595d608a1b6044820152606401610456565b336000908152600a6020526040902069010f0cf064dd5920000082118015906109145750805469010f0cf064dd5920000090610911908490611040565b11155b61094f5760405162461bcd60e51b815260206004820152600c60248201526b436170206f766572666c6f7760a01b6044820152606401610456565b600654600754106109935760405162461bcd60e51b815260206004820152600e60248201526d131a5b5a5d08115e18d95959195960921b6044820152606401610456565b6006546007548391906109a69083611040565b11156109be576007546006546109bb91611053565b90505b6109f36001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846110d3565b610a1c610a116005546106616004548561105f90919063ffffffff16565b600284015490611040565b60028301558154610a2d9082611040565b8255600754610a3c9082611040565b60075560055460045433917f96ea671ef97e3b0c25b75c51786366ec072e19ce8a92db8ee92004d88319a87d918491610a7a9161066190849061105f565b6040805192835260208301919091520160405180910390a250506001805550565b6000636216ca80421115610b5057610aba636216ca8062127500611040565b421115610ad057610acd816109c4611040565b90505b610aec610ae162127500600261105f565b636216ca8090611040565b421115610b0257610aff816109c4611040565b90505b610b13610ae162127500600361105f565b421115610b2957610b26816109c4611040565b90505b610b3a610ae162127500600461105f565b421115610b5057610b4d816109c4611040565b90505b90565b60405163dc6e13e160e01b815233600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063dc6e13e19060240161012060405180830381865afa158015610bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be1919061146e565b50506040516370a0823160e01b815233600482015295975060009650506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016946370a0823194506024019250610c3d915050565b602060405180830381865afa158015610c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7e91906114d7565b9050600081118015610c9a575069021e19e0c9bab24000008210155b9250505090565b6000546001600160a01b03163314610ccb5760405162461bcd60e51b815260040161045690611417565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5691906114d7565b9050610dac6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083611144565b50565b6000546001600160a01b03163314610dd95760405162461bcd60e51b815260040161045690611417565b6001600160a01b038116610e3e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610456565b610dac81611077565b6000610e51610b53565b905080610e8e5760405162461bcd60e51b815260206004820152600b60248201526a155b9c5d585b1a599a595960aa1b6044820152606401610456565b3360009081526008602052604090205415610ee15760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481dda1a5d195b1a5cdd1959606a1b6044820152606401610456565b6000828152600960205260409020546001600160a01b031615610f3b5760405162461bcd60e51b8152602060048201526012602482015271151bdad95b88185b1c9958591e481d5cd95960721b6044820152606401610456565b6040516331a9108f60e11b81526004810183905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc691906114f0565b6001600160a01b03161461100c5760405162461bcd60e51b815260206004820152600d60248201526c24b63632b3b0b61037bbb732b960991b6044820152606401610456565b50336000818152600860209081526040808320859055938252600990529190912080546001600160a01b0319169091179055565b600061104c8284611523565b9392505050565b600061104c828461153b565b600061104c8284611552565b600061104c8284611587565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061104c828461159b565b6040516001600160a01b038085166024830152831660448201526064810182905261113e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611179565b50505050565b6040516001600160a01b03831660248201526044810182905261117490849063a9059cbb60e01b90606401611107565b505050565b60006111ce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661124b9092919063ffffffff16565b80519091501561117457808060200190518101906111ec919061144c565b6111745760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610456565b606061125a8484600085611262565b949350505050565b6060824710156112c35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610456565b6001600160a01b0385163b61131a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610456565b600080866001600160a01b0316858760405161133691906115db565b60006040518083038185875af1925050503d8060008114611373576040519150601f19603f3d011682016040523d82523d6000602084013e611378565b606091505b5091509150611388828286611393565b979650505050505050565b606083156113a257508161104c565b8251156113b25782518084602001fd5b8160405162461bcd60e51b815260040161045691906115f7565b6001600160a01b0381168114610dac57600080fd5b6000602082840312156113f357600080fd5b813561104c816113cc565b60006020828403121561141057600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561145e57600080fd5b8151801515811461104c57600080fd5b60008060008060008060008060006101208a8c03121561148d57600080fd5b8951985060208a0151975060408a0151965060608a0151955060808a0151945060a08a0151935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b6000602082840312156114e957600080fd5b5051919050565b60006020828403121561150257600080fd5b815161104c816113cc565b634e487b7160e01b600052601160045260246000fd5b600082198211156115365761153661150d565b500190565b60008282101561154d5761154d61150d565b500390565b600081600019048311821515161561156c5761156c61150d565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261159657611596611571565b500490565b6000826115aa576115aa611571565b500690565b60005b838110156115ca5781810151838201526020016115b2565b8381111561113e5750506000910152565b600082516115ed8184602087016115af565b9190910192915050565b60208152600082518060208401526116168160408501602087016115af565b601f01601f1916919091016040019291505056fea264697066735822122096912f6248bd6548d7825cf5ad77f33201b87867398faf64be7efa0c41244ed264736f6c634300080c0033",
  "bytecodeSha1": "c71401ef7a3a9a46f6425f80be89ea2e1b396532",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "PrevSale",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "78": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {
        "PrevSale.buyNice": {
          "79": [
            2325,
            2344,
            true
          ]
        }
      },
      "10": {},
      "11": {
        "Address.functionCallWithValue": {
          "75": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "76": [
            7735,
            7742,
            false
          ],
          "77": [
            7876,
            7897,
            false
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "2": {},
      "23": {},
      "26": {
        "PrevSale.availableAmount": {
          "66": [
            6183,
            6208,
            false
          ],
          "67": [
            6228,
            6274,
            false
          ],
          "68": [
            6338,
            6391,
            false
          ],
          "69": [
            6455,
            6508,
            false
          ],
          "70": [
            6572,
            6625,
            false
          ]
        },
        "PrevSale.buyNice": {
          "59": [
            3633,
            3658,
            true
          ],
          "60": [
            3761,
            3786,
            true
          ],
          "61": [
            3818,
            3838,
            true
          ],
          "62": [
            3944,
            3965,
            false
          ],
          "63": [
            3985,
            4033,
            true
          ],
          "64": [
            4089,
            4111,
            true
          ],
          "65": [
            4231,
            4265,
            false
          ]
        },
        "PrevSale.claimTokens": {
          "57": [
            5249,
            5295,
            true
          ],
          "58": [
            5473,
            5507,
            true
          ]
        },
        "PrevSale.setNiceToken": {
          "56": [
            3202,
            3234,
            true
          ]
        },
        "PrevSale.whitelistSelf": {
          "71": [
            2786,
            2797,
            true
          ],
          "72": [
            2831,
            2857,
            true
          ],
          "73": [
            2899,
            2929,
            true
          ],
          "74": [
            2970,
            3009,
            true
          ]
        }
      },
      "28": {},
      "3": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "80": [
            3735,
            3756,
            false
          ],
          "81": [
            3819,
            3849,
            true
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "43": [
            2378,
            2395
          ],
          "44": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "12": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "31": [
            1998,
            2071
          ],
          "32": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "Address.functionCall": {
          "49": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "50": [
            5137,
            5218
          ],
          "52": [
            5228,
            5288
          ],
          "53": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "51": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "54": [
            7758,
            7775
          ],
          "55": [
            8202,
            8222
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {
        "SafeMath.add": {
          "39": [
            2818,
            2830
          ]
        },
        "SafeMath.div": {
          "42": [
            3913,
            3925
          ]
        },
        "SafeMath.mod": {
          "45": [
            4462,
            4474
          ]
        },
        "SafeMath.mul": {
          "41": [
            3528,
            3540
          ]
        },
        "SafeMath.sub": {
          "40": [
            3185,
            3197
          ]
        }
      },
      "2": {},
      "23": {},
      "26": {
        "PrevSale.availableAmount": {
          "25": [
            6292,
            6320
          ],
          "26": [
            6409,
            6437
          ],
          "27": [
            6526,
            6554
          ],
          "28": [
            6643,
            6671
          ]
        },
        "PrevSale.buyNice": {
          "13": [
            3625,
            3681
          ],
          "14": [
            3691,
            3743
          ],
          "15": [
            3753,
            3800
          ],
          "16": [
            3810,
            3858
          ],
          "17": [
            3923,
            4071
          ],
          "18": [
            4081,
            4130
          ],
          "19": [
            4281,
            4315
          ],
          "20": [
            4336,
            4392
          ],
          "21": [
            4402,
            4510
          ],
          "22": [
            4520,
            4577
          ],
          "23": [
            4587,
            4624
          ],
          "24": [
            4635,
            4757
          ]
        },
        "PrevSale.claimRaised": {
          "30": [
            4894,
            4939
          ]
        },
        "PrevSale.claimTokens": {
          "4": [
            5213,
            5338
          ],
          "5": [
            5348,
            5408
          ],
          "6": [
            5465,
            5527
          ],
          "7": [
            5597,
            5646
          ],
          "8": [
            5656,
            5718
          ],
          "9": [
            5728,
            5787
          ],
          "10": [
            5797,
            5834
          ],
          "11": [
            5844,
            5883
          ]
        },
        "PrevSale.qualify": {
          "29": [
            2440,
            2488
          ]
        },
        "PrevSale.setNiceToken": {
          "2": [
            3194,
            3256
          ],
          "3": [
            3266,
            3302
          ]
        },
        "PrevSale.whitelistSelf": {
          "33": [
            2778,
            2813
          ],
          "34": [
            2823,
            2881
          ],
          "35": [
            2891,
            2952
          ],
          "36": [
            2962,
            3027
          ],
          "37": [
            3037,
            3068
          ],
          "38": [
            3078,
            3107
          ]
        }
      },
      "28": {},
      "3": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "48": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "47": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "46": [
            1050,
            1146
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Receiver",
    "NICEToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath",
    "StakingTest",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "531:6159:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3120:189;;;;;;:::i;:::-;;:::i;:::-;;908:49;;950:7;908:49;;;;;548:25:33;;;536:2;521:18;908:49:26;;;;;;;;1444:42;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1444:42:26;;;;;;-1:-1:-1;;;;;933:32:33;;;915:51;;903:2;888:18;1444:42:26;769:203:33;647:39:26;;681:5;647:39;;1352:35;;;;;1075:27;;;;;1005:32;;;;;1155:38;;1189:4;1155:38;;5103:787;;;:::i;963:36::-;;;;;1668:101:0;;;:::i;1275:38:26:-;;;;;;1236:33;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;1199:31:26;;;;;;3559:1205;;;;;;:::i;:::-;;:::i;6090:598::-;;;:::i;1394:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;806:46;;842:10;806:46;;858:44;;892:10;858:44;;1492:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1855:25:33;;;1911:2;1896:18;;1889:34;;;;1939:18;;;1932:34;1843:2;1828:18;1492:41:26;1653:319:33;1319:26:26;;;;;;2243:252;;;:::i;:::-;;;2142:14:33;;2135:22;2117:41;;2105:2;2090:18;2243:252:26;1977:187:33;4778:168:26;;;:::i;1108:41::-;;;;;;1043:26;;;;;-1:-1:-1;;;;;1043:26:26;;;1918:198:0;;;;;;:::i;:::-;;:::i;2683:431:26:-;;;;;;:::i;:::-;;:::i;3120:189::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;3210:9:26::1;::::0;-1:-1:-1;;;;;3210:9:26::1;3202:32:::0;3194:62:::1;;;::::0;-1:-1:-1;;;3194:62:26;;2958:2:33;3194:62:26::1;::::0;::::1;2940:21:33::0;2997:2;2977:18;;;2970:30;-1:-1:-1;;;3016:18:33;;;3009:47;3073:18;;3194:62:26::1;2756:341:33::0;3194:62:26::1;3266:9;:36:::0;;-1:-1:-1;;;;;;3266:36:26::1;-1:-1:-1::0;;;;;3266:36:26;;;::::1;::::0;;;::::1;::::0;;3120:189::o;5103:787::-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;3304:2:33;2317:63:1;;;3286:21:33;3343:2;3323:18;;;3316:30;3382:33;3362:18;;;3355:61;3433:18;;2317:63:1;3102:355:33;2317:63:1;1744:1;2455:7;:18;5192:10:26::1;5158:20;5181:22:::0;;;:10:::1;:22;::::0;;;;5267:28:::1;892:10;950:7;5267:11;:28::i;:::-;5249:15;:46;5213:125;;;::::0;-1:-1:-1;;;5213:125:26;;3664:2:33;5213:125:26::1;::::0;::::1;3646:21:33::0;3703:2;3683:18;;;3676:30;-1:-1:-1;;;3722:18:33;;;3715:47;3779:18;;5213:125:26::1;3462:341:33::0;5213:125:26::1;5364:9;::::0;-1:-1:-1;;;;;5364:9:26::1;5348:60;;;::::0;-1:-1:-1;;;5348:60:26;;4010:2:33;5348:60:26::1;::::0;::::1;3992:21:33::0;4049:2;4029:18;;;4022:30;-1:-1:-1;;;4068:18:33;;;4061:45;4123:18;;5348:60:26::1;3808:339:33::0;5348:60:26::1;5418:17;5438;:15;:17::i;:::-;5418:37;;5498:9;5473:8;:22;;;:34;5465:62;;;::::0;-1:-1:-1;;;5465:62:26;;4354:2:33;5465:62:26::1;::::0;::::1;4336:21:33::0;4393:2;4373:18;;;4366:30;-1:-1:-1;;;4412:18:33;;;4405:45;4467:18;;5465:62:26::1;4152:339:33::0;5465:62:26::1;5623:22;::::0;::::1;::::0;5609:37:::1;::::0;:9;;:13:::1;:37::i;:::-;5681:22;::::0;::::1;::::0;5597:49;;-1:-1:-1;5681:37:26::1;::::0;5597:49;5681:26:::1;:37::i;:::-;5656:22;::::0;::::1;:62:::0;5740:19:::1;::::0;::::1;::::0;:47:::1;::::0;681:5:::1;::::0;5740:34:::1;::::0;5764:9;5740:23:::1;:34::i;:::-;:38:::0;::::1;:47::i;:::-;5797:9;::::0;:37:::1;::::0;-1:-1:-1;;;5797:37:26;;5812:10:::1;5797:37;::::0;::::1;4670:51:33::0;4737:18;;;4730:34;;;5728:59:26;;-1:-1:-1;;;;;;5797:9:26::1;::::0;:14:::1;::::0;4643:18:33;;5797:37:26::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5849:34:26::1;::::0;548:25:33;;;5861:10:26::1;::::0;5849:34:::1;::::0;536:2:33;521:18;5849:34:26::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;5103:787:26:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3559:1205:26:-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;3304:2:33;2317:63:1;;;3286:21:33;3343:2;3323:18;;;3316:30;3382:33;3362:18;;;3355:61;3433:18;;2317:63:1;3102:355:33;2317:63:1;1744:1;2455:7;:18;3633:20:26::1;:7:::0;3645::::1;3633:11;:20::i;:::-;:25:::0;3625:56:::1;;;::::0;-1:-1:-1;;;3625:56:26;;5259:2:33;3625:56:26::1;::::0;::::1;5241:21:33::0;5298:2;5278:18;;;5271:30;-1:-1:-1;;;5317:18:33;;;5310:48;5375:18;;3625:56:26::1;5057:342:33::0;3625:56:26::1;3709:10;3723:1;3699:21:::0;;;:9:::1;:21;::::0;;;;;3691:52:::1;;;::::0;-1:-1:-1;;;3691:52:26;;5606:2:33;3691:52:26::1;::::0;::::1;5588:21:33::0;5645:2;5625:18;;;5618:30;-1:-1:-1;;;5664:18:33;;;5657:44;5718:18;;3691:52:26::1;5404:338:33::0;3691:52:26::1;892:10;3761:15;:25;3753:47;;;::::0;-1:-1:-1;;;3753:47:26;;5949:2:33;3753:47:26::1;::::0;::::1;5931:21:33::0;5988:1;5968:18;;;5961:29;-1:-1:-1;;;6006:18:33;;;5999:39;6055:18;;3753:47:26::1;5747:332:33::0;3753:47:26::1;3829:9;3818:7;:20;;3810:48;;;::::0;-1:-1:-1;;;3810:48:26;;6286:2:33;3810:48:26::1;::::0;::::1;6268:21:33::0;6325:2;6305:18;;;6298:30;-1:-1:-1;;;6344:18:33;;;6337:45;6399:18;;3810:48:26::1;6084:339:33::0;3810:48:26::1;3902:10;3868:20;3891:22:::0;;;:10:::1;:22;::::0;;;;3955:10:::1;3944:21:::0;::::1;::::0;::::1;::::0;:89:::1;;-1:-1:-1::0;3997:21:26;;4023:10:::1;::::0;3985:34:::1;::::0;:7;;:11:::1;:34::i;:::-;:48;;3944:89;3923:148;;;::::0;-1:-1:-1;;;3923:148:26;;6630:2:33;3923:148:26::1;::::0;::::1;6612:21:33::0;6669:2;6649:18;;;6642:30;-1:-1:-1;;;6688:18:33;;;6681:42;6740:18;;3923:148:26::1;6428:336:33::0;3923:148:26::1;4103:8;;4089:11;;:22;4081:49;;;::::0;-1:-1:-1;;;4081:49:26;;6971:2:33;4081:49:26::1;::::0;::::1;6953:21:33::0;7010:2;6990:18;;;6983:30;-1:-1:-1;;;7029:18:33;;;7022:44;7083:18;;4081:49:26::1;6769:338:33::0;4081:49:26::1;4257:8;::::0;4231:11:::1;::::0;4157:7;;4257:8;4231:23:::1;::::0;4157:7;4231:15:::1;:23::i;:::-;:34;4227:99;;;4303:11;::::0;4290:8:::1;::::0;:25:::1;::::0;:12:::1;:25::i;:::-;4281:34;;4227:99;4336:56;-1:-1:-1::0;;;;;4336:4:26::1;:21;4358:10;4378:4;4385:6:::0;4336:21:::1;:56::i;:::-;4424:86;4461:39;4486:13;;4461:20;4472:8;;4461:6;:10;;:20;;;;:::i;:39::-;4424:19;::::0;::::1;::::0;;:23:::1;:86::i;:::-;4402:19;::::0;::::1;:108:::0;4544:21;;:33:::1;::::0;4570:6;4544:25:::1;:33::i;:::-;4520:57:::0;;4601:11:::1;::::0;:23:::1;::::0;4617:6;4601:15:::1;:23::i;:::-;4587:11;:37:::0;4733:13:::1;::::0;4719:8:::1;::::0;4664:10:::1;::::0;4640:117:::1;::::0;4688:6;;4708:39:::1;::::0;:20:::1;::::0;4688:6;;4708:10:::1;:20::i;:39::-;4640:117;::::0;;7286:25:33;;;7342:2;7327:18;;7320:34;;;;7259:18;4640:117:26::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;3559:1205:26:o;6090:598::-;6138:14;892:10;6183:15;:25;6164:518;;;6246:28;892:10;950:7;6246:11;:28::i;:::-;6228:15;:46;6224:96;;;6301:19;:6;1189:4;6301:10;:19::i;:::-;6292:28;;6224:96;6356:35;6368:22;950:7;6388:1;6368:19;:22::i;:::-;892:10;;6356:11;:35::i;:::-;6338:15;:53;6334:103;;;6418:19;:6;1189:4;6418:10;:19::i;:::-;6409:28;;6334:103;6473:35;6485:22;950:7;6505:1;6485:19;:22::i;6473:35::-;6455:15;:53;6451:103;;;6535:19;:6;1189:4;6535:10;:19::i;:::-;6526:28;;6451:103;6590:35;6602:22;950:7;6622:1;6602:19;:22::i;6590:35::-;6572:15;:53;6568:103;;;6652:19;:6;1189:4;6652:10;:19::i;:::-;6643:28;;6568:103;6090:598;:::o;2243:252::-;2347:28;;-1:-1:-1;;;2347:28:26;;2364:10;2347:28;;;915:51:33;2283:17:26;;;;-1:-1:-1;;;;;2347:7:26;:16;;;;888:18:33;;2347:28:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2400:30:26;;-1:-1:-1;;;2400:30:26;;2419:10;2400:30;;;915:51:33;2312:63:26;;-1:-1:-1;2385:12:26;;-1:-1:-1;;;;;;;2400:8:26;:18;;;;-1:-1:-1;888:18:33;;;-1:-1:-1;2400:30:26;;-1:-1:-1;;769:203:33;2400:30:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2385:45;;2462:1;2455:4;:8;:33;;;;;2477:11;2467:6;:21;;2455:33;2440:48;;2302:193;;2243:252;:::o;4778:168::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4855:29:26::1;::::0;-1:-1:-1;;;4855:29:26;;4878:4:::1;4855:29;::::0;::::1;915:51:33::0;4830:22:26::1;::::0;4855:4:::1;-1:-1:-1::0;;;;;4855:14:26::1;::::0;::::1;::::0;888:18:33;;4855:29:26::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4830:54:::0;-1:-1:-1;4894:45:26::1;-1:-1:-1::0;;;;;4894:4:26::1;:17;4912:10;4830:54:::0;4894:17:::1;:45::i;:::-;4820:126;4778:168::o:0;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;8439:2:33;1998:73:0::1;::::0;::::1;8421:21:33::0;8478:2;8458:18;;;8451:30;8517:34;8497:18;;;8490:62;-1:-1:-1;;;8568:18:33;;;8561:36;8614:19;;1998:73:0::1;8237:402:33::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;2683:431:26:-:0;2740:16;2759:9;:7;:9::i;:::-;2740:28;;2786:11;2778:35;;;;-1:-1:-1;;;2778:35:26;;8846:2:33;2778:35:26;;;8828:21:33;8885:2;8865:18;;;8858:30;-1:-1:-1;;;8904:18:33;;;8897:41;8955:18;;2778:35:26;8644:335:33;2778:35:26;2841:10;2831:21;;;;:9;:21;;;;;;:26;2823:58;;;;-1:-1:-1;;;2823:58:26;;9186:2:33;2823:58:26;;;9168:21:33;9225:2;9205:18;;;9198:30;-1:-1:-1;;;9244:18:33;;;9237:49;9303:18;;2823:58:26;8984:343:33;2823:58:26;2927:1;2899:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2899:16:26;:30;2891:61;;;;-1:-1:-1;;;2891:61:26;;9534:2:33;2891:61:26;;;9516:21:33;9573:2;9553:18;;;9546:30;-1:-1:-1;;;9592:18:33;;;9585:48;9650:18;;2891:61:26;9332:342:33;2891:61:26;2970:25;;-1:-1:-1;;;2970:25:26;;;;;548::33;;;2999:10:26;;-1:-1:-1;;;;;2970:8:26;:16;;;;521:18:33;;2970:25:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2970:39:26;;2962:65;;;;-1:-1:-1;;;2962:65:26;;10137:2:33;2962:65:26;;;10119:21:33;10176:2;10156:18;;;10149:30;-1:-1:-1;;;10195:18:33;;;10188:43;10248:18;;2962:65:26;9935:337:33;2962:65:26;-1:-1:-1;3047:10:26;3037:21;;;;:9;:21;;;;;;;;:31;;;3078:16;;;:7;:16;;;;;;:29;;-1:-1:-1;;;;;;3078:29:26;;;;;;2683:431::o;2741:96:16:-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:16:o;3108:::-;3166:7;3192:5;3196:1;3192;:5;:::i;3451:96::-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;4385:96:16:-;4443:7;4469:5;4473:1;4469;:5;:::i;912:241:6:-;1077:68;;-1:-1:-1;;;;;11477:15:33;;;1077:68:6;;;11459:34:33;11529:15;;11509:18;;;11502:43;11561:18;;;11554:34;;;1050:96:6;;1070:5;;-1:-1:-1;;;1100:27:6;11394:18:33;;1077:68:6;;;;-1:-1:-1;;1077:68:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:6;-1:-1:-1;;;;;;1077:68:6;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;701:205::-;840:58;;-1:-1:-1;;;;;4688:32:33;;840:58:6;;;4670:51:33;4737:18;;;4730:34;;;813:86:6;;833:5;;-1:-1:-1;;;863:23:6;4643:18:33;;840:58:6;4496:274:33;813:86:6;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:6;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:6;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:6;;11801:2:33;3811:85:6;;;11783:21:33;11840:2;11820:18;;;11813:30;11879:34;11859:18;;;11852:62;-1:-1:-1;;;11930:18:33;;;11923:40;11980:19;;3811:85:6;11599:406:33;3861:223:11;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:11:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:11;;12212:2:33;5137:81:11;;;12194:21:33;12251:2;12231:18;;;12224:30;12290:34;12270:18;;;12263:62;-1:-1:-1;;;12341:18:33;;;12334:36;12387:19;;5137:81:11;12010:402:33;5137:81:11;-1:-1:-1;;;;;1465:19:11;;;5228:60;;;;-1:-1:-1;;;5228:60:11;;12619:2:33;5228:60:11;;;12601:21:33;12658:2;12638:18;;;12631:30;12697:31;12677:18;;;12670:59;12746:18;;5228:60:11;12417:353:33;5228:60:11;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:11;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:11:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:11;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:11;;;;;;;;:::i;14:131:33:-;-1:-1:-1;;;;;89:31:33;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;584:180::-;643:6;696:2;684:9;675:7;671:23;667:32;664:52;;;712:1;709;702:12;664:52;-1:-1:-1;735:23:33;;584:180;-1:-1:-1;584:180:33:o;2395:356::-;2597:2;2579:21;;;2616:18;;;2609:30;2675:34;2670:2;2655:18;;2648:62;2742:2;2727:18;;2395:356::o;4775:277::-;4842:6;4895:2;4883:9;4874:7;4870:23;4866:32;4863:52;;;4911:1;4908;4901:12;4863:52;4943:9;4937:16;4996:5;4989:13;4982:21;4975:5;4972:32;4962:60;;5018:1;5015;5008:12;7365:678;7507:6;7515;7523;7531;7539;7547;7555;7563;7571;7624:3;7612:9;7603:7;7599:23;7595:33;7592:53;;;7641:1;7638;7631:12;7592:53;7670:9;7664:16;7654:26;;7720:2;7709:9;7705:18;7699:25;7689:35;;7764:2;7753:9;7749:18;7743:25;7733:35;;7808:2;7797:9;7793:18;7787:25;7777:35;;7852:3;7841:9;7837:19;7831:26;7821:36;;7897:3;7886:9;7882:19;7876:26;7866:36;;7942:3;7931:9;7927:19;7921:26;7911:36;;7987:3;7976:9;7972:19;7966:26;7956:36;;8032:3;8021:9;8017:19;8011:26;8001:36;;7365:678;;;;;;;;;;;:::o;8048:184::-;8118:6;8171:2;8159:9;8150:7;8146:23;8142:32;8139:52;;;8187:1;8184;8177:12;8139:52;-1:-1:-1;8210:16:33;;8048:184;-1:-1:-1;8048:184:33:o;9679:251::-;9749:6;9802:2;9790:9;9781:7;9777:23;9773:32;9770:52;;;9818:1;9815;9808:12;9770:52;9850:9;9844:16;9869:31;9894:5;9869:31;:::i;10277:127::-;10338:10;10333:3;10329:20;10326:1;10319:31;10369:4;10366:1;10359:15;10393:4;10390:1;10383:15;10409:128;10449:3;10480:1;10476:6;10473:1;10470:13;10467:39;;;10486:18;;:::i;:::-;-1:-1:-1;10522:9:33;;10409:128::o;10542:125::-;10582:4;10610:1;10607;10604:8;10601:34;;;10615:18;;:::i;:::-;-1:-1:-1;10652:9:33;;10542:125::o;10672:168::-;10712:7;10778:1;10774;10770:6;10766:14;10763:1;10760:21;10755:1;10748:9;10741:17;10737:45;10734:71;;;10785:18;;:::i;:::-;-1:-1:-1;10825:9:33;;10672:168::o;10845:127::-;10906:10;10901:3;10897:20;10894:1;10887:31;10937:4;10934:1;10927:15;10961:4;10958:1;10951:15;10977:120;11017:1;11043;11033:35;;11048:18;;:::i;:::-;-1:-1:-1;11082:9:33;;10977:120::o;11102:112::-;11134:1;11160;11150:35;;11165:18;;:::i;:::-;-1:-1:-1;11199:9:33;;11102:112::o;12775:258::-;12847:1;12857:113;12871:6;12868:1;12865:13;12857:113;;;12947:11;;;12941:18;12928:11;;;12921:39;12893:2;12886:10;12857:113;;;12988:6;12985:1;12982:13;12979:48;;;-1:-1:-1;;13023:1:33;13005:16;;12998:27;12775:258::o;13038:274::-;13167:3;13205:6;13199:13;13221:53;13267:6;13262:3;13255:4;13247:6;13243:17;13221:53;:::i;:::-;13290:16;;;;;13038:274;-1:-1:-1;;13038:274:33:o;13317:383::-;13466:2;13455:9;13448:21;13429:4;13498:6;13492:13;13541:6;13536:2;13525:9;13521:18;13514:34;13557:66;13616:6;13611:2;13600:9;13596:18;13591:2;13583:6;13579:15;13557:66;:::i;:::-;13684:2;13663:15;-1:-1:-1;;13659:29:33;13644:45;;;;13691:2;13640:54;;13317:383;-1:-1:-1;;13317:383:33:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "availableAmount()": {
        "details": "this function checks if time has passed to set the max amount claimable",
        "notice": "get claimable percentage after sale end",
        "returns": {
          "_avail": "percentage available to claim"
        }
      },
      "buyNice(uint256)": {
        "details": "minimum of $100 BUSD, max of $5K BUSDif maxRaise is exceeded we will allocate just a portion of that amount.",
        "notice": "Reserve NICE allocation with BUSD",
        "params": {
          "_amount": "Amount of BUSD to lock NICE amount"
        }
      },
      "claimTokens()": {
        "details": "transfers NICE to the user directly by minting straight to their wallets",
        "notice": "function that gets available tokens to the user."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "qualify()": {
        "details": "qualify is an overlook of the amount of CrushGod NFTs held and tokens staked",
        "notice": "qualify only checks quantity"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "whitelistSelf(uint256)": {
        "details": "once whitelisted, the token locked to that wallet.",
        "notice": "user will need to self whitelist prior to the sale",
        "params": {
          "tokenId": "the NFT Id to register with"
        }
      }
    },
    "version": 1
  },
  "offset": [
    531,
    6690
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91433883 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC5C4744C GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEA4CE239 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEA4CE239 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xEB04C9D7 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xF78213E3 EQ PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xD862BCF5 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xE52A7E24 EQ PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xAB0BCC41 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xC10B9358 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xC4A717CF EQ PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91433883 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x9181951B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x91F7CFB9 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44C63EEC GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x719EC6B1 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x7B1B1DE6 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44C63EEC EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x4CF088D9 EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3410FE6E GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x3410FE6E EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x3AD10EF6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x3CA5B234 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x3DF62DF0 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x55EF013 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x223D65D4 EQ PUSH2 0x1FB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E1 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH3 0x127500 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x224 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x224 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x224 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x9C4 DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x224 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x71B JUMP JUMPDEST PUSH2 0x1E8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x224 JUMP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH4 0x6212D600 DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH4 0x6216CA80 DUP2 JUMP JUMPDEST PUSH2 0x3A6 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0x1E8 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0x1E8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x224 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x414 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E1 JUMP JUMPDEST PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FE JUMP JUMPDEST PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x9139250D148185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x546 PUSH4 0x6216CA80 PUSH3 0x127500 PUSH2 0x1040 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x436C61696D20556E617661696C61626C65 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B88139BDD081859191959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DC PUSH2 0xA9B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x633 SWAP1 DUP3 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x645 SWAP1 DUP3 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x667 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x661 SWAP1 DUP5 PUSH2 0x105F JUMP JUMPDEST SWAP1 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x144C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x577416E982A24935E58003A2BC88755D1018671696E08D0FC6CA1DD95E370A1D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH2 0x74F PUSH1 0x0 PUSH2 0x1077 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x7BB DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x10C7 JUMP JUMPDEST ISZERO PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x457861637420616D6F756E7473206F6E6C79 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x57686974656C697374206F6E6C79 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH4 0x6216CA80 TIMESTAMP LT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x14D85B19515B991959 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x135A5B9A5B5D5B481B9BDD081B595D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH10 0x10F0CF064DD59200000 DUP3 GT DUP1 ISZERO SWAP1 PUSH2 0x914 JUMPI POP DUP1 SLOAD PUSH10 0x10F0CF064DD59200000 SWAP1 PUSH2 0x911 SWAP1 DUP5 SWAP1 PUSH2 0x1040 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x436170206F766572666C6F77 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD LT PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x131A5B5A5D08115E18D959591959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP4 SWAP2 SWAP1 PUSH2 0x9A6 SWAP1 DUP4 PUSH2 0x1040 JUMP JUMPDEST GT ISZERO PUSH2 0x9BE JUMPI PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x9BB SWAP2 PUSH2 0x1053 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x9F3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0xA1C PUSH2 0xA11 PUSH1 0x5 SLOAD PUSH2 0x661 PUSH1 0x4 SLOAD DUP6 PUSH2 0x105F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD PUSH2 0xA2D SWAP1 DUP3 PUSH2 0x1040 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x7 SLOAD PUSH2 0xA3C SWAP1 DUP3 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD CALLER SWAP2 PUSH32 0x96EA671EF97E3B0C25B75C51786366EC072E19CE8A92DB8EE92004D88319A87D SWAP2 DUP5 SWAP2 PUSH2 0xA7A SWAP2 PUSH2 0x661 SWAP1 DUP5 SWAP1 PUSH2 0x105F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x6216CA80 TIMESTAMP GT ISZERO PUSH2 0xB50 JUMPI PUSH2 0xABA PUSH4 0x6216CA80 PUSH3 0x127500 PUSH2 0x1040 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xAD0 JUMPI PUSH2 0xACD DUP2 PUSH2 0x9C4 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xAEC PUSH2 0xAE1 PUSH3 0x127500 PUSH1 0x2 PUSH2 0x105F JUMP JUMPDEST PUSH4 0x6216CA80 SWAP1 PUSH2 0x1040 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xB02 JUMPI PUSH2 0xAFF DUP2 PUSH2 0x9C4 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xB13 PUSH2 0xAE1 PUSH3 0x127500 PUSH1 0x3 PUSH2 0x105F JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xB29 JUMPI PUSH2 0xB26 DUP2 PUSH2 0x9C4 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xB3A PUSH2 0xAE1 PUSH3 0x127500 PUSH1 0x4 PUSH2 0x105F JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xB50 JUMPI PUSH2 0xB4D DUP2 PUSH2 0x9C4 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDC6E13E1 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xDC6E13E1 SWAP1 PUSH1 0x24 ADD PUSH2 0x120 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP6 SWAP8 POP PUSH1 0x0 SWAP7 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP5 PUSH4 0x70A08231 SWAP5 POP PUSH1 0x24 ADD SWAP3 POP PUSH2 0xC3D SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xC9A JUMPI POP PUSH10 0x21E19E0C9BAB2400000 DUP3 LT ISZERO JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD56 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST SWAP1 POP PUSH2 0xDAC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x1144 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH2 0xDAC DUP2 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE51 PUSH2 0xB53 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x155B9C5D585B1A599A5959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481DDA1A5D195B1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151BDAD95B88185B1C9958591E481D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B63632B3B0B61037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104C DUP3 DUP5 PUSH2 0x1523 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104C DUP3 DUP5 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104C DUP3 DUP5 PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104C DUP3 DUP5 PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104C DUP3 DUP5 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x113E SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1179 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1174 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1107 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x124B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1174 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH2 0x1174 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x125A DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1262 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x131A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1336 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1373 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1388 DUP3 DUP3 DUP7 PUSH2 0x1393 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13A2 JUMPI POP DUP2 PUSH2 0x104C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x13B2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x104C DUP2 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x104C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x148D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 MLOAD SWAP9 POP PUSH1 0x20 DUP11 ADD MLOAD SWAP8 POP PUSH1 0x40 DUP11 ADD MLOAD SWAP7 POP PUSH1 0x60 DUP11 ADD MLOAD SWAP6 POP PUSH1 0x80 DUP11 ADD MLOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD MLOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD MLOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD MLOAD SWAP2 POP PUSH2 0x100 DUP11 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x104C DUP2 PUSH2 0x13CC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1536 JUMPI PUSH2 0x1536 PUSH2 0x150D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x154D JUMPI PUSH2 0x154D PUSH2 0x150D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x156C JUMPI PUSH2 0x156C PUSH2 0x150D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1596 JUMPI PUSH2 0x1596 PUSH2 0x1571 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15AA JUMPI PUSH2 0x15AA PUSH2 0x1571 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15CA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15B2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x113E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x15ED DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x15AF JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1616 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP2 0x2F PUSH3 0x48BD65 BASEFEE 0xD7 DUP3 0x5C CREATE2 0xAD PUSH24 0xF33201B87867398FAF64BE7EFA0C41244ED264736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "6": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "12": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "16": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "17": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "POP",
      "path": "26"
    },
    "18": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "21": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "LT",
      "path": "26"
    },
    "22": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "26": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "29": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "SHR",
      "path": "26"
    },
    "32": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "33": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x91433883"
    },
    "38": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "GT",
      "path": "26"
    },
    "39": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "43": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "44": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC5C4744C"
    },
    "49": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "GT",
      "path": "26"
    },
    "50": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "54": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "55": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xEA4CE239"
    },
    "60": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "GT",
      "path": "26"
    },
    "61": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "65": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "66": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xEA4CE239"
    },
    "71": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "72": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3EA"
    },
    "75": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "76": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "77": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xEB04C9D7"
    },
    "82": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "83": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3F3"
    },
    "86": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "87": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "88": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "94": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x406"
    },
    "97": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "98": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "99": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xF78213E3"
    },
    "104": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "105": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x419"
    },
    "108": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "109": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "112": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "113": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "114": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "115": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC5C4744C"
    },
    "120": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "121": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3C1"
    },
    "124": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "125": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "126": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD862BCF5"
    },
    "131": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "132": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3CA"
    },
    "135": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "136": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "137": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xE52A7E24"
    },
    "142": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "143": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3E2"
    },
    "146": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "147": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "150": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "151": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "152": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "153": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x9B19251A"
    },
    "158": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "GT",
      "path": "26"
    },
    "159": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "163": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "164": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x9B19251A"
    },
    "169": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "170": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "173": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "174": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "175": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xAB0BCC41"
    },
    "180": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "181": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x361"
    },
    "184": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "185": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "186": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC10B9358"
    },
    "191": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "192": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x36C"
    },
    "195": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "196": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "197": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC4A717CF"
    },
    "202": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "203": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x377"
    },
    "206": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "207": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "210": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "211": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "212": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "213": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x91433883"
    },
    "218": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "219": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x31D"
    },
    "222": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "223": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "224": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x9181951B"
    },
    "229": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "230": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x326"
    },
    "233": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "234": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "235": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x91F7CFB9"
    },
    "240": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "241": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x339"
    },
    "244": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "245": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "248": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "249": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "250": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "251": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x44C63EEC"
    },
    "256": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "GT",
      "path": "26"
    },
    "257": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "261": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "262": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x715018A6"
    },
    "267": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "GT",
      "path": "26"
    },
    "268": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "272": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "273": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x715018A6"
    },
    "278": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "279": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2F2"
    },
    "282": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "283": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "284": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x719EC6B1"
    },
    "289": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "290": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2FA"
    },
    "293": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "294": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "295": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7B1B1DE6"
    },
    "300": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "301": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x303"
    },
    "304": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "305": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "306": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x8DA5CB5B"
    },
    "311": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "312": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x30C"
    },
    "315": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "316": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "318": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "319": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "320": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "321": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "322": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x44C63EEC"
    },
    "327": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "328": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2BA"
    },
    "331": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "332": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "333": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x48C54B9D"
    },
    "338": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "339": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2C3"
    },
    "342": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "343": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "344": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4CF088D9"
    },
    "349": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "350": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2CB"
    },
    "353": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "354": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "356": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "357": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "358": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "359": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "360": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3410FE6E"
    },
    "365": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "GT",
      "path": "26"
    },
    "366": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "370": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "371": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3410FE6E"
    },
    "376": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "377": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x23C"
    },
    "380": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "381": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "382": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3AD10EF6"
    },
    "387": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "388": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x245"
    },
    "391": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "392": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "393": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3CA5B234"
    },
    "398": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "399": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x26C"
    },
    "402": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "403": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "404": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3DF62DF0"
    },
    "409": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "410": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x293"
    },
    "413": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "414": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "416": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "417": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "418": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "419": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "420": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x55EF013"
    },
    "425": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "426": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "430": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "431": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x1514617E"
    },
    "436": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "437": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DE"
    },
    "440": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "441": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "442": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x223D65D4"
    },
    "447": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "EQ",
      "path": "26"
    },
    "448": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FB"
    },
    "451": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "452": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "453": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "DUP1",
      "path": "26"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        531,
        6690
      ],
      "op": "REVERT",
      "path": "26"
    },
    "457": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "458": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DC"
    },
    "461": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1D7"
    },
    "464": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "465": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "467": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13E1"
    },
    "470": {
      "fn": "PrevSale.setNiceToken",
      "jump": "i",
      "offset": [
        3120,
        3309
      ],
      "op": "JUMP",
      "path": "26"
    },
    "471": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "472": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x42C"
    },
    "475": {
      "fn": "PrevSale.setNiceToken",
      "jump": "i",
      "offset": [
        3120,
        3309
      ],
      "op": "JUMP",
      "path": "26"
    },
    "476": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "477": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "STOP",
      "path": "26"
    },
    "478": {
      "offset": [
        908,
        957
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "479": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "482": {
      "offset": [
        950,
        957
      ],
      "op": "PUSH3",
      "path": "26",
      "value": "0x127500"
    },
    "486": {
      "offset": [
        908,
        957
      ],
      "op": "DUP2",
      "path": "26"
    },
    "487": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "JUMP",
      "path": "26"
    },
    "488": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "489": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "491": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "492": {
      "op": "SWAP1"
    },
    "493": {
      "op": "DUP2"
    },
    "494": {
      "op": "MSTORE"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "497": {
      "op": "ADD"
    },
    "498": {
      "offset": [
        908,
        957
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "499": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "501": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "502": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "DUP1",
      "path": "26"
    },
    "503": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "504": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "SUB",
      "path": "26"
    },
    "505": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "506": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        908,
        957
      ],
      "op": "RETURN",
      "path": "26"
    },
    "507": {
      "offset": [
        1444,
        1486
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "508": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x224"
    },
    "511": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x209"
    },
    "514": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "515": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "517": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13FE"
    },
    "520": {
      "fn": "PrevSale.setNiceToken",
      "jump": "i",
      "offset": [
        1444,
        1486
      ],
      "op": "JUMP",
      "path": "26"
    },
    "521": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "522": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x9"
    },
    "524": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "526": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "527": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "529": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "530": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "DUP2",
      "path": "26"
    },
    "531": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "532": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "534": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "535": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "536": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "offset": [
        1444,
        1486
      ],
      "op": "AND",
      "path": "26"
    },
    "546": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "DUP2",
      "path": "26"
    },
    "547": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "JUMP",
      "path": "26"
    },
    "548": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "549": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "551": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1444,
        1486
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "op": "SUB"
    },
    "560": {
      "op": "SWAP1"
    },
    "561": {
      "op": "SWAP2"
    },
    "562": {
      "op": "AND"
    },
    "563": {
      "op": "DUP2"
    },
    "564": {
      "op": "MSTORE"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "offset": [
        1444,
        1486
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F2"
    },
    "571": {
      "op": "JUMP"
    },
    "572": {
      "offset": [
        647,
        686
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "573": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        647,
        686
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "576": {
      "offset": [
        681,
        686
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2710"
    },
    "579": {
      "offset": [
        647,
        686
      ],
      "op": "DUP2",
      "path": "26"
    },
    "580": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        647,
        686
      ],
      "op": "JUMP",
      "path": "26"
    },
    "581": {
      "offset": [
        1352,
        1387
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "582": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1352,
        1387
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x224"
    },
    "585": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1352,
        1387
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "618": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1352,
        1387
      ],
      "op": "DUP2",
      "path": "26"
    },
    "619": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1352,
        1387
      ],
      "op": "JUMP",
      "path": "26"
    },
    "620": {
      "offset": [
        1075,
        1102
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "621": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1075,
        1102
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x224"
    },
    "624": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1075,
        1102
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "657": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1075,
        1102
      ],
      "op": "DUP2",
      "path": "26"
    },
    "658": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1075,
        1102
      ],
      "op": "JUMP",
      "path": "26"
    },
    "659": {
      "offset": [
        1005,
        1037
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "660": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1005,
        1037
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x224"
    },
    "663": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1005,
        1037
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "696": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1005,
        1037
      ],
      "op": "DUP2",
      "path": "26"
    },
    "697": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1005,
        1037
      ],
      "op": "JUMP",
      "path": "26"
    },
    "698": {
      "offset": [
        1155,
        1193
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "699": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1155,
        1193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "702": {
      "offset": [
        1189,
        1193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9C4"
    },
    "705": {
      "offset": [
        1155,
        1193
      ],
      "op": "DUP2",
      "path": "26"
    },
    "706": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        1155,
        1193
      ],
      "op": "JUMP",
      "path": "26"
    },
    "707": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5103,
        5890
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "708": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5103,
        5890
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DC"
    },
    "711": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5103,
        5890
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4CE"
    },
    "714": {
      "fn": "PrevSale.claimTokens",
      "jump": "i",
      "offset": [
        5103,
        5890
      ],
      "op": "JUMP",
      "path": "26"
    },
    "715": {
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "716": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x224"
    },
    "719": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        963,
        999
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "752": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "26"
    },
    "753": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        963,
        999
      ],
      "op": "JUMP",
      "path": "26"
    },
    "754": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "755": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "758": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71B"
    },
    "761": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "762": {
      "offset": [
        1275,
        1313
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "763": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1275,
        1313
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "766": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1275,
        1313
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6"
    },
    "768": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1275,
        1313
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "769": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1275,
        1313
      ],
      "op": "DUP2",
      "path": "26"
    },
    "770": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1275,
        1313
      ],
      "op": "JUMP",
      "path": "26"
    },
    "771": {
      "offset": [
        1236,
        1269
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1236,
        1269
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1236,
        1269
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x5"
    },
    "777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1236,
        1269
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "778": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1236,
        1269
      ],
      "op": "DUP2",
      "path": "26"
    },
    "779": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1236,
        1269
      ],
      "op": "JUMP",
      "path": "26"
    },
    "780": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "781": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "783": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "790": {
      "op": "SHL"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "793": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224"
    },
    "796": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "797": {
      "offset": [
        1199,
        1230
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "798": {
      "fn": "Ownable.owner",
      "offset": [
        1199,
        1230
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "801": {
      "fn": "Ownable.owner",
      "offset": [
        1199,
        1230
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "803": {
      "fn": "Ownable.owner",
      "offset": [
        1199,
        1230
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "804": {
      "fn": "Ownable.owner",
      "offset": [
        1199,
        1230
      ],
      "op": "DUP2",
      "path": "26"
    },
    "805": {
      "fn": "Ownable.owner",
      "offset": [
        1199,
        1230
      ],
      "op": "JUMP",
      "path": "26"
    },
    "806": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "807": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DC"
    },
    "810": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x334"
    },
    "813": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "814": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "816": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13FE"
    },
    "819": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        3559,
        4764
      ],
      "op": "JUMP",
      "path": "26"
    },
    "820": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "821": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x751"
    },
    "824": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        3559,
        4764
      ],
      "op": "JUMP",
      "path": "26"
    },
    "825": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6090,
        6688
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "826": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6090,
        6688
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "829": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6090,
        6688
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA9B"
    },
    "832": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6090,
        6688
      ],
      "op": "JUMP",
      "path": "26"
    },
    "833": {
      "offset": [
        1394,
        1438
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "834": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "837": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34F"
    },
    "840": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "841": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "843": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13E1"
    },
    "846": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        1394,
        1438
      ],
      "op": "JUMP",
      "path": "26"
    },
    "847": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "848": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x8"
    },
    "850": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "852": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "853": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "855": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "856": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "DUP2",
      "path": "26"
    },
    "857": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "858": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "860": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "861": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "862": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "863": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "DUP2",
      "path": "26"
    },
    "864": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1394,
        1438
      ],
      "op": "JUMP",
      "path": "26"
    },
    "865": {
      "offset": [
        806,
        852
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "866": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        806,
        852
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "869": {
      "offset": [
        842,
        852
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6212D600"
    },
    "874": {
      "offset": [
        806,
        852
      ],
      "op": "DUP2",
      "path": "26"
    },
    "875": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        806,
        852
      ],
      "op": "JUMP",
      "path": "26"
    },
    "876": {
      "offset": [
        858,
        902
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "877": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        858,
        902
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "880": {
      "offset": [
        892,
        902
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6216CA80"
    },
    "885": {
      "offset": [
        858,
        902
      ],
      "op": "DUP2",
      "path": "26"
    },
    "886": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        858,
        902
      ],
      "op": "JUMP",
      "path": "26"
    },
    "887": {
      "offset": [
        1492,
        1533
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "888": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3A6"
    },
    "891": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x385"
    },
    "894": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "895": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "897": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13E1"
    },
    "900": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        1492,
        1533
      ],
      "op": "JUMP",
      "path": "26"
    },
    "901": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "902": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "904": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "906": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "907": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "909": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "910": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "DUP2",
      "path": "26"
    },
    "911": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "912": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "914": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "915": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "916": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "DUP1",
      "path": "26"
    },
    "917": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "918": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "920": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "DUP3",
      "path": "26"
    },
    "921": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "ADD",
      "path": "26"
    },
    "922": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "923": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "925": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "926": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "927": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "ADD",
      "path": "26"
    },
    "928": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "929": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "930": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "931": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "932": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "DUP4",
      "path": "26"
    },
    "933": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "JUMP",
      "path": "26"
    },
    "934": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "935": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "937": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "DUP1",
      "path": "26"
    },
    "938": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1492,
        1533
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "939": {
      "op": "SWAP4"
    },
    "940": {
      "op": "DUP5"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "944": {
      "op": "DUP5"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "op": "SWAP3"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "op": "SWAP3"
    },
    "949": {
      "op": "MSTORE"
    },
    "950": {
      "op": "SWAP1"
    },
    "951": {
      "op": "DUP3"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "offset": [
        1492,
        1533
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F2"
    },
    "960": {
      "op": "JUMP"
    },
    "961": {
      "offset": [
        1319,
        1345
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "962": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1319,
        1345
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "965": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1319,
        1345
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7"
    },
    "967": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1319,
        1345
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "968": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1319,
        1345
      ],
      "op": "DUP2",
      "path": "26"
    },
    "969": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        1319,
        1345
      ],
      "op": "JUMP",
      "path": "26"
    },
    "970": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "971": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3D2"
    },
    "974": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB53"
    },
    "977": {
      "fn": "PrevSale.qualify",
      "jump": "i",
      "offset": [
        2243,
        2495
      ],
      "op": "JUMP",
      "path": "26"
    },
    "978": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "979": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "981": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "982": {
      "op": "SWAP1"
    },
    "983": {
      "op": "ISZERO"
    },
    "984": {
      "op": "ISZERO"
    },
    "985": {
      "op": "DUP2"
    },
    "986": {
      "op": "MSTORE"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "989": {
      "op": "ADD"
    },
    "990": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F2"
    },
    "993": {
      "op": "JUMP"
    },
    "994": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4778,
        4946
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "995": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4778,
        4946
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DC"
    },
    "998": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4778,
        4946
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xCA1"
    },
    "1001": {
      "fn": "PrevSale.claimRaised",
      "jump": "i",
      "offset": [
        4778,
        4946
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1002": {
      "offset": [
        1108,
        1149
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1003": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1108,
        1149
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E8"
    },
    "1006": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1108,
        1149
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "1008": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1108,
        1149
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1009": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1108,
        1149
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1010": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1108,
        1149
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1011": {
      "offset": [
        1043,
        1069
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1012": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1043,
        1069
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1014": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1043,
        1069
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1015": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1043,
        1069
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x224"
    },
    "1018": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1043,
        1069
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "offset": [
        1043,
        1069
      ],
      "op": "AND",
      "path": "26"
    },
    "1028": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1043,
        1069
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1029": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        1043,
        1069
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "1034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x414"
    },
    "1037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1040": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E1"
    },
    "1043": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDAF"
    },
    "1048": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1049": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1050": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DC"
    },
    "1053": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x427"
    },
    "1056": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1057": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1059": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13FE"
    },
    "1062": {
      "fn": "PrevSale.whitelistSelf",
      "jump": "i",
      "offset": [
        2683,
        3114
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1063": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1064": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE47"
    },
    "1067": {
      "fn": "PrevSale.whitelistSelf",
      "jump": "i",
      "offset": [
        2683,
        3114
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1068": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3120,
        3309
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1069": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1071": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1078": {
      "op": "SHL"
    },
    "1079": {
      "op": "SUB"
    },
    "1080": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1081": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 1
    },
    "1082": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1083": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45F"
    },
    "1086": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1087": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1089": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1098": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1099": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1101": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1102": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x456"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1106": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1417"
    },
    "1109": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1110": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1111": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1113": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1114": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1116": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1117": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1118": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1119": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1120": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3210,
        3219
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 2,
      "value": "0x2"
    },
    "1122": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3210,
        3219
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1129": {
      "op": "SHL"
    },
    "1130": {
      "op": "SUB"
    },
    "1131": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3210,
        3219
      ],
      "op": "AND",
      "path": "26"
    },
    "1132": {
      "branch": 56,
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3202,
        3234
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1133": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4AC"
    },
    "1136": {
      "branch": 56,
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1137": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1139": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1148": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1151": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1153": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1154": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "ADD",
      "path": "26"
    },
    "1155": {
      "op": "MSTORE"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1160": {
      "op": "DUP3"
    },
    "1161": {
      "op": "ADD"
    },
    "1162": {
      "op": "MSTORE"
    },
    "1163": {
      "op": "PUSH17",
      "value": "0x9139250D148185B1C9958591E481CD95D"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3194,
        3256
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1197": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3275
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 3,
      "value": "0x2"
    },
    "1199": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1200": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1207": {
      "op": "SHL"
    },
    "1208": {
      "op": "SUB"
    },
    "1209": {
      "op": "NOT"
    },
    "1210": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "AND",
      "path": "26"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1217": {
      "op": "SHL"
    },
    "1218": {
      "op": "SUB"
    },
    "1219": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1220": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1221": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1222": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "AND",
      "path": "26"
    },
    "1223": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1224": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1225": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1226": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "OR",
      "path": "26"
    },
    "1227": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1228": {
      "fn": "PrevSale.setNiceToken",
      "offset": [
        3266,
        3302
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "1229": {
      "fn": "PrevSale.setNiceToken",
      "jump": "o",
      "offset": [
        3120,
        3309
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1230": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5103,
        5890
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1231": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1233": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1235": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1236": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "1"
    },
    "1237": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1238": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x521"
    },
    "1241": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1242": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1244": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1245": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1251": {
      "op": "SHL"
    },
    "1252": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1253": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1256": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1258": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1259": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "1"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1265": {
      "op": "DUP3"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "op": "MSTORE"
    },
    "1268": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1303": {
      "op": "DUP3"
    },
    "1304": {
      "op": "ADD"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x456"
    },
    "1312": {
      "op": "JUMP"
    },
    "1313": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1314": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1316": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1318": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1319": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5192,
        5202
      ],
      "op": "CALLER",
      "path": "26"
    },
    "1320": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5158,
        5178
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1322": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5203
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1323": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5203
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1324": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5203
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1325": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5191
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "1327": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5203
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1329": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5203
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1330": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5203
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1332": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5203
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1333": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5181,
        5203
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1334": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5267,
        5295
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 4,
      "value": "0x546"
    },
    "1337": {
      "offset": [
        892,
        902
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6216CA80"
    },
    "1342": {
      "offset": [
        950,
        957
      ],
      "op": "PUSH3",
      "path": "26",
      "value": "0x127500"
    },
    "1346": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5267,
        5278
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "1349": {
      "fn": "PrevSale.claimTokens",
      "jump": "i",
      "offset": [
        5267,
        5295
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1350": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5267,
        5295
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1351": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5249,
        5264
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "1352": {
      "branch": 57,
      "fn": "PrevSale.claimTokens",
      "offset": [
        5249,
        5295
      ],
      "op": "GT",
      "path": "26"
    },
    "1353": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1356": {
      "branch": 57,
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1357": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1359": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1360": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1368": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1371": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1373": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1374": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "ADD",
      "path": "26"
    },
    "1375": {
      "op": "MSTORE"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1380": {
      "op": "DUP3"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "op": "MSTORE"
    },
    "1383": {
      "op": "PUSH17",
      "value": "0x436C61696D20556E617661696C61626C65"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1403": {
      "op": "SHL"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "1415": {
      "op": "JUMP"
    },
    "1416": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5213,
        5338
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1417": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5364,
        5373
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 5,
      "value": "0x2"
    },
    "1419": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5364,
        5373
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "op": "SUB"
    },
    "1428": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5364,
        5373
      ],
      "op": "AND",
      "path": "26"
    },
    "1429": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5D2"
    },
    "1432": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1433": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1435": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1444": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1447": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1449": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1450": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "ADD",
      "path": "26"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1456": {
      "op": "DUP3"
    },
    "1457": {
      "op": "ADD"
    },
    "1458": {
      "op": "MSTORE"
    },
    "1459": {
      "op": "PUSH15",
      "value": "0x151BDAD95B88139BDD081859191959"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1480": {
      "op": "DUP3"
    },
    "1481": {
      "op": "ADD"
    },
    "1482": {
      "op": "MSTORE"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "1489": {
      "op": "JUMP"
    },
    "1490": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5348,
        5408
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1491": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5418,
        5435
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1493": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5438,
        5455
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5DC"
    },
    "1496": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5438,
        5453
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA9B"
    },
    "1499": {
      "fn": "PrevSale.claimTokens",
      "jump": "i",
      "offset": [
        5438,
        5455
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1500": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5438,
        5455
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1501": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5418,
        5455
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1502": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5418,
        5455
      ],
      "op": "POP",
      "path": "26"
    },
    "1503": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5498,
        5507
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 6
    },
    "1504": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5473,
        5481
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1505": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5473,
        5495
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "1507": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5473,
        5495
      ],
      "op": "ADD",
      "path": "26"
    },
    "1508": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5473,
        5495
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1509": {
      "branch": 58,
      "fn": "PrevSale.claimTokens",
      "offset": [
        5473,
        5507
      ],
      "op": "LT",
      "path": "26"
    },
    "1510": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x623"
    },
    "1513": {
      "branch": 58,
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1514": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1516": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1525": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1528": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1530": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1531": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "ADD",
      "path": "26"
    },
    "1532": {
      "op": "MSTORE"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1537": {
      "op": "DUP3"
    },
    "1538": {
      "op": "ADD"
    },
    "1539": {
      "op": "MSTORE"
    },
    "1540": {
      "op": "PUSH15",
      "value": "0x105B1C9958591E4818DB185A5B5959"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "1570": {
      "op": "JUMP"
    },
    "1571": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5465,
        5527
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1572": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5623,
        5645
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 7,
      "value": "0x1"
    },
    "1574": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5623,
        5645
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1575": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5623,
        5645
      ],
      "op": "ADD",
      "path": "26"
    },
    "1576": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5623,
        5645
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1577": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5609,
        5646
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x633"
    },
    "1580": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5609,
        5646
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1581": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5609,
        5618
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1582": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5609,
        5618
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1583": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5609,
        5622
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1053"
    },
    "1586": {
      "fn": "PrevSale.claimTokens",
      "jump": "i",
      "offset": [
        5609,
        5646
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1587": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5609,
        5646
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1588": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5681,
        5703
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 8,
      "value": "0x1"
    },
    "1590": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5681,
        5703
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1591": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5681,
        5703
      ],
      "op": "ADD",
      "path": "26"
    },
    "1592": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5681,
        5703
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1593": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5597,
        5646
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1594": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5597,
        5646
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1595": {
      "op": "POP"
    },
    "1596": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5681,
        5718
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x645"
    },
    "1599": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5681,
        5718
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1600": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5597,
        5646
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1601": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5681,
        5707
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "1604": {
      "fn": "PrevSale.claimTokens",
      "jump": "i",
      "offset": [
        5681,
        5718
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1605": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5681,
        5718
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1606": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5656,
        5678
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "1608": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5656,
        5678
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1609": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5656,
        5678
      ],
      "op": "ADD",
      "path": "26"
    },
    "1610": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5656,
        5718
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "1611": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5759
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 9,
      "value": "0x2"
    },
    "1613": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5759
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1614": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5759
      ],
      "op": "ADD",
      "path": "26"
    },
    "1615": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5759
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1616": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5787
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x667"
    },
    "1619": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5787
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1620": {
      "offset": [
        681,
        686
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2710"
    },
    "1623": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        681,
        686
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1624": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5774
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x661"
    },
    "1627": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5774
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1628": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5764,
        5773
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1629": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5763
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x105F"
    },
    "1632": {
      "fn": "PrevSale.claimTokens",
      "jump": "i",
      "offset": [
        5740,
        5774
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1633": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5774
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1634": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5778
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1635": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5778
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x106B"
    },
    "1638": {
      "fn": "PrevSale.claimTokens",
      "jump": "i",
      "offset": [
        5740,
        5787
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1639": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5740,
        5787
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1640": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5806
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 10,
      "value": "0x2"
    },
    "1642": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5806
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1643": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1645": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1646": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1653": {
      "op": "SHL"
    },
    "1654": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1655": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1656": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5812,
        5822
      ],
      "op": "CALLER",
      "path": "26"
    },
    "1657": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1659": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1660": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "ADD",
      "path": "26"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1664": {
      "op": "DUP2"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "DUP4"
    },
    "1667": {
      "op": "SWAP1"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5728,
        5787
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1670": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5728,
        5787
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1671": {
      "op": "POP"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1678": {
      "op": "SHL"
    },
    "1679": {
      "op": "SUB"
    },
    "1680": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5806
      ],
      "op": "AND",
      "path": "26"
    },
    "1681": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5806
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1682": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5811
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x40C10F19"
    },
    "1687": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5811
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1693": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1695": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1696": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1697": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1698": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "SUB",
      "path": "26"
    },
    "1699": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1700": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1702": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP8",
      "path": "26"
    },
    "1703": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "GAS",
      "path": "26"
    },
    "1704": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "CALL",
      "path": "26"
    },
    "1705": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1706": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1707": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1708": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6B9"
    },
    "1711": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1712": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1713": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1715": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1716": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "1717": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1718": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1720": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "REVERT",
      "path": "26"
    },
    "1721": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1722": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "POP",
      "path": "26"
    },
    "1723": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "POP",
      "path": "26"
    },
    "1724": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "POP",
      "path": "26"
    },
    "1725": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "POP",
      "path": "26"
    },
    "1726": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1728": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1729": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1730": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "1732": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "NOT",
      "path": "26"
    },
    "1733": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "1735": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1736": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "ADD",
      "path": "26"
    },
    "1737": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "AND",
      "path": "26"
    },
    "1738": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1739": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "ADD",
      "path": "26"
    },
    "1740": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1741": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1743": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1744": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "POP",
      "path": "26"
    },
    "1745": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1746": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "ADD",
      "path": "26"
    },
    "1747": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1748": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6DD"
    },
    "1751": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1752": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1753": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x144C"
    },
    "1756": {
      "fn": "PrevSale.claimTokens",
      "jump": "i",
      "offset": [
        5797,
        5834
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1757": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5797,
        5834
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 11,
      "value": "0x40"
    },
    "1761": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1762": {
      "op": "DUP2"
    },
    "1763": {
      "op": "DUP2"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5861,
        5871
      ],
      "op": "CALLER",
      "path": "26"
    },
    "1766": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5861,
        5871
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1767": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x577416E982A24935E58003A2BC88755D1018671696E08D0FC6CA1DD95E370A1D"
    },
    "1800": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1803": {
      "op": "ADD"
    },
    "1804": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1806": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1807": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1808": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1809": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "SUB",
      "path": "26"
    },
    "1810": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1811": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        5849,
        5883
      ],
      "op": "LOG2",
      "path": "26"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1816": {
      "offset": [
        2628,
        2650
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1817": {
      "fn": "PrevSale.claimTokens",
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1818": {
      "fn": "PrevSale.claimTokens",
      "jump": "o",
      "offset": [
        5103,
        5890
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1819": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1820": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1822": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1829": {
      "op": "SHL"
    },
    "1830": {
      "op": "SUB"
    },
    "1831": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1832": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1833": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1834": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x745"
    },
    "1837": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1838": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1840": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1847": {
      "op": "SHL"
    },
    "1848": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1849": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1850": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1852": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1853": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x456"
    },
    "1856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1417"
    },
    "1860": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1862": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x74F"
    },
    "1865": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1867": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1077"
    },
    "1870": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1871": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1872": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1873": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3559,
        4764
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1874": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1876": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1878": {
      "fn": "PrevSale.buyNice",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1879": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "1"
    },
    "1880": {
      "branch": 79,
      "fn": "PrevSale.buyNice",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1881": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A4"
    },
    "1884": {
      "branch": 79,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1885": {
      "fn": "PrevSale.buyNice",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1887": {
      "fn": "PrevSale.buyNice",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1894": {
      "op": "SHL"
    },
    "1895": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1896": {
      "fn": "PrevSale.buyNice",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1899": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1901": {
      "fn": "PrevSale.buyNice",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1902": {
      "fn": "PrevSale.buyNice",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "1"
    },
    "1903": {
      "op": "MSTORE"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1908": {
      "op": "DUP3"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "op": "MSTORE"
    },
    "1911": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1946": {
      "op": "DUP3"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1951": {
      "op": "ADD"
    },
    "1952": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x456"
    },
    "1955": {
      "op": "JUMP"
    },
    "1956": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1957": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1959": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1961": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1962": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3633,
        3653
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 13,
      "value": "0x7BB"
    },
    "1965": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1966": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3645,
        3652
      ],
      "op": "PUSH8",
      "path": "26",
      "value": "0xDE0B6B3A7640000"
    },
    "1975": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3633,
        3644
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10C7"
    },
    "1978": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        3633,
        3653
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1979": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3633,
        3653
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1980": {
      "branch": 59,
      "fn": "PrevSale.buyNice",
      "offset": [
        3633,
        3658
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1981": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7FD"
    },
    "1984": {
      "branch": 59,
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1985": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1987": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1994": {
      "op": "SHL"
    },
    "1995": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1996": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1999": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2001": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2002": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "ADD",
      "path": "26"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2008": {
      "op": "DUP3"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "MSTORE"
    },
    "2011": {
      "op": "PUSH18",
      "value": "0x457861637420616D6F756E7473206F6E6C79"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2032": {
      "op": "SHL"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2035": {
      "op": "DUP3"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "MSTORE"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "2044": {
      "op": "JUMP"
    },
    "2045": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3625,
        3681
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2046": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3709,
        3719
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 14
    },
    "2047": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3723,
        3724
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2049": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2050": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2051": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2052": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3708
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x8"
    },
    "2054": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2056": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2057": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2059": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2060": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2061": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3699,
        3720
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2062": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x84A"
    },
    "2065": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2066": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2068": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2069": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2077": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2080": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2082": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2083": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "ADD",
      "path": "26"
    },
    "2084": {
      "op": "MSTORE"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2089": {
      "op": "DUP3"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "op": "MSTORE"
    },
    "2092": {
      "op": "PUSH14",
      "value": "0x57686974656C697374206F6E6C79"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2112": {
      "op": "DUP3"
    },
    "2113": {
      "op": "ADD"
    },
    "2114": {
      "op": "MSTORE"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2117": {
      "op": "ADD"
    },
    "2118": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "2121": {
      "op": "JUMP"
    },
    "2122": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3691,
        3743
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2123": {
      "offset": [
        892,
        902
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6216CA80"
    },
    "2128": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3761,
        3776
      ],
      "op": "TIMESTAMP",
      "path": "26",
      "statement": 15
    },
    "2129": {
      "branch": 60,
      "fn": "PrevSale.buyNice",
      "offset": [
        3761,
        3786
      ],
      "op": "LT",
      "path": "26"
    },
    "2130": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x889"
    },
    "2133": {
      "branch": 60,
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2134": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2136": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2137": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2145": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2148": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2150": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2151": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "ADD",
      "path": "26"
    },
    "2152": {
      "op": "MSTORE"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2157": {
      "op": "DUP3"
    },
    "2158": {
      "op": "ADD"
    },
    "2159": {
      "op": "MSTORE"
    },
    "2160": {
      "op": "PUSH9",
      "value": "0x14D85B19515B991959"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2175": {
      "op": "DUP3"
    },
    "2176": {
      "op": "ADD"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2180": {
      "op": "ADD"
    },
    "2181": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "2184": {
      "op": "JUMP"
    },
    "2185": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3753,
        3800
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2186": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3829,
        3838
      ],
      "op": "PUSH9",
      "path": "26",
      "statement": 16,
      "value": "0x56BC75E2D63100000"
    },
    "2196": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3818,
        3825
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2197": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3818,
        3838
      ],
      "op": "LT",
      "path": "26"
    },
    "2198": {
      "branch": 61,
      "fn": "PrevSale.buyNice",
      "offset": [
        3818,
        3838
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2199": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x8D4"
    },
    "2202": {
      "branch": 61,
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2203": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2205": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2212": {
      "op": "SHL"
    },
    "2213": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2214": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2217": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2219": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2220": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "ADD",
      "path": "26"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2226": {
      "op": "DUP3"
    },
    "2227": {
      "op": "ADD"
    },
    "2228": {
      "op": "MSTORE"
    },
    "2229": {
      "op": "PUSH15",
      "value": "0x135A5B9A5B5D5B481B9BDD081B595D"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2250": {
      "op": "DUP3"
    },
    "2251": {
      "op": "ADD"
    },
    "2252": {
      "op": "MSTORE"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2255": {
      "op": "ADD"
    },
    "2256": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "2259": {
      "op": "JUMP"
    },
    "2260": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3810,
        3858
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2261": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3902,
        3912
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2262": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3868,
        3888
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2264": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3913
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2265": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3913
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2266": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3913
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2267": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3901
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "2269": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3913
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2271": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3913
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2272": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3913
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2274": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3913
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2275": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3891,
        3913
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2276": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3955,
        3965
      ],
      "op": "PUSH10",
      "path": "26",
      "statement": 17,
      "value": "0x10F0CF064DD59200000"
    },
    "2287": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3944,
        3965
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2288": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3944,
        3965
      ],
      "op": "GT",
      "path": "26"
    },
    "2289": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3944,
        3965
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2290": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3944,
        3965
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2291": {
      "branch": 62,
      "fn": "PrevSale.buyNice",
      "offset": [
        3944,
        3965
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2292": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3944,
        4033
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x914"
    },
    "2295": {
      "branch": 62,
      "fn": "PrevSale.buyNice",
      "offset": [
        3944,
        4033
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3997,
        4018
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2298": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3997,
        4018
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2299": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4023,
        4033
      ],
      "op": "PUSH10",
      "path": "26",
      "value": "0x10F0CF064DD59200000"
    },
    "2310": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4023,
        4033
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2311": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3985,
        4019
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x911"
    },
    "2314": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3985,
        4019
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2315": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3985,
        3992
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2316": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3985,
        3992
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2317": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3985,
        3996
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2320": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        3985,
        4019
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2321": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3985,
        4019
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2322": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3985,
        4033
      ],
      "op": "GT",
      "path": "26"
    },
    "2323": {
      "branch": 63,
      "fn": "PrevSale.buyNice",
      "offset": [
        3985,
        4033
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2324": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3944,
        4033
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2325": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x94F"
    },
    "2328": {
      "branch": 63,
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2329": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2331": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2340": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2343": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2345": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2346": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "ADD",
      "path": "26"
    },
    "2347": {
      "op": "MSTORE"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2352": {
      "op": "DUP3"
    },
    "2353": {
      "op": "ADD"
    },
    "2354": {
      "op": "MSTORE"
    },
    "2355": {
      "op": "PUSH12",
      "value": "0x436170206F766572666C6F77"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2370": {
      "op": "SHL"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2373": {
      "op": "DUP3"
    },
    "2374": {
      "op": "ADD"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2378": {
      "op": "ADD"
    },
    "2379": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "2382": {
      "op": "JUMP"
    },
    "2383": {
      "fn": "PrevSale.buyNice",
      "offset": [
        3923,
        4071
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2384": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4103,
        4111
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 18,
      "value": "0x6"
    },
    "2386": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4103,
        4111
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2387": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4089,
        4100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7"
    },
    "2389": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4089,
        4100
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2390": {
      "branch": 64,
      "fn": "PrevSale.buyNice",
      "offset": [
        4089,
        4111
      ],
      "op": "LT",
      "path": "26"
    },
    "2391": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x993"
    },
    "2394": {
      "branch": 64,
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2395": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2397": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2406": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2411": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2412": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "ADD",
      "path": "26"
    },
    "2413": {
      "op": "MSTORE"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2418": {
      "op": "DUP3"
    },
    "2419": {
      "op": "ADD"
    },
    "2420": {
      "op": "MSTORE"
    },
    "2421": {
      "op": "PUSH14",
      "value": "0x131A5B5A5D08115E18D959591959"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "2438": {
      "op": "SHL"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2441": {
      "op": "DUP3"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2446": {
      "op": "ADD"
    },
    "2447": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "2450": {
      "op": "JUMP"
    },
    "2451": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4081,
        4130
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2452": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4257,
        4265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6"
    },
    "2454": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4257,
        4265
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2455": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4231,
        4242
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7"
    },
    "2457": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4231,
        4242
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2458": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4157,
        4164
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2459": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4157,
        4164
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2460": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4257,
        4265
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2461": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4231,
        4254
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9A6"
    },
    "2464": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4231,
        4254
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2465": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4157,
        4164
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2466": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4231,
        4246
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2469": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        4231,
        4254
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2470": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4231,
        4254
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2471": {
      "branch": 65,
      "fn": "PrevSale.buyNice",
      "offset": [
        4231,
        4265
      ],
      "op": "GT",
      "path": "26"
    },
    "2472": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4227,
        4326
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2473": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4227,
        4326
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9BE"
    },
    "2476": {
      "branch": 65,
      "fn": "PrevSale.buyNice",
      "offset": [
        4227,
        4326
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2477": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4303,
        4314
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 19,
      "value": "0x7"
    },
    "2479": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4303,
        4314
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2480": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4290,
        4298
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6"
    },
    "2482": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4290,
        4298
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2483": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4290,
        4315
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9BB"
    },
    "2486": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4290,
        4315
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2487": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4290,
        4302
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1053"
    },
    "2490": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        4290,
        4315
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2491": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4290,
        4315
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2492": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4281,
        4315
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2493": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4281,
        4315
      ],
      "op": "POP",
      "path": "26"
    },
    "2494": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4227,
        4326
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2495": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4336,
        4392
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 20,
      "value": "0x9F3"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2504": {
      "op": "SHL"
    },
    "2505": {
      "op": "SUB"
    },
    "2506": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4336,
        4340
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "2539": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4336,
        4357
      ],
      "op": "AND",
      "path": "26"
    },
    "2540": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4358,
        4368
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2541": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4378,
        4382
      ],
      "op": "ADDRESS",
      "path": "26"
    },
    "2542": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4385,
        4391
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2543": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4336,
        4357
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10D3"
    },
    "2546": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        4336,
        4392
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2547": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4336,
        4392
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2548": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4424,
        4510
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 21,
      "value": "0xA1C"
    },
    "2551": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4500
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA11"
    },
    "2554": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4486,
        4499
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x5"
    },
    "2556": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4486,
        4499
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2557": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4481
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x661"
    },
    "2560": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4472,
        4480
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2562": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4472,
        4480
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2563": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4467
      ],
      "op": "DUP6",
      "path": "26"
    },
    "2564": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4471
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x105F"
    },
    "2567": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4471
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2568": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4481
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2569": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4481
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2570": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4481
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "2575": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4481
      ],
      "op": "AND",
      "path": "26"
    },
    "2576": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        4461,
        4481
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2577": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4461,
        4500
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2578": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4424,
        4443
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "2580": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4424,
        4443
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2581": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4424,
        4443
      ],
      "op": "ADD",
      "path": "26"
    },
    "2582": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4424,
        4443
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2583": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4424,
        4443
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2584": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4424,
        4447
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2587": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        4424,
        4510
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2588": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4424,
        4510
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2589": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4402,
        4421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "2591": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4402,
        4421
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2592": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4402,
        4421
      ],
      "op": "ADD",
      "path": "26"
    },
    "2593": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4402,
        4510
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "2594": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4544,
        4565
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 22
    },
    "2595": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4544,
        4565
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2596": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4544,
        4577
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA2D"
    },
    "2599": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4544,
        4577
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2600": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4570,
        4576
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2601": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4544,
        4569
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2604": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        4544,
        4577
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2605": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4544,
        4577
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2606": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4520,
        4577
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2607": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4520,
        4577
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "2608": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4601,
        4612
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 23,
      "value": "0x7"
    },
    "2610": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4601,
        4612
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2611": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4601,
        4624
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "2614": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4601,
        4624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2615": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4617,
        4623
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2616": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4601,
        4616
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2619": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        4601,
        4624
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2620": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4601,
        4624
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2621": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4587,
        4598
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7"
    },
    "2623": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4587,
        4624
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "2624": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4733,
        4746
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 24,
      "value": "0x5"
    },
    "2626": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4733,
        4746
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2627": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4719,
        4727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2629": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4719,
        4727
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2630": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4664,
        4674
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2631": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4664,
        4674
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2632": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x96EA671EF97E3B0C25B75C51786366EC072E19CE8A92DB8EE92004D88319A87D"
    },
    "2665": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2666": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4688,
        4694
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2667": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4688,
        4694
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2668": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4708,
        4747
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA7A"
    },
    "2671": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4708,
        4747
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2672": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4708,
        4728
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x661"
    },
    "2675": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4708,
        4728
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2676": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4688,
        4694
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2677": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4688,
        4694
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2678": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4708,
        4718
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x105F"
    },
    "2681": {
      "fn": "PrevSale.buyNice",
      "jump": "i",
      "offset": [
        4708,
        4728
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2682": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4708,
        4747
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2683": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2685": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2686": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2687": {
      "op": "SWAP3"
    },
    "2688": {
      "op": "DUP4"
    },
    "2689": {
      "op": "MSTORE"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2692": {
      "op": "DUP4"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "op": "SWAP2"
    },
    "2695": {
      "op": "SWAP1"
    },
    "2696": {
      "op": "SWAP2"
    },
    "2697": {
      "op": "MSTORE"
    },
    "2698": {
      "op": "ADD"
    },
    "2699": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2701": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2702": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2703": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2704": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "SUB",
      "path": "26"
    },
    "2705": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2706": {
      "fn": "PrevSale.buyNice",
      "offset": [
        4640,
        4757
      ],
      "op": "LOG2",
      "path": "26"
    },
    "2707": {
      "op": "POP"
    },
    "2708": {
      "op": "POP"
    },
    "2709": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2711": {
      "offset": [
        2628,
        2650
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2712": {
      "fn": "PrevSale.buyNice",
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2713": {
      "op": "POP"
    },
    "2714": {
      "fn": "PrevSale.buyNice",
      "jump": "o",
      "offset": [
        3559,
        4764
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2715": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6090,
        6688
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2716": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6138,
        6152
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2718": {
      "offset": [
        892,
        902
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6216CA80"
    },
    "2723": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6183,
        6198
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "2724": {
      "branch": 66,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6183,
        6208
      ],
      "op": "GT",
      "path": "26"
    },
    "2725": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6164,
        6682
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2726": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6164,
        6682
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB50"
    },
    "2729": {
      "branch": 66,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6164,
        6682
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2730": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6246,
        6274
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xABA"
    },
    "2733": {
      "offset": [
        892,
        902
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6216CA80"
    },
    "2738": {
      "offset": [
        950,
        957
      ],
      "op": "PUSH3",
      "path": "26",
      "value": "0x127500"
    },
    "2742": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6246,
        6257
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2745": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6246,
        6274
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2746": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6246,
        6274
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2747": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6228,
        6243
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "2748": {
      "branch": 67,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6228,
        6274
      ],
      "op": "GT",
      "path": "26"
    },
    "2749": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6224,
        6320
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2750": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6224,
        6320
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAD0"
    },
    "2753": {
      "branch": 67,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6224,
        6320
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2754": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6301,
        6320
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 25,
      "value": "0xACD"
    },
    "2757": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6301,
        6307
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2758": {
      "offset": [
        1189,
        1193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9C4"
    },
    "2761": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6301,
        6311
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2764": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6301,
        6320
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2765": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6301,
        6320
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2766": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6292,
        6320
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2767": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6292,
        6320
      ],
      "op": "POP",
      "path": "26"
    },
    "2768": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6224,
        6320
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2769": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6356,
        6391
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAEC"
    },
    "2772": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6368,
        6390
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAE1"
    },
    "2775": {
      "offset": [
        950,
        957
      ],
      "op": "PUSH3",
      "path": "26",
      "value": "0x127500"
    },
    "2779": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6388,
        6389
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "2781": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6368,
        6387
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x105F"
    },
    "2784": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6368,
        6390
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2785": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6368,
        6390
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2786": {
      "offset": [
        892,
        902
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6216CA80"
    },
    "2791": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        892,
        902
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2792": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6356,
        6367
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2795": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6356,
        6391
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2796": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6356,
        6391
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2797": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6338,
        6353
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "2798": {
      "branch": 68,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6338,
        6391
      ],
      "op": "GT",
      "path": "26"
    },
    "2799": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6334,
        6437
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2800": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6334,
        6437
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB02"
    },
    "2803": {
      "branch": 68,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6334,
        6437
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2804": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6418,
        6437
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 26,
      "value": "0xAFF"
    },
    "2807": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6418,
        6424
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2808": {
      "offset": [
        1189,
        1193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9C4"
    },
    "2811": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6418,
        6428
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2814": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6418,
        6437
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2815": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6418,
        6437
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2816": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6409,
        6437
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2817": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6409,
        6437
      ],
      "op": "POP",
      "path": "26"
    },
    "2818": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6334,
        6437
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2819": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6473,
        6508
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB13"
    },
    "2822": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6485,
        6507
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAE1"
    },
    "2825": {
      "offset": [
        950,
        957
      ],
      "op": "PUSH3",
      "path": "26",
      "value": "0x127500"
    },
    "2829": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6505,
        6506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "2831": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6485,
        6504
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x105F"
    },
    "2834": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6485,
        6507
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2835": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6473,
        6508
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2836": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6455,
        6470
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "2837": {
      "branch": 69,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6455,
        6508
      ],
      "op": "GT",
      "path": "26"
    },
    "2838": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6451,
        6554
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2839": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6451,
        6554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB29"
    },
    "2842": {
      "branch": 69,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6451,
        6554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2843": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6535,
        6554
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 27,
      "value": "0xB26"
    },
    "2846": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6535,
        6541
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2847": {
      "offset": [
        1189,
        1193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9C4"
    },
    "2850": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6535,
        6545
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2853": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6535,
        6554
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2854": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6535,
        6554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2855": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6526,
        6554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2856": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6526,
        6554
      ],
      "op": "POP",
      "path": "26"
    },
    "2857": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6451,
        6554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2858": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6590,
        6625
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB3A"
    },
    "2861": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6602,
        6624
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAE1"
    },
    "2864": {
      "offset": [
        950,
        957
      ],
      "op": "PUSH3",
      "path": "26",
      "value": "0x127500"
    },
    "2868": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6622,
        6623
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2870": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6602,
        6621
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x105F"
    },
    "2873": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6602,
        6624
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2874": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6590,
        6625
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2875": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6572,
        6587
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "2876": {
      "branch": 70,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6572,
        6625
      ],
      "op": "GT",
      "path": "26"
    },
    "2877": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6568,
        6671
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2878": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6568,
        6671
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB50"
    },
    "2881": {
      "branch": 70,
      "fn": "PrevSale.availableAmount",
      "offset": [
        6568,
        6671
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2882": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6652,
        6671
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 28,
      "value": "0xB4D"
    },
    "2885": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6652,
        6658
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2886": {
      "offset": [
        1189,
        1193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9C4"
    },
    "2889": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1040"
    },
    "2892": {
      "fn": "PrevSale.availableAmount",
      "jump": "i",
      "offset": [
        6652,
        6671
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2893": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6652,
        6671
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2894": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6643,
        6671
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2895": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6643,
        6671
      ],
      "op": "POP",
      "path": "26"
    },
    "2896": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6568,
        6671
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2897": {
      "fn": "PrevSale.availableAmount",
      "offset": [
        6090,
        6688
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2898": {
      "fn": "PrevSale.availableAmount",
      "jump": "o",
      "offset": [
        6090,
        6688
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2899": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2900": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2902": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2903": {
      "op": "PUSH4",
      "value": "0xDC6E13E1"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2910": {
      "op": "SHL"
    },
    "2911": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2912": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2913": {
      "fn": "PrevSale.qualify",
      "offset": [
        2364,
        2374
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2914": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2916": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2917": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "ADD",
      "path": "26"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "fn": "PrevSale.qualify",
      "offset": [
        2283,
        2300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2921": {
      "fn": "PrevSale.qualify",
      "offset": [
        2283,
        2300
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2922": {
      "fn": "PrevSale.qualify",
      "offset": [
        2283,
        2300
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2923": {
      "fn": "PrevSale.qualify",
      "offset": [
        2283,
        2300
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2930": {
      "op": "SHL"
    },
    "2931": {
      "op": "SUB"
    },
    "2932": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2354
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "2965": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2363
      ],
      "op": "AND",
      "path": "26"
    },
    "2966": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2363
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2967": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2363
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xDC6E13E1"
    },
    "2972": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2363
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2975": {
      "op": "ADD"
    },
    "2976": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x120"
    },
    "2979": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2981": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2982": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2983": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2984": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "SUB",
      "path": "26"
    },
    "2985": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2986": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2987": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "GAS",
      "path": "26"
    },
    "2988": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "2989": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2990": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2991": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2992": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBBD"
    },
    "2995": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2996": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2997": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2999": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3000": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3001": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3002": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3004": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3005": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3006": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "POP",
      "path": "26"
    },
    "3007": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "POP",
      "path": "26"
    },
    "3008": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "POP",
      "path": "26"
    },
    "3009": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "POP",
      "path": "26"
    },
    "3010": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3012": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3013": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3014": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3016": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "NOT",
      "path": "26"
    },
    "3017": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3019": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3020": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "ADD",
      "path": "26"
    },
    "3021": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "AND",
      "path": "26"
    },
    "3022": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3023": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "ADD",
      "path": "26"
    },
    "3024": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3025": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3027": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3028": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "POP",
      "path": "26"
    },
    "3029": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3030": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "ADD",
      "path": "26"
    },
    "3031": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3032": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBE1"
    },
    "3035": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3036": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3037": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x146E"
    },
    "3040": {
      "fn": "PrevSale.qualify",
      "jump": "i",
      "offset": [
        2347,
        2375
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3041": {
      "fn": "PrevSale.qualify",
      "offset": [
        2347,
        2375
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "op": "POP"
    },
    "3044": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3046": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3047": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3056": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3057": {
      "fn": "PrevSale.qualify",
      "offset": [
        2419,
        2429
      ],
      "op": "CALLER",
      "path": "26"
    },
    "3058": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3060": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3061": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "ADD",
      "path": "26"
    },
    "3062": {
      "op": "MSTORE"
    },
    "3063": {
      "fn": "PrevSale.qualify",
      "offset": [
        2312,
        2375
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "3064": {
      "fn": "PrevSale.qualify",
      "offset": [
        2312,
        2375
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "3065": {
      "op": "POP"
    },
    "3066": {
      "fn": "PrevSale.qualify",
      "offset": [
        2385,
        2397
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3068": {
      "fn": "PrevSale.qualify",
      "offset": [
        2385,
        2397
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "3069": {
      "op": "POP"
    },
    "3070": {
      "op": "POP"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "op": "SUB"
    },
    "3079": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2408
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "3112": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2418
      ],
      "op": "AND",
      "path": "26"
    },
    "3113": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2418
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3114": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2418
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x70A08231"
    },
    "3119": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2418
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3123": {
      "op": "ADD"
    },
    "3124": {
      "op": "SWAP3"
    },
    "3125": {
      "op": "POP"
    },
    "3126": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC3D"
    },
    "3129": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3130": {
      "op": "POP"
    },
    "3131": {
      "op": "POP"
    },
    "3132": {
      "op": "JUMP"
    },
    "3133": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3134": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3136": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3138": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3139": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3140": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3141": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "SUB",
      "path": "26"
    },
    "3142": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3143": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3144": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "GAS",
      "path": "26"
    },
    "3145": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3146": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3147": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3148": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3149": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC5A"
    },
    "3152": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3153": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3154": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3156": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3157": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3158": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3159": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3161": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3162": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3163": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "POP",
      "path": "26"
    },
    "3164": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "POP",
      "path": "26"
    },
    "3165": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "POP",
      "path": "26"
    },
    "3166": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "POP",
      "path": "26"
    },
    "3167": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3169": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3170": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3171": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3173": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "NOT",
      "path": "26"
    },
    "3174": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3176": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3177": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "ADD",
      "path": "26"
    },
    "3178": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "AND",
      "path": "26"
    },
    "3179": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3180": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "ADD",
      "path": "26"
    },
    "3181": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3182": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3184": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3185": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "POP",
      "path": "26"
    },
    "3186": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3187": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "ADD",
      "path": "26"
    },
    "3188": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3189": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC7E"
    },
    "3192": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3193": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3194": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14D7"
    },
    "3197": {
      "fn": "PrevSale.qualify",
      "jump": "i",
      "offset": [
        2400,
        2430
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3198": {
      "fn": "PrevSale.qualify",
      "offset": [
        2400,
        2430
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3199": {
      "fn": "PrevSale.qualify",
      "offset": [
        2385,
        2430
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3200": {
      "fn": "PrevSale.qualify",
      "offset": [
        2385,
        2430
      ],
      "op": "POP",
      "path": "26"
    },
    "3201": {
      "fn": "PrevSale.qualify",
      "offset": [
        2462,
        2463
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 29,
      "value": "0x0"
    },
    "3203": {
      "fn": "PrevSale.qualify",
      "offset": [
        2455,
        2459
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3204": {
      "fn": "PrevSale.qualify",
      "offset": [
        2455,
        2463
      ],
      "op": "GT",
      "path": "26"
    },
    "3205": {
      "fn": "PrevSale.qualify",
      "offset": [
        2455,
        2488
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3206": {
      "fn": "PrevSale.qualify",
      "offset": [
        2455,
        2488
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3207": {
      "fn": "PrevSale.qualify",
      "offset": [
        2455,
        2488
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC9A"
    },
    "3210": {
      "fn": "PrevSale.qualify",
      "offset": [
        2455,
        2488
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3211": {
      "fn": "PrevSale.qualify",
      "offset": [
        2455,
        2488
      ],
      "op": "POP",
      "path": "26"
    },
    "3212": {
      "fn": "PrevSale.qualify",
      "offset": [
        2477,
        2488
      ],
      "op": "PUSH10",
      "path": "26",
      "value": "0x21E19E0C9BAB2400000"
    },
    "3223": {
      "fn": "PrevSale.qualify",
      "offset": [
        2467,
        2473
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3224": {
      "fn": "PrevSale.qualify",
      "offset": [
        2467,
        2488
      ],
      "op": "LT",
      "path": "26"
    },
    "3225": {
      "fn": "PrevSale.qualify",
      "offset": [
        2467,
        2488
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3226": {
      "fn": "PrevSale.qualify",
      "offset": [
        2455,
        2488
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3227": {
      "fn": "PrevSale.qualify",
      "offset": [
        2440,
        2488
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3228": {
      "fn": "PrevSale.qualify",
      "offset": [
        2440,
        2488
      ],
      "op": "POP",
      "path": "26"
    },
    "3229": {
      "fn": "PrevSale.qualify",
      "offset": [
        2302,
        2495
      ],
      "op": "POP",
      "path": "26"
    },
    "3230": {
      "fn": "PrevSale.qualify",
      "offset": [
        2302,
        2495
      ],
      "op": "POP",
      "path": "26"
    },
    "3231": {
      "fn": "PrevSale.qualify",
      "offset": [
        2243,
        2495
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3232": {
      "fn": "PrevSale.qualify",
      "jump": "o",
      "offset": [
        2243,
        2495
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3233": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4778,
        4946
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3234": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3236": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3243": {
      "op": "SHL"
    },
    "3244": {
      "op": "SUB"
    },
    "3245": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3246": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3247": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3248": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCCB"
    },
    "3251": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3252": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3261": {
      "op": "SHL"
    },
    "3262": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3263": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3264": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3266": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3267": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x456"
    },
    "3270": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3271": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1417"
    },
    "3274": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3276": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3278": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3279": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3286": {
      "op": "SHL"
    },
    "3287": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3288": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3289": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4878,
        4882
      ],
      "op": "ADDRESS",
      "path": "26"
    },
    "3290": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3292": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3293": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "ADD",
      "path": "26"
    },
    "3294": {
      "op": "MSTORE"
    },
    "3295": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4830,
        4852
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3297": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4830,
        4852
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3298": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4859
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3337": {
      "op": "SHL"
    },
    "3338": {
      "op": "SUB"
    },
    "3339": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4869
      ],
      "op": "AND",
      "path": "26"
    },
    "3340": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4869
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3341": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4869
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x70A08231"
    },
    "3346": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4869
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3349": {
      "op": "ADD"
    },
    "3350": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3352": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3354": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3355": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3356": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3357": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "SUB",
      "path": "26"
    },
    "3358": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3359": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3360": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "GAS",
      "path": "26"
    },
    "3361": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3362": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3363": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3364": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3365": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD32"
    },
    "3368": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3369": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3370": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3372": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3373": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3374": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3375": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3377": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3378": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3379": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "POP",
      "path": "26"
    },
    "3380": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "POP",
      "path": "26"
    },
    "3381": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "POP",
      "path": "26"
    },
    "3382": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "POP",
      "path": "26"
    },
    "3383": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3385": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3386": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3387": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3389": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "NOT",
      "path": "26"
    },
    "3390": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3392": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3393": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "ADD",
      "path": "26"
    },
    "3394": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "AND",
      "path": "26"
    },
    "3395": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3396": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "ADD",
      "path": "26"
    },
    "3397": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3398": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3400": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3401": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "POP",
      "path": "26"
    },
    "3402": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3403": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "ADD",
      "path": "26"
    },
    "3404": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3405": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD56"
    },
    "3408": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3409": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3410": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14D7"
    },
    "3413": {
      "fn": "PrevSale.claimRaised",
      "jump": "i",
      "offset": [
        4855,
        4884
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3414": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4855,
        4884
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3415": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4830,
        4884
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4894,
        4939
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 30,
      "value": "0xDAC"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3426": {
      "op": "SHL"
    },
    "3427": {
      "op": "SUB"
    },
    "3428": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4894,
        4898
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "3461": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4894,
        4911
      ],
      "op": "AND",
      "path": "26"
    },
    "3462": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4912,
        4922
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "3495": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4830,
        4884
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3496": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4894,
        4911
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1144"
    },
    "3499": {
      "fn": "PrevSale.claimRaised",
      "jump": "i",
      "offset": [
        4894,
        4939
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3500": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4894,
        4939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3501": {
      "fn": "PrevSale.claimRaised",
      "offset": [
        4820,
        4946
      ],
      "op": "POP",
      "path": "26"
    },
    "3502": {
      "fn": "PrevSale.claimRaised",
      "jump": "o",
      "offset": [
        4778,
        4946
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3503": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3504": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3506": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3513": {
      "op": "SHL"
    },
    "3514": {
      "op": "SUB"
    },
    "3515": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3516": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3517": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3518": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD9"
    },
    "3521": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3522": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3524": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3534": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3537": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x456"
    },
    "3540": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3541": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1417"
    },
    "3544": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3545": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3552": {
      "op": "SHL"
    },
    "3553": {
      "op": "SUB"
    },
    "3554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 31
    },
    "3555": {
      "branch": 78,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "3556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3E"
    },
    "3559": {
      "branch": 78,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3569": {
      "op": "SHL"
    },
    "3570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "3578": {
      "op": "MSTORE"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3583": {
      "op": "DUP3"
    },
    "3584": {
      "op": "ADD"
    },
    "3585": {
      "op": "MSTORE"
    },
    "3586": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "op": "ADD"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3636": {
      "op": "DUP3"
    },
    "3637": {
      "op": "ADD"
    },
    "3638": {
      "op": "MSTORE"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x456"
    },
    "3645": {
      "op": "JUMP"
    },
    "3646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3647": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xDAC"
    },
    "3650": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3651": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1077"
    },
    "3654": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3655": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2683,
        3114
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3656": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2740,
        2756
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3658": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2759,
        2768
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE51"
    },
    "3661": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2759,
        2766
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB53"
    },
    "3664": {
      "fn": "PrevSale.whitelistSelf",
      "jump": "i",
      "offset": [
        2759,
        2768
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3665": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2759,
        2768
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3666": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2740,
        2768
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3667": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2740,
        2768
      ],
      "op": "POP",
      "path": "26"
    },
    "3668": {
      "branch": 71,
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2786,
        2797
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 33
    },
    "3669": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE8E"
    },
    "3672": {
      "branch": 71,
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3673": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3675": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3682": {
      "op": "SHL"
    },
    "3683": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3684": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3687": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3689": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3690": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "ADD",
      "path": "26"
    },
    "3691": {
      "op": "MSTORE"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3696": {
      "op": "DUP3"
    },
    "3697": {
      "op": "ADD"
    },
    "3698": {
      "op": "MSTORE"
    },
    "3699": {
      "op": "PUSH11",
      "value": "0x155B9C5D585B1A599A5959"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "op": "MSTORE"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3721": {
      "op": "ADD"
    },
    "3722": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "3725": {
      "op": "JUMP"
    },
    "3726": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2778,
        2813
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3727": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2841,
        2851
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 34
    },
    "3728": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3730": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3731": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3732": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3733": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2840
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x8"
    },
    "3735": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3737": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3738": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3740": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3741": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3742": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2852
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3743": {
      "branch": 72,
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2831,
        2857
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3744": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xEE1"
    },
    "3747": {
      "branch": 72,
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3748": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3750": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3757": {
      "op": "SHL"
    },
    "3758": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3759": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3762": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3764": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3765": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "ADD",
      "path": "26"
    },
    "3766": {
      "op": "MSTORE"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3771": {
      "op": "DUP3"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH19",
      "value": "0x105B1C9958591E481DDA1A5D195B1A5CDD1959"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3796": {
      "op": "SHL"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3799": {
      "op": "DUP3"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "MSTORE"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "3808": {
      "op": "JUMP"
    },
    "3809": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2823,
        2881
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3810": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2927,
        2928
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 35,
      "value": "0x0"
    },
    "3812": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3813": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3814": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3815": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2906
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x9"
    },
    "3817": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3819": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3820": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3822": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3823": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3824": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "op": "SUB"
    },
    "3833": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2915
      ],
      "op": "AND",
      "path": "26"
    },
    "3834": {
      "branch": 73,
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2899,
        2929
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3835": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF3B"
    },
    "3838": {
      "branch": 73,
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3839": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3841": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3842": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3848": {
      "op": "SHL"
    },
    "3849": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3850": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3853": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3855": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3856": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "ADD",
      "path": "26"
    },
    "3857": {
      "op": "MSTORE"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3862": {
      "op": "DUP3"
    },
    "3863": {
      "op": "ADD"
    },
    "3864": {
      "op": "MSTORE"
    },
    "3865": {
      "op": "PUSH18",
      "value": "0x151BDAD95B88185B1C9958591E481D5CD959"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3886": {
      "op": "SHL"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3889": {
      "op": "DUP3"
    },
    "3890": {
      "op": "ADD"
    },
    "3891": {
      "op": "MSTORE"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "3898": {
      "op": "JUMP"
    },
    "3899": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2891,
        2952
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3900": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 36,
      "value": "0x40"
    },
    "3902": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3903": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3910": {
      "op": "SHL"
    },
    "3911": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3912": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3913": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3915": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3916": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "ADD",
      "path": "26"
    },
    "3917": {
      "op": "DUP4"
    },
    "3918": {
      "op": "SWAP1"
    },
    "3919": {
      "op": "MSTORE"
    },
    "3920": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2999,
        3009
      ],
      "op": "CALLER",
      "path": "26"
    },
    "3921": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2999,
        3009
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3928": {
      "op": "SHL"
    },
    "3929": {
      "op": "SUB"
    },
    "3930": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2978
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "3963": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2986
      ],
      "op": "AND",
      "path": "26"
    },
    "3964": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2986
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3965": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2986
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6352211E"
    },
    "3970": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2986
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3976": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3978": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3979": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3980": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3981": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "SUB",
      "path": "26"
    },
    "3982": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3983": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3984": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "GAS",
      "path": "26"
    },
    "3985": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3986": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3987": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3988": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3989": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFA2"
    },
    "3992": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3993": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3994": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3996": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3997": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3998": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3999": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4001": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4002": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4003": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "POP",
      "path": "26"
    },
    "4004": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "POP",
      "path": "26"
    },
    "4005": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "POP",
      "path": "26"
    },
    "4006": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "POP",
      "path": "26"
    },
    "4007": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4009": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4010": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4011": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4013": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "NOT",
      "path": "26"
    },
    "4014": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4016": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4017": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "ADD",
      "path": "26"
    },
    "4018": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "AND",
      "path": "26"
    },
    "4019": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4020": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "ADD",
      "path": "26"
    },
    "4021": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4022": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4024": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4025": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "POP",
      "path": "26"
    },
    "4026": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4027": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "ADD",
      "path": "26"
    },
    "4028": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4029": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFC6"
    },
    "4032": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4033": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4034": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14F0"
    },
    "4037": {
      "fn": "PrevSale.whitelistSelf",
      "jump": "i",
      "offset": [
        2970,
        2995
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4038": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        2995
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4045": {
      "op": "SHL"
    },
    "4046": {
      "op": "SUB"
    },
    "4047": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        3009
      ],
      "op": "AND",
      "path": "26"
    },
    "4048": {
      "branch": 74,
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2970,
        3009
      ],
      "op": "EQ",
      "path": "26"
    },
    "4049": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x100C"
    },
    "4052": {
      "branch": 74,
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4053": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4055": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4062": {
      "op": "SHL"
    },
    "4063": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4064": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4067": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4069": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4070": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "ADD",
      "path": "26"
    },
    "4071": {
      "op": "MSTORE"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4076": {
      "op": "DUP3"
    },
    "4077": {
      "op": "ADD"
    },
    "4078": {
      "op": "MSTORE"
    },
    "4079": {
      "op": "PUSH13",
      "value": "0x24B63632B3B0B61037BBB732B9"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4095": {
      "op": "SHL"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4098": {
      "op": "DUP3"
    },
    "4099": {
      "op": "ADD"
    },
    "4100": {
      "op": "MSTORE"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4103": {
      "op": "ADD"
    },
    "4104": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x456"
    },
    "4107": {
      "op": "JUMP"
    },
    "4108": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        2962,
        3027
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4109": {
      "op": "POP"
    },
    "4110": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3047,
        3057
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 37
    },
    "4111": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4113": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4114": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4115": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4116": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3046
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x8"
    },
    "4118": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4120": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4121": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4122": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4123": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4125": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4126": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4127": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3058
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4128": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3068
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4129": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3068
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4130": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3037,
        3068
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4131": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "SWAP4",
      "path": "26",
      "statement": 38
    },
    "4132": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4133": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4134": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3085
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x9"
    },
    "4136": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4137": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4138": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4139": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4140": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4141": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3094
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4142": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3107
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4143": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3107
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "op": "SUB"
    },
    "4152": {
      "op": "NOT"
    },
    "4153": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3107
      ],
      "op": "AND",
      "path": "26"
    },
    "4154": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3107
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4155": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3107
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4156": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3107
      ],
      "op": "OR",
      "path": "26"
    },
    "4157": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3107
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4158": {
      "fn": "PrevSale.whitelistSelf",
      "offset": [
        3078,
        3107
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4159": {
      "fn": "PrevSale.whitelistSelf",
      "jump": "o",
      "offset": [
        2683,
        3114
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4160": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4161": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4163": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 39,
      "value": "0x104C"
    },
    "4166": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4167": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4168": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1523"
    },
    "4171": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4172": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4173": {
      "fn": "SafeMath.add",
      "offset": [
        2818,
        2830
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4174": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4175": {
      "op": "POP"
    },
    "4176": {
      "op": "POP"
    },
    "4177": {
      "op": "POP"
    },
    "4178": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4179": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4180": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4182": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 40,
      "value": "0x104C"
    },
    "4185": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4186": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4187": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x153B"
    },
    "4190": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4191": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4192": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4194": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 41,
      "value": "0x104C"
    },
    "4197": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4198": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4199": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1552"
    },
    "4202": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4203": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4204": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4206": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 42,
      "value": "0x104C"
    },
    "4209": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4210": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4211": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1587"
    },
    "4214": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4215": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4216": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4218": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4219": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4226": {
      "op": "SHL"
    },
    "4227": {
      "op": "SUB"
    },
    "4228": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 43
    },
    "4229": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4230": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4237": {
      "op": "SHL"
    },
    "4238": {
      "op": "SUB"
    },
    "4239": {
      "op": "NOT"
    },
    "4240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4241": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4242": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4243": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "4244": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4245": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4246": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x40"
    },
    "4248": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4249": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4250": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4251": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4252": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "4253": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4254": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4255": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4256": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4289": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4290": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4291": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4292": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4293": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4294": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4295": {
      "fn": "SafeMath.mod",
      "offset": [
        4385,
        4481
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4296": {
      "fn": "SafeMath.mod",
      "offset": [
        4443,
        4450
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4298": {
      "fn": "SafeMath.mod",
      "offset": [
        4469,
        4474
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 45,
      "value": "0x104C"
    },
    "4301": {
      "fn": "SafeMath.mod",
      "offset": [
        4473,
        4474
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4302": {
      "fn": "SafeMath.mod",
      "offset": [
        4469,
        4470
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4303": {
      "fn": "SafeMath.mod",
      "offset": [
        4469,
        4474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x159B"
    },
    "4306": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        4469,
        4474
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4307": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4308": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 46,
      "value": "0x40"
    },
    "4310": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4317": {
      "op": "SHL"
    },
    "4318": {
      "op": "SUB"
    },
    "4319": {
      "op": "DUP1"
    },
    "4320": {
      "op": "DUP6"
    },
    "4321": {
      "op": "AND"
    },
    "4322": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4324": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4325": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "4326": {
      "op": "MSTORE"
    },
    "4327": {
      "op": "DUP4"
    },
    "4328": {
      "op": "AND"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4331": {
      "op": "DUP3"
    },
    "4332": {
      "op": "ADD"
    },
    "4333": {
      "op": "MSTORE"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4336": {
      "op": "DUP2"
    },
    "4337": {
      "op": "ADD"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "SWAP1"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x113E"
    },
    "4344": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4345": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4346": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4347": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4354": {
      "op": "SHL"
    },
    "4355": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4358": {
      "op": "ADD"
    },
    "4359": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4360": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4362": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4363": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4366": {
      "op": "NOT"
    },
    "4367": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4368": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4369": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "6"
    },
    "4370": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "4371": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4372": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4373": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4374": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4375": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4376": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4378": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4379": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "4380": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4381": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4388": {
      "op": "SHL"
    },
    "4389": {
      "op": "SUB"
    },
    "4390": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "6"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4397": {
      "op": "SHL"
    },
    "4398": {
      "op": "SUB"
    },
    "4399": {
      "op": "NOT"
    },
    "4400": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4401": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4402": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "6"
    },
    "4403": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4404": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4405": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4406": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "6"
    },
    "4407": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4408": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4409": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4410": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1179"
    },
    "4413": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4414": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4415": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "4416": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "4417": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "4418": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "4419": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        912,
        1153
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4420": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4421": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 47,
      "value": "0x40"
    },
    "4423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4430": {
      "op": "SHL"
    },
    "4431": {
      "op": "SUB"
    },
    "4432": {
      "op": "DUP4"
    },
    "4433": {
      "op": "AND"
    },
    "4434": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4436": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4437": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "6"
    },
    "4438": {
      "op": "MSTORE"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4441": {
      "op": "DUP2"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "op": "DUP3"
    },
    "4444": {
      "op": "SWAP1"
    },
    "4445": {
      "op": "MSTORE"
    },
    "4446": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1174"
    },
    "4449": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4450": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4451": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4452": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4459": {
      "op": "SHL"
    },
    "4460": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4463": {
      "op": "ADD"
    },
    "4464": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1107"
    },
    "4467": {
      "op": "JUMP"
    },
    "4468": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4469": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "4470": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "4471": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "4472": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4474": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11CE"
    },
    "4479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4480": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4486": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "4487": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4489": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4490": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4491": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4493": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4494": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4495": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "4498": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4531": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4532": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4533": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "6"
    },
    "4534": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "op": "SUB"
    },
    "4543": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "6"
    },
    "4544": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x124B"
    },
    "4547": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4548": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4549": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "4556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "6"
    },
    "4557": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4558": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4559": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4563": {
      "op": "POP"
    },
    "4564": {
      "branch": 80,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1174"
    },
    "4568": {
      "branch": 80,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4569": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 48
    },
    "4570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "4574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "4578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4579": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11EC"
    },
    "4582": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4583": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4584": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144C"
    },
    "4587": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4588": {
      "branch": 81,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4589": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1174"
    },
    "4592": {
      "branch": 81,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4593": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4595": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4602": {
      "op": "SHL"
    },
    "4603": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4604": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4607": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4609": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4610": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "6"
    },
    "4611": {
      "op": "MSTORE"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4616": {
      "op": "DUP3"
    },
    "4617": {
      "op": "ADD"
    },
    "4618": {
      "op": "MSTORE"
    },
    "4619": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4654": {
      "op": "DUP3"
    },
    "4655": {
      "op": "ADD"
    },
    "4656": {
      "op": "MSTORE"
    },
    "4657": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4670": {
      "op": "SHL"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4673": {
      "op": "DUP3"
    },
    "4674": {
      "op": "ADD"
    },
    "4675": {
      "op": "MSTORE"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4678": {
      "op": "ADD"
    },
    "4679": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x456"
    },
    "4682": {
      "op": "JUMP"
    },
    "4683": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4684": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "4686": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 49,
      "value": "0x125A"
    },
    "4689": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4690": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4691": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4693": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4694": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1262"
    },
    "4697": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4698": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4699": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "4700": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4701": {
      "op": "POP"
    },
    "4702": {
      "op": "POP"
    },
    "4703": {
      "op": "POP"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4707": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "4709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 50
    },
    "4710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "4711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "11"
    },
    "4712": {
      "branch": 75,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12C3"
    },
    "4716": {
      "branch": 75,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4726": {
      "op": "SHL"
    },
    "4727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "11"
    },
    "4735": {
      "op": "MSTORE"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4740": {
      "op": "DUP3"
    },
    "4741": {
      "op": "ADD"
    },
    "4742": {
      "op": "MSTORE"
    },
    "4743": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4778": {
      "op": "DUP3"
    },
    "4779": {
      "op": "ADD"
    },
    "4780": {
      "op": "MSTORE"
    },
    "4781": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4790": {
      "op": "SHL"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4793": {
      "op": "DUP3"
    },
    "4794": {
      "op": "ADD"
    },
    "4795": {
      "op": "MSTORE"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4798": {
      "op": "ADD"
    },
    "4799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x456"
    },
    "4802": {
      "op": "JUMP"
    },
    "4803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4810": {
      "op": "SHL"
    },
    "4811": {
      "op": "SUB"
    },
    "4812": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "11",
      "statement": 51
    },
    "4813": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "11"
    },
    "4814": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "4815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 52,
      "value": "0x131A"
    },
    "4818": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4821": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4828": {
      "op": "SHL"
    },
    "4829": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4833": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4835": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4836": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "11"
    },
    "4837": {
      "op": "MSTORE"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4842": {
      "op": "DUP3"
    },
    "4843": {
      "op": "ADD"
    },
    "4844": {
      "op": "MSTORE"
    },
    "4845": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4880": {
      "op": "DUP3"
    },
    "4881": {
      "op": "ADD"
    },
    "4882": {
      "op": "MSTORE"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4885": {
      "op": "ADD"
    },
    "4886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x456"
    },
    "4889": {
      "op": "JUMP"
    },
    "4890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4891": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4901": {
      "op": "SHL"
    },
    "4902": {
      "op": "SUB"
    },
    "4903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "11"
    },
    "4904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1336"
    },
    "4912": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4913": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15DB"
    },
    "4917": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4921": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4924": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "11"
    },
    "4927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4928": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "11"
    },
    "4931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "11"
    },
    "4932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "4934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "4935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "4936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "11"
    },
    "4942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1373"
    },
    "4945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "4951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "11"
    },
    "4954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "4956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "4958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "11"
    },
    "4959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "4961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "4974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1378"
    },
    "4978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "4982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "4984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "4986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "4988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4989": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "4990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 53,
      "value": "0x1388"
    },
    "4993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1393"
    },
    "4999": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "5002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "5003": {
      "op": "POP"
    },
    "5004": {
      "op": "POP"
    },
    "5005": {
      "op": "POP"
    },
    "5006": {
      "op": "POP"
    },
    "5007": {
      "op": "POP"
    },
    "5008": {
      "op": "POP"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5011": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5012": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5014": {
      "branch": 76,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5015": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5016": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13A2"
    },
    "5019": {
      "branch": 76,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5020": {
      "op": "POP"
    },
    "5021": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 54
    },
    "5022": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104C"
    },
    "5025": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5026": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5027": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5028": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5029": {
      "branch": 77,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5030": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13B2"
    },
    "5033": {
      "branch": 77,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5034": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5035": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5036": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5037": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5038": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5040": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "11"
    },
    "5041": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5042": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5043": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 55
    },
    "5044": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5046": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5053": {
      "op": "SHL"
    },
    "5054": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5055": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5056": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5058": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "11"
    },
    "5059": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x456"
    },
    "5062": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5063": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5064": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15F7"
    },
    "5067": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5068": {
      "op": "JUMPDEST"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5075": {
      "op": "SHL"
    },
    "5076": {
      "op": "SUB"
    },
    "5077": {
      "op": "DUP2"
    },
    "5078": {
      "op": "AND"
    },
    "5079": {
      "op": "DUP2"
    },
    "5080": {
      "op": "EQ"
    },
    "5081": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "5084": {
      "op": "JUMPI"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5087": {
      "op": "DUP1"
    },
    "5088": {
      "op": "REVERT"
    },
    "5089": {
      "op": "JUMPDEST"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5094": {
      "op": "DUP3"
    },
    "5095": {
      "op": "DUP5"
    },
    "5096": {
      "op": "SUB"
    },
    "5097": {
      "op": "SLT"
    },
    "5098": {
      "op": "ISZERO"
    },
    "5099": {
      "op": "PUSH2",
      "value": "0x13F3"
    },
    "5102": {
      "op": "JUMPI"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5105": {
      "op": "DUP1"
    },
    "5106": {
      "op": "REVERT"
    },
    "5107": {
      "op": "JUMPDEST"
    },
    "5108": {
      "op": "DUP2"
    },
    "5109": {
      "op": "CALLDATALOAD"
    },
    "5110": {
      "op": "PUSH2",
      "value": "0x104C"
    },
    "5113": {
      "op": "DUP2"
    },
    "5114": {
      "op": "PUSH2",
      "value": "0x13CC"
    },
    "5117": {
      "jump": "i",
      "op": "JUMP"
    },
    "5118": {
      "op": "JUMPDEST"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5123": {
      "op": "DUP3"
    },
    "5124": {
      "op": "DUP5"
    },
    "5125": {
      "op": "SUB"
    },
    "5126": {
      "op": "SLT"
    },
    "5127": {
      "op": "ISZERO"
    },
    "5128": {
      "op": "PUSH2",
      "value": "0x1410"
    },
    "5131": {
      "op": "JUMPI"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5134": {
      "op": "DUP1"
    },
    "5135": {
      "op": "REVERT"
    },
    "5136": {
      "op": "JUMPDEST"
    },
    "5137": {
      "op": "POP"
    },
    "5138": {
      "op": "CALLDATALOAD"
    },
    "5139": {
      "op": "SWAP2"
    },
    "5140": {
      "op": "SWAP1"
    },
    "5141": {
      "op": "POP"
    },
    "5142": {
      "jump": "o",
      "op": "JUMP"
    },
    "5143": {
      "op": "JUMPDEST"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5146": {
      "op": "DUP1"
    },
    "5147": {
      "op": "DUP3"
    },
    "5148": {
      "op": "MSTORE"
    },
    "5149": {
      "op": "DUP2"
    },
    "5150": {
      "op": "DUP2"
    },
    "5151": {
      "op": "ADD"
    },
    "5152": {
      "op": "MSTORE"
    },
    "5153": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5188": {
      "op": "DUP3"
    },
    "5189": {
      "op": "ADD"
    },
    "5190": {
      "op": "MSTORE"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5193": {
      "op": "ADD"
    },
    "5194": {
      "op": "SWAP1"
    },
    "5195": {
      "jump": "o",
      "op": "JUMP"
    },
    "5196": {
      "op": "JUMPDEST"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5201": {
      "op": "DUP3"
    },
    "5202": {
      "op": "DUP5"
    },
    "5203": {
      "op": "SUB"
    },
    "5204": {
      "op": "SLT"
    },
    "5205": {
      "op": "ISZERO"
    },
    "5206": {
      "op": "PUSH2",
      "value": "0x145E"
    },
    "5209": {
      "op": "JUMPI"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5212": {
      "op": "DUP1"
    },
    "5213": {
      "op": "REVERT"
    },
    "5214": {
      "op": "JUMPDEST"
    },
    "5215": {
      "op": "DUP2"
    },
    "5216": {
      "op": "MLOAD"
    },
    "5217": {
      "op": "DUP1"
    },
    "5218": {
      "op": "ISZERO"
    },
    "5219": {
      "op": "ISZERO"
    },
    "5220": {
      "op": "DUP2"
    },
    "5221": {
      "op": "EQ"
    },
    "5222": {
      "op": "PUSH2",
      "value": "0x104C"
    },
    "5225": {
      "op": "JUMPI"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5228": {
      "op": "DUP1"
    },
    "5229": {
      "op": "REVERT"
    },
    "5230": {
      "op": "JUMPDEST"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5233": {
      "op": "DUP1"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5236": {
      "op": "DUP1"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5239": {
      "op": "DUP1"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5242": {
      "op": "DUP1"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5245": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5248": {
      "op": "DUP11"
    },
    "5249": {
      "op": "DUP13"
    },
    "5250": {
      "op": "SUB"
    },
    "5251": {
      "op": "SLT"
    },
    "5252": {
      "op": "ISZERO"
    },
    "5253": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "5256": {
      "op": "JUMPI"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5259": {
      "op": "DUP1"
    },
    "5260": {
      "op": "REVERT"
    },
    "5261": {
      "op": "JUMPDEST"
    },
    "5262": {
      "op": "DUP10"
    },
    "5263": {
      "op": "MLOAD"
    },
    "5264": {
      "op": "SWAP9"
    },
    "5265": {
      "op": "POP"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5268": {
      "op": "DUP11"
    },
    "5269": {
      "op": "ADD"
    },
    "5270": {
      "op": "MLOAD"
    },
    "5271": {
      "op": "SWAP8"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5275": {
      "op": "DUP11"
    },
    "5276": {
      "op": "ADD"
    },
    "5277": {
      "op": "MLOAD"
    },
    "5278": {
      "op": "SWAP7"
    },
    "5279": {
      "op": "POP"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5282": {
      "op": "DUP11"
    },
    "5283": {
      "op": "ADD"
    },
    "5284": {
      "op": "MLOAD"
    },
    "5285": {
      "op": "SWAP6"
    },
    "5286": {
      "op": "POP"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5289": {
      "op": "DUP11"
    },
    "5290": {
      "op": "ADD"
    },
    "5291": {
      "op": "MLOAD"
    },
    "5292": {
      "op": "SWAP5"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5296": {
      "op": "DUP11"
    },
    "5297": {
      "op": "ADD"
    },
    "5298": {
      "op": "MLOAD"
    },
    "5299": {
      "op": "SWAP4"
    },
    "5300": {
      "op": "POP"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5303": {
      "op": "DUP11"
    },
    "5304": {
      "op": "ADD"
    },
    "5305": {
      "op": "MLOAD"
    },
    "5306": {
      "op": "SWAP3"
    },
    "5307": {
      "op": "POP"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5310": {
      "op": "DUP11"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "MLOAD"
    },
    "5313": {
      "op": "SWAP2"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5318": {
      "op": "DUP11"
    },
    "5319": {
      "op": "ADD"
    },
    "5320": {
      "op": "MLOAD"
    },
    "5321": {
      "op": "SWAP1"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "op": "SWAP3"
    },
    "5324": {
      "op": "SWAP6"
    },
    "5325": {
      "op": "SWAP9"
    },
    "5326": {
      "op": "POP"
    },
    "5327": {
      "op": "SWAP3"
    },
    "5328": {
      "op": "SWAP6"
    },
    "5329": {
      "op": "SWAP9"
    },
    "5330": {
      "op": "POP"
    },
    "5331": {
      "op": "SWAP3"
    },
    "5332": {
      "op": "SWAP6"
    },
    "5333": {
      "op": "SWAP9"
    },
    "5334": {
      "jump": "o",
      "op": "JUMP"
    },
    "5335": {
      "op": "JUMPDEST"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5340": {
      "op": "DUP3"
    },
    "5341": {
      "op": "DUP5"
    },
    "5342": {
      "op": "SUB"
    },
    "5343": {
      "op": "SLT"
    },
    "5344": {
      "op": "ISZERO"
    },
    "5345": {
      "op": "PUSH2",
      "value": "0x14E9"
    },
    "5348": {
      "op": "JUMPI"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5351": {
      "op": "DUP1"
    },
    "5352": {
      "op": "REVERT"
    },
    "5353": {
      "op": "JUMPDEST"
    },
    "5354": {
      "op": "POP"
    },
    "5355": {
      "op": "MLOAD"
    },
    "5356": {
      "op": "SWAP2"
    },
    "5357": {
      "op": "SWAP1"
    },
    "5358": {
      "op": "POP"
    },
    "5359": {
      "jump": "o",
      "op": "JUMP"
    },
    "5360": {
      "op": "JUMPDEST"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5365": {
      "op": "DUP3"
    },
    "5366": {
      "op": "DUP5"
    },
    "5367": {
      "op": "SUB"
    },
    "5368": {
      "op": "SLT"
    },
    "5369": {
      "op": "ISZERO"
    },
    "5370": {
      "op": "PUSH2",
      "value": "0x1502"
    },
    "5373": {
      "op": "JUMPI"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5376": {
      "op": "DUP1"
    },
    "5377": {
      "op": "REVERT"
    },
    "5378": {
      "op": "JUMPDEST"
    },
    "5379": {
      "op": "DUP2"
    },
    "5380": {
      "op": "MLOAD"
    },
    "5381": {
      "op": "PUSH2",
      "value": "0x104C"
    },
    "5384": {
      "op": "DUP2"
    },
    "5385": {
      "op": "PUSH2",
      "value": "0x13CC"
    },
    "5388": {
      "jump": "i",
      "op": "JUMP"
    },
    "5389": {
      "op": "JUMPDEST"
    },
    "5390": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5397": {
      "op": "SHL"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5400": {
      "op": "MSTORE"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5405": {
      "op": "MSTORE"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5410": {
      "op": "REVERT"
    },
    "5411": {
      "op": "JUMPDEST"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5414": {
      "op": "DUP3"
    },
    "5415": {
      "op": "NOT"
    },
    "5416": {
      "op": "DUP3"
    },
    "5417": {
      "op": "GT"
    },
    "5418": {
      "op": "ISZERO"
    },
    "5419": {
      "op": "PUSH2",
      "value": "0x1536"
    },
    "5422": {
      "op": "JUMPI"
    },
    "5423": {
      "op": "PUSH2",
      "value": "0x1536"
    },
    "5426": {
      "op": "PUSH2",
      "value": "0x150D"
    },
    "5429": {
      "jump": "i",
      "op": "JUMP"
    },
    "5430": {
      "op": "JUMPDEST"
    },
    "5431": {
      "op": "POP"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "SWAP1"
    },
    "5434": {
      "jump": "o",
      "op": "JUMP"
    },
    "5435": {
      "op": "JUMPDEST"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5438": {
      "op": "DUP3"
    },
    "5439": {
      "op": "DUP3"
    },
    "5440": {
      "op": "LT"
    },
    "5441": {
      "op": "ISZERO"
    },
    "5442": {
      "op": "PUSH2",
      "value": "0x154D"
    },
    "5445": {
      "op": "JUMPI"
    },
    "5446": {
      "op": "PUSH2",
      "value": "0x154D"
    },
    "5449": {
      "op": "PUSH2",
      "value": "0x150D"
    },
    "5452": {
      "jump": "i",
      "op": "JUMP"
    },
    "5453": {
      "op": "JUMPDEST"
    },
    "5454": {
      "op": "POP"
    },
    "5455": {
      "op": "SUB"
    },
    "5456": {
      "op": "SWAP1"
    },
    "5457": {
      "jump": "o",
      "op": "JUMP"
    },
    "5458": {
      "op": "JUMPDEST"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5461": {
      "op": "DUP2"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5464": {
      "op": "NOT"
    },
    "5465": {
      "op": "DIV"
    },
    "5466": {
      "op": "DUP4"
    },
    "5467": {
      "op": "GT"
    },
    "5468": {
      "op": "DUP3"
    },
    "5469": {
      "op": "ISZERO"
    },
    "5470": {
      "op": "ISZERO"
    },
    "5471": {
      "op": "AND"
    },
    "5472": {
      "op": "ISZERO"
    },
    "5473": {
      "op": "PUSH2",
      "value": "0x156C"
    },
    "5476": {
      "op": "JUMPI"
    },
    "5477": {
      "op": "PUSH2",
      "value": "0x156C"
    },
    "5480": {
      "op": "PUSH2",
      "value": "0x150D"
    },
    "5483": {
      "jump": "i",
      "op": "JUMP"
    },
    "5484": {
      "op": "JUMPDEST"
    },
    "5485": {
      "op": "POP"
    },
    "5486": {
      "op": "MUL"
    },
    "5487": {
      "op": "SWAP1"
    },
    "5488": {
      "jump": "o",
      "op": "JUMP"
    },
    "5489": {
      "op": "JUMPDEST"
    },
    "5490": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5497": {
      "op": "SHL"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5500": {
      "op": "MSTORE"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5505": {
      "op": "MSTORE"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5510": {
      "op": "REVERT"
    },
    "5511": {
      "op": "JUMPDEST"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5514": {
      "op": "DUP3"
    },
    "5515": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5518": {
      "op": "JUMPI"
    },
    "5519": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5522": {
      "op": "PUSH2",
      "value": "0x1571"
    },
    "5525": {
      "jump": "i",
      "op": "JUMP"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "POP"
    },
    "5528": {
      "op": "DIV"
    },
    "5529": {
      "op": "SWAP1"
    },
    "5530": {
      "jump": "o",
      "op": "JUMP"
    },
    "5531": {
      "op": "JUMPDEST"
    },
    "5532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5534": {
      "op": "DUP3"
    },
    "5535": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "5538": {
      "op": "JUMPI"
    },
    "5539": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "5542": {
      "op": "PUSH2",
      "value": "0x1571"
    },
    "5545": {
      "jump": "i",
      "op": "JUMP"
    },
    "5546": {
      "op": "JUMPDEST"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "op": "MOD"
    },
    "5549": {
      "op": "SWAP1"
    },
    "5550": {
      "jump": "o",
      "op": "JUMP"
    },
    "5551": {
      "op": "JUMPDEST"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5554": {
      "op": "JUMPDEST"
    },
    "5555": {
      "op": "DUP4"
    },
    "5556": {
      "op": "DUP2"
    },
    "5557": {
      "op": "LT"
    },
    "5558": {
      "op": "ISZERO"
    },
    "5559": {
      "op": "PUSH2",
      "value": "0x15CA"
    },
    "5562": {
      "op": "JUMPI"
    },
    "5563": {
      "op": "DUP2"
    },
    "5564": {
      "op": "DUP2"
    },
    "5565": {
      "op": "ADD"
    },
    "5566": {
      "op": "MLOAD"
    },
    "5567": {
      "op": "DUP4"
    },
    "5568": {
      "op": "DUP3"
    },
    "5569": {
      "op": "ADD"
    },
    "5570": {
      "op": "MSTORE"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "op": "PUSH2",
      "value": "0x15B2"
    },
    "5577": {
      "op": "JUMP"
    },
    "5578": {
      "op": "JUMPDEST"
    },
    "5579": {
      "op": "DUP4"
    },
    "5580": {
      "op": "DUP2"
    },
    "5581": {
      "op": "GT"
    },
    "5582": {
      "op": "ISZERO"
    },
    "5583": {
      "op": "PUSH2",
      "value": "0x113E"
    },
    "5586": {
      "op": "JUMPI"
    },
    "5587": {
      "op": "POP"
    },
    "5588": {
      "op": "POP"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5591": {
      "op": "SWAP2"
    },
    "5592": {
      "op": "ADD"
    },
    "5593": {
      "op": "MSTORE"
    },
    "5594": {
      "jump": "o",
      "op": "JUMP"
    },
    "5595": {
      "op": "JUMPDEST"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5598": {
      "op": "DUP3"
    },
    "5599": {
      "op": "MLOAD"
    },
    "5600": {
      "op": "PUSH2",
      "value": "0x15ED"
    },
    "5603": {
      "op": "DUP2"
    },
    "5604": {
      "op": "DUP5"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5607": {
      "op": "DUP8"
    },
    "5608": {
      "op": "ADD"
    },
    "5609": {
      "op": "PUSH2",
      "value": "0x15AF"
    },
    "5612": {
      "jump": "i",
      "op": "JUMP"
    },
    "5613": {
      "op": "JUMPDEST"
    },
    "5614": {
      "op": "SWAP2"
    },
    "5615": {
      "op": "SWAP1"
    },
    "5616": {
      "op": "SWAP2"
    },
    "5617": {
      "op": "ADD"
    },
    "5618": {
      "op": "SWAP3"
    },
    "5619": {
      "op": "SWAP2"
    },
    "5620": {
      "op": "POP"
    },
    "5621": {
      "op": "POP"
    },
    "5622": {
      "jump": "o",
      "op": "JUMP"
    },
    "5623": {
      "op": "JUMPDEST"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5626": {
      "op": "DUP2"
    },
    "5627": {
      "op": "MSTORE"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5630": {
      "op": "DUP3"
    },
    "5631": {
      "op": "MLOAD"
    },
    "5632": {
      "op": "DUP1"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5635": {
      "op": "DUP5"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "MSTORE"
    },
    "5638": {
      "op": "PUSH2",
      "value": "0x1616"
    },
    "5641": {
      "op": "DUP2"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5644": {
      "op": "DUP6"
    },
    "5645": {
      "op": "ADD"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5648": {
      "op": "DUP8"
    },
    "5649": {
      "op": "ADD"
    },
    "5650": {
      "op": "PUSH2",
      "value": "0x15AF"
    },
    "5653": {
      "jump": "i",
      "op": "JUMP"
    },
    "5654": {
      "op": "JUMPDEST"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5657": {
      "op": "ADD"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5660": {
      "op": "NOT"
    },
    "5661": {
      "op": "AND"
    },
    "5662": {
      "op": "SWAP2"
    },
    "5663": {
      "op": "SWAP1"
    },
    "5664": {
      "op": "SWAP2"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5668": {
      "op": "ADD"
    },
    "5669": {
      "op": "SWAP3"
    },
    "5670": {
      "op": "SWAP2"
    },
    "5671": {
      "op": "POP"
    },
    "5672": {
      "op": "POP"
    },
    "5673": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e4daa508501c9758d278dc7690f9cb28ac34a17f",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n//BSC Address 0x87F8e8f9616689808176d3a97a506c8cEeD32674\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./NICEToken.sol\";\n// TEST\nimport \"./TestStaking2.sol\";\n\ncontract PrevSale is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeERC20 for ERC20;\n\n    uint256 public constant DIVISOR = 10000;\n\n    struct Buy {\n        uint256 amountBought;\n        uint256 amountClaimed;\n        uint256 amountOwed;\n    }\n\n    uint256 public constant saleStart = 1645401600;\n    uint256 public constant saleEnd = 1645660800;\n    uint256 public constant vestingDuration = 2 weeks;\n    StakingTest public immutable staking;\n    ERC721 public immutable crushGod;\n    NICEToken public niceToken;\n    ERC20 public immutable busd;\n    uint256 public totalSale = 26595745 ether;\n    uint256 public constant vesting = 2500;\n    uint256 public priceDec = 10000;\n    uint256 public pricePerToken = 47;\n    uint256 public maxRaise = 125000 ether;\n    uint256 public totalRaised;\n\n    address public immutable devAddress;\n\n    mapping(address => uint256) public whitelist;\n    mapping(uint256 => address) public nftUsed;\n    mapping(address => Buy) public userBought;\n\n    // EVENTS\n    event WhitelistStarted(bool status);\n    event SaleStarts(uint256 startBlock);\n    event NiceBought(address indexed buyer, uint256 busd, uint256 nice);\n    event NiceClaimed(address indexed buyer, uint256 amount);\n    event LogEvent(uint256 data1, string data2);\n\n    constructor(\n        address crushGodNft,\n        address stakingV2,\n        address _busd\n    ) {\n        crushGod = ERC721(crushGodNft);\n        staking = StakingTest(stakingV2);\n        busd = ERC20(_busd);\n        devAddress = 0xADdb2B59d1B782e8392Ee03d7E2cEaA240e7f1c0;\n    }\n\n    /// @notice qualify only checks quantity\n    /// @dev qualify is an overlook of the amount of CrushGod NFTs held and tokens staked\n    function qualify() public view returns (bool _isQualified) {\n        (, uint256 staked, , , , , , , ) = staking.stakings(msg.sender);\n        uint256 nfts = crushGod.balanceOf(msg.sender);\n        _isQualified = nfts > 0 && staked >= 10000 ether;\n    }\n\n    /// @notice user will need to self whitelist prior to the sale\n    /// @param tokenId the NFT Id to register with\n    /// @dev once whitelisted, the token locked to that wallet.\n    function whitelistSelf(uint256 tokenId) public {\n        bool isQualified = qualify();\n        require(isQualified, \"Unqualified\");\n        require(whitelist[msg.sender] == 0, \"Already whitelisted\");\n        require(nftUsed[tokenId] == address(0), \"Token already used\");\n        require(crushGod.ownerOf(tokenId) == msg.sender, \"Illegal owner\");\n        whitelist[msg.sender] = tokenId;\n        nftUsed[tokenId] = msg.sender;\n    }\n\n    function setNiceToken(address _tokenAddress) external onlyOwner {\n        require(address(niceToken) == address(0), \"$NICE already set\");\n        niceToken = NICEToken(_tokenAddress);\n    }\n\n    /// @notice Reserve NICE allocation with BUSD\n    /// @param _amount Amount of BUSD to lock NICE amount\n    /// @dev minimum of $100 BUSD, max of $5K BUSD\n    /// @dev if maxRaise is exceeded we will allocate just a portion of that amount.\n    function buyNice(uint256 _amount) external nonReentrant {\n        require(_amount.mod(1 ether) == 0, \"Exact amounts only\");\n        require(whitelist[msg.sender] > 0, \"Whitelist only\");\n        require(block.timestamp < saleEnd, \"SaleEnded\");\n        require(_amount >= 100 ether, \"Minimum not met\");\n        Buy storage userInfo = userBought[msg.sender];\n        require(\n            _amount <= 5000 ether &&\n                _amount.add(userInfo.amountBought) <= 5000 ether,\n            \"Cap overflow\"\n        );\n        require(totalRaised < maxRaise, \"Limit Exceeded\");\n        uint256 amount = _amount;\n        // When exceeding, send the rest to the user\n        if (totalRaised.add(amount) > maxRaise) {\n            amount = maxRaise.sub(totalRaised);\n        }\n\n        busd.safeTransferFrom(msg.sender, address(this), amount);\n        userInfo.amountOwed = userInfo.amountOwed.add(\n            amount.mul(priceDec).div(pricePerToken)\n        );\n        userInfo.amountBought = userInfo.amountBought.add(amount);\n        totalRaised = totalRaised.add(amount);\n\n        emit NiceBought(\n            msg.sender,\n            amount,\n            amount.mul(priceDec).div(pricePerToken)\n        );\n    }\n\n    ///\n    function claimRaised() external onlyOwner {\n        uint256 currentBalance = busd.balanceOf(address(this));\n        busd.safeTransfer(devAddress, currentBalance);\n    }\n\n    /// @notice function that gets available tokens to the user.\n    /// @dev transfers NICE to the user directly by minting straight to their wallets\n    function claimTokens() external nonReentrant {\n        Buy storage userInfo = userBought[msg.sender];\n        require(\n            saleEnd > 0 && block.timestamp > saleEnd.add(vestingDuration),\n            \"Claim Unavailable\"\n        );\n        require(address(niceToken) != address(0), \"Token Not added\");\n        uint256 claimable = availableAmount();\n        require(userInfo.amountClaimed < claimable, \"Already claimed\");\n        // Make sure we're not claiming more than available\n        claimable = claimable.sub(userInfo.amountClaimed);\n        userInfo.amountClaimed = userInfo.amountClaimed.add(claimable);\n        claimable = userInfo.amountOwed.mul(claimable).div(DIVISOR);\n        niceToken.mint(msg.sender, claimable);\n        emit NiceClaimed(msg.sender, claimable);\n    }\n\n    /// @notice get claimable percentage after sale end\n    /// @return _avail percentage available to claim\n    /// @dev this function checks if time has passed to set the max amount claimable\n    function availableAmount() public view returns (uint256 _avail) {\n        if (saleEnd > 0 && block.timestamp > saleEnd) {\n            if (block.timestamp > saleEnd.add(vestingDuration))\n                _avail = _avail.add(vesting);\n            if (block.timestamp > saleEnd.add(vestingDuration.mul(2)))\n                _avail = _avail.add(vesting);\n            if (block.timestamp > saleEnd.add(vestingDuration.mul(3)))\n                _avail = _avail.add(vesting);\n            if (block.timestamp > saleEnd.add(vestingDuration.mul(4)))\n                _avail = _avail.add(vesting);\n        }\n    }\n}\n",
  "sourceMap": "531:6159:26:-:0;;;1135:14;1108:41;;1225:5;1199:31;;1267:2;1236:33;;1301:12;1275:38;;1822:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:12;921:18:0;:32::i;:::-;1701:1:1;1806:22;;-1:-1:-1;;;;;1929:30:26;;;;;1969:32;;;;;2011:19;;;2053:42;2040:55;;531:6159;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:33:-;93:13;;-1:-1:-1;;;;;135:31:33;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;531:6159:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/PrevSale.sol",
  "type": "contract"
}