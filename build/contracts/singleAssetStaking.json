{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract CRUSHToken",
          "name": "_crush",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_crushPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_reserveAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_withdrawFeeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_totalRewarded",
          "type": "uint256"
        }
      ],
      "name": "CompoundAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_totalPool",
          "type": "uint256"
        }
      ],
      "name": "RewardPoolUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipeint",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "StakeUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addRewardToPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressIndexes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compoundAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crush",
      "outputs": [
        {
          "internalType": "contract CRUSHToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crushPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earlyWithdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earlyWithdrawFeeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyTotalPoolWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "enterStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastAutoCompoundBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "leaveStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "leaveStakingCompletely",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "pendingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFeeBurn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFeeCompounder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFeeReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setCrushPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setEarlyWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "setEarlyWithdrawFeeTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFeeBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFeeCompounder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFeeReserve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "singleCompound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastBlockCompounded",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastBlockStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "12": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "16": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "19": "contracts/CrushToken.sol",
    "2": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "27": "contracts/SingleAsset.sol",
    "3": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/SingleAsset.sol",
    "exportedSymbols": {
      "Address": [
        12694
      ],
      "CRUSHToken": [
        3289
      ],
      "Context": [
        12716
      ],
      "ERC20": [
        12296
      ],
      "IERC20": [
        12374
      ],
      "IERC20Metadata": [
        12399
      ],
      "Ownable": [
        11128
      ],
      "SafeMath": [
        11664
      ],
      "singleAssetStaking": [
        10948
      ]
    },
    "id": 10949,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9525,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:24:27"
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9526,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10949,
        "sourceUnit": 11129,
        "src": "152:52:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 9527,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10949,
        "sourceUnit": 11665,
        "src": "205:57:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CrushToken.sol",
        "file": "./CrushToken.sol",
        "id": 9528,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10949,
        "sourceUnit": 3290,
        "src": "274:26:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9529,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11128,
              "src": "333:7:27"
            },
            "id": 9530,
            "nodeType": "InheritanceSpecifier",
            "src": "333:7:27"
          }
        ],
        "canonicalName": "singleAssetStaking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10948,
        "linearizedBaseContracts": [
          10948,
          11128,
          12716
        ],
        "name": "singleAssetStaking",
        "nameLocation": "311:18:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9533,
            "libraryName": {
              "id": 9531,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11664,
              "src": "353:8:27"
            },
            "nodeType": "UsingForDirective",
            "src": "347:27:27",
            "typeName": {
              "id": 9532,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 9536,
            "mutability": "constant",
            "name": "MAX_CRUSH_PER_BLOCK",
            "nameLocation": "397:19:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "380:59:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9534,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030303030303030303030303030303030",
              "id": 9535,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "419:20:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000"
              },
              "value": "10000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 9539,
            "mutability": "constant",
            "name": "MAX_FEE",
            "nameLocation": "462:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "445:31:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9537,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "445:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 9538,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "472:4:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "bca5503d",
            "id": 9542,
            "mutability": "mutable",
            "name": "performanceFeeCompounder",
            "nameLocation": "523:24:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "508:44:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9540,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "508:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 9541,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "550:2:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e74d2e2",
            "id": 9545,
            "mutability": "mutable",
            "name": "performanceFeeBurn",
            "nameLocation": "598:18:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "583:39:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9543,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 9544,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "619:3:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 9548,
            "mutability": "constant",
            "name": "divisor",
            "nameLocation": "669:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "652:32:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9546,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "652:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 9547,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "679:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a80a7882",
            "id": 9551,
            "mutability": "mutable",
            "name": "earlyWithdrawFee",
            "nameLocation": "706:16:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "691:36:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9549,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "691:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 9550,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "725:2:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a3960bc",
            "id": 9554,
            "mutability": "mutable",
            "name": "performanceFeeReserve",
            "nameLocation": "773:21:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "758:42:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9552,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "758:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313930",
              "id": 9553,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "797:3:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_190_by_1",
                "typeString": "int_const 190"
              },
              "value": "190"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4b37f006",
            "id": 9557,
            "mutability": "mutable",
            "name": "blockPerSecond",
            "nameLocation": "848:14:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "833:33:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9555,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "833:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 9556,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "865:1:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6903d0b6",
            "id": 9567,
            "mutability": "mutable",
            "name": "earlyWithdrawFeeTime",
            "nameLocation": "887:20:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "872:69:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9558,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "872:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 9566,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_rational_259200_by_1",
                      "typeString": "int_const 259200"
                    },
                    "id": 9563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_4320_by_1",
                        "typeString": "int_const 4320"
                      },
                      "id": 9561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3732",
                        "id": 9559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "911:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_72_by_1",
                          "typeString": "int_const 72"
                        },
                        "value": "72"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 9560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "916:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "911:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4320_by_1",
                        "typeString": "int_const 4320"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "3630",
                      "id": 9562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "921:2:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "60"
                    },
                    "src": "911:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_259200_by_1",
                      "typeString": "int_const 259200"
                    }
                  }
                ],
                "id": 9564,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "910:14:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_259200_by_1",
                  "typeString": "int_const 259200"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "id": 9565,
                "name": "blockPerSecond",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 9557,
                "src": "927:14:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "910:31:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b359a9f9",
            "id": 9570,
            "mutability": "mutable",
            "name": "crush",
            "nameLocation": "999:5:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "981:23:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CRUSHToken_$3289",
              "typeString": "contract CRUSHToken"
            },
            "typeName": {
              "id": 9569,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9568,
                "name": "CRUSHToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3289,
                "src": "981:10:27"
              },
              "referencedDeclaration": 3289,
              "src": "981:10:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                "typeString": "contract CRUSHToken"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "singleAssetStaking.staked",
            "id": 9581,
            "members": [
              {
                "constant": false,
                "id": 9572,
                "mutability": "mutable",
                "name": "stakedAmount",
                "nameLocation": "1043:12:27",
                "nodeType": "VariableDeclaration",
                "scope": 9581,
                "src": "1035:20:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9571,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1035:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9574,
                "mutability": "mutable",
                "name": "claimedAmount",
                "nameLocation": "1073:13:27",
                "nodeType": "VariableDeclaration",
                "scope": 9581,
                "src": "1065:21:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9573,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1065:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9576,
                "mutability": "mutable",
                "name": "lastBlockCompounded",
                "nameLocation": "1104:19:27",
                "nodeType": "VariableDeclaration",
                "scope": 9581,
                "src": "1096:27:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9575,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1096:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9578,
                "mutability": "mutable",
                "name": "lastBlockStaked",
                "nameLocation": "1141:15:27",
                "nodeType": "VariableDeclaration",
                "scope": 9581,
                "src": "1133:23:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9577,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1133:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9580,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "1174:5:27",
                "nodeType": "VariableDeclaration",
                "scope": 9581,
                "src": "1166:13:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9579,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1166:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "staked",
            "nameLocation": "1018:6:27",
            "nodeType": "StructDefinition",
            "scope": 10948,
            "src": "1011:175:27",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc6e13e1",
            "id": 9586,
            "mutability": "mutable",
            "name": "stakings",
            "nameLocation": "1225:8:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1191:42:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
              "typeString": "mapping(address => struct singleAssetStaking.staked)"
            },
            "typeName": {
              "id": 9585,
              "keyType": {
                "id": 9582,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1199:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1191:26:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                "typeString": "mapping(address => struct singleAssetStaking.staked)"
              },
              "valueType": {
                "id": 9584,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9583,
                  "name": "staked",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9581,
                  "src": "1210:6:27"
                },
                "referencedDeclaration": 9581,
                "src": "1210:6:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                  "typeString": "struct singleAssetStaking.staked"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5832d571",
            "id": 9589,
            "mutability": "mutable",
            "name": "addressIndexes",
            "nameLocation": "1256:14:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1239:31:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9587,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1239:7:27",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9588,
              "nodeType": "ArrayTypeName",
              "src": "1239:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecfb49a3",
            "id": 9591,
            "mutability": "mutable",
            "name": "totalPool",
            "nameLocation": "1292:9:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1277:24:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9590,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1277:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4bf211b8",
            "id": 9593,
            "mutability": "mutable",
            "name": "lastAutoCompoundBlock",
            "nameLocation": "1322:21:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1307:36:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9592,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1307:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c61f1c0b",
            "id": 9596,
            "mutability": "mutable",
            "name": "crushPerBlock",
            "nameLocation": "1364:13:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1349:32:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9594,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1349:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 9595,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1380:1:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f79ed94b",
            "id": 9598,
            "mutability": "mutable",
            "name": "reserveAddress",
            "nameLocation": "1402:14:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1387:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9597,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1387:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "784def8c",
            "id": 9600,
            "mutability": "mutable",
            "name": "withdrawFeeAddress",
            "nameLocation": "1437:18:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1422:33:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9599,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1422:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "817b1cd2",
            "id": 9602,
            "mutability": "mutable",
            "name": "totalStaked",
            "nameLocation": "1476:11:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1461:26:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9601,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1461:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d54ad2a1",
            "id": 9604,
            "mutability": "mutable",
            "name": "totalClaimed",
            "nameLocation": "1509:12:27",
            "nodeType": "VariableDeclaration",
            "scope": 10948,
            "src": "1494:27:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9603,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1494:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 9608,
            "name": "RewardPoolUpdated",
            "nameLocation": "1534:17:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9606,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_totalPool",
                  "nameLocation": "1568:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9608,
                  "src": "1552:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1552:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1551:28:27"
            },
            "src": "1528:52:27"
          },
          {
            "anonymous": false,
            "id": 9612,
            "name": "CompoundAll",
            "nameLocation": "1591:11:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9610,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_totalRewarded",
                  "nameLocation": "1619:14:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9612,
                  "src": "1603:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1602:32:27"
            },
            "src": "1585:50:27"
          },
          {
            "anonymous": false,
            "id": 9618,
            "name": "StakeUpdated",
            "nameLocation": "1646:12:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9614,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipeint",
                  "nameLocation": "1675:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9618,
                  "src": "1659:25:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9616,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1702:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9618,
                  "src": "1686:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1658:52:27"
            },
            "src": "1640:71:27"
          },
          {
            "body": {
              "id": 9650,
              "nodeType": "Block",
              "src": "1864:198:27",
              "statements": [
                {
                  "expression": {
                    "id": 9632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9630,
                      "name": "crush",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9570,
                      "src": "1874:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                        "typeString": "contract CRUSHToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9631,
                      "name": "_crush",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9621,
                      "src": "1882:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                        "typeString": "contract CRUSHToken"
                      }
                    },
                    "src": "1874:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                      "typeString": "contract CRUSHToken"
                    }
                  },
                  "id": 9633,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:14:27"
                },
                {
                  "expression": {
                    "id": 9636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9634,
                      "name": "crushPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9596,
                      "src": "1898:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9635,
                      "name": "_crushPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9623,
                      "src": "1914:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1898:30:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9637,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:30:27"
                },
                {
                  "expression": {
                    "id": 9640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9638,
                      "name": "reserveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9598,
                      "src": "1938:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9639,
                      "name": "_reserveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9625,
                      "src": "1955:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1938:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9641,
                  "nodeType": "ExpressionStatement",
                  "src": "1938:32:27"
                },
                {
                  "expression": {
                    "id": 9644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9642,
                      "name": "lastAutoCompoundBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9593,
                      "src": "1980:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 9643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2004:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1980:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9645,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:25:27"
                },
                {
                  "expression": {
                    "id": 9648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9646,
                      "name": "withdrawFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9600,
                      "src": "2015:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9647,
                      "name": "_withdrawFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9627,
                      "src": "2036:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2015:40:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9649,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:40:27"
                }
              ]
            },
            "id": 9651,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9621,
                  "mutability": "mutable",
                  "name": "_crush",
                  "nameLocation": "1749:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "1738:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                    "typeString": "contract CRUSHToken"
                  },
                  "typeName": {
                    "id": 9620,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9619,
                      "name": "CRUSHToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3289,
                      "src": "1738:10:27"
                    },
                    "referencedDeclaration": 3289,
                    "src": "1738:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                      "typeString": "contract CRUSHToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9623,
                  "mutability": "mutable",
                  "name": "_crushPerBlock",
                  "nameLocation": "1773:14:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "1765:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9625,
                  "mutability": "mutable",
                  "name": "_reserveAddress",
                  "nameLocation": "1805:15:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "1797:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9627,
                  "mutability": "mutable",
                  "name": "_withdrawFeeAddress",
                  "nameLocation": "1838:19:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9651,
                  "src": "1830:27:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1728:135:27"
            },
            "returnParameters": {
              "id": 9629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1864:0:27"
            },
            "scope": 10948,
            "src": "1717:345:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9691,
              "nodeType": "Block",
              "src": "2276:291:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 9660,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2323:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2323:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9658,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9570,
                              "src": "2307:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                "typeString": "contract CRUSHToken"
                              }
                            },
                            "id": 9659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11807,
                            "src": "2307:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 9662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2307:27:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 9663,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9654,
                          "src": "2338:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2307:38:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420437275736820746f6b656e7320666f72207472616e73666572",
                        "id": 9665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2359:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dba957fe7961d53de5591eabb916530a6b1c456987a2f043f7793ac0f98c0279",
                          "typeString": "literal_string \"Insufficient Crush tokens for transfer\""
                        },
                        "value": "Insufficient Crush tokens for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dba957fe7961d53de5591eabb916530a6b1c456987a2f043f7793ac0f98c0279",
                          "typeString": "literal_string \"Insufficient Crush tokens for transfer\""
                        }
                      ],
                      "id": 9657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2286:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:123:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9667,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:123:27"
                },
                {
                  "expression": {
                    "id": 9673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9668,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9591,
                      "src": "2419:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9671,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9654,
                          "src": "2445:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 9669,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9591,
                          "src": "2431:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "2431:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2431:22:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2419:34:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9674,
                  "nodeType": "ExpressionStatement",
                  "src": "2419:34:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9678,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2482:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2482:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9682,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2502:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                              "typeString": "contract singleAssetStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                              "typeString": "contract singleAssetStaking"
                            }
                          ],
                          "id": 9681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2494:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9680,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2494:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2494:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9684,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9654,
                        "src": "2509:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9675,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "2463:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 9677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11908,
                      "src": "2463:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:54:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9686,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:54:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9688,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9591,
                        "src": "2550:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9687,
                      "name": "RewardPoolUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9608,
                      "src": "2532:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 9689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9690,
                  "nodeType": "EmitStatement",
                  "src": "2527:33:27"
                }
              ]
            },
            "documentation": {
              "id": 9652,
              "nodeType": "StructuredDocumentation",
              "src": "2068:154:27",
              "text": "Adds the provided amount to the totalPool\n @param _amount the amount to add\n @dev adds the provided amount to `totalPool` state variable"
            },
            "functionSelector": "3a53ed49",
            "id": 9692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addRewardToPool",
            "nameLocation": "2236:15:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9654,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2260:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9692,
                  "src": "2252:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:17:27"
            },
            "returnParameters": {
              "id": 9656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:0:27"
            },
            "scope": 10948,
            "src": "2227:340:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9717,
              "nodeType": "Block",
              "src": "2633:236:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9700,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9694,
                          "src": "2651:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2662:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2651:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727573682070657220426c6f636b2063616e206e6f74206265206e65676174697665",
                        "id": 9703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2665:37:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b94e3f2460bc538d41f2b76f2dd99b96d67526c8ff902160c0d7f0d26eb93a9b",
                          "typeString": "literal_string \"Crush per Block can not be negative\""
                        },
                        "value": "Crush per Block can not be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b94e3f2460bc538d41f2b76f2dd99b96d67526c8ff902160c0d7f0d26eb93a9b",
                          "typeString": "literal_string \"Crush per Block can not be negative\""
                        }
                      ],
                      "id": 9699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2643:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:60:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9705,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:60:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9707,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9694,
                          "src": "2734:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 9708,
                          "name": "MAX_CRUSH_PER_BLOCK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9536,
                          "src": "2745:19:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2734:30:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727573682050657220426c6f636b2063616e206e6f74206265206d6f7265207468616e203130",
                        "id": 9710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2778:41:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a24545bd00480f82ed4348616350c1b4aef87020a24f6890e4f1050bbe84251",
                          "typeString": "literal_string \"Crush Per Block can not be more than 10\""
                        },
                        "value": "Crush Per Block can not be more than 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a24545bd00480f82ed4348616350c1b4aef87020a24f6890e4f1050bbe84251",
                          "typeString": "literal_string \"Crush Per Block can not be more than 10\""
                        }
                      ],
                      "id": 9706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2713:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2713:116:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9712,
                  "nodeType": "ExpressionStatement",
                  "src": "2713:116:27"
                },
                {
                  "expression": {
                    "id": 9715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9713,
                      "name": "crushPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9596,
                      "src": "2839:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9714,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9694,
                      "src": "2855:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2839:23:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9716,
                  "nodeType": "ExpressionStatement",
                  "src": "2839:23:27"
                }
              ]
            },
            "functionSelector": "a775573a",
            "id": 9718,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9697,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9696,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "2623:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "2623:9:27"
              }
            ],
            "name": "setCrushPerBlock",
            "nameLocation": "2582:16:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9694,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2607:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9718,
                  "src": "2599:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2598:17:27"
            },
            "returnParameters": {
              "id": 9698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:27"
            },
            "scope": 10948,
            "src": "2573:296:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9858,
              "nodeType": "Block",
              "src": "3038:1007:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 9727,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3085:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3085:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9725,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9570,
                              "src": "3069:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                "typeString": "contract CRUSHToken"
                              }
                            },
                            "id": 9726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11807,
                            "src": "3069:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 9729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3069:27:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 9730,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9721,
                          "src": "3100:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3069:38:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420437275736820746f6b656e7320666f72207472616e73666572",
                        "id": 9732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3121:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dba957fe7961d53de5591eabb916530a6b1c456987a2f043f7793ac0f98c0279",
                          "typeString": "literal_string \"Insufficient Crush tokens for transfer\""
                        },
                        "value": "Insufficient Crush tokens for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dba957fe7961d53de5591eabb916530a6b1c456987a2f043f7793ac0f98c0279",
                          "typeString": "literal_string \"Insufficient Crush tokens for transfer\""
                        }
                      ],
                      "id": 9724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3048:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3048:123:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9734,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:123:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9736,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9721,
                          "src": "3189:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3199:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3189:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b696e6720616d6f756e74",
                        "id": 9739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3202:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9c0d5dd5e8a872974c962153c7432ff09de4bfca383982e4c351f8032354b74",
                          "typeString": "literal_string \"Invalid staking amount\""
                        },
                        "value": "Invalid staking amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9c0d5dd5e8a872974c962153c7432ff09de4bfca383982e4c351f8032354b74",
                          "typeString": "literal_string \"Invalid staking amount\""
                        }
                      ],
                      "id": 9735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3181:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:46:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9741,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:46:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9743,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9591,
                          "src": "3245:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3257:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3245:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657761726420506f6f6c20457868617573746564",
                        "id": 9746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3260:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04de7318c64f0fa83c2fff899a6b79111ace46f7a046518a122a3c83f40d87e0",
                          "typeString": "literal_string \"Reward Pool Exhausted\""
                        },
                        "value": "Reward Pool Exhausted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04de7318c64f0fa83c2fff899a6b79111ace46f7a046518a122a3c83f40d87e0",
                          "typeString": "literal_string \"Reward Pool Exhausted\""
                        }
                      ],
                      "id": 9742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3237:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9748,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9752,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3314:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3314:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9756,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3334:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                              "typeString": "contract singleAssetStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                              "typeString": "contract singleAssetStaking"
                            }
                          ],
                          "id": 9755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3326:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9754,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3326:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3326:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9758,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9721,
                        "src": "3341:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9749,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "3295:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 9751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11908,
                      "src": "3295:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:54:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9760,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:54:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9761,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9602,
                      "src": "3363:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 9762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3378:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3363:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9770,
                  "nodeType": "IfStatement",
                  "src": "3359:83:27",
                  "trueBody": {
                    "id": 9769,
                    "nodeType": "Block",
                    "src": "3381:61:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 9767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9764,
                            "name": "lastAutoCompoundBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9593,
                            "src": "3395:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 9765,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3419:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 9766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "3419:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3395:36:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9768,
                        "nodeType": "ExpressionStatement",
                        "src": "3395:36:27"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 9771,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "3455:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 9774,
                        "indexExpression": {
                          "expression": {
                            "id": 9772,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3464:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3464:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3455:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 9775,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9572,
                      "src": "3455:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 9776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3492:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3455:38:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9806,
                  "nodeType": "IfStatement",
                  "src": "3451:237:27",
                  "trueBody": {
                    "id": 9805,
                    "nodeType": "Block",
                    "src": "3495:193:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 9785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 9778,
                                "name": "stakings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9586,
                                "src": "3509:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                  "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                }
                              },
                              "id": 9781,
                              "indexExpression": {
                                "expression": {
                                  "id": 9779,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3518:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3518:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3509:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage",
                                "typeString": "struct singleAssetStaking.staked storage ref"
                              }
                            },
                            "id": 9782,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastBlockCompounded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9576,
                            "src": "3509:40:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 9783,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3552:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 9784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "3552:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3509:55:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9786,
                        "nodeType": "ExpressionStatement",
                        "src": "3509:55:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 9790,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3598:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3598:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9787,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9589,
                              "src": "3578:14:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3578:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 9792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3578:31:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9793,
                        "nodeType": "ExpressionStatement",
                        "src": "3578:31:27"
                      },
                      {
                        "expression": {
                          "id": 9803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 9794,
                                "name": "stakings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9586,
                                "src": "3623:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                  "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                }
                              },
                              "id": 9797,
                              "indexExpression": {
                                "expression": {
                                  "id": 9795,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3632:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3632:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3623:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage",
                                "typeString": "struct singleAssetStaking.staked storage ref"
                              }
                            },
                            "id": 9798,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9580,
                            "src": "3623:26:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 9799,
                                "name": "addressIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9589,
                                "src": "3652:14:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 9800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3652:21:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 9801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3676:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3652:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3623:54:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9804,
                        "nodeType": "ExpressionStatement",
                        "src": "3623:54:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 9807,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "3697:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 9810,
                        "indexExpression": {
                          "expression": {
                            "id": 9808,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3706:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3706:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3697:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 9811,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9572,
                      "src": "3697:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9818,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9721,
                          "src": "3797:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 9812,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "3733:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 9815,
                            "indexExpression": {
                              "expression": {
                                "id": 9813,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3742:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3742:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3733:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "id": 9816,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9572,
                          "src": "3733:46:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "3733:63:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3733:72:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3697:108:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9821,
                  "nodeType": "ExpressionStatement",
                  "src": "3697:108:27"
                },
                {
                  "expression": {
                    "id": 9829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 9822,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "3815:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 9825,
                        "indexExpression": {
                          "expression": {
                            "id": 9823,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3824:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3824:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3815:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 9826,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9578,
                      "src": "3815:36:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9827,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3854:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3854:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3815:51:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9830,
                  "nodeType": "ExpressionStatement",
                  "src": "3815:51:27"
                },
                {
                  "expression": {
                    "id": 9836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9831,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9602,
                      "src": "3876:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9834,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9721,
                          "src": "3906:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 9832,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9602,
                          "src": "3890:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "3890:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3890:24:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3876:38:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9837,
                  "nodeType": "ExpressionStatement",
                  "src": "3876:38:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3939:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3939:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 9844,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3961:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3961:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9843,
                          "name": "getReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10304,
                          "src": "3951:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 9846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3951:21:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9838,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "3924:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 9840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11832,
                      "src": "3924:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3924:49:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9848,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:49:27"
                },
                {
                  "expression": {
                    "id": 9856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 9849,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "3983:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 9852,
                        "indexExpression": {
                          "expression": {
                            "id": 9850,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3992:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3992:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3983:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 9853,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "3983:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9854,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4026:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4026:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3983:55:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9857,
                  "nodeType": "ExpressionStatement",
                  "src": "3983:55:27"
                }
              ]
            },
            "documentation": {
              "id": 9719,
              "nodeType": "StructuredDocumentation",
              "src": "2875:112:27",
              "text": "Stake the provided amount\n @param _amount the amount to stake\n @dev stakes the provided amount"
            },
            "functionSelector": "41441d3b",
            "id": 9859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterStaking",
            "nameLocation": "3001:12:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9721,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3022:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 9859,
                  "src": "3014:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3013:17:27"
            },
            "returnParameters": {
              "id": 9723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:27"
            },
            "scope": 10948,
            "src": "2992:1053:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10048,
              "nodeType": "Block",
              "src": "4407:1518:27",
              "statements": [
                {
                  "assignments": [
                    9866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9866,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "4425:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10048,
                      "src": "4417:14:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9865,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4417:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9871,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9868,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4444:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4444:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9867,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10304,
                      "src": "4434:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 9870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4434:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4417:38:27"
                },
                {
                  "expression": {
                    "id": 9879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 9872,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "4465:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 9875,
                        "indexExpression": {
                          "expression": {
                            "id": 9873,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4474:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4474:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4465:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 9876,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "4465:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9877,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4508:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4508:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4465:55:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9880,
                  "nodeType": "ExpressionStatement",
                  "src": "4465:55:27"
                },
                {
                  "expression": {
                    "id": 9886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9881,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9591,
                      "src": "4530:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9884,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9866,
                          "src": "4556:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 9882,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9591,
                          "src": "4542:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "4542:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4542:21:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4530:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9887,
                  "nodeType": "ExpressionStatement",
                  "src": "4530:33:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 9889,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "4594:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 9892,
                            "indexExpression": {
                              "expression": {
                                "id": 9890,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4603:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4603:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4594:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "id": 9893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9572,
                          "src": "4594:33:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 9894,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9862,
                          "src": "4631:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4594:44:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e742063616e206e6f742062652067726561746572207468616e207374616b656420616d6f756e74",
                        "id": 9896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4652:55:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4ffed913173b04cffd3d5875ad19724daff5953bba21c887351e73cd82329cb",
                          "typeString": "literal_string \"Withdraw amount can not be greater than staked amount\""
                        },
                        "value": "Withdraw amount can not be greater than staked amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4ffed913173b04cffd3d5875ad19724daff5953bba21c887351e73cd82329cb",
                          "typeString": "literal_string \"Withdraw amount can not be greater than staked amount\""
                        }
                      ],
                      "id": 9888,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4573:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4573:144:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9898,
                  "nodeType": "ExpressionStatement",
                  "src": "4573:144:27"
                },
                {
                  "expression": {
                    "id": 9904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9899,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9602,
                      "src": "4727:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9902,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9862,
                          "src": "4757:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 9900,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9602,
                          "src": "4741:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "4741:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4741:24:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4727:38:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9905,
                  "nodeType": "ExpressionStatement",
                  "src": "4727:38:27"
                },
                {
                  "expression": {
                    "id": 9919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 9906,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "4775:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 9909,
                        "indexExpression": {
                          "expression": {
                            "id": 9907,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4784:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4784:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4775:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 9910,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9572,
                      "src": "4775:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9917,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9862,
                          "src": "4875:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 9911,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "4811:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 9914,
                            "indexExpression": {
                              "expression": {
                                "id": 9912,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4820:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4820:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4811:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "id": 9915,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9572,
                          "src": "4811:46:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "4811:63:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4811:72:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4775:108:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9920,
                  "nodeType": "ExpressionStatement",
                  "src": "4775:108:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9921,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4910:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4910:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 9929,
                          "name": "earlyWithdrawFeeTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9567,
                          "src": "4978:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 9923,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "4937:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 9926,
                            "indexExpression": {
                              "expression": {
                                "id": 9924,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4946:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4946:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4937:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "id": 9927,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBlockStaked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9578,
                          "src": "4937:36:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "4937:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4937:62:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4910:89:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9957,
                  "nodeType": "IfStatement",
                  "src": "4893:345:27",
                  "trueBody": {
                    "id": 9956,
                    "nodeType": "Block",
                    "src": "5010:228:27",
                    "statements": [
                      {
                        "assignments": [
                          9933
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9933,
                            "mutability": "mutable",
                            "name": "withdrawalFee",
                            "nameLocation": "5056:13:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 9956,
                            "src": "5048:21:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9932,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5048:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9941,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 9939,
                              "name": "divisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9548,
                              "src": "5106:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 9936,
                                  "name": "earlyWithdrawFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9551,
                                  "src": "5084:16:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 9934,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9862,
                                  "src": "5072:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 9935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "5072:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 9937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5072:29:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 9938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "5072:33:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 9940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5072:42:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5048:66:27"
                      },
                      {
                        "expression": {
                          "id": 9947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9942,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9862,
                            "src": "5128:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 9945,
                                "name": "withdrawalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9933,
                                "src": "5150:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9943,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9862,
                                "src": "5138:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 9944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "5138:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5138:26:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5128:36:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9948,
                        "nodeType": "ExpressionStatement",
                        "src": "5128:36:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9952,
                              "name": "withdrawFeeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9600,
                              "src": "5193:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9953,
                              "name": "withdrawalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9933,
                              "src": "5213:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 9949,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9570,
                              "src": "5178:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                "typeString": "contract CRUSHToken"
                              }
                            },
                            "id": 9951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11832,
                            "src": "5178:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 9954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5178:49:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9955,
                        "nodeType": "ExpressionStatement",
                        "src": "5178:49:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9958,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9862,
                      "src": "5247:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9961,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9866,
                          "src": "5269:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 9959,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9862,
                          "src": "5257:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "5257:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5257:19:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5247:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9964,
                  "nodeType": "ExpressionStatement",
                  "src": "5247:29:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9968,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5301:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5301:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9970,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9862,
                        "src": "5313:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9965,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "5286:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 9967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11832,
                      "src": "5286:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5286:35:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9972,
                  "nodeType": "ExpressionStatement",
                  "src": "5286:35:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 9973,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "5363:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 9976,
                        "indexExpression": {
                          "expression": {
                            "id": 9974,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5372:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5372:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5363:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 9977,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9572,
                      "src": "5363:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 9978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5400:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5363:38:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10043,
                  "nodeType": "IfStatement",
                  "src": "5359:517:27",
                  "trueBody": {
                    "id": 10042,
                    "nodeType": "Block",
                    "src": "5403:473:27",
                    "statements": [
                      {
                        "assignments": [
                          9982
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9982,
                            "mutability": "mutable",
                            "name": "staking",
                            "nameLocation": "5432:7:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 10042,
                            "src": "5417:22:27",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                              "typeString": "struct singleAssetStaking.staked"
                            },
                            "typeName": {
                              "id": 9981,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 9980,
                                "name": "staked",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9581,
                                "src": "5417:6:27"
                              },
                              "referencedDeclaration": 9581,
                              "src": "5417:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                "typeString": "struct singleAssetStaking.staked"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9987,
                        "initialValue": {
                          "baseExpression": {
                            "id": 9983,
                            "name": "stakings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9586,
                            "src": "5442:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                              "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                            }
                          },
                          "id": 9986,
                          "indexExpression": {
                            "expression": {
                              "id": 9984,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5451:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5451:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5442:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staked_$9581_storage",
                            "typeString": "struct singleAssetStaking.staked storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5417:45:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9988,
                              "name": "staking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9982,
                              "src": "5480:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                "typeString": "struct singleAssetStaking.staked storage pointer"
                              }
                            },
                            "id": 9989,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9580,
                            "src": "5480:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 9990,
                                "name": "addressIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9589,
                                "src": "5497:14:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 9991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5497:21:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 9992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5521:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5497:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5480:42:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10030,
                        "nodeType": "IfStatement",
                        "src": "5476:315:27",
                        "trueBody": {
                          "id": 10029,
                          "nodeType": "Block",
                          "src": "5524:267:27",
                          "statements": [
                            {
                              "assignments": [
                                9996
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 9996,
                                  "mutability": "mutable",
                                  "name": "lastAddress",
                                  "nameLocation": "5550:11:27",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10029,
                                  "src": "5542:19:27",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 9995,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5542:7:27",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10003,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 9997,
                                  "name": "addressIndexes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9589,
                                  "src": "5564:14:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 10002,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 9998,
                                      "name": "addressIndexes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9589,
                                      "src": "5579:14:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 9999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5579:21:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 10000,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5603:1:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5579:25:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5564:41:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5542:63:27"
                            },
                            {
                              "expression": {
                                "id": 10009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 10004,
                                    "name": "addressIndexes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9589,
                                    "src": "5623:14:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 10007,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 10005,
                                      "name": "staking",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9982,
                                      "src": "5638:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                        "typeString": "struct singleAssetStaking.staked storage pointer"
                                      }
                                    },
                                    "id": 10006,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "index",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9580,
                                    "src": "5638:13:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5623:29:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 10008,
                                  "name": "lastAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9996,
                                  "src": "5655:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5623:43:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 10010,
                              "nodeType": "ExpressionStatement",
                              "src": "5623:43:27"
                            },
                            {
                              "expression": {
                                "id": 10017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 10011,
                                      "name": "stakings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9586,
                                      "src": "5684:8:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                        "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                      }
                                    },
                                    "id": 10013,
                                    "indexExpression": {
                                      "id": 10012,
                                      "name": "lastAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9996,
                                      "src": "5693:11:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5684:21:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_staked_$9581_storage",
                                      "typeString": "struct singleAssetStaking.staked storage ref"
                                    }
                                  },
                                  "id": 10014,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9580,
                                  "src": "5684:27:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 10015,
                                    "name": "staking",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9982,
                                    "src": "5714:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                      "typeString": "struct singleAssetStaking.staked storage pointer"
                                    }
                                  },
                                  "id": 10016,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9580,
                                  "src": "5714:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5684:43:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10018,
                              "nodeType": "ExpressionStatement",
                              "src": "5684:43:27"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 10024,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5767:4:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                                          "typeString": "contract singleAssetStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                                          "typeString": "contract singleAssetStaking"
                                        }
                                      ],
                                      "id": 10023,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5759:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 10022,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5759:7:27",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10025,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5759:13:27",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 10026,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5774:1:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10019,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9570,
                                    "src": "5745:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                      "typeString": "contract CRUSHToken"
                                    }
                                  },
                                  "id": 10021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11875,
                                  "src": "5745:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 10027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5745:31:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 10028,
                              "nodeType": "ExpressionStatement",
                              "src": "5745:31:27"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10031,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9589,
                              "src": "5804:14:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 10033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "5804:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 10034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5804:20:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10035,
                        "nodeType": "ExpressionStatement",
                        "src": "5804:20:27"
                      },
                      {
                        "expression": {
                          "id": 10040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5838:27:27",
                          "subExpression": {
                            "baseExpression": {
                              "id": 10036,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "5845:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 10039,
                            "indexExpression": {
                              "expression": {
                                "id": 10037,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5854:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5854:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5845:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10041,
                        "nodeType": "ExpressionStatement",
                        "src": "5838:27:27"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10045,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9591,
                        "src": "5908:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10044,
                      "name": "RewardPoolUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9608,
                      "src": "5890:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5890:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10047,
                  "nodeType": "EmitStatement",
                  "src": "5885:33:27"
                }
              ]
            },
            "documentation": {
              "id": 9860,
              "nodeType": "StructuredDocumentation",
              "src": "4051:305:27",
              "text": "Leaves staking for a user by the specified amount and transfering staked amount and reward to users address\n @param _amount the amount to unstake\n @dev leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime"
            },
            "functionSelector": "1058d281",
            "id": 10049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "leaveStaking",
            "nameLocation": "4370:12:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9862,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4391:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10049,
                  "src": "4383:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4383:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4382:17:27"
            },
            "returnParameters": {
              "id": 9864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4407:0:27"
            },
            "scope": 10948,
            "src": "4361:1564:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10229,
              "nodeType": "Block",
              "src": "6245:1391:27",
              "statements": [
                {
                  "assignments": [
                    10054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10054,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "6263:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10229,
                      "src": "6255:14:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6255:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10059,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10056,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6282:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6282:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10055,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10304,
                      "src": "6272:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 10058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6272:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6255:38:27"
                },
                {
                  "expression": {
                    "id": 10067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10060,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "6303:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10063,
                        "indexExpression": {
                          "expression": {
                            "id": 10061,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6312:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6312:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6303:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10064,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "6303:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10065,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6346:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 10066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "6346:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6303:55:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10068,
                  "nodeType": "ExpressionStatement",
                  "src": "6303:55:27"
                },
                {
                  "assignments": [
                    10070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10070,
                      "mutability": "mutable",
                      "name": "stakedAmount",
                      "nameLocation": "6376:12:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10229,
                      "src": "6368:20:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10069,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6368:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10076,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 10071,
                        "name": "stakings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9586,
                        "src": "6391:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                          "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                        }
                      },
                      "id": 10074,
                      "indexExpression": {
                        "expression": {
                          "id": 10072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6400:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6400:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6391:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staked_$9581_storage",
                        "typeString": "struct singleAssetStaking.staked storage ref"
                      }
                    },
                    "id": 10075,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakedAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9572,
                    "src": "6391:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6368:56:27"
                },
                {
                  "expression": {
                    "id": 10082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10077,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9591,
                      "src": "6434:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10080,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10054,
                          "src": "6460:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10078,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9591,
                          "src": "6446:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "6446:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6446:21:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6434:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10083,
                  "nodeType": "ExpressionStatement",
                  "src": "6434:33:27"
                },
                {
                  "expression": {
                    "id": 10089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10084,
                      "name": "stakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10070,
                      "src": "6477:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10087,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10054,
                          "src": "6509:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10085,
                          "name": "stakedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10070,
                          "src": "6492:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "6492:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6492:24:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6477:39:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10090,
                  "nodeType": "ExpressionStatement",
                  "src": "6477:39:27"
                },
                {
                  "expression": {
                    "id": 10100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10091,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9602,
                      "src": "6526:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 10094,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "6556:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 10097,
                            "indexExpression": {
                              "expression": {
                                "id": 10095,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6565:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6565:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6556:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "id": 10098,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9572,
                          "src": "6556:33:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10092,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9602,
                          "src": "6540:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "6540:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6540:50:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6526:64:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10101,
                  "nodeType": "ExpressionStatement",
                  "src": "6526:64:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10102,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6618:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 10103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "6618:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 10104,
                            "name": "stakings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9586,
                            "src": "6645:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                              "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                            }
                          },
                          "id": 10107,
                          "indexExpression": {
                            "expression": {
                              "id": 10105,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6654:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6654:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6645:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staked_$9581_storage",
                            "typeString": "struct singleAssetStaking.staked storage ref"
                          }
                        },
                        "id": 10108,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastBlockStaked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9578,
                        "src": "6645:36:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 10109,
                        "name": "earlyWithdrawFeeTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9567,
                        "src": "6684:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6645:59:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6618:86:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10137,
                  "nodeType": "IfStatement",
                  "src": "6601:363:27",
                  "trueBody": {
                    "id": 10136,
                    "nodeType": "Block",
                    "src": "6715:249:27",
                    "statements": [
                      {
                        "assignments": [
                          10113
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10113,
                            "mutability": "mutable",
                            "name": "withdrawalFee",
                            "nameLocation": "6737:13:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 10136,
                            "src": "6729:21:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10112,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6729:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10121,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10119,
                              "name": "divisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9548,
                              "src": "6809:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10116,
                                  "name": "earlyWithdrawFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9551,
                                  "src": "6770:16:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 10114,
                                  "name": "stakedAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10070,
                                  "src": "6753:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 10115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "6753:16:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 10117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6753:34:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "6753:38:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6753:77:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6729:101:27"
                      },
                      {
                        "expression": {
                          "id": 10127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10122,
                            "name": "stakedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10070,
                            "src": "6844:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10125,
                                "name": "withdrawalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10113,
                                "src": "6876:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10123,
                                "name": "stakedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10070,
                                "src": "6859:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "6859:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6859:31:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6844:46:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10128,
                        "nodeType": "ExpressionStatement",
                        "src": "6844:46:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10132,
                              "name": "withdrawFeeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9600,
                              "src": "6919:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10133,
                              "name": "withdrawalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10113,
                              "src": "6939:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10129,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9570,
                              "src": "6904:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                "typeString": "contract CRUSHToken"
                              }
                            },
                            "id": 10131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11832,
                            "src": "6904:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 10134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6904:49:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10135,
                        "nodeType": "ExpressionStatement",
                        "src": "6904:49:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6988:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6988:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10143,
                        "name": "stakedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10070,
                        "src": "7000:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10138,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "6973:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 10140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11832,
                      "src": "6973:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:40:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10145,
                  "nodeType": "ExpressionStatement",
                  "src": "6973:40:27"
                },
                {
                  "expression": {
                    "id": 10152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10146,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "7023:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10149,
                        "indexExpression": {
                          "expression": {
                            "id": 10147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7032:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7032:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7023:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9572,
                      "src": "7023:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 10151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7059:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7023:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10153,
                  "nodeType": "ExpressionStatement",
                  "src": "7023:37:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 10154,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "7074:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10157,
                        "indexExpression": {
                          "expression": {
                            "id": 10155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7083:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7083:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7074:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9572,
                      "src": "7074:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7111:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7074:38:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10224,
                  "nodeType": "IfStatement",
                  "src": "7070:517:27",
                  "trueBody": {
                    "id": 10223,
                    "nodeType": "Block",
                    "src": "7114:473:27",
                    "statements": [
                      {
                        "assignments": [
                          10163
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10163,
                            "mutability": "mutable",
                            "name": "staking",
                            "nameLocation": "7143:7:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 10223,
                            "src": "7128:22:27",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                              "typeString": "struct singleAssetStaking.staked"
                            },
                            "typeName": {
                              "id": 10162,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 10161,
                                "name": "staked",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9581,
                                "src": "7128:6:27"
                              },
                              "referencedDeclaration": 9581,
                              "src": "7128:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                "typeString": "struct singleAssetStaking.staked"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10168,
                        "initialValue": {
                          "baseExpression": {
                            "id": 10164,
                            "name": "stakings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9586,
                            "src": "7153:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                              "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                            }
                          },
                          "id": 10167,
                          "indexExpression": {
                            "expression": {
                              "id": 10165,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7162:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7162:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7153:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staked_$9581_storage",
                            "typeString": "struct singleAssetStaking.staked storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7128:45:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10169,
                              "name": "staking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10163,
                              "src": "7191:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                "typeString": "struct singleAssetStaking.staked storage pointer"
                              }
                            },
                            "id": 10170,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9580,
                            "src": "7191:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 10171,
                                "name": "addressIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9589,
                                "src": "7208:14:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 10172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7208:21:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 10173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7232:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7208:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7191:42:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10211,
                        "nodeType": "IfStatement",
                        "src": "7187:315:27",
                        "trueBody": {
                          "id": 10210,
                          "nodeType": "Block",
                          "src": "7235:267:27",
                          "statements": [
                            {
                              "assignments": [
                                10177
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10177,
                                  "mutability": "mutable",
                                  "name": "lastAddress",
                                  "nameLocation": "7261:11:27",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10210,
                                  "src": "7253:19:27",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 10176,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7253:7:27",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10184,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 10178,
                                  "name": "addressIndexes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9589,
                                  "src": "7275:14:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 10183,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 10179,
                                      "name": "addressIndexes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9589,
                                      "src": "7290:14:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 10180,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "7290:21:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 10181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7314:1:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "7290:25:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7275:41:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7253:63:27"
                            },
                            {
                              "expression": {
                                "id": 10190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 10185,
                                    "name": "addressIndexes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9589,
                                    "src": "7334:14:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 10188,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 10186,
                                      "name": "staking",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10163,
                                      "src": "7349:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                        "typeString": "struct singleAssetStaking.staked storage pointer"
                                      }
                                    },
                                    "id": 10187,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "index",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9580,
                                    "src": "7349:13:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7334:29:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 10189,
                                  "name": "lastAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10177,
                                  "src": "7366:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7334:43:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 10191,
                              "nodeType": "ExpressionStatement",
                              "src": "7334:43:27"
                            },
                            {
                              "expression": {
                                "id": 10198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 10192,
                                      "name": "stakings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9586,
                                      "src": "7395:8:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                        "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                      }
                                    },
                                    "id": 10194,
                                    "indexExpression": {
                                      "id": 10193,
                                      "name": "lastAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10177,
                                      "src": "7404:11:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7395:21:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_staked_$9581_storage",
                                      "typeString": "struct singleAssetStaking.staked storage ref"
                                    }
                                  },
                                  "id": 10195,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9580,
                                  "src": "7395:27:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 10196,
                                    "name": "staking",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10163,
                                    "src": "7425:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                      "typeString": "struct singleAssetStaking.staked storage pointer"
                                    }
                                  },
                                  "id": 10197,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9580,
                                  "src": "7425:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7395:43:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10199,
                              "nodeType": "ExpressionStatement",
                              "src": "7395:43:27"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 10205,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7478:4:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                                          "typeString": "contract singleAssetStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                                          "typeString": "contract singleAssetStaking"
                                        }
                                      ],
                                      "id": 10204,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7470:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 10203,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7470:7:27",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7470:13:27",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 10207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7485:1:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10200,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9570,
                                    "src": "7456:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                      "typeString": "contract CRUSHToken"
                                    }
                                  },
                                  "id": 10202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11875,
                                  "src": "7456:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 10208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7456:31:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 10209,
                              "nodeType": "ExpressionStatement",
                              "src": "7456:31:27"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10212,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9589,
                              "src": "7515:14:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 10214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "7515:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 10215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7515:20:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10216,
                        "nodeType": "ExpressionStatement",
                        "src": "7515:20:27"
                      },
                      {
                        "expression": {
                          "id": 10221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "7549:27:27",
                          "subExpression": {
                            "baseExpression": {
                              "id": 10217,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "7556:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 10220,
                            "indexExpression": {
                              "expression": {
                                "id": 10218,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7565:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7565:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7556:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10222,
                        "nodeType": "ExpressionStatement",
                        "src": "7549:27:27"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10226,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9591,
                        "src": "7619:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10225,
                      "name": "RewardPoolUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9608,
                      "src": "7601:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7601:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10228,
                  "nodeType": "EmitStatement",
                  "src": "7596:33:27"
                }
              ]
            },
            "documentation": {
              "id": 10050,
              "nodeType": "StructuredDocumentation",
              "src": "5931:268:27",
              "text": "Leaves staking for a user while setting stakedAmount to 0 and transfering staked amount and reward to users address\n @dev leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime"
            },
            "functionSelector": "15eb082e",
            "id": 10230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "leaveStakingCompletely",
            "nameLocation": "6213:22:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6235:2:27"
            },
            "returnParameters": {
              "id": 10052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6245:0:27"
            },
            "scope": 10948,
            "src": "6204:1432:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10303,
              "nodeType": "Block",
              "src": "7711:822:27",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10237,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7725:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 10238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "7725:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 10239,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "7741:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10241,
                        "indexExpression": {
                          "id": 10240,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10232,
                          "src": "7750:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7741:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10242,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "7741:38:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7725:54:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10301,
                    "nodeType": "Block",
                    "src": "7820:707:27",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10247,
                              "name": "totalPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9591,
                              "src": "7838:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 10248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7851:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7838:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10250,
                              "name": "totalStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9602,
                              "src": "7856:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 10251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7871:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7856:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7838:34:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 10299,
                          "nodeType": "Block",
                          "src": "7921:596:27",
                          "statements": [
                            {
                              "assignments": [
                                10258
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10258,
                                  "mutability": "mutable",
                                  "name": "blocks",
                                  "nameLocation": "8037:6:27",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10299,
                                  "src": "8029:14:27",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 10257,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8029:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10267,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 10262,
                                        "name": "stakings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9586,
                                        "src": "8084:8:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                          "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                        }
                                      },
                                      "id": 10264,
                                      "indexExpression": {
                                        "id": 10263,
                                        "name": "_address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10232,
                                        "src": "8093:8:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8084:18:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_staked_$9581_storage",
                                        "typeString": "struct singleAssetStaking.staked storage ref"
                                      }
                                    },
                                    "id": 10265,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastBlockCompounded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9576,
                                    "src": "8084:38:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 10259,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "8046:5:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 10260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "number",
                                    "nodeType": "MemberAccess",
                                    "src": "8046:12:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11543,
                                  "src": "8046:16:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8046:94:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8029:111:27"
                            },
                            {
                              "assignments": [
                                10269
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10269,
                                  "mutability": "mutable",
                                  "name": "totalReward",
                                  "nameLocation": "8166:11:27",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10299,
                                  "src": "8158:19:27",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 10268,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8158:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10274,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 10272,
                                    "name": "crushPerBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9596,
                                    "src": "8191:13:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10270,
                                    "name": "blocks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10258,
                                    "src": "8180:6:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11558,
                                  "src": "8180:10:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8180:25:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8158:47:27"
                            },
                            {
                              "assignments": [
                                10276
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10276,
                                  "mutability": "mutable",
                                  "name": "stakerReward",
                                  "nameLocation": "8231:12:27",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10299,
                                  "src": "8223:20:27",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 10275,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8223:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10287,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 10285,
                                    "name": "totalStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9602,
                                    "src": "8341:11:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 10279,
                                            "name": "stakings",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9586,
                                            "src": "8283:8:27",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                              "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                            }
                                          },
                                          "id": 10281,
                                          "indexExpression": {
                                            "id": 10280,
                                            "name": "_address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10232,
                                            "src": "8292:8:27",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8283:18:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_staked_$9581_storage",
                                            "typeString": "struct singleAssetStaking.staked storage ref"
                                          }
                                        },
                                        "id": 10282,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "stakedAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9572,
                                        "src": "8283:31:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 10277,
                                        "name": "totalReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10269,
                                        "src": "8246:11:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 10278,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "8246:36:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 10283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8246:69:27",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "8246:94:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8246:107:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8223:130:27"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10288,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10276,
                                  "src": "8375:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 10289,
                                  "name": "totalPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9591,
                                  "src": "8390:9:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8375:24:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 10296,
                              "nodeType": "IfStatement",
                              "src": "8371:95:27",
                              "trueBody": {
                                "id": 10295,
                                "nodeType": "Block",
                                "src": "8401:65:27",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 10293,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 10291,
                                        "name": "stakerReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10276,
                                        "src": "8423:12:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 10292,
                                        "name": "totalPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9591,
                                        "src": "8438:9:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8423:24:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 10294,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8423:24:27"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 10297,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10276,
                                "src": "8490:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 10236,
                              "id": 10298,
                              "nodeType": "Return",
                              "src": "8483:19:27"
                            }
                          ]
                        },
                        "id": 10300,
                        "nodeType": "IfStatement",
                        "src": "7834:683:27",
                        "trueBody": {
                          "id": 10256,
                          "nodeType": "Block",
                          "src": "7874:41:27",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 10254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7899:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 10236,
                              "id": 10255,
                              "nodeType": "Return",
                              "src": "7892:8:27"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 10302,
                  "nodeType": "IfStatement",
                  "src": "7721:806:27",
                  "trueBody": {
                    "id": 10246,
                    "nodeType": "Block",
                    "src": "7781:33:27",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 10244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7802:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 10236,
                        "id": 10245,
                        "nodeType": "Return",
                        "src": "7795:8:27"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 10304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReward",
            "nameLocation": "7651:9:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10232,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "7669:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10304,
                  "src": "7661:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7661:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7660:18:27"
            },
            "returnParameters": {
              "id": 10236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10304,
                  "src": "7702:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7702:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7701:9:27"
            },
            "scope": 10948,
            "src": "7642:891:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10349,
              "nodeType": "Block",
              "src": "8717:375:27",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10310,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8731:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 10311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "8731:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 10312,
                      "name": "lastAutoCompoundBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9593,
                      "src": "8747:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8731:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10317,
                        "name": "lastAutoCompoundBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9593,
                        "src": "8813:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 10318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8838:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8813:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10323,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9591,
                          "src": "8884:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8897:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8884:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 10329,
                      "nodeType": "IfStatement",
                      "src": "8880:53:27",
                      "trueBody": {
                        "id": 10328,
                        "nodeType": "Block",
                        "src": "8900:33:27",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "30",
                              "id": 10326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8921:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 10309,
                            "id": 10327,
                            "nodeType": "Return",
                            "src": "8914:8:27"
                          }
                        ]
                      }
                    },
                    "id": 10330,
                    "nodeType": "IfStatement",
                    "src": "8809:124:27",
                    "trueBody": {
                      "id": 10322,
                      "nodeType": "Block",
                      "src": "8841:33:27",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "30",
                            "id": 10320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8862:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 10309,
                          "id": 10321,
                          "nodeType": "Return",
                          "src": "8855:8:27"
                        }
                      ]
                    }
                  },
                  "id": 10331,
                  "nodeType": "IfStatement",
                  "src": "8727:206:27",
                  "trueBody": {
                    "id": 10316,
                    "nodeType": "Block",
                    "src": "8770:33:27",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 10314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8791:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 10309,
                        "id": 10315,
                        "nodeType": "Return",
                        "src": "8784:8:27"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10333,
                      "mutability": "mutable",
                      "name": "blocks",
                      "nameLocation": "8951:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10349,
                      "src": "8943:14:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10332,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8943:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10339,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10337,
                        "name": "lastAutoCompoundBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9593,
                        "src": "8977:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10334,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8960:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 10335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "8960:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "8960:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8960:39:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8943:56:27"
                },
                {
                  "assignments": [
                    10341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10341,
                      "mutability": "mutable",
                      "name": "totalReward",
                      "nameLocation": "9017:11:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10349,
                      "src": "9009:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9009:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10346,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10344,
                        "name": "crushPerBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9596,
                        "src": "9042:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10342,
                        "name": "blocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10333,
                        "src": "9031:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11558,
                      "src": "9031:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9031:25:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9009:47:27"
                },
                {
                  "expression": {
                    "id": 10347,
                    "name": "totalReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10341,
                    "src": "9074:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10309,
                  "id": 10348,
                  "nodeType": "Return",
                  "src": "9067:18:27"
                }
              ]
            },
            "documentation": {
              "id": 10305,
              "nodeType": "StructuredDocumentation",
              "src": "8539:112:27",
              "text": "Calculates total potential pending rewards\n @dev Calculates potential reward based on crush per block"
            },
            "functionSelector": "ec1371f2",
            "id": 10350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalPendingRewards",
            "nameLocation": "8665:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8684:2:27"
            },
            "returnParameters": {
              "id": 10309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10350,
                  "src": "8708:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8708:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8707:9:27"
            },
            "scope": 10948,
            "src": "8656:436:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10362,
              "nodeType": "Block",
              "src": "9362:43:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10359,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10353,
                        "src": "9389:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10358,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10304,
                      "src": "9379:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 10360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9379:19:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10357,
                  "id": 10361,
                  "nodeType": "Return",
                  "src": "9372:26:27"
                }
              ]
            },
            "documentation": {
              "id": 10351,
              "nodeType": "StructuredDocumentation",
              "src": "9098:188:27",
              "text": "Get pending rewards of a user\n @param _address the address to calculate the reward for\n @dev calculates potential reward for the address provided based on crush per block"
            },
            "functionSelector": "f40f0f52",
            "id": 10363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingReward",
            "nameLocation": "9300:13:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10353,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "9322:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10363,
                  "src": "9314:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9314:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9313:18:27"
            },
            "returnParameters": {
              "id": 10357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10356,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10363,
                  "src": "9353:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9353:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9352:9:27"
            },
            "scope": 10948,
            "src": "9291:114:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10420,
              "nodeType": "Block",
              "src": "9589:375:27",
              "statements": [
                {
                  "assignments": [
                    10368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10368,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "9607:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10420,
                      "src": "9599:14:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9599:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10373,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10370,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9626:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9626:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10369,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10304,
                      "src": "9616:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 10372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9616:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9599:38:27"
                },
                {
                  "expression": {
                    "id": 10387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10374,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "9647:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10377,
                        "indexExpression": {
                          "expression": {
                            "id": 10375,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9656:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9656:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9647:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9574,
                      "src": "9647:34:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10385,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10368,
                          "src": "9749:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 10379,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "9684:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 10382,
                            "indexExpression": {
                              "expression": {
                                "id": 10380,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9693:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9693:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9684:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "id": 10383,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9574,
                          "src": "9684:47:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "9684:64:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9684:72:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9647:109:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10388,
                  "nodeType": "ExpressionStatement",
                  "src": "9647:109:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9781:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9781:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10394,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10368,
                        "src": "9793:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10389,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "9766:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 10391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11832,
                      "src": "9766:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9766:34:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10396,
                  "nodeType": "ExpressionStatement",
                  "src": "9766:34:27"
                },
                {
                  "expression": {
                    "id": 10404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10397,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "9810:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10400,
                        "indexExpression": {
                          "expression": {
                            "id": 10398,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9819:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9819:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9810:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10401,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "9810:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10402,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9853:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 10403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "9853:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9810:55:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10405,
                  "nodeType": "ExpressionStatement",
                  "src": "9810:55:27"
                },
                {
                  "expression": {
                    "id": 10411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10406,
                      "name": "totalClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9604,
                      "src": "9875:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10409,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10368,
                          "src": "9907:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10407,
                          "name": "totalClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9604,
                          "src": "9890:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "9890:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9890:24:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9875:39:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10412,
                  "nodeType": "ExpressionStatement",
                  "src": "9875:39:27"
                },
                {
                  "expression": {
                    "id": 10418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10413,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9591,
                      "src": "9924:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10416,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10368,
                          "src": "9950:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10414,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9591,
                          "src": "9936:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "9936:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9936:21:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9924:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10419,
                  "nodeType": "ExpressionStatement",
                  "src": "9924:33:27"
                }
              ]
            },
            "documentation": {
              "id": 10364,
              "nodeType": "StructuredDocumentation",
              "src": "9411:149:27",
              "text": "transfers the rewards of a user to their address\n @dev calculates users rewards and transfers it out while deducting reward from totalPool"
            },
            "functionSelector": "4e71d92d",
            "id": 10421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "9574:5:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9579:2:27"
            },
            "returnParameters": {
              "id": 10366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9589:0:27"
            },
            "scope": 10948,
            "src": "9565:399:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10491,
              "nodeType": "Block",
              "src": "10133:544:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 10426,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "10164:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 10429,
                            "indexExpression": {
                              "expression": {
                                "id": 10427,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10173:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10173:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10164:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "id": 10430,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9572,
                          "src": "10164:33:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10200:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10164:37:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c65617365205374616b6520437275736820746f20636f6d706f756e64",
                        "id": 10433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10215:32:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9490c607f350c9e179ac9dc66778d036df66ef9ad9633d0968725da2539616a",
                          "typeString": "literal_string \"Please Stake Crush to compound\""
                        },
                        "value": "Please Stake Crush to compound"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9490c607f350c9e179ac9dc66778d036df66ef9ad9633d0968725da2539616a",
                          "typeString": "literal_string \"Please Stake Crush to compound\""
                        }
                      ],
                      "id": 10425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10143:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10143:114:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10435,
                  "nodeType": "ExpressionStatement",
                  "src": "10143:114:27"
                },
                {
                  "assignments": [
                    10437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10437,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "10275:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10491,
                      "src": "10267:14:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10267:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10442,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10439,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10294:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10294:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10438,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10304,
                      "src": "10284:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 10441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10284:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10267:38:27"
                },
                {
                  "expression": {
                    "id": 10456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10443,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "10316:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10446,
                        "indexExpression": {
                          "expression": {
                            "id": 10444,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10325:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10325:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10316:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10447,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9572,
                      "src": "10316:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10454,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10437,
                          "src": "10416:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 10448,
                              "name": "stakings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9586,
                              "src": "10352:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                              }
                            },
                            "id": 10451,
                            "indexExpression": {
                              "expression": {
                                "id": 10449,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10361:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10361:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10352:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staked_$9581_storage",
                              "typeString": "struct singleAssetStaking.staked storage ref"
                            }
                          },
                          "id": 10452,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9572,
                          "src": "10352:46:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "10352:63:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10352:71:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10316:107:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10457,
                  "nodeType": "ExpressionStatement",
                  "src": "10316:107:27"
                },
                {
                  "expression": {
                    "id": 10463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10458,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9602,
                      "src": "10433:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10461,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10437,
                          "src": "10463:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10459,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9602,
                          "src": "10447:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "10447:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10447:23:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10433:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10464,
                  "nodeType": "ExpressionStatement",
                  "src": "10433:37:27"
                },
                {
                  "expression": {
                    "id": 10472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10465,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "10481:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10468,
                        "indexExpression": {
                          "expression": {
                            "id": 10466,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10490:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10490:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10481:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10469,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "10481:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10470,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10524:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 10471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "10524:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10481:55:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10473,
                  "nodeType": "ExpressionStatement",
                  "src": "10481:55:27"
                },
                {
                  "expression": {
                    "id": 10479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10474,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9591,
                      "src": "10547:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10477,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10437,
                          "src": "10573:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10475,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9591,
                          "src": "10559:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "10559:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10559:21:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10547:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10480,
                  "nodeType": "ExpressionStatement",
                  "src": "10547:33:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10482,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9591,
                        "src": "10613:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10481,
                      "name": "RewardPoolUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9608,
                      "src": "10595:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10595:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10484,
                  "nodeType": "EmitStatement",
                  "src": "10590:33:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10486,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10651:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10651:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10488,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10437,
                        "src": "10663:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10485,
                      "name": "StakeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9618,
                      "src": "10638:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10638:32:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10490,
                  "nodeType": "EmitStatement",
                  "src": "10633:37:27"
                }
              ]
            },
            "documentation": {
              "id": 10422,
              "nodeType": "StructuredDocumentation",
              "src": "9970:125:27",
              "text": "compounds the rewards of the caller\n @dev compounds the rewards of the caller add adds it into their staked amount"
            },
            "functionSelector": "5692f138",
            "id": 10492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "singleCompound",
            "nameLocation": "10109:14:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10123:2:27"
            },
            "returnParameters": {
              "id": 10424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10133:0:27"
            },
            "scope": 10948,
            "src": "10100:577:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10702,
              "nodeType": "Block",
              "src": "10886:1855:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10497,
                          "name": "lastAutoCompoundBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9593,
                          "src": "10917:21:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 10498,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10942:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 10499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "10942:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10917:37:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d706f756e6420416c6c206e6f7420796574206170706c696361626c652e",
                        "id": 10501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10968:34:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e06d1bbca2601492bfa2f90a28da7d5afcf07d65178a34a12d4bff205d648375",
                          "typeString": "literal_string \"Compound All not yet applicable.\""
                        },
                        "value": "Compound All not yet applicable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e06d1bbca2601492bfa2f90a28da7d5afcf07d65178a34a12d4bff205d648375",
                          "typeString": "literal_string \"Compound All not yet applicable.\""
                        }
                      ],
                      "id": 10496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10896:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10896:116:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10503,
                  "nodeType": "ExpressionStatement",
                  "src": "10896:116:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10505,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9602,
                          "src": "11030:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11044:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11030:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f205374616b6564207265776172647320746f20636c61696d",
                        "id": 10508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11047:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5507c0b35a4ef6bbab36253bd69fe925996dc5a389b70c4b4871fc9fffb68ec1",
                          "typeString": "literal_string \"No Staked rewards to claim\""
                        },
                        "value": "No Staked rewards to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5507c0b35a4ef6bbab36253bd69fe925996dc5a389b70c4b4871fc9fffb68ec1",
                          "typeString": "literal_string \"No Staked rewards to claim\""
                        }
                      ],
                      "id": 10504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11022:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11022:54:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10510,
                  "nodeType": "ExpressionStatement",
                  "src": "11022:54:27"
                },
                {
                  "assignments": [
                    10512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10512,
                      "mutability": "mutable",
                      "name": "crushToBurn",
                      "nameLocation": "11094:11:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10702,
                      "src": "11086:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10511,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11086:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10514,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 10513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11108:1:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11086:23:27"
                },
                {
                  "assignments": [
                    10516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10516,
                      "mutability": "mutable",
                      "name": "performanceFee",
                      "nameLocation": "11127:14:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10702,
                      "src": "11119:22:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11119:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10518,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 10517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11144:1:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11119:26:27"
                },
                {
                  "assignments": [
                    10520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10520,
                      "mutability": "mutable",
                      "name": "totalRewarded",
                      "nameLocation": "11163:13:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10702,
                      "src": "11155:21:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11155:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10522,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 10521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11179:1:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11155:25:27"
                },
                {
                  "assignments": [
                    10524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10524,
                      "mutability": "mutable",
                      "name": "compounderReward",
                      "nameLocation": "11198:16:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10702,
                      "src": "11190:24:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10523,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11190:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10526,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 10525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11217:1:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11190:28:27"
                },
                {
                  "body": {
                    "id": 10666,
                    "nodeType": "Block",
                    "src": "11280:1182:27",
                    "statements": [
                      {
                        "assignments": [
                          10539
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10539,
                            "mutability": "mutable",
                            "name": "stakerReward",
                            "nameLocation": "11302:12:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 10666,
                            "src": "11294:20:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10538,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11294:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10545,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10541,
                                "name": "addressIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9589,
                                "src": "11327:14:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 10543,
                              "indexExpression": {
                                "id": 10542,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10528,
                                "src": "11342:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11327:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10540,
                            "name": "getReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10304,
                            "src": "11317:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 10544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11317:28:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11294:51:27"
                      },
                      {
                        "expression": {
                          "id": 10551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10546,
                            "name": "totalRewarded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10520,
                            "src": "11359:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10549,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10539,
                                "src": "11393:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10547,
                                "name": "totalRewarded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10520,
                                "src": "11375:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "11375:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11375:31:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11359:47:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10552,
                        "nodeType": "ExpressionStatement",
                        "src": "11359:47:27"
                      },
                      {
                        "expression": {
                          "id": 10558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10553,
                            "name": "totalPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9591,
                            "src": "11420:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10556,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10539,
                                "src": "11446:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10554,
                                "name": "totalPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9591,
                                "src": "11432:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "11432:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11432:27:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11420:39:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10559,
                        "nodeType": "ExpressionStatement",
                        "src": "11420:39:27"
                      },
                      {
                        "assignments": [
                          10561
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10561,
                            "mutability": "mutable",
                            "name": "stakerBurn",
                            "nameLocation": "11481:10:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 10666,
                            "src": "11473:18:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10560,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11473:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10569,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10567,
                              "name": "divisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9548,
                              "src": "11552:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10564,
                                  "name": "performanceFeeBurn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9545,
                                  "src": "11511:18:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 10562,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10539,
                                  "src": "11494:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 10563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "11494:16:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 10565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11494:36:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "11494:40:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11494:79:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11473:100:27"
                      },
                      {
                        "expression": {
                          "id": 10575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10570,
                            "name": "crushToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10512,
                            "src": "11587:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10573,
                                "name": "stakerBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10561,
                                "src": "11617:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10571,
                                "name": "crushToBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10512,
                                "src": "11601:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "11601:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11601:27:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11587:41:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10576,
                        "nodeType": "ExpressionStatement",
                        "src": "11587:41:27"
                      },
                      {
                        "assignments": [
                          10578
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10578,
                            "mutability": "mutable",
                            "name": "cpAllReward",
                            "nameLocation": "11651:11:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 10666,
                            "src": "11643:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10577,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11643:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10586,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10584,
                              "name": "divisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9548,
                              "src": "11746:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10581,
                                  "name": "performanceFeeCompounder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9542,
                                  "src": "11699:24:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 10579,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10539,
                                  "src": "11665:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 10580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "11665:33:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 10582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11665:59:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "11665:80:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11665:89:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11643:111:27"
                      },
                      {
                        "expression": {
                          "id": 10592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10587,
                            "name": "compounderReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10524,
                            "src": "11768:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10590,
                                "name": "cpAllReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10578,
                                "src": "11808:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10588,
                                "name": "compounderReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10524,
                                "src": "11787:16:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "11787:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11787:33:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11768:52:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10593,
                        "nodeType": "ExpressionStatement",
                        "src": "11768:52:27"
                      },
                      {
                        "assignments": [
                          10595
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10595,
                            "mutability": "mutable",
                            "name": "feeReserve",
                            "nameLocation": "11843:10:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 10666,
                            "src": "11835:18:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10594,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11835:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10603,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10601,
                              "name": "divisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9548,
                              "src": "11917:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10598,
                                  "name": "performanceFeeReserve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9554,
                                  "src": "11873:21:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 10596,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10539,
                                  "src": "11856:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 10597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "11856:16:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 10599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11856:39:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "11856:43:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11856:82:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11835:103:27"
                      },
                      {
                        "expression": {
                          "id": 10609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10604,
                            "name": "performanceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10516,
                            "src": "11952:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10607,
                                "name": "feeReserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10595,
                                "src": "11988:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10605,
                                "name": "performanceFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10516,
                                "src": "11969:14:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "11969:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11969:30:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11952:47:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10610,
                        "nodeType": "ExpressionStatement",
                        "src": "11952:47:27"
                      },
                      {
                        "expression": {
                          "id": 10616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10611,
                            "name": "stakerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10539,
                            "src": "12014:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10614,
                                "name": "stakerBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10561,
                                "src": "12046:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10612,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10539,
                                "src": "12029:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "12029:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12029:28:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12014:43:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10617,
                        "nodeType": "ExpressionStatement",
                        "src": "12014:43:27"
                      },
                      {
                        "expression": {
                          "id": 10623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10618,
                            "name": "stakerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10539,
                            "src": "12071:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10621,
                                "name": "cpAllReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10578,
                                "src": "12103:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10619,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10539,
                                "src": "12086:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "12086:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12086:29:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12071:44:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10624,
                        "nodeType": "ExpressionStatement",
                        "src": "12071:44:27"
                      },
                      {
                        "expression": {
                          "id": 10630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10625,
                            "name": "stakerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10539,
                            "src": "12129:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10628,
                                "name": "feeReserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10595,
                                "src": "12161:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10626,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10539,
                                "src": "12144:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "12144:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12144:28:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12129:43:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10631,
                        "nodeType": "ExpressionStatement",
                        "src": "12129:43:27"
                      },
                      {
                        "expression": {
                          "id": 10637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10632,
                            "name": "totalStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9602,
                            "src": "12187:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10635,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10539,
                                "src": "12217:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10633,
                                "name": "totalStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9602,
                                "src": "12201:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "12201:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12201:29:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12187:43:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10638,
                        "nodeType": "ExpressionStatement",
                        "src": "12187:43:27"
                      },
                      {
                        "expression": {
                          "id": 10654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 10639,
                                "name": "stakings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9586,
                                "src": "12244:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                  "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                }
                              },
                              "id": 10643,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 10640,
                                  "name": "addressIndexes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9589,
                                  "src": "12253:14:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 10642,
                                "indexExpression": {
                                  "id": 10641,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10528,
                                  "src": "12268:1:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12253:17:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12244:27:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage",
                                "typeString": "struct singleAssetStaking.staked storage ref"
                              }
                            },
                            "id": 10644,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9572,
                            "src": "12244:40:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10652,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10539,
                                "src": "12362:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 10645,
                                    "name": "stakings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9586,
                                    "src": "12287:8:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                      "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                    }
                                  },
                                  "id": 10649,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 10646,
                                      "name": "addressIndexes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9589,
                                      "src": "12313:14:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 10648,
                                    "indexExpression": {
                                      "id": 10647,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10528,
                                      "src": "12328:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12313:17:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12287:57:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_staked_$9581_storage",
                                    "typeString": "struct singleAssetStaking.staked storage ref"
                                  }
                                },
                                "id": 10650,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakedAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9572,
                                "src": "12287:70:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "12287:74:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12287:88:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12244:131:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10655,
                        "nodeType": "ExpressionStatement",
                        "src": "12244:131:27"
                      },
                      {
                        "expression": {
                          "id": 10664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 10656,
                                "name": "stakings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9586,
                                "src": "12389:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                  "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                }
                              },
                              "id": 10660,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 10657,
                                  "name": "addressIndexes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9589,
                                  "src": "12398:14:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 10659,
                                "indexExpression": {
                                  "id": 10658,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10528,
                                  "src": "12413:1:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12398:17:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12389:27:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage",
                                "typeString": "struct singleAssetStaking.staked storage ref"
                              }
                            },
                            "id": 10661,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastBlockCompounded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9576,
                            "src": "12389:47:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 10662,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12439:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 10663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "12439:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12389:62:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10665,
                        "nodeType": "ExpressionStatement",
                        "src": "12389:62:27"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10531,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10528,
                      "src": "11248:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10532,
                        "name": "addressIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9589,
                        "src": "11252:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 10533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11252:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11248:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10667,
                  "initializationExpression": {
                    "assignments": [
                      10528
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10528,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11241:1:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 10667,
                        "src": "11233:9:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10527,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11233:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10530,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11245:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11233:13:27"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11275:3:27",
                      "subExpression": {
                        "id": 10535,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10528,
                        "src": "11275:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10537,
                    "nodeType": "ExpressionStatement",
                    "src": "11275:3:27"
                  },
                  "nodeType": "ForStatement",
                  "src": "11228:1234:27"
                },
                {
                  "expression": {
                    "id": 10671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10668,
                      "name": "lastAutoCompoundBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9593,
                      "src": "12471:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10669,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12495:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 10670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "12495:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12471:36:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10672,
                  "nodeType": "ExpressionStatement",
                  "src": "12471:36:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10676,
                        "name": "crushToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10512,
                        "src": "12528:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10673,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "12517:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 10675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3288,
                      "src": "12517:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 10677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12517:23:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10678,
                  "nodeType": "ExpressionStatement",
                  "src": "12517:23:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12565:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12565:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10684,
                        "name": "compounderReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10524,
                        "src": "12577:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10679,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "12550:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 10681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11832,
                      "src": "12550:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12550:44:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10686,
                  "nodeType": "ExpressionStatement",
                  "src": "12550:44:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10690,
                        "name": "reserveAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9598,
                        "src": "12619:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10691,
                        "name": "performanceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10516,
                        "src": "12635:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10687,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "12604:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 10689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11832,
                      "src": "12604:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12604:46:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10693,
                  "nodeType": "ExpressionStatement",
                  "src": "12604:46:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10695,
                        "name": "totalRewarded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10520,
                        "src": "12677:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10694,
                      "name": "CompoundAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9612,
                      "src": "12665:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12665:26:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10697,
                  "nodeType": "EmitStatement",
                  "src": "12660:31:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10699,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9591,
                        "src": "12724:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10698,
                      "name": "RewardPoolUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9608,
                      "src": "12706:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12706:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10701,
                  "nodeType": "EmitStatement",
                  "src": "12701:33:27"
                }
              ]
            },
            "documentation": {
              "id": 10493,
              "nodeType": "StructuredDocumentation",
              "src": "10683:168:27",
              "text": "compounds the rewards of all users in the pool\n @dev compounds the rewards of all users in the pool add adds it into their staked amount while deducting fees"
            },
            "functionSelector": "9b05ddb3",
            "id": 10703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compoundAll",
            "nameLocation": "10865:11:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10876:2:27"
            },
            "returnParameters": {
              "id": 10495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10886:0:27"
            },
            "scope": 10948,
            "src": "10856:1885:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10792,
              "nodeType": "Block",
              "src": "12954:576:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10710,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12979:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12979:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 10712,
                            "name": "stakings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9586,
                            "src": "12991:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                              "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                            }
                          },
                          "id": 10715,
                          "indexExpression": {
                            "expression": {
                              "id": 10713,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13000:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13000:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12991:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staked_$9581_storage",
                            "typeString": "struct singleAssetStaking.staked storage ref"
                          }
                        },
                        "id": 10716,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9572,
                        "src": "12991:33:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10707,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "12964:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 10709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11832,
                      "src": "12964:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12964:61:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10718,
                  "nodeType": "ExpressionStatement",
                  "src": "12964:61:27"
                },
                {
                  "expression": {
                    "id": 10725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10719,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "13035:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10722,
                        "indexExpression": {
                          "expression": {
                            "id": 10720,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13044:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13044:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13035:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10723,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9572,
                      "src": "13035:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 10724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13071:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13035:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10726,
                  "nodeType": "ExpressionStatement",
                  "src": "13035:37:27"
                },
                {
                  "expression": {
                    "id": 10734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10727,
                          "name": "stakings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9586,
                          "src": "13083:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                            "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                          }
                        },
                        "id": 10730,
                        "indexExpression": {
                          "expression": {
                            "id": 10728,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13092:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13092:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13083:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage",
                          "typeString": "struct singleAssetStaking.staked storage ref"
                        }
                      },
                      "id": 10731,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "13083:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10732,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13126:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 10733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "13126:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13083:55:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10735,
                  "nodeType": "ExpressionStatement",
                  "src": "13083:55:27"
                },
                {
                  "assignments": [
                    10738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10738,
                      "mutability": "mutable",
                      "name": "staking",
                      "nameLocation": "13163:7:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 10792,
                      "src": "13148:22:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                        "typeString": "struct singleAssetStaking.staked"
                      },
                      "typeName": {
                        "id": 10737,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10736,
                          "name": "staked",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9581,
                          "src": "13148:6:27"
                        },
                        "referencedDeclaration": 9581,
                        "src": "13148:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                          "typeString": "struct singleAssetStaking.staked"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10743,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10739,
                      "name": "stakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9586,
                      "src": "13173:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                        "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                      }
                    },
                    "id": 10742,
                    "indexExpression": {
                      "expression": {
                        "id": 10740,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "13182:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13182:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13173:20:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_staked_$9581_storage",
                      "typeString": "struct singleAssetStaking.staked storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13148:45:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10744,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10738,
                        "src": "13207:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                          "typeString": "struct singleAssetStaking.staked storage pointer"
                        }
                      },
                      "id": 10745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9580,
                      "src": "13207:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10746,
                          "name": "addressIndexes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9589,
                          "src": "13224:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 10747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "13224:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 10748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13248:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "13224:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13207:42:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10776,
                  "nodeType": "IfStatement",
                  "src": "13203:250:27",
                  "trueBody": {
                    "id": 10775,
                    "nodeType": "Block",
                    "src": "13251:202:27",
                    "statements": [
                      {
                        "assignments": [
                          10752
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10752,
                            "mutability": "mutable",
                            "name": "lastAddress",
                            "nameLocation": "13273:11:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 10775,
                            "src": "13265:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 10751,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13265:7:27",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10759,
                        "initialValue": {
                          "baseExpression": {
                            "id": 10753,
                            "name": "addressIndexes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9589,
                            "src": "13287:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 10758,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 10754,
                                "name": "addressIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9589,
                                "src": "13302:14:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 10755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "13302:21:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 10756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13326:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13302:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13287:41:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13265:63:27"
                      },
                      {
                        "expression": {
                          "id": 10765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 10760,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9589,
                              "src": "13342:14:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 10763,
                            "indexExpression": {
                              "expression": {
                                "id": 10761,
                                "name": "staking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10738,
                                "src": "13357:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                  "typeString": "struct singleAssetStaking.staked storage pointer"
                                }
                              },
                              "id": 10762,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "index",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9580,
                              "src": "13357:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13342:29:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10764,
                            "name": "lastAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10752,
                            "src": "13374:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13342:43:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10766,
                        "nodeType": "ExpressionStatement",
                        "src": "13342:43:27"
                      },
                      {
                        "expression": {
                          "id": 10773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 10767,
                                "name": "stakings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9586,
                                "src": "13399:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staked_$9581_storage_$",
                                  "typeString": "mapping(address => struct singleAssetStaking.staked storage ref)"
                                }
                              },
                              "id": 10769,
                              "indexExpression": {
                                "id": 10768,
                                "name": "lastAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10752,
                                "src": "13408:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13399:21:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage",
                                "typeString": "struct singleAssetStaking.staked storage ref"
                              }
                            },
                            "id": 10770,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9580,
                            "src": "13399:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 10771,
                              "name": "staking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10738,
                              "src": "13429:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staked_$9581_storage_ptr",
                                "typeString": "struct singleAssetStaking.staked storage pointer"
                              }
                            },
                            "id": 10772,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9580,
                            "src": "13429:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13399:43:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10774,
                        "nodeType": "ExpressionStatement",
                        "src": "13399:43:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10777,
                        "name": "addressIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9589,
                        "src": "13462:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 10779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "13462:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer)"
                      }
                    },
                    "id": 10780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13462:20:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10781,
                  "nodeType": "ExpressionStatement",
                  "src": "13462:20:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10787,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13514:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                              "typeString": "contract singleAssetStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_singleAssetStaking_$10948",
                              "typeString": "contract singleAssetStaking"
                            }
                          ],
                          "id": 10786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13506:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10785,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13506:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13506:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 10789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13521:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 10782,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "13492:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 10784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11875,
                      "src": "13492:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13492:31:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10791,
                  "nodeType": "ExpressionStatement",
                  "src": "13492:31:27"
                }
              ]
            },
            "documentation": {
              "id": 10704,
              "nodeType": "StructuredDocumentation",
              "src": "12747:166:27",
              "text": "withdraws the staked amount of user in case of emergency.\n @dev drains the staked amount and sets the state variable `stakedAmount` of staking mapping to 0"
            },
            "functionSelector": "db2e21bc",
            "id": 10793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nameLocation": "12927:17:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12944:2:27"
            },
            "returnParameters": {
              "id": 10706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12954:0:27"
            },
            "scope": 10948,
            "src": "12918:612:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10818,
              "nodeType": "Block",
              "src": "13726:149:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10800,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9591,
                          "src": "13744:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13756:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13744:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f74616c20506f6f6c206e65656420746f2062652067726561746572207468616e2030",
                        "id": 10803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13759:38:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa93c25032494d8ea3563f9c74648fd5c2b594e319159fed3de623ce9e8252ee",
                          "typeString": "literal_string \"Total Pool need to be greater than 0\""
                        },
                        "value": "Total Pool need to be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa93c25032494d8ea3563f9c74648fd5c2b594e319159fed3de623ce9e8252ee",
                          "typeString": "literal_string \"Total Pool need to be greater than 0\""
                        }
                      ],
                      "id": 10799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13736:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13736:62:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10805,
                  "nodeType": "ExpressionStatement",
                  "src": "13736:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10809,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13823:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13823:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10811,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9591,
                        "src": "13835:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10806,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9570,
                        "src": "13808:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 10808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11832,
                      "src": "13808:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13808:37:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10813,
                  "nodeType": "ExpressionStatement",
                  "src": "13808:37:27"
                },
                {
                  "expression": {
                    "id": 10816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10814,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9591,
                      "src": "13855:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 10815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13867:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13855:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10817,
                  "nodeType": "ExpressionStatement",
                  "src": "13855:13:27"
                }
              ]
            },
            "documentation": {
              "id": 10794,
              "nodeType": "StructuredDocumentation",
              "src": "13536:130:27",
              "text": "withdraws the total pool in case of emergency.\n @dev drains the total pool and sets the state variable `totalPool` to 0"
            },
            "functionSelector": "d180fd88",
            "id": 10819,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10797,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10796,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "13716:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "13716:9:27"
              }
            ],
            "name": "emergencyTotalPoolWithdraw",
            "nameLocation": "13680:26:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13706:2:27"
            },
            "returnParameters": {
              "id": 10798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13726:0:27"
            },
            "scope": 10948,
            "src": "13671:204:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10845,
              "nodeType": "Block",
              "src": "14091:167:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10828,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10822,
                          "src": "14109:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14116:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14109:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d7573742062652067726561746572207468616e2030",
                        "id": 10831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14119:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        },
                        "value": "Fee must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        }
                      ],
                      "id": 10827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14101:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14101:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10833,
                  "nodeType": "ExpressionStatement",
                  "src": "14101:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10835,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10822,
                          "src": "14166:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10836,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9539,
                          "src": "14173:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14166:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d757374206265206c657373207468616e20313025",
                        "id": 10838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14182:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        },
                        "value": "Fee must be less than 10%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        }
                      ],
                      "id": 10834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14158:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14158:52:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10840,
                  "nodeType": "ExpressionStatement",
                  "src": "14158:52:27"
                },
                {
                  "expression": {
                    "id": 10843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10841,
                      "name": "performanceFeeCompounder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9542,
                      "src": "14220:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10842,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10822,
                      "src": "14247:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14220:31:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10844,
                  "nodeType": "ExpressionStatement",
                  "src": "14220:31:27"
                }
              ]
            },
            "documentation": {
              "id": 10820,
              "nodeType": "StructuredDocumentation",
              "src": "13881:137:27",
              "text": "Store `_fee`.\n @param _fee the new value to store\n @dev stores the fee in the state variable `performanceFeeCompounder`"
            },
            "functionSelector": "26cba336",
            "id": 10846,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10825,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10824,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "14081:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "14081:9:27"
              }
            ],
            "name": "setPerformanceFeeCompounder",
            "nameLocation": "14032:27:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10822,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "14068:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10846,
                  "src": "14060:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14060:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14059:14:27"
            },
            "returnParameters": {
              "id": 10826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14091:0:27"
            },
            "scope": 10948,
            "src": "14023:235:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10872,
              "nodeType": "Block",
              "src": "14462:161:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10855,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10849,
                          "src": "14480:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14487:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14480:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d7573742062652067726561746572207468616e2030",
                        "id": 10858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14490:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        },
                        "value": "Fee must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        }
                      ],
                      "id": 10854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14472:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14472:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10860,
                  "nodeType": "ExpressionStatement",
                  "src": "14472:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10862,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10849,
                          "src": "14537:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10863,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9539,
                          "src": "14544:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14537:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d757374206265206c657373207468616e20313025",
                        "id": 10865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14553:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        },
                        "value": "Fee must be less than 10%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        }
                      ],
                      "id": 10861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14529:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14529:52:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10867,
                  "nodeType": "ExpressionStatement",
                  "src": "14529:52:27"
                },
                {
                  "expression": {
                    "id": 10870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10868,
                      "name": "performanceFeeBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9545,
                      "src": "14591:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10869,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10849,
                      "src": "14612:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14591:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10871,
                  "nodeType": "ExpressionStatement",
                  "src": "14591:25:27"
                }
              ]
            },
            "documentation": {
              "id": 10847,
              "nodeType": "StructuredDocumentation",
              "src": "14264:131:27",
              "text": "Store `_fee`.\n @param _fee the new value to store\n @dev stores the fee in the state variable `performanceFeeBurn`"
            },
            "functionSelector": "c53f871f",
            "id": 10873,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10851,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "14452:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "14452:9:27"
              }
            ],
            "name": "setPerformanceFeeBurn",
            "nameLocation": "14409:21:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10849,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "14439:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10873,
                  "src": "14431:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14431:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14430:14:27"
            },
            "returnParameters": {
              "id": 10853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14462:0:27"
            },
            "scope": 10948,
            "src": "14400:223:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10899,
              "nodeType": "Block",
              "src": "14823:159:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10882,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10876,
                          "src": "14841:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14848:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14841:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d7573742062652067726561746572207468616e2030",
                        "id": 10885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14851:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        },
                        "value": "Fee must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        }
                      ],
                      "id": 10881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14833:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14833:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10887,
                  "nodeType": "ExpressionStatement",
                  "src": "14833:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10889,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10876,
                          "src": "14898:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10890,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9539,
                          "src": "14905:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14898:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d757374206265206c657373207468616e20313025",
                        "id": 10892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14914:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        },
                        "value": "Fee must be less than 10%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        }
                      ],
                      "id": 10888,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14890:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14890:52:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10894,
                  "nodeType": "ExpressionStatement",
                  "src": "14890:52:27"
                },
                {
                  "expression": {
                    "id": 10897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10895,
                      "name": "earlyWithdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9551,
                      "src": "14952:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10896,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10876,
                      "src": "14971:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14952:23:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10898,
                  "nodeType": "ExpressionStatement",
                  "src": "14952:23:27"
                }
              ]
            },
            "documentation": {
              "id": 10874,
              "nodeType": "StructuredDocumentation",
              "src": "14629:129:27",
              "text": "Store `_fee`.\n @param _fee the new value to store\n @dev stores the fee in the state variable `earlyWithdrawFee`"
            },
            "functionSelector": "c22982f4",
            "id": 10900,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10878,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "14813:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "14813:9:27"
              }
            ],
            "name": "setEarlyWithdrawFee",
            "nameLocation": "14772:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10876,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "14800:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10900,
                  "src": "14792:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14792:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14791:14:27"
            },
            "returnParameters": {
              "id": 10880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14823:0:27"
            },
            "scope": 10948,
            "src": "14763:219:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10926,
              "nodeType": "Block",
              "src": "15192:165:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10909,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10903,
                          "src": "15210:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15217:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15210:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d7573742062652067726561746572207468616e2030",
                        "id": 10912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15220:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        },
                        "value": "Fee must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        }
                      ],
                      "id": 10908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15202:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15202:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10914,
                  "nodeType": "ExpressionStatement",
                  "src": "15202:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10916,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10903,
                          "src": "15267:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 10917,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9539,
                          "src": "15275:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15267:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d757374206265206c657373207468616e20313025",
                        "id": 10919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15284:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        },
                        "value": "Fee must be less than 10%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        }
                      ],
                      "id": 10915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15259:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15259:53:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10921,
                  "nodeType": "ExpressionStatement",
                  "src": "15259:53:27"
                },
                {
                  "expression": {
                    "id": 10924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10922,
                      "name": "performanceFeeReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9554,
                      "src": "15322:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10923,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10903,
                      "src": "15346:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15322:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10925,
                  "nodeType": "ExpressionStatement",
                  "src": "15322:28:27"
                }
              ]
            },
            "documentation": {
              "id": 10901,
              "nodeType": "StructuredDocumentation",
              "src": "14988:134:27",
              "text": "Store `_fee`.\n @param _fee the new value to store\n @dev stores the fee in the state variable `performanceFeeReserve`"
            },
            "functionSelector": "6535fc66",
            "id": 10927,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10906,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10905,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "15182:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "15182:9:27"
              }
            ],
            "name": "setPerformanceFeeReserve",
            "nameLocation": "15136:24:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10903,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "15169:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10927,
                  "src": "15161:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15161:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15160:14:27"
            },
            "returnParameters": {
              "id": 10907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15192:0:27"
            },
            "scope": 10948,
            "src": "15127:230:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10946,
              "nodeType": "Block",
              "src": "15569:104:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10936,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10930,
                          "src": "15587:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15595:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15587:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d65206d7573742062652067726561746572207468616e2030",
                        "id": 10939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15598:29:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d60e99613609ecf56412f1469dc7b58c17bd856bcd18630ac40bc26b87e72833",
                          "typeString": "literal_string \"Time must be greater than 0\""
                        },
                        "value": "Time must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d60e99613609ecf56412f1469dc7b58c17bd856bcd18630ac40bc26b87e72833",
                          "typeString": "literal_string \"Time must be greater than 0\""
                        }
                      ],
                      "id": 10935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15579:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15579:49:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10941,
                  "nodeType": "ExpressionStatement",
                  "src": "15579:49:27"
                },
                {
                  "expression": {
                    "id": 10944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10942,
                      "name": "earlyWithdrawFeeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9567,
                      "src": "15638:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10943,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10930,
                      "src": "15661:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15638:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10945,
                  "nodeType": "ExpressionStatement",
                  "src": "15638:28:27"
                }
              ]
            },
            "documentation": {
              "id": 10928,
              "nodeType": "StructuredDocumentation",
              "src": "15363:136:27",
              "text": "Store `_time`.\n @param _time the new value to store\n @dev stores the time in the state variable `earlyWithdrawFeeTime`"
            },
            "functionSelector": "6f90e046",
            "id": 10947,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10933,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10932,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "15559:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "15559:9:27"
              }
            ],
            "name": "setEarlyWithdrawFeeTime",
            "nameLocation": "15513:23:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10930,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "15545:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 10947,
                  "src": "15537:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15537:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15536:15:27"
            },
            "returnParameters": {
              "id": 10934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15569:0:27"
            },
            "scope": 10948,
            "src": "15504:169:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10949,
        "src": "302:15373:27",
        "usedErrors": []
      }
    ],
    "src": "31:15645:27"
  },
  "bytecode": "6080604052600a6001556064600255603260035560be60045560036005556005546203f48062000030919062000111565b6006556005600c553480156200004557600080fd5b50604051620021b8380380620021b883398101604081905262000068916200014d565b6200007333620000c1565b600780546001600160a01b039586166001600160a01b031991821617909155600c93909355600d8054928516928416929092179091556000600b55600e8054919093169116179055620001a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826200012f57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03811681146200014a57600080fd5b50565b600080600080608085870312156200016457600080fd5b8451620001718162000134565b6020860151604087015191955093506200018b8162000134565b60608601519092506200019e8162000134565b939692955090935050565b611fff80620001b96000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80638da5cb5b11610125578063d180fd88116100ad578063ec1371f21161007c578063ec1371f21461043a578063ecfb49a314610442578063f2fde38b1461044b578063f40f0f521461045e578063f79ed94b1461047157600080fd5b8063d180fd88146103bc578063d54ad2a1146103c4578063db2e21bc146103cd578063dc6e13e1146103d557600080fd5b8063b359a9f9116100f4578063b359a9f914610371578063bca5503d14610384578063c22982f41461038d578063c53f871f146103a0578063c61f1c0b146103b357600080fd5b80638da5cb5b1461033c5780639b05ddb31461034d578063a775573a14610355578063a80a78821461036857600080fd5b80635692f138116101a85780636e74d2e2116101775780636e74d2e2146102fc5780636f90e04614610305578063715018a614610318578063784def8c14610320578063817b1cd21461033357600080fd5b80635692f138146102ad5780635832d571146102b55780636535fc66146102e05780636903d0b6146102f357600080fd5b80633a53ed49116101ef5780633a53ed491461026d57806341441d3b146102805780634b37f006146102935780634bf211b81461029c5780634e71d92d146102a557600080fd5b80630a3960bc146102215780631058d2811461023d57806315eb082e1461025257806326cba3361461025a575b600080fd5b61022a60045481565b6040519081526020015b60405180910390f35b61025061024b366004611d5d565b610484565b005b610250610882565b610250610268366004611d5d565b610a49565b61025061027b366004611d5d565b610ab9565b61025061028e366004611d5d565b610bec565b61022a60055481565b61022a600b5481565b610250610ef6565b610250610fe5565b6102c86102c3366004611d5d565b6110f8565b6040516001600160a01b039091168152602001610234565b6102506102ee366004611d5d565b611122565b61022a60065481565b61022a60025481565b610250610313366004611d5d565b611193565b610250611212565b600e546102c8906001600160a01b031681565b61022a600f5481565b6000546001600160a01b03166102c8565b610250611248565b610250610363366004611d5d565b611684565b61022a60035481565b6007546102c8906001600160a01b031681565b61022a60015481565b61025061039b366004611d5d565b61171b565b6102506103ae366004611d5d565b61178b565b61022a600c5481565b6102506117fb565b61022a60105481565b610250611902565b6104126103e3366004611d76565b600860205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a001610234565b61022a611b00565b61022a600a5481565b610250610459366004611d76565b611b62565b61022a61046c366004611d76565b611bfd565b600d546102c8906001600160a01b031681565b600061048f33611c0e565b33600090815260086020526040902043600290910155600a549091506104b59082611cdd565b600a553360009081526008602052604090205482111561053a5760405162461bcd60e51b815260206004820152603560248201527f576974686472617720616d6f756e742063616e206e6f74206265206772656174604482015274195c881d1a185b881cdd185ad95908185b5bdd5b9d605a1b60648201526084015b60405180910390fd5b600f546105479083611cdd565b600f55336000908152600860205260409020546105649083611cdd565b33600090815260086020526040902090815560065460039091015461058891611ce9565b43101561063c5760006105b26127106105ac60035486611cf590919063ffffffff16565b90611d01565b90506105be8382611cdd565b600754600e5460405163a9059cbb60e01b81529295506001600160a01b039182169263a9059cbb926105f69216908590600401611d9f565b6020604051808303816000875af1158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190611db8565b50505b6106468282611ce9565b60075460405163a9059cbb60e01b81529193506001600160a01b03169063a9059cbb906106799033908690600401611d9f565b6020604051808303816000875af1158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190611db8565b5033600090815260086020526040902054610864573360009081526008602052604090206009546106ef90600190611df0565b81600401541461080457600980546000919061070d90600190611df0565b8154811061071d5761071d611e07565b9060005260206000200160009054906101000a90046001600160a01b0316905080600983600401548154811061075557610755611e07565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055600485810154858516845260089092526040808420820192909255600754915163095ea7b360e01b8152919093169263095ea7b3926107be92309201611d9f565b6020604051808303816000875af11580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190611db8565b50505b600980548061081557610815611e1d565b60008281526020808220830160001990810180546001600160a01b0319169055909201909255338252600890526040812081815560018101829055600281018290556003810182905560040155505b600a54604051600080516020611faa83398151915290600090a25050565b600061088d33611c0e565b33600090815260086020526040902043600282015554600a54919250906108b49083611cdd565b600a556108c18183611ce9565b33600090815260086020526040902054600f549192506108e19190611cdd565b600f55600654336000908152600860205260409020600301546109049190611e33565b4310156109b25760006109286127106105ac60035485611cf590919063ffffffff16565b90506109348282611cdd565b600754600e5460405163a9059cbb60e01b81529294506001600160a01b039182169263a9059cbb9261096c9216908590600401611d9f565b6020604051808303816000875af115801561098b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af9190611db8565b50505b60075460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906109e49033908590600401611d9f565b6020604051808303816000875af1158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190611db8565b503360009081526008602052604081209081556009546106ef90600190611df0565b6000546001600160a01b03163314610a735760405162461bcd60e51b815260040161053190611e4b565b60008111610a935760405162461bcd60e51b815260040161053190611e80565b6103e88110610ab45760405162461bcd60e51b815260040161053190611eb7565b600155565b6007546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b259190611eee565b1015610b435760405162461bcd60e51b815260040161053190611f07565b600a54610b509082611ce9565b600a556007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190611db8565b50600a54604051600080516020611faa83398151915290600090a250565b6007546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190611eee565b1015610c765760405162461bcd60e51b815260040161053190611f07565b60008111610cbf5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081cdd185ada5b99c8185b5bdd5b9d60521b6044820152606401610531565b6000600a5411610d095760405162461bcd60e51b815260206004820152601560248201527414995dd85c9908141bdbdb08115e1a185d5cdd1959605a1b6044820152606401610531565b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d849190611db8565b50600f54610d915743600b555b33600090815260086020526040902054610e1e57336000818152600860205260408120436002909101556009805460018181018355928290527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319169093179092559054610e0a9190611df0565b336000908152600860205260409020600401555b33600090815260086020526040902054610e389082611ce9565b33600090815260086020526040902090815543600390910155600f54610e5e9082611ce9565b600f556007546001600160a01b031663a9059cbb33610e7c81611c0e565b6040518363ffffffff1660e01b8152600401610e99929190611d9f565b6020604051808303816000875af1158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc9190611db8565b505033600090815260086020526040902043600290910155565b6000610f0133611c0e565b33600090815260086020526040902060010154909150610f219082611ce9565b336000818152600860205260409081902060010192909255600754915163a9059cbb60e01b81526001600160a01b039092169163a9059cbb91610f68918590600401611d9f565b6020604051808303816000875af1158015610f87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fab9190611db8565b5033600090815260086020526040902043600290910155601054610fcf9082611ce9565b601055600a54610fdf9082611cdd565b600a5550565b336000908152600860205260409020546110415760405162461bcd60e51b815260206004820152601e60248201527f506c65617365205374616b6520437275736820746f20636f6d706f756e6400006044820152606401610531565b600061104c33611c0e565b336000908152600860205260409020549091506110699082611ce9565b33600090815260086020526040902055600f546110869082611ce9565b600f5533600090815260086020526040902043600290910155600a546110ac9082611cdd565b600a819055604051600080516020611faa83398151915290600090a2604051819033907fab0e25dc39626189cfb41155020ba89e726b10244275733e9d7c63cf33ffccdb90600090a350565b6009818154811061110857600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461114c5760405162461bcd60e51b815260040161053190611e4b565b6000811161116c5760405162461bcd60e51b815260040161053190611e80565b6103e881111561118e5760405162461bcd60e51b815260040161053190611eb7565b600455565b6000546001600160a01b031633146111bd5760405162461bcd60e51b815260040161053190611e4b565b6000811161120d5760405162461bcd60e51b815260206004820152601b60248201527f54696d65206d7573742062652067726561746572207468616e203000000000006044820152606401610531565b600655565b6000546001600160a01b0316331461123c5760405162461bcd60e51b815260040161053190611e4b565b6112466000611d0d565b565b43600b54111561129a5760405162461bcd60e51b815260206004820181905260248201527f436f6d706f756e6420416c6c206e6f7420796574206170706c696361626c652e6044820152606401610531565b6000600f54116112ec5760405162461bcd60e51b815260206004820152601a60248201527f4e6f205374616b6564207265776172647320746f20636c61696d0000000000006044820152606401610531565b60008060008060005b6009548110156114e65760006113316009838154811061131757611317611e07565b6000918252602090912001546001600160a01b0316611c0e565b905061133d8482611ce9565b600a5490945061134d9082611cdd565b600a5560025460009061136990612710906105ac908590611cf5565b90506113758782611ce9565b965060006113946127106105ac60015486611cf590919063ffffffff16565b90506113a08582611ce9565b945060006113bf6127106105ac60045487611cf590919063ffffffff16565b90506113cb8882611ce9565b97506113d78484611cdd565b93506113e38483611cdd565b93506113ef8482611cdd565b600f549094506113ff9085611ce9565b600f8190555061144b84600860006009898154811061142057611420611e07565b60009182526020808320909101546001600160a01b0316835282019290925260400190205490611ce9565b600860006009888154811061146257611462611e07565b60009182526020808320909101546001600160a01b031683528201929092526040018120919091556009805443926008929091899081106114a5576114a5611e07565b60009182526020808320909101546001600160a01b03168352820192909252604001902060020155508392506114de9150829050611f4d565b9150506112f5565b5043600b55600754604051630852cd8d60e31b8152600481018690526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561153157600080fd5b505af1158015611545573d6000803e3d6000fd5b505060075460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb915061157b9033908590600401611d9f565b6020604051808303816000875af115801561159a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115be9190611db8565b50600754600d5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926115f5929116908790600401611d9f565b6020604051808303816000875af1158015611614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116389190611db8565b5060405182907f7c45f13c5f74b8490171f97241162b875f904bc8c550e1f275f16072b93d91a690600090a2600a54604051600080516020611faa83398151915290600090a250505050565b6000546001600160a01b031633146116ae5760405162461bcd60e51b815260040161053190611e4b565b678ac7230489e800008111156117165760405162461bcd60e51b815260206004820152602760248201527f43727573682050657220426c6f636b2063616e206e6f74206265206d6f72652060448201526607468616e2031360cc1b6064820152608401610531565b600c55565b6000546001600160a01b031633146117455760405162461bcd60e51b815260040161053190611e4b565b600081116117655760405162461bcd60e51b815260040161053190611e80565b6103e881106117865760405162461bcd60e51b815260040161053190611eb7565b600355565b6000546001600160a01b031633146117b55760405162461bcd60e51b815260040161053190611e4b565b600081116117d55760405162461bcd60e51b815260040161053190611e80565b6103e881106117f65760405162461bcd60e51b815260040161053190611eb7565b600255565b6000546001600160a01b031633146118255760405162461bcd60e51b815260040161053190611e4b565b6000600a54116118835760405162461bcd60e51b8152602060048201526024808201527f546f74616c20506f6f6c206e65656420746f20626520677265617465722074686044820152630616e20360e41b6064820152608401610531565b600754600a5460405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb916118b791339190600401611d9f565b6020604051808303816000875af11580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fa9190611db8565b506000600a55565b600754336000818152600860205260409081902054905163a9059cbb60e01b81526001600160a01b039093169263a9059cbb92611943929091600401611d9f565b6020604051808303816000875af1158015611962573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119869190611db8565b503360009081526008602052604081209081554360028201556009546119ae90600190611df0565b816004015414611a535760098054600091906119cc90600190611df0565b815481106119dc576119dc611e07565b9060005260206000200160009054906101000a90046001600160a01b03169050806009836004015481548110611a1457611a14611e07565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055600485810154949093168252600890526040902001555b6009805480611a6457611a64611e1d565b600082815260208120600019908301810180546001600160a01b031916905590910190915560075460405163095ea7b360e01b81526001600160a01b039091169163095ea7b391611ab9913091600401611d9f565b6020604051808303816000875af1158015611ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afc9190611db8565b5050565b6000600b544311611b115750600090565b600b54611b1e5750600090565b600a54611b2b5750600090565b6000611b42600b5443611cdd90919063ffffffff16565b90506000611b5b600c5483611cf590919063ffffffff16565b9392505050565b6000546001600160a01b03163314611b8c5760405162461bcd60e51b815260040161053190611e4b565b6001600160a01b038116611bf15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610531565b611bfa81611d0d565b50565b6000611c0882611c0e565b92915050565b6001600160a01b0381166000908152600860205260408120600201544311611c3857506000919050565b600a541580611c475750600f54155b15611c5457506000919050565b6001600160a01b038216600090815260086020526040812060020154611c7b904390611cdd565b90506000611c94600c5483611cf590919063ffffffff16565b600f546001600160a01b03861660009081526008602052604081205492935091611cc491906105ac908590611cf5565b9050600a54811115611cd55750600a545b949350505050565b6000611b5b8284611df0565b6000611b5b8284611e33565b6000611b5b8284611f68565b6000611b5b8284611f87565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215611d6f57600080fd5b5035919050565b600060208284031215611d8857600080fd5b81356001600160a01b0381168114611b5b57600080fd5b6001600160a01b03929092168252602082015260400190565b600060208284031215611dca57600080fd5b81518015158114611b5b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611e0257611e02611dda565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008219821115611e4657611e46611dda565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f466565206d7573742062652067726561746572207468616e2030000000000000604082015260600190565b60208082526019908201527f466565206d757374206265206c657373207468616e2031302500000000000000604082015260600190565b600060208284031215611f0057600080fd5b5051919050565b60208082526026908201527f496e73756666696369656e7420437275736820746f6b656e7320666f7220747260408201526530b739b332b960d11b606082015260800190565b6000600019821415611f6157611f61611dda565b5060010190565b6000816000190483118215151615611f8257611f82611dda565b500290565b600082611fa457634e487b7160e01b600052601260045260246000fd5b50049056fe1ef37ab665f7c977b577275d7a49e72cd18d1143eccd1112f1198e4a39d1428ca2646970667358221220747002130971490b277448dae9fd69c531981b05248e8035f4ea85791dd5b53564736f6c634300080c0033",
  "bytecodeSha1": "49c63134b9b4c99ae2afb715a94f64ee353e33fb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "singleAssetStaking",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "144": [
            2006,
            2028,
            true
          ]
        }
      },
      "12": {},
      "16": {},
      "19": {},
      "2": {},
      "27": {
        "singleAssetStaking.addRewardToPool": {
          "123": [
            2307,
            2345,
            true
          ]
        },
        "singleAssetStaking.compoundAll": {
          "130": [
            10917,
            10954,
            true
          ],
          "131": [
            11030,
            11045,
            true
          ]
        },
        "singleAssetStaking.emergencyTotalPoolWithdraw": {
          "137": [
            13744,
            13757,
            true
          ]
        },
        "singleAssetStaking.emergencyWithdraw": {
          "138": [
            13207,
            13249,
            false
          ]
        },
        "singleAssetStaking.enterStaking": {
          "124": [
            3069,
            3107,
            true
          ],
          "125": [
            3189,
            3200,
            true
          ],
          "126": [
            3245,
            3258,
            true
          ]
        },
        "singleAssetStaking.getReward": {
          "140": [
            7725,
            7779,
            false
          ],
          "141": [
            7838,
            7852,
            true
          ],
          "142": [
            7856,
            7872,
            false
          ],
          "143": [
            8375,
            8399,
            false
          ]
        },
        "singleAssetStaking.leaveStaking": {
          "117": [
            4594,
            4638,
            true
          ],
          "118": [
            4910,
            4999,
            false
          ],
          "119": [
            5480,
            5522,
            false
          ]
        },
        "singleAssetStaking.leaveStakingCompletely": {
          "120": [
            6618,
            6704,
            false
          ]
        },
        "singleAssetStaking.setCrushPerBlock": {
          "132": [
            2734,
            2764,
            true
          ]
        },
        "singleAssetStaking.setEarlyWithdrawFee": {
          "133": [
            14841,
            14849,
            true
          ],
          "134": [
            14898,
            14912,
            true
          ]
        },
        "singleAssetStaking.setEarlyWithdrawFeeTime": {
          "129": [
            15587,
            15596,
            true
          ]
        },
        "singleAssetStaking.setPerformanceFeeBurn": {
          "135": [
            14480,
            14488,
            true
          ],
          "136": [
            14537,
            14551,
            true
          ]
        },
        "singleAssetStaking.setPerformanceFeeCompounder": {
          "121": [
            14109,
            14117,
            true
          ],
          "122": [
            14166,
            14180,
            true
          ]
        },
        "singleAssetStaking.setPerformanceFeeReserve": {
          "127": [
            15210,
            15218,
            true
          ],
          "128": [
            15267,
            15282,
            true
          ]
        },
        "singleAssetStaking.totalPendingRewards": {
          "139": [
            8731,
            8768,
            false
          ]
        }
      },
      "3": {},
      "5": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "115": [
            2378,
            2395
          ],
          "116": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "62": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "104": [
            1998,
            2071
          ],
          "105": [
            2081,
            2109
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "24": [
            712,
            729
          ]
        }
      },
      "16": {
        "SafeMath.add": {
          "112": [
            2818,
            2830
          ]
        },
        "SafeMath.div": {
          "114": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "113": [
            3528,
            3540
          ]
        },
        "SafeMath.sub": {
          "111": [
            3185,
            3197
          ]
        }
      },
      "19": {},
      "2": {},
      "27": {
        "singleAssetStaking.addRewardToPool": {
          "28": [
            2286,
            2409
          ],
          "29": [
            2419,
            2453
          ],
          "30": [
            2463,
            2517
          ],
          "31": [
            2527,
            2560
          ]
        },
        "singleAssetStaking.claim": {
          "45": [
            9647,
            9756
          ],
          "46": [
            9766,
            9800
          ],
          "47": [
            9810,
            9865
          ],
          "48": [
            9875,
            9914
          ],
          "49": [
            9924,
            9957
          ]
        },
        "singleAssetStaking.compoundAll": {
          "63": [
            10896,
            11012
          ],
          "64": [
            11022,
            11076
          ],
          "65": [
            11359,
            11406
          ],
          "66": [
            11420,
            11459
          ],
          "67": [
            11587,
            11628
          ],
          "68": [
            11768,
            11820
          ],
          "69": [
            11952,
            11999
          ],
          "70": [
            12014,
            12057
          ],
          "71": [
            12071,
            12115
          ],
          "72": [
            12129,
            12172
          ],
          "73": [
            12187,
            12230
          ],
          "74": [
            12244,
            12375
          ],
          "75": [
            12389,
            12451
          ],
          "76": [
            11275,
            11278
          ],
          "77": [
            12471,
            12507
          ],
          "78": [
            12517,
            12540
          ],
          "79": [
            12550,
            12594
          ],
          "80": [
            12604,
            12650
          ],
          "81": [
            12660,
            12691
          ],
          "82": [
            12701,
            12734
          ]
        },
        "singleAssetStaking.emergencyTotalPoolWithdraw": {
          "91": [
            13736,
            13798
          ],
          "92": [
            13808,
            13845
          ],
          "93": [
            13855,
            13868
          ]
        },
        "singleAssetStaking.emergencyWithdraw": {
          "94": [
            12964,
            13025
          ],
          "95": [
            13035,
            13072
          ],
          "96": [
            13083,
            13138
          ],
          "97": [
            13342,
            13385
          ],
          "98": [
            13399,
            13442
          ],
          "99": [
            13462,
            13482
          ],
          "100": [
            13492,
            13523
          ]
        },
        "singleAssetStaking.enterStaking": {
          "32": [
            3048,
            3171
          ],
          "33": [
            3181,
            3227
          ],
          "34": [
            3237,
            3284
          ],
          "35": [
            3295,
            3349
          ],
          "36": [
            3395,
            3431
          ],
          "37": [
            3509,
            3564
          ],
          "38": [
            3578,
            3609
          ],
          "39": [
            3623,
            3677
          ],
          "40": [
            3697,
            3805
          ],
          "41": [
            3815,
            3866
          ],
          "42": [
            3876,
            3914
          ],
          "43": [
            3924,
            3973
          ],
          "44": [
            3983,
            4038
          ]
        },
        "singleAssetStaking.getReward": {
          "107": [
            7795,
            7803
          ],
          "108": [
            7892,
            7900
          ],
          "109": [
            8423,
            8447
          ],
          "110": [
            8483,
            8502
          ]
        },
        "singleAssetStaking.leaveStaking": {
          "1": [
            4465,
            4520
          ],
          "2": [
            4530,
            4563
          ],
          "3": [
            4573,
            4717
          ],
          "4": [
            4727,
            4765
          ],
          "5": [
            4775,
            4883
          ],
          "6": [
            5128,
            5164
          ],
          "7": [
            5178,
            5227
          ],
          "8": [
            5247,
            5276
          ],
          "9": [
            5286,
            5321
          ],
          "10": [
            5623,
            5666
          ],
          "11": [
            5684,
            5727
          ],
          "12": [
            5745,
            5776
          ],
          "13": [
            5804,
            5824
          ],
          "14": [
            5838,
            5865
          ],
          "15": [
            5885,
            5918
          ]
        },
        "singleAssetStaking.leaveStakingCompletely": {
          "16": [
            6303,
            6358
          ],
          "17": [
            6434,
            6467
          ],
          "18": [
            6477,
            6516
          ],
          "19": [
            6526,
            6590
          ],
          "20": [
            6844,
            6890
          ],
          "21": [
            6904,
            6953
          ],
          "22": [
            6973,
            7013
          ],
          "23": [
            7023,
            7060
          ]
        },
        "singleAssetStaking.pendingReward": {
          "106": [
            9372,
            9398
          ]
        },
        "singleAssetStaking.setCrushPerBlock": {
          "83": [
            2713,
            2829
          ],
          "84": [
            2839,
            2862
          ]
        },
        "singleAssetStaking.setEarlyWithdrawFee": {
          "85": [
            14833,
            14880
          ],
          "86": [
            14890,
            14942
          ],
          "87": [
            14952,
            14975
          ]
        },
        "singleAssetStaking.setEarlyWithdrawFeeTime": {
          "60": [
            15579,
            15628
          ],
          "61": [
            15638,
            15666
          ]
        },
        "singleAssetStaking.setPerformanceFeeBurn": {
          "88": [
            14472,
            14519
          ],
          "89": [
            14529,
            14581
          ],
          "90": [
            14591,
            14616
          ]
        },
        "singleAssetStaking.setPerformanceFeeCompounder": {
          "25": [
            14101,
            14148
          ],
          "26": [
            14158,
            14210
          ],
          "27": [
            14220,
            14251
          ]
        },
        "singleAssetStaking.setPerformanceFeeReserve": {
          "57": [
            15202,
            15249
          ],
          "58": [
            15259,
            15312
          ],
          "59": [
            15322,
            15350
          ]
        },
        "singleAssetStaking.singleCompound": {
          "50": [
            10143,
            10257
          ],
          "51": [
            10316,
            10423
          ],
          "52": [
            10433,
            10470
          ],
          "53": [
            10481,
            10536
          ],
          "54": [
            10547,
            10580
          ],
          "55": [
            10590,
            10623
          ],
          "56": [
            10633,
            10670
          ]
        },
        "singleAssetStaking.totalPendingRewards": {
          "101": [
            8784,
            8792
          ],
          "102": [
            8855,
            8863
          ],
          "103": [
            8914,
            8922
          ]
        }
      },
      "3": {},
      "5": {}
    }
  },
  "dependencies": [
    "CRUSHToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061021c5760003560e01c80638da5cb5b11610125578063d180fd88116100ad578063ec1371f21161007c578063ec1371f21461043a578063ecfb49a314610442578063f2fde38b1461044b578063f40f0f521461045e578063f79ed94b1461047157600080fd5b8063d180fd88146103bc578063d54ad2a1146103c4578063db2e21bc146103cd578063dc6e13e1146103d557600080fd5b8063b359a9f9116100f4578063b359a9f914610371578063bca5503d14610384578063c22982f41461038d578063c53f871f146103a0578063c61f1c0b146103b357600080fd5b80638da5cb5b1461033c5780639b05ddb31461034d578063a775573a14610355578063a80a78821461036857600080fd5b80635692f138116101a85780636e74d2e2116101775780636e74d2e2146102fc5780636f90e04614610305578063715018a614610318578063784def8c14610320578063817b1cd21461033357600080fd5b80635692f138146102ad5780635832d571146102b55780636535fc66146102e05780636903d0b6146102f357600080fd5b80633a53ed49116101ef5780633a53ed491461026d57806341441d3b146102805780634b37f006146102935780634bf211b81461029c5780634e71d92d146102a557600080fd5b80630a3960bc146102215780631058d2811461023d57806315eb082e1461025257806326cba3361461025a575b600080fd5b61022a60045481565b6040519081526020015b60405180910390f35b61025061024b366004611d5d565b610484565b005b610250610882565b610250610268366004611d5d565b610a49565b61025061027b366004611d5d565b610ab9565b61025061028e366004611d5d565b610bec565b61022a60055481565b61022a600b5481565b610250610ef6565b610250610fe5565b6102c86102c3366004611d5d565b6110f8565b6040516001600160a01b039091168152602001610234565b6102506102ee366004611d5d565b611122565b61022a60065481565b61022a60025481565b610250610313366004611d5d565b611193565b610250611212565b600e546102c8906001600160a01b031681565b61022a600f5481565b6000546001600160a01b03166102c8565b610250611248565b610250610363366004611d5d565b611684565b61022a60035481565b6007546102c8906001600160a01b031681565b61022a60015481565b61025061039b366004611d5d565b61171b565b6102506103ae366004611d5d565b61178b565b61022a600c5481565b6102506117fb565b61022a60105481565b610250611902565b6104126103e3366004611d76565b600860205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a001610234565b61022a611b00565b61022a600a5481565b610250610459366004611d76565b611b62565b61022a61046c366004611d76565b611bfd565b600d546102c8906001600160a01b031681565b600061048f33611c0e565b33600090815260086020526040902043600290910155600a549091506104b59082611cdd565b600a553360009081526008602052604090205482111561053a5760405162461bcd60e51b815260206004820152603560248201527f576974686472617720616d6f756e742063616e206e6f74206265206772656174604482015274195c881d1a185b881cdd185ad95908185b5bdd5b9d605a1b60648201526084015b60405180910390fd5b600f546105479083611cdd565b600f55336000908152600860205260409020546105649083611cdd565b33600090815260086020526040902090815560065460039091015461058891611ce9565b43101561063c5760006105b26127106105ac60035486611cf590919063ffffffff16565b90611d01565b90506105be8382611cdd565b600754600e5460405163a9059cbb60e01b81529295506001600160a01b039182169263a9059cbb926105f69216908590600401611d9f565b6020604051808303816000875af1158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190611db8565b50505b6106468282611ce9565b60075460405163a9059cbb60e01b81529193506001600160a01b03169063a9059cbb906106799033908690600401611d9f565b6020604051808303816000875af1158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190611db8565b5033600090815260086020526040902054610864573360009081526008602052604090206009546106ef90600190611df0565b81600401541461080457600980546000919061070d90600190611df0565b8154811061071d5761071d611e07565b9060005260206000200160009054906101000a90046001600160a01b0316905080600983600401548154811061075557610755611e07565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055600485810154858516845260089092526040808420820192909255600754915163095ea7b360e01b8152919093169263095ea7b3926107be92309201611d9f565b6020604051808303816000875af11580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190611db8565b50505b600980548061081557610815611e1d565b60008281526020808220830160001990810180546001600160a01b0319169055909201909255338252600890526040812081815560018101829055600281018290556003810182905560040155505b600a54604051600080516020611faa83398151915290600090a25050565b600061088d33611c0e565b33600090815260086020526040902043600282015554600a54919250906108b49083611cdd565b600a556108c18183611ce9565b33600090815260086020526040902054600f549192506108e19190611cdd565b600f55600654336000908152600860205260409020600301546109049190611e33565b4310156109b25760006109286127106105ac60035485611cf590919063ffffffff16565b90506109348282611cdd565b600754600e5460405163a9059cbb60e01b81529294506001600160a01b039182169263a9059cbb9261096c9216908590600401611d9f565b6020604051808303816000875af115801561098b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af9190611db8565b50505b60075460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906109e49033908590600401611d9f565b6020604051808303816000875af1158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190611db8565b503360009081526008602052604081209081556009546106ef90600190611df0565b6000546001600160a01b03163314610a735760405162461bcd60e51b815260040161053190611e4b565b60008111610a935760405162461bcd60e51b815260040161053190611e80565b6103e88110610ab45760405162461bcd60e51b815260040161053190611eb7565b600155565b6007546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b259190611eee565b1015610b435760405162461bcd60e51b815260040161053190611f07565b600a54610b509082611ce9565b600a556007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190611db8565b50600a54604051600080516020611faa83398151915290600090a250565b6007546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190611eee565b1015610c765760405162461bcd60e51b815260040161053190611f07565b60008111610cbf5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081cdd185ada5b99c8185b5bdd5b9d60521b6044820152606401610531565b6000600a5411610d095760405162461bcd60e51b815260206004820152601560248201527414995dd85c9908141bdbdb08115e1a185d5cdd1959605a1b6044820152606401610531565b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d849190611db8565b50600f54610d915743600b555b33600090815260086020526040902054610e1e57336000818152600860205260408120436002909101556009805460018181018355928290527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319169093179092559054610e0a9190611df0565b336000908152600860205260409020600401555b33600090815260086020526040902054610e389082611ce9565b33600090815260086020526040902090815543600390910155600f54610e5e9082611ce9565b600f556007546001600160a01b031663a9059cbb33610e7c81611c0e565b6040518363ffffffff1660e01b8152600401610e99929190611d9f565b6020604051808303816000875af1158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc9190611db8565b505033600090815260086020526040902043600290910155565b6000610f0133611c0e565b33600090815260086020526040902060010154909150610f219082611ce9565b336000818152600860205260409081902060010192909255600754915163a9059cbb60e01b81526001600160a01b039092169163a9059cbb91610f68918590600401611d9f565b6020604051808303816000875af1158015610f87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fab9190611db8565b5033600090815260086020526040902043600290910155601054610fcf9082611ce9565b601055600a54610fdf9082611cdd565b600a5550565b336000908152600860205260409020546110415760405162461bcd60e51b815260206004820152601e60248201527f506c65617365205374616b6520437275736820746f20636f6d706f756e6400006044820152606401610531565b600061104c33611c0e565b336000908152600860205260409020549091506110699082611ce9565b33600090815260086020526040902055600f546110869082611ce9565b600f5533600090815260086020526040902043600290910155600a546110ac9082611cdd565b600a819055604051600080516020611faa83398151915290600090a2604051819033907fab0e25dc39626189cfb41155020ba89e726b10244275733e9d7c63cf33ffccdb90600090a350565b6009818154811061110857600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461114c5760405162461bcd60e51b815260040161053190611e4b565b6000811161116c5760405162461bcd60e51b815260040161053190611e80565b6103e881111561118e5760405162461bcd60e51b815260040161053190611eb7565b600455565b6000546001600160a01b031633146111bd5760405162461bcd60e51b815260040161053190611e4b565b6000811161120d5760405162461bcd60e51b815260206004820152601b60248201527f54696d65206d7573742062652067726561746572207468616e203000000000006044820152606401610531565b600655565b6000546001600160a01b0316331461123c5760405162461bcd60e51b815260040161053190611e4b565b6112466000611d0d565b565b43600b54111561129a5760405162461bcd60e51b815260206004820181905260248201527f436f6d706f756e6420416c6c206e6f7420796574206170706c696361626c652e6044820152606401610531565b6000600f54116112ec5760405162461bcd60e51b815260206004820152601a60248201527f4e6f205374616b6564207265776172647320746f20636c61696d0000000000006044820152606401610531565b60008060008060005b6009548110156114e65760006113316009838154811061131757611317611e07565b6000918252602090912001546001600160a01b0316611c0e565b905061133d8482611ce9565b600a5490945061134d9082611cdd565b600a5560025460009061136990612710906105ac908590611cf5565b90506113758782611ce9565b965060006113946127106105ac60015486611cf590919063ffffffff16565b90506113a08582611ce9565b945060006113bf6127106105ac60045487611cf590919063ffffffff16565b90506113cb8882611ce9565b97506113d78484611cdd565b93506113e38483611cdd565b93506113ef8482611cdd565b600f549094506113ff9085611ce9565b600f8190555061144b84600860006009898154811061142057611420611e07565b60009182526020808320909101546001600160a01b0316835282019290925260400190205490611ce9565b600860006009888154811061146257611462611e07565b60009182526020808320909101546001600160a01b031683528201929092526040018120919091556009805443926008929091899081106114a5576114a5611e07565b60009182526020808320909101546001600160a01b03168352820192909252604001902060020155508392506114de9150829050611f4d565b9150506112f5565b5043600b55600754604051630852cd8d60e31b8152600481018690526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561153157600080fd5b505af1158015611545573d6000803e3d6000fd5b505060075460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb915061157b9033908590600401611d9f565b6020604051808303816000875af115801561159a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115be9190611db8565b50600754600d5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926115f5929116908790600401611d9f565b6020604051808303816000875af1158015611614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116389190611db8565b5060405182907f7c45f13c5f74b8490171f97241162b875f904bc8c550e1f275f16072b93d91a690600090a2600a54604051600080516020611faa83398151915290600090a250505050565b6000546001600160a01b031633146116ae5760405162461bcd60e51b815260040161053190611e4b565b678ac7230489e800008111156117165760405162461bcd60e51b815260206004820152602760248201527f43727573682050657220426c6f636b2063616e206e6f74206265206d6f72652060448201526607468616e2031360cc1b6064820152608401610531565b600c55565b6000546001600160a01b031633146117455760405162461bcd60e51b815260040161053190611e4b565b600081116117655760405162461bcd60e51b815260040161053190611e80565b6103e881106117865760405162461bcd60e51b815260040161053190611eb7565b600355565b6000546001600160a01b031633146117b55760405162461bcd60e51b815260040161053190611e4b565b600081116117d55760405162461bcd60e51b815260040161053190611e80565b6103e881106117f65760405162461bcd60e51b815260040161053190611eb7565b600255565b6000546001600160a01b031633146118255760405162461bcd60e51b815260040161053190611e4b565b6000600a54116118835760405162461bcd60e51b8152602060048201526024808201527f546f74616c20506f6f6c206e65656420746f20626520677265617465722074686044820152630616e20360e41b6064820152608401610531565b600754600a5460405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb916118b791339190600401611d9f565b6020604051808303816000875af11580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fa9190611db8565b506000600a55565b600754336000818152600860205260409081902054905163a9059cbb60e01b81526001600160a01b039093169263a9059cbb92611943929091600401611d9f565b6020604051808303816000875af1158015611962573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119869190611db8565b503360009081526008602052604081209081554360028201556009546119ae90600190611df0565b816004015414611a535760098054600091906119cc90600190611df0565b815481106119dc576119dc611e07565b9060005260206000200160009054906101000a90046001600160a01b03169050806009836004015481548110611a1457611a14611e07565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055600485810154949093168252600890526040902001555b6009805480611a6457611a64611e1d565b600082815260208120600019908301810180546001600160a01b031916905590910190915560075460405163095ea7b360e01b81526001600160a01b039091169163095ea7b391611ab9913091600401611d9f565b6020604051808303816000875af1158015611ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afc9190611db8565b5050565b6000600b544311611b115750600090565b600b54611b1e5750600090565b600a54611b2b5750600090565b6000611b42600b5443611cdd90919063ffffffff16565b90506000611b5b600c5483611cf590919063ffffffff16565b9392505050565b6000546001600160a01b03163314611b8c5760405162461bcd60e51b815260040161053190611e4b565b6001600160a01b038116611bf15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610531565b611bfa81611d0d565b50565b6000611c0882611c0e565b92915050565b6001600160a01b0381166000908152600860205260408120600201544311611c3857506000919050565b600a541580611c475750600f54155b15611c5457506000919050565b6001600160a01b038216600090815260086020526040812060020154611c7b904390611cdd565b90506000611c94600c5483611cf590919063ffffffff16565b600f546001600160a01b03861660009081526008602052604081205492935091611cc491906105ac908590611cf5565b9050600a54811115611cd55750600a545b949350505050565b6000611b5b8284611df0565b6000611b5b8284611e33565b6000611b5b8284611f68565b6000611b5b8284611f87565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215611d6f57600080fd5b5035919050565b600060208284031215611d8857600080fd5b81356001600160a01b0381168114611b5b57600080fd5b6001600160a01b03929092168252602082015260400190565b600060208284031215611dca57600080fd5b81518015158114611b5b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611e0257611e02611dda565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008219821115611e4657611e46611dda565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f466565206d7573742062652067726561746572207468616e2030000000000000604082015260600190565b60208082526019908201527f466565206d757374206265206c657373207468616e2031302500000000000000604082015260600190565b600060208284031215611f0057600080fd5b5051919050565b60208082526026908201527f496e73756666696369656e7420437275736820746f6b656e7320666f7220747260408201526530b739b332b960d11b606082015260800190565b6000600019821415611f6157611f61611dda565b5060010190565b6000816000190483118215151615611f8257611f82611dda565b500290565b600082611fa457634e487b7160e01b600052601260045260246000fd5b50049056fe1ef37ab665f7c977b577275d7a49e72cd18d1143eccd1112f1198e4a39d1428ca2646970667358221220747002130971490b277448dae9fd69c531981b05248e8035f4ea85791dd5b53564736f6c634300080c0033",
  "deployedSourceMap": "302:15373:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;758:42;;;;;;;;;160:25:33;;;148:2;133:18;758:42:27;;;;;;;;4361:1564;;;;;;:::i;:::-;;:::i;:::-;;6204:1432;;;:::i;14023:235::-;;;;;;:::i;:::-;;:::i;2227:340::-;;;;;;:::i;:::-;;:::i;2992:1053::-;;;;;;:::i;:::-;;:::i;833:33::-;;;;;;1307:36;;;;;;9565:399;;;:::i;10100:577::-;;;:::i;1239:31::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;545:32:33;;;527:51;;515:2;500:18;1239:31:27;381:203:33;15127:230:27;;;;;;:::i;:::-;;:::i;872:69::-;;;;;;583:39;;;;;;15504:169;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1422:33:27:-;;;;;-1:-1:-1;;;;;1422:33:27;;;1461:26;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;10856:1885:27;;;:::i;2573:296::-;;;;;;:::i;:::-;;:::i;691:36::-;;;;;;981:23;;;;;-1:-1:-1;;;;;981:23:27;;;508:44;;;;;;14763:219;;;;;;:::i;:::-;;:::i;14400:223::-;;;;;;:::i;:::-;;:::i;1349:32::-;;;;;;13671:204;;;:::i;1494:27::-;;;;;;12918:612;;;:::i;1191:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:25:33;;;1422:2;1407:18;;1400:34;;;;1450:18;;;1443:34;;;;1508:2;1493:18;;1486:34;1551:3;1536:19;;1529:35;1353:3;1338:19;1191:42:27;1107:463:33;8656:436:27;;;:::i;1277:24::-;;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;9291:114:27:-;;;;;;:::i;:::-;;:::i;1387:29::-;;;;;-1:-1:-1;;;;;1387:29:27;;;4361:1564;4417:14;4434:21;4444:10;4434:9;:21::i;:::-;4474:10;4465:20;;;;:8;:20;;;;;4508:12;4465:40;;;;:55;4542:9;;4417:38;;-1:-1:-1;4542:21:27;;4417:38;4542:13;:21::i;:::-;4530:9;:33;4603:10;4594:20;;;;:8;:20;;;;;:33;:44;-1:-1:-1;4594:44:27;4573:144;;;;-1:-1:-1;;;4573:144:27;;1777:2:33;4573:144:27;;;1759:21:33;1816:2;1796:18;;;1789:30;1855:34;1835:18;;;1828:62;-1:-1:-1;;;1906:18:33;;;1899:51;1967:19;;4573:144:27;;;;;;;;;4741:11;;:24;;4757:7;4741:15;:24::i;:::-;4727:11;:38;4820:10;4811:20;;;;:8;:20;;;;;:46;:72;;4875:7;4811:63;:72::i;:::-;4784:10;4775:20;;;;:8;:20;;;;;:108;;;4978:20;;4937:36;;;;;:62;;:40;:62::i;:::-;4910:12;:89;4893:345;;;5048:21;5072:42;679:5;5072:29;5084:16;;5072:7;:11;;:29;;;;:::i;:::-;:33;;:42::i;:::-;5048:66;-1:-1:-1;5138:26:27;:7;5048:66;5138:11;:26::i;:::-;5178:5;;5193:18;;5178:49;;-1:-1:-1;;;5178:49:27;;5128:36;;-1:-1:-1;;;;;;5178:5:27;;;;:14;;:49;;5193:18;;5213:13;;5178:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5010:228;4893:345;5257:19;:7;5269:6;5257:11;:19::i;:::-;5286:5;;:35;;-1:-1:-1;;;5286:35:27;;5247:29;;-1:-1:-1;;;;;;5286:5:27;;:14;;:35;;5301:10;;5247:29;;5286:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5372:10:27;5363:20;;;;:8;:20;;;;;:33;5359:517;;5451:10;5417:22;5442:20;;;:8;:20;;;;;5497:14;:21;:25;;5521:1;;5497:25;:::i;:::-;5480:7;:13;;;:42;5476:315;;5564:14;5579:21;;5542:19;;5564:14;5579:25;;5603:1;;5579:25;:::i;:::-;5564:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5564:41:27;5542:63;;5655:11;5623:14;5638:7;:13;;;5623:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;-1:-1:-1;;;;;;5623:43:27;-1:-1:-1;;;;;5623:43:27;;;;;;5714:13;;;;;5684:21;;;;;:8;:21;;;;;;;:27;;:43;;;;5745:5;;:31;;-1:-1:-1;;;5745:31:27;;:5;;;;;:13;;:31;;5767:4;;5745:31;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5524:267;5476:315;5804:14;:20;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;5804:20:27;;;;;-1:-1:-1;;;;;;5804:20:27;;;;;;;;;5854:10;5845:20;;:8;:20;;;;;5838:27;;;5804:20;5838:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5359:517:27;5908:9;;5890:28;;-1:-1:-1;;;;;;;;;;;5890:28:27;;;;4407:1518;4361:1564;:::o;6204:1432::-;6255:14;6272:21;6282:10;6272:9;:21::i;:::-;6312:10;6303:20;;;;:8;:20;;;;;6346:12;6303:40;;;:55;6391:33;6446:9;;6255:38;;-1:-1:-1;6391:33:27;6446:21;;6255:38;6446:13;:21::i;:::-;6434:9;:33;6492:24;:12;6509:6;6492:16;:24::i;:::-;6565:10;6556:20;;;;:8;:20;;;;;:33;6540:11;;6477:39;;-1:-1:-1;6540:50:27;;:11;:15;:50::i;:::-;6526:11;:64;6684:20;;6654:10;6645:20;;;;:8;:20;;;;;:36;;;:59;;6684:20;6645:59;:::i;:::-;6618:12;:86;6601:363;;;6729:21;6753:77;679:5;6753:34;6770:16;;6753:12;:16;;:34;;;;:::i;:77::-;6729:101;-1:-1:-1;6859:31:27;:12;6729:101;6859:16;:31::i;:::-;6904:5;;6919:18;;6904:49;;-1:-1:-1;;;6904:49:27;;6844:46;;-1:-1:-1;;;;;;6904:5:27;;;;:14;;:49;;6919:18;;6939:13;;6904:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6715:249;6601:363;6973:5;;:40;;-1:-1:-1;;;6973:40:27;;-1:-1:-1;;;;;6973:5:27;;;;:14;;:40;;6988:10;;7000:12;;6973:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7032:10:27;7059:1;7023:20;;;:8;:20;;;;;:37;;;7208:14;:21;:25;;7232:1;;7208:25;:::i;14023:235::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14116:1:27::1;14109:4;:8;14101:47;;;;-1:-1:-1::0;;;14101:47:27::1;;;;;;;:::i;:::-;472:4;14166;:14;14158:52;;;;-1:-1:-1::0;;;14158:52:27::1;;;;;;;:::i;:::-;14220:24;:31:::0;14023:235::o;2227:340::-;2307:5;;:27;;-1:-1:-1;;;2307:27:27;;2323:10;2307:27;;;527:51:33;2338:7:27;;-1:-1:-1;;;;;2307:5:27;;:15;;500:18:33;;2307:27:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;2286:123;;;;-1:-1:-1;;;2286:123:27;;;;;;;:::i;:::-;2431:9;;:22;;2445:7;2431:13;:22::i;:::-;2419:9;:34;2463:5;;:54;;-1:-1:-1;;;2463:54:27;;2482:10;2463:54;;;5410:34:33;2502:4:27;5460:18:33;;;5453:43;5512:18;;;5505:34;;;-1:-1:-1;;;;;2463:5:27;;;;:18;;5345::33;;2463:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2550:9:27;;2532:28;;-1:-1:-1;;;;;;;;;;;2532:28:27;;;;2227:340;:::o;2992:1053::-;3069:5;;:27;;-1:-1:-1;;;3069:27:27;;3085:10;3069:27;;;527:51:33;3100:7:27;;-1:-1:-1;;;;;3069:5:27;;:15;;500:18:33;;3069:27:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;3048:123;;;;-1:-1:-1;;;3048:123:27;;;;;;;:::i;:::-;3199:1;3189:7;:11;3181:46;;;;-1:-1:-1;;;3181:46:27;;5752:2:33;3181:46:27;;;5734:21:33;5791:2;5771:18;;;5764:30;-1:-1:-1;;;5810:18:33;;;5803:52;5872:18;;3181:46:27;5550:346:33;3181:46:27;3257:1;3245:9;;:13;3237:47;;;;-1:-1:-1;;;3237:47:27;;6103:2:33;3237:47:27;;;6085:21:33;6142:2;6122:18;;;6115:30;-1:-1:-1;;;6161:18:33;;;6154:51;6222:18;;3237:47:27;5901:345:33;3237:47:27;3295:5;;:54;;-1:-1:-1;;;3295:54:27;;3314:10;3295:54;;;5410:34:33;3334:4:27;5460:18:33;;;5453:43;5512:18;;;5505:34;;;-1:-1:-1;;;;;3295:5:27;;;;:18;;5345::33;;3295:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3363:11:27;;3359:83;;3419:12;3395:21;:36;3359:83;3464:10;3455:20;;;;:8;:20;;;;;:33;3451:237;;3518:10;3509:20;;;;:8;:20;;;;;3552:12;3509:40;;;;:55;3578:14;:31;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3578:31:27;;;;;;;3652:21;;:25;;3578:31;3652:25;:::i;:::-;3632:10;3623:20;;;;:8;:20;;;;;:26;;:54;3451:237;3742:10;3733:20;;;;:8;:20;;;;;:46;:72;;3797:7;3733:63;:72::i;:::-;3706:10;3697:20;;;;:8;:20;;;;;:108;;;3854:12;3815:36;;;;:51;3890:11;;:24;;3906:7;3890:15;:24::i;:::-;3876:11;:38;3924:5;;-1:-1:-1;;;;;3924:5:27;:14;3939:10;3951:21;3939:10;3951:9;:21::i;:::-;3924:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3992:10:27;3983:20;;;;:8;:20;;;;;4026:12;3983:40;;;;:55;2992:1053::o;9565:399::-;9599:14;9616:21;9626:10;9616:9;:21::i;:::-;9693:10;9684:20;;;;:8;:20;;;;;:47;;;9599:38;;-1:-1:-1;9684:72:27;;9599:38;9684:64;:72::i;:::-;9656:10;9647:20;;;;:8;:20;;;;;;;:34;;:109;;;;9766:5;;:34;;-1:-1:-1;;;9766:34:27;;-1:-1:-1;;;;;9766:5:27;;;;:14;;:34;;9793:6;;9766:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9819:10:27;9810:20;;;;:8;:20;;;;;9853:12;9810:40;;;;:55;9890:12;;:24;;9907:6;9890:16;:24::i;:::-;9875:12;:39;9936:9;;:21;;9950:6;9936:13;:21::i;:::-;9924:9;:33;-1:-1:-1;9565:399:27:o;10100:577::-;10173:10;10200:1;10164:20;;;:8;:20;;;;;:33;10143:114;;;;-1:-1:-1;;;10143:114:27;;6453:2:33;10143:114:27;;;6435:21:33;6492:2;6472:18;;;6465:30;6531:32;6511:18;;;6504:60;6581:18;;10143:114:27;6251:354:33;10143:114:27;10267:14;10284:21;10294:10;10284:9;:21::i;:::-;10361:10;10352:20;;;;:8;:20;;;;;:46;10267:38;;-1:-1:-1;10352:71:27;;10267:38;10352:63;:71::i;:::-;10325:10;10316:20;;;;:8;:20;;;;;:107;10447:11;;:23;;10463:6;10447:15;:23::i;:::-;10433:11;:37;10490:10;10481:20;;;;:8;:20;;;;;10524:12;10481:40;;;;:55;10559:9;;:21;;10573:6;10559:13;:21::i;:::-;10547:9;:33;;;10595:28;;-1:-1:-1;;;;;;;;;;;10595:28:27;;;;10638:32;;10663:6;;10651:10;;10638:32;;;;;10133:544;10100:577::o;1239:31::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1239:31:27;;-1:-1:-1;1239:31:27;:::o;15127:230::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15217:1:27::1;15210:4;:8;15202:47;;;;-1:-1:-1::0;;;15202:47:27::1;;;;;;;:::i;:::-;472:4;15267;:15;;15259:53;;;;-1:-1:-1::0;;;15259:53:27::1;;;;;;;:::i;:::-;15322:21;:28:::0;15127:230::o;15504:169::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15595:1:27::1;15587:5;:9;15579:49;;;::::0;-1:-1:-1;;;15579:49:27;;6812:2:33;15579:49:27::1;::::0;::::1;6794:21:33::0;6851:2;6831:18;;;6824:30;6890:29;6870:18;;;6863:57;6937:18;;15579:49:27::1;6610:351:33::0;15579:49:27::1;15638:20;:28:::0;15504:169::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;10856:1885:27:-;10942:12;10917:21;;:37;;10896:116;;;;-1:-1:-1;;;10896:116:27;;7168:2:33;10896:116:27;;;7150:21:33;;;7187:18;;;7180:30;7246:34;7226:18;;;7219:62;7298:18;;10896:116:27;6966:356:33;10896:116:27;11044:1;11030:11;;:15;11022:54;;;;-1:-1:-1;;;11022:54:27;;7529:2:33;11022:54:27;;;7511:21:33;7568:2;7548:18;;;7541:30;7607:28;7587:18;;;7580:56;7653:18;;11022:54:27;7327:350:33;11022:54:27;11086:19;11119:22;11155:21;11190:24;11233:9;11228:1234;11252:14;:21;11248:25;;11228:1234;;;11294:20;11317:28;11327:14;11342:1;11327:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;11327:17:27;11317:9;:28::i;:::-;11294:51;-1:-1:-1;11375:31:27;:13;11294:51;11375:17;:31::i;:::-;11432:9;;11359:47;;-1:-1:-1;11432:27:27;;11446:12;11432:13;:27::i;:::-;11420:9;:39;11511:18;;11473;;11494:79;;679:5;;11494:36;;:12;;:16;:36::i;:79::-;11473:100;-1:-1:-1;11601:27:27;:11;11473:100;11601:15;:27::i;:::-;11587:41;;11643:19;11665:89;679:5;11665:59;11699:24;;11665:12;:33;;:59;;;;:::i;:89::-;11643:111;-1:-1:-1;11787:33:27;:16;11643:111;11787:20;:33::i;:::-;11768:52;;11835:18;11856:82;679:5;11856:39;11873:21;;11856:12;:16;;:39;;;;:::i;:82::-;11835:103;-1:-1:-1;11969:30:27;:14;11835:103;11969:18;:30::i;:::-;11952:47;-1:-1:-1;12029:28:27;:12;12046:10;12029:16;:28::i;:::-;12014:43;-1:-1:-1;12086:29:27;12014:43;12103:11;12086:16;:29::i;:::-;12071:44;-1:-1:-1;12144:28:27;12071:44;12161:10;12144:16;:28::i;:::-;12201:11;;12129:43;;-1:-1:-1;12201:29:27;;12129:43;12201:15;:29::i;:::-;12187:11;:43;;;;12287:88;12362:12;12287:8;:57;12313:14;12328:1;12313:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12313:17:27;12287:57;;;;;;;;;;;;:70;;:74;:88::i;:::-;12244:8;:27;12253:14;12268:1;12253:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12253:17:27;12244:27;;;;;;;;;;;;:131;;;;12398:14;:17;;12439:12;;12389:8;;12253:17;;12413:1;;12398:17;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12398:17:27;12389:27;;;;;;;;;;;;:47;;:62;-1:-1:-1;11275:3:27;;-1:-1:-1;11275:3:27;;-1:-1:-1;11275:3:27;;-1:-1:-1;11275:3:27;:::i;:::-;;;;11228:1234;;;-1:-1:-1;12495:12:27;12471:21;:36;12517:5;;:23;;-1:-1:-1;;;12517:23:27;;;;;160:25:33;;;-1:-1:-1;;;;;12517:5:27;;;;:10;;133:18:33;;12517:23:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12550:5:27;;:44;;-1:-1:-1;;;12550:44:27;;-1:-1:-1;;;;;12550:5:27;;;;-1:-1:-1;12550:14:27;;-1:-1:-1;12550:44:27;;12565:10;;12577:16;;12550:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12604:5:27;;12619:14;;12604:46;;-1:-1:-1;;;12604:46:27;;-1:-1:-1;;;;;12604:5:27;;;;:14;;:46;;12619:14;;;12635;;12604:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12665:26:27;;12677:13;;12665:26;;;;;12724:9;;12706:28;;-1:-1:-1;;;;;;;;;;;12706:28:27;;;;10886:1855;;;;10856:1885::o;2573:296::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;419:20:27::1;2734:7;:30;;2713:116;;;::::0;-1:-1:-1;;;2713:116:27;;8428:2:33;2713:116:27::1;::::0;::::1;8410:21:33::0;8467:2;8447:18;;;8440:30;8506:34;8486:18;;;8479:62;-1:-1:-1;;;8557:18:33;;;8550:37;8604:19;;2713:116:27::1;8226:403:33::0;2713:116:27::1;2839:13;:23:::0;2573:296::o;14763:219::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14848:1:27::1;14841:4;:8;14833:47;;;;-1:-1:-1::0;;;14833:47:27::1;;;;;;;:::i;:::-;472:4;14898;:14;14890:52;;;;-1:-1:-1::0;;;14890:52:27::1;;;;;;;:::i;:::-;14952:16;:23:::0;14763:219::o;14400:223::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14487:1:27::1;14480:4;:8;14472:47;;;;-1:-1:-1::0;;;14472:47:27::1;;;;;;;:::i;:::-;472:4;14537;:14;14529:52;;;;-1:-1:-1::0;;;14529:52:27::1;;;;;;;:::i;:::-;14591:18;:25:::0;14400:223::o;13671:204::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;13756:1:27::1;13744:9;;:13;13736:62;;;::::0;-1:-1:-1;;;13736:62:27;;8836:2:33;13736:62:27::1;::::0;::::1;8818:21:33::0;8875:2;8855:18;;;8848:30;8914:34;8894:18;;;8887:62;-1:-1:-1;;;8965:18:33;;;8958:34;9009:19;;13736:62:27::1;8634:400:33::0;13736:62:27::1;13808:5;::::0;13835:9:::1;::::0;13808:37:::1;::::0;-1:-1:-1;;;13808:37:27;;-1:-1:-1;;;;;13808:5:27;;::::1;::::0;:14:::1;::::0;:37:::1;::::0;13823:10:::1;::::0;13835:9;13808:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;13867:1:27::1;13855:9;:13:::0;13671:204::o;12918:612::-;12964:5;;12979:10;12964:5;12991:20;;;:8;:20;;;;;;;:33;12964:61;;-1:-1:-1;;;12964:61:27;;-1:-1:-1;;;;;12964:5:27;;;;:14;;:61;;12979:10;;12964:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13044:10:27;13071:1;13035:20;;;:8;:20;;;;;:37;;;13126:12;13083:40;;;:55;13224:14;:21;:25;;13248:1;;13224:25;:::i;:::-;13207:7;:13;;;:42;13203:250;;13287:14;13302:21;;13265:19;;13287:14;13302:25;;13326:1;;13302:25;:::i;:::-;13287:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13287:41:27;13265:63;;13374:11;13342:14;13357:7;:13;;;13342:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;-1:-1:-1;;;;;;13342:43:27;-1:-1:-1;;;;;13342:43:27;;;;;;13429:13;;;;;13399:21;;;;;;:8;:21;;;;;:27;:43;13203:250;13462:14;:20;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;13462:20:27;;;;;;;-1:-1:-1;;;;;;13462:20:27;;;;;;;;;13492:5;;:31;;-1:-1:-1;;;13492:31:27;;-1:-1:-1;;;;;13492:5:27;;;;:13;;:31;;13514:4;;13492:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12954:576;12918:612::o;8656:436::-;8708:7;8747:21;;8731:12;:37;8727:206;;-1:-1:-1;8791:1:27;;8656:436::o;8727:206::-;8813:21;;8809:124;;-1:-1:-1;8862:1:27;;8656:436::o;8809:124::-;8884:9;;8880:53;;-1:-1:-1;8921:1:27;;8656:436::o;8880:53::-;8943:14;8960:39;8977:21;;8960:12;:16;;:39;;;;:::i;:::-;8943:56;;9009:19;9031:25;9042:13;;9031:6;:10;;:25;;;;:::i;:::-;9009:47;8656:436;-1:-1:-1;;;8656:436:27:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;9241:2:33;1998:73:0::1;::::0;::::1;9223:21:33::0;9280:2;9260:18;;;9253:30;9319:34;9299:18;;;9292:62;-1:-1:-1;;;9370:18:33;;;9363:36;9416:19;;1998:73:0::1;9039:402:33::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;9291:114:27:-;9353:7;9379:19;9389:8;9379:9;:19::i;:::-;9372:26;9291:114;-1:-1:-1;;9291:114:27:o;7642:891::-;-1:-1:-1;;;;;7741:18:27;;7702:7;7741:18;;;:8;:18;;;;;:38;;;7725:12;:54;7721:806;;-1:-1:-1;7802:1:27;;7642:891;-1:-1:-1;7642:891:27:o;7721:806::-;7838:9;;:14;;:34;;-1:-1:-1;7856:11:27;;:16;7838:34;7834:683;;;-1:-1:-1;7899:1:27;;7642:891;-1:-1:-1;7642:891:27:o;7834:683::-;-1:-1:-1;;;;;8084:18:27;;8029:14;8084:18;;;:8;:18;;;;;:38;;;8046:94;;:12;;:16;:94::i;:::-;8029:111;;8158:19;8180:25;8191:13;;8180:6;:10;;:25;;;;:::i;:::-;8341:11;;-1:-1:-1;;;;;8283:18:27;;8223:20;8283:18;;;:8;:18;;;;;:31;8158:47;;-1:-1:-1;8223:20:27;8246:107;;8341:11;8246:69;;8158:47;;8246:36;:69::i;:107::-;8223:130;;8390:9;;8375:12;:24;8371:95;;;-1:-1:-1;8438:9:27;;8371:95;8490:12;7642:891;-1:-1:-1;;;;7642:891:27:o;3108:96:16:-;3166:7;3192:5;3196:1;3192;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;3451:96::-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:180:33:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:33;;196:180;-1:-1:-1;196:180:33:o;816:286::-;875:6;928:2;916:9;907:7;903:23;899:32;896:52;;;944:1;941;934:12;896:52;970:23;;-1:-1:-1;;;;;1022:31:33;;1012:42;;1002:70;;1068:1;1065;1058:12;1997:274;-1:-1:-1;;;;;2189:32:33;;;;2171:51;;2253:2;2238:18;;2231:34;2159:2;2144:18;;1997:274::o;2276:277::-;2343:6;2396:2;2384:9;2375:7;2371:23;2367:32;2364:52;;;2412:1;2409;2402:12;2364:52;2444:9;2438:16;2497:5;2490:13;2483:21;2476:5;2473:32;2463:60;;2519:1;2516;2509:12;2558:127;2619:10;2614:3;2610:20;2607:1;2600:31;2650:4;2647:1;2640:15;2674:4;2671:1;2664:15;2690:125;2730:4;2758:1;2755;2752:8;2749:34;;;2763:18;;:::i;:::-;-1:-1:-1;2800:9:33;;2690:125::o;2820:127::-;2881:10;2876:3;2872:20;2869:1;2862:31;2912:4;2909:1;2902:15;2936:4;2933:1;2926:15;3239:127;3300:10;3295:3;3291:20;3288:1;3281:31;3331:4;3328:1;3321:15;3355:4;3352:1;3345:15;3371:128;3411:3;3442:1;3438:6;3435:1;3432:13;3429:39;;;3448:18;;:::i;:::-;-1:-1:-1;3484:9:33;;3371:128::o;3504:356::-;3706:2;3688:21;;;3725:18;;;3718:30;3784:34;3779:2;3764:18;;3757:62;3851:2;3836:18;;3504:356::o;3865:350::-;4067:2;4049:21;;;4106:2;4086:18;;;4079:30;4145:28;4140:2;4125:18;;4118:56;4206:2;4191:18;;3865:350::o;4220:349::-;4422:2;4404:21;;;4461:2;4441:18;;;4434:30;4500:27;4495:2;4480:18;;4473:55;4560:2;4545:18;;4220:349::o;4574:184::-;4644:6;4697:2;4685:9;4676:7;4672:23;4668:32;4665:52;;;4713:1;4710;4703:12;4665:52;-1:-1:-1;4736:16:33;;4574:184;-1:-1:-1;4574:184:33:o;4763:402::-;4965:2;4947:21;;;5004:2;4984:18;;;4977:30;5043:34;5038:2;5023:18;;5016:62;-1:-1:-1;;;5109:2:33;5094:18;;5087:36;5155:3;5140:19;;4763:402::o;7682:135::-;7721:3;-1:-1:-1;;7742:17:33;;7739:43;;;7762:18;;:::i;:::-;-1:-1:-1;7809:1:33;7798:13;;7682:135::o;9446:168::-;9486:7;9552:1;9548;9544:6;9540:14;9537:1;9534:21;9529:1;9522:9;9515:17;9511:45;9508:71;;;9559:18;;:::i;:::-;-1:-1:-1;9599:9:33;;9446:168::o;9619:217::-;9659:1;9685;9675:132;;9729:10;9724:3;9720:20;9717:1;9710:31;9764:4;9761:1;9754:15;9792:4;9789:1;9782:15;9675:132;-1:-1:-1;9821:9:33;;9619:217::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addRewardToPool(uint256)": {
        "details": "adds the provided amount to `totalPool` state variable",
        "notice": "Adds the provided amount to the totalPool",
        "params": {
          "_amount": "the amount to add"
        }
      },
      "claim()": {
        "details": "calculates users rewards and transfers it out while deducting reward from totalPool",
        "notice": "transfers the rewards of a user to their address"
      },
      "compoundAll()": {
        "details": "compounds the rewards of all users in the pool add adds it into their staked amount while deducting fees",
        "notice": "compounds the rewards of all users in the pool"
      },
      "emergencyTotalPoolWithdraw()": {
        "details": "drains the total pool and sets the state variable `totalPool` to 0",
        "notice": "withdraws the total pool in case of emergency."
      },
      "emergencyWithdraw()": {
        "details": "drains the staked amount and sets the state variable `stakedAmount` of staking mapping to 0",
        "notice": "withdraws the staked amount of user in case of emergency."
      },
      "enterStaking(uint256)": {
        "details": "stakes the provided amount",
        "notice": "Stake the provided amount",
        "params": {
          "_amount": "the amount to stake"
        }
      },
      "leaveStaking(uint256)": {
        "details": "leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime",
        "notice": "Leaves staking for a user by the specified amount and transfering staked amount and reward to users address",
        "params": {
          "_amount": "the amount to unstake"
        }
      },
      "leaveStakingCompletely()": {
        "details": "leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime",
        "notice": "Leaves staking for a user while setting stakedAmount to 0 and transfering staked amount and reward to users address"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pendingReward(address)": {
        "details": "calculates potential reward for the address provided based on crush per block",
        "notice": "Get pending rewards of a user",
        "params": {
          "_address": "the address to calculate the reward for"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setEarlyWithdrawFee(uint256)": {
        "details": "stores the fee in the state variable `earlyWithdrawFee`",
        "notice": "Store `_fee`.",
        "params": {
          "_fee": "the new value to store"
        }
      },
      "setEarlyWithdrawFeeTime(uint256)": {
        "details": "stores the time in the state variable `earlyWithdrawFeeTime`",
        "notice": "Store `_time`.",
        "params": {
          "_time": "the new value to store"
        }
      },
      "setPerformanceFeeBurn(uint256)": {
        "details": "stores the fee in the state variable `performanceFeeBurn`",
        "notice": "Store `_fee`.",
        "params": {
          "_fee": "the new value to store"
        }
      },
      "setPerformanceFeeCompounder(uint256)": {
        "details": "stores the fee in the state variable `performanceFeeCompounder`",
        "notice": "Store `_fee`.",
        "params": {
          "_fee": "the new value to store"
        }
      },
      "setPerformanceFeeReserve(uint256)": {
        "details": "stores the fee in the state variable `performanceFeeReserve`",
        "notice": "Store `_fee`.",
        "params": {
          "_fee": "the new value to store"
        }
      },
      "singleCompound()": {
        "details": "compounds the rewards of the caller add adds it into their staked amount",
        "notice": "compounds the rewards of the caller"
      },
      "totalPendingRewards()": {
        "details": "Calculates potential reward based on crush per block",
        "notice": "Calculates total potential pending rewards"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    302,
    15675
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xD180FD88 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEC1371F2 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEC1371F2 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xECFB49A3 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xF79ED94B EQ PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD180FD88 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xD54AD2A1 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xDC6E13E1 EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB359A9F9 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB359A9F9 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xBCA5503D EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xC22982F4 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xC53F871F EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xC61F1C0B EQ PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x9B05DDB3 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xA775573A EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA80A7882 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5692F138 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x6E74D2E2 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x6E74D2E2 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x6F90E046 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x784DEF8C EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5692F138 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x5832D571 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x6535FC66 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x6903D0B6 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A53ED49 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x3A53ED49 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x41441D3B EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x4B37F006 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x4BF211B8 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3960BC EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x15EB082E EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x26CBA336 EQ PUSH2 0x25A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x22A PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22A PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x250 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x234 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x22A PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x2C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x22A PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x22A PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x22A PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x171B JUMP JUMPDEST PUSH2 0x250 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST PUSH2 0x22A PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0x22A PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x234 JUMP JUMPDEST PUSH2 0x22A PUSH2 0x1B00 JUMP JUMPDEST PUSH2 0x22A PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x22A PUSH2 0x46C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F CALLER PUSH2 0x1C0E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH2 0x4B5 SWAP1 DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xA SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E742063616E206E6F74206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x195C881D1A185B881CDD185AD95908185B5BDD5B9D PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH2 0x547 SWAP1 DUP4 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xF SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x564 SWAP1 DUP4 PUSH2 0x1CDD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH2 0x588 SWAP2 PUSH2 0x1CE9 JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x2710 PUSH2 0x5AC PUSH1 0x3 SLOAD DUP7 PUSH2 0x1CF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1D01 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BE DUP4 DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x5F6 SWAP3 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x646 DUP3 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x679 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x698 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x864 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 SLOAD PUSH2 0x6EF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD EQ PUSH2 0x804 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x70D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x71D JUMPI PUSH2 0x71D PUSH2 0x1E07 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x9 DUP4 PUSH1 0x4 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x755 JUMPI PUSH2 0x755 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH1 0x4 DUP6 DUP2 ADD SLOAD DUP6 DUP6 AND DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x7BE SWAP3 ADDRESS SWAP3 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x815 JUMPI PUSH2 0x815 PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE CALLER DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 ADD SSTORE POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88D CALLER PUSH2 0x1C0E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x2 DUP3 ADD SSTORE SLOAD PUSH1 0xA SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x8B4 SWAP1 DUP4 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x8C1 DUP2 DUP4 PUSH2 0x1CE9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SLOAD SWAP2 SWAP3 POP PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x6 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x904 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 PUSH2 0x928 PUSH2 0x2710 PUSH2 0x5AC PUSH1 0x3 SLOAD DUP6 PUSH2 0x1CF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x934 DUP3 DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x96C SWAP3 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x9E4 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x9 SLOAD PUSH2 0x6EF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB25 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xB50 SWAP1 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCE SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST LT ISZERO PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081CDD185ADA5B99C8185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x531 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD GT PUSH2 0xD09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C9908141BDBDB08115E1A185D5CDD1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x531 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0xD91 JUMPI NUMBER PUSH1 0xB SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE1E JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP3 DUP3 SWAP1 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0xE0A SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE38 SWAP1 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SSTORE NUMBER PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xF SLOAD PUSH2 0xE5E SWAP1 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH2 0xE7C DUP2 PUSH2 0x1C0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP3 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF01 CALLER PUSH2 0x1C0E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xF21 SWAP1 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0xF68 SWAP2 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x10 SLOAD PUSH2 0xFCF SWAP1 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0xA SLOAD PUSH2 0xFDF SWAP1 DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xA SSTORE POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C65617365205374616B6520437275736820746F20636F6D706F756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x531 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104C CALLER PUSH2 0x1C0E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1069 SWAP1 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xF SLOAD PUSH2 0x1086 SWAP1 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0xF SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0xA SLOAD PUSH2 0x10AC SWAP1 DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xAB0E25DC39626189CFB41155020BA89E726B10244275733E9D7C63CF33FFCCDB SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x114C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x116C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x120D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54696D65206D7573742062652067726561746572207468616E20300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x531 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x1246 PUSH1 0x0 PUSH2 0x1D0D JUMP JUMPDEST JUMP JUMPDEST NUMBER PUSH1 0xB SLOAD GT ISZERO PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D706F756E6420416C6C206E6F7420796574206170706C696361626C652E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x531 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD GT PUSH2 0x12EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F205374616B6564207265776172647320746F20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x531 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x0 PUSH2 0x1331 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1317 JUMPI PUSH2 0x1317 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C0E JUMP JUMPDEST SWAP1 POP PUSH2 0x133D DUP5 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 SWAP5 POP PUSH2 0x134D SWAP1 DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1369 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x5AC SWAP1 DUP6 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1375 DUP8 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 PUSH2 0x1394 PUSH2 0x2710 PUSH2 0x5AC PUSH1 0x1 SLOAD DUP7 PUSH2 0x1CF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13A0 DUP6 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x13BF PUSH2 0x2710 PUSH2 0x5AC PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13CB DUP9 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST SWAP8 POP PUSH2 0x13D7 DUP5 DUP5 PUSH2 0x1CDD JUMP JUMPDEST SWAP4 POP PUSH2 0x13E3 DUP5 DUP4 PUSH2 0x1CDD JUMP JUMPDEST SWAP4 POP PUSH2 0x13EF DUP5 DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP5 POP PUSH2 0x13FF SWAP1 DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH2 0x144B DUP5 PUSH1 0x8 PUSH1 0x0 PUSH1 0x9 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x1420 JUMPI PUSH2 0x1420 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH1 0x9 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1462 JUMPI PUSH2 0x1462 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD NUMBER SWAP3 PUSH1 0x8 SWAP3 SWAP1 SWAP2 DUP10 SWAP1 DUP2 LT PUSH2 0x14A5 JUMPI PUSH2 0x14A5 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE POP DUP4 SWAP3 POP PUSH2 0x14DE SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1F4D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F5 JUMP JUMPDEST POP NUMBER PUSH1 0xB SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH2 0x157B SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x159A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15BE SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x15F5 SWAP3 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1614 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1638 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x7C45F13C5F74B8490171F97241162B875F904BC8C550E1F275F16072B93D91A6 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0x1716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43727573682050657220426C6F636B2063616E206E6F74206265206D6F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x7468616E20313 PUSH1 0xCC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x531 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1765 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x1786 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x17D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x17F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1825 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD GT PUSH2 0x1883 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546F74616C20506F6F6C206E65656420746F2062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x531 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x18B7 SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FA SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x1943 SWAP3 SWAP1 SWAP2 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1962 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1986 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SSTORE NUMBER PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x9 SLOAD PUSH2 0x19AE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD EQ PUSH2 0x1A53 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x19CC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x19DC JUMPI PUSH2 0x19DC PUSH2 0x1E07 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x9 DUP4 PUSH1 0x4 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1A14 JUMPI PUSH2 0x1A14 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH1 0x4 DUP6 DUP2 ADD SLOAD SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SSTORE JUMPDEST PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x1A64 JUMPI PUSH2 0x1A64 PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x0 NOT SWAP1 DUP4 ADD DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH2 0x1AB9 SWAP2 ADDRESS SWAP2 PUSH1 0x4 ADD PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AFC SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD NUMBER GT PUSH2 0x1B11 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B1E JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1B2B JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B42 PUSH1 0xB SLOAD NUMBER PUSH2 0x1CDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B5B PUSH1 0xC SLOAD DUP4 PUSH2 0x1CF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1BF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x531 JUMP JUMPDEST PUSH2 0x1BFA DUP2 PUSH2 0x1D0D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C08 DUP3 PUSH2 0x1C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1C38 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO DUP1 PUSH2 0x1C47 JUMPI POP PUSH1 0xF SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1C54 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1C7B SWAP1 NUMBER SWAP1 PUSH2 0x1CDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C94 PUSH1 0xC SLOAD DUP4 PUSH2 0x1CF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x5AC SWAP1 DUP6 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 GT ISZERO PUSH2 0x1CD5 JUMPI POP PUSH1 0xA SLOAD JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5B DUP3 DUP5 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5B DUP3 DUP5 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5B DUP3 DUP5 PUSH2 0x1F68 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5B DUP3 DUP5 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E02 PUSH2 0x1DDA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E46 JUMPI PUSH2 0x1E46 PUSH2 0x1DDA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x466565206D7573742062652067726561746572207468616E2030000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206C657373207468616E2031302500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420437275736820746F6B656E7320666F72207472 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x30B739B332B9 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1F61 JUMPI PUSH2 0x1F61 PUSH2 0x1DDA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F82 JUMPI PUSH2 0x1F82 PUSH2 0x1DDA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FA4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID 0x1E RETURN PUSH27 0xB665F7C977B577275D7A49E72CD18D1143ECCD1112F1198E4A39D1 TIMESTAMP DUP13 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7002130971490B277448DAE9FD69C531981B05248E DUP1 CALLDATALOAD DELEGATECALL 0xEA DUP6 PUSH26 0x1DD5B53564736F6C634300080C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "CALLVALUE",
      "path": "27"
    },
    "6": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "8": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "12": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "16": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "17": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "POP",
      "path": "27"
    },
    "18": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "21": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "LT",
      "path": "27"
    },
    "22": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x21C"
    },
    "25": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "26": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "29": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "SHR",
      "path": "27"
    },
    "32": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "33": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "GT",
      "path": "27"
    },
    "39": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "43": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "44": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xD180FD88"
    },
    "49": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "GT",
      "path": "27"
    },
    "50": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "54": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "55": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xEC1371F2"
    },
    "60": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "GT",
      "path": "27"
    },
    "61": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "65": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "66": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xEC1371F2"
    },
    "71": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "72": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x43A"
    },
    "75": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "76": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "77": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xECFB49A3"
    },
    "82": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "83": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x442"
    },
    "86": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "87": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "88": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "94": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x44B"
    },
    "97": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "98": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "99": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF40F0F52"
    },
    "104": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "105": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45E"
    },
    "108": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "109": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "110": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF79ED94B"
    },
    "115": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "116": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x471"
    },
    "119": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "120": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "123": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "124": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "125": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "126": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xD180FD88"
    },
    "131": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "132": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3BC"
    },
    "135": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "136": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "137": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xD54AD2A1"
    },
    "142": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "143": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3C4"
    },
    "146": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "147": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "148": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xDB2E21BC"
    },
    "153": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "154": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3CD"
    },
    "157": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "158": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "159": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xDC6E13E1"
    },
    "164": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "165": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3D5"
    },
    "168": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "169": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "172": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "173": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "174": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "175": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB359A9F9"
    },
    "180": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "GT",
      "path": "27"
    },
    "181": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "185": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "186": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB359A9F9"
    },
    "191": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "192": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x371"
    },
    "195": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "196": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "197": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xBCA5503D"
    },
    "202": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "203": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x384"
    },
    "206": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "207": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "208": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC22982F4"
    },
    "213": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "214": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x38D"
    },
    "217": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "218": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "219": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC53F871F"
    },
    "224": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "225": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A0"
    },
    "228": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "229": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "230": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC61F1C0B"
    },
    "235": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "236": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3B3"
    },
    "239": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "240": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "243": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "244": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "245": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "246": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x8DA5CB5B"
    },
    "251": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "252": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33C"
    },
    "255": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "256": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "257": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x9B05DDB3"
    },
    "262": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "263": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x34D"
    },
    "266": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "267": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "268": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA775573A"
    },
    "273": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "274": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x355"
    },
    "277": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "278": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "279": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA80A7882"
    },
    "284": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "285": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x368"
    },
    "288": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "289": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "292": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "293": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "294": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "295": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x5692F138"
    },
    "300": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "GT",
      "path": "27"
    },
    "301": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "305": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "306": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6E74D2E2"
    },
    "311": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "GT",
      "path": "27"
    },
    "312": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "316": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "317": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6E74D2E2"
    },
    "322": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "323": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2FC"
    },
    "326": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "327": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "328": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6F90E046"
    },
    "333": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "334": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x305"
    },
    "337": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "338": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "339": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x715018A6"
    },
    "344": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "345": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x318"
    },
    "348": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "349": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "350": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x784DEF8C"
    },
    "355": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "356": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x320"
    },
    "359": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "360": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "361": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x817B1CD2"
    },
    "366": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "367": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x333"
    },
    "370": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "371": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "374": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "375": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "376": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "377": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x5692F138"
    },
    "382": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "383": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2AD"
    },
    "386": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "387": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "388": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x5832D571"
    },
    "393": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "394": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2B5"
    },
    "397": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "398": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "399": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6535FC66"
    },
    "404": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "405": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2E0"
    },
    "408": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "409": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "410": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6903D0B6"
    },
    "415": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "416": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2F3"
    },
    "419": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "420": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "423": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "424": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "425": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "426": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3A53ED49"
    },
    "431": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "GT",
      "path": "27"
    },
    "432": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EF"
    },
    "435": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "436": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "437": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3A53ED49"
    },
    "442": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "443": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x26D"
    },
    "446": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "447": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "448": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x41441D3B"
    },
    "453": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "454": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x280"
    },
    "457": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "458": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "459": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x4B37F006"
    },
    "464": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "465": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x293"
    },
    "468": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "469": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "470": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x4BF211B8"
    },
    "475": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "476": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29C"
    },
    "479": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "480": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "481": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x4E71D92D"
    },
    "486": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "487": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2A5"
    },
    "490": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "491": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "494": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "495": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "496": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "497": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA3960BC"
    },
    "502": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "503": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x221"
    },
    "506": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "507": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "508": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x1058D281"
    },
    "513": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "514": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x23D"
    },
    "517": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "518": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "519": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x15EB082E"
    },
    "524": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "525": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x252"
    },
    "528": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "529": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "530": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x26CBA336"
    },
    "535": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "EQ",
      "path": "27"
    },
    "536": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x25A"
    },
    "539": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "540": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "541": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "543": {
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "544": {
      "first_revert": true,
      "fn": null,
      "offset": [
        302,
        15675
      ],
      "op": "REVERT",
      "path": "27"
    },
    "545": {
      "offset": [
        758,
        800
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "546": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "549": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "551": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "552": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "DUP2",
      "path": "27"
    },
    "553": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "JUMP",
      "path": "27"
    },
    "554": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "555": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "557": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "558": {
      "op": "SWAP1"
    },
    "559": {
      "op": "DUP2"
    },
    "560": {
      "op": "MSTORE"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "offset": [
        758,
        800
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "565": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "567": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "568": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "DUP1",
      "path": "27"
    },
    "569": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "570": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "SUB",
      "path": "27"
    },
    "571": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "572": {
      "fn": null,
      "offset": [
        758,
        800
      ],
      "op": "RETURN",
      "path": "27"
    },
    "573": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "574": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "577": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x24B"
    },
    "580": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "581": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "583": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "586": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        4361,
        5925
      ],
      "op": "JUMP",
      "path": "27"
    },
    "587": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "588": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x484"
    },
    "591": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        4361,
        5925
      ],
      "op": "JUMP",
      "path": "27"
    },
    "592": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "593": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "STOP",
      "path": "27"
    },
    "594": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6204,
        7636
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "595": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6204,
        7636
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "598": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6204,
        7636
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x882"
    },
    "601": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6204,
        7636
      ],
      "op": "JUMP",
      "path": "27"
    },
    "602": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "603": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "606": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x268"
    },
    "609": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "610": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "612": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "615": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "jump": "i",
      "offset": [
        14023,
        14258
      ],
      "op": "JUMP",
      "path": "27"
    },
    "616": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "617": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA49"
    },
    "620": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "jump": "i",
      "offset": [
        14023,
        14258
      ],
      "op": "JUMP",
      "path": "27"
    },
    "621": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "622": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "625": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27B"
    },
    "628": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "629": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "631": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "634": {
      "fn": "singleAssetStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        2227,
        2567
      ],
      "op": "JUMP",
      "path": "27"
    },
    "635": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "636": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAB9"
    },
    "639": {
      "fn": "singleAssetStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        2227,
        2567
      ],
      "op": "JUMP",
      "path": "27"
    },
    "640": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "641": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "644": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x28E"
    },
    "647": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "648": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "650": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "653": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        2992,
        4045
      ],
      "op": "JUMP",
      "path": "27"
    },
    "654": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "655": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBEC"
    },
    "658": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        2992,
        4045
      ],
      "op": "JUMP",
      "path": "27"
    },
    "659": {
      "offset": [
        833,
        866
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "660": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        833,
        866
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "663": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        833,
        866
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x5"
    },
    "665": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        833,
        866
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "666": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        833,
        866
      ],
      "op": "DUP2",
      "path": "27"
    },
    "667": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        833,
        866
      ],
      "op": "JUMP",
      "path": "27"
    },
    "668": {
      "offset": [
        1307,
        1343
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "669": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        1307,
        1343
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "672": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        1307,
        1343
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xB"
    },
    "674": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        1307,
        1343
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "675": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        1307,
        1343
      ],
      "op": "DUP2",
      "path": "27"
    },
    "676": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        1307,
        1343
      ],
      "op": "JUMP",
      "path": "27"
    },
    "677": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9565,
        9964
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "678": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9565,
        9964
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "681": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9565,
        9964
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xEF6"
    },
    "684": {
      "fn": "singleAssetStaking.claim",
      "jump": "i",
      "offset": [
        9565,
        9964
      ],
      "op": "JUMP",
      "path": "27"
    },
    "685": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10100,
        10677
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "686": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10100,
        10677
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "689": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10100,
        10677
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFE5"
    },
    "692": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "i",
      "offset": [
        10100,
        10677
      ],
      "op": "JUMP",
      "path": "27"
    },
    "693": {
      "offset": [
        1239,
        1270
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "694": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C8"
    },
    "697": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C3"
    },
    "700": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "701": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "703": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "706": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "i",
      "offset": [
        1239,
        1270
      ],
      "op": "JUMP",
      "path": "27"
    },
    "707": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "708": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10F8"
    },
    "711": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "i",
      "offset": [
        1239,
        1270
      ],
      "op": "JUMP",
      "path": "27"
    },
    "712": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "713": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "715": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "op": "SUB"
    },
    "724": {
      "op": "SWAP1"
    },
    "725": {
      "op": "SWAP2"
    },
    "726": {
      "op": "AND"
    },
    "727": {
      "op": "DUP2"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x234"
    },
    "735": {
      "op": "JUMP"
    },
    "736": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "737": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "740": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2EE"
    },
    "743": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "744": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "746": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "749": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "jump": "i",
      "offset": [
        15127,
        15357
      ],
      "op": "JUMP",
      "path": "27"
    },
    "750": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "751": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1122"
    },
    "754": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "jump": "i",
      "offset": [
        15127,
        15357
      ],
      "op": "JUMP",
      "path": "27"
    },
    "755": {
      "offset": [
        872,
        941
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "756": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        872,
        941
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "759": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        872,
        941
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x6"
    },
    "761": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        872,
        941
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "762": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        872,
        941
      ],
      "op": "DUP2",
      "path": "27"
    },
    "763": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        872,
        941
      ],
      "op": "JUMP",
      "path": "27"
    },
    "764": {
      "offset": [
        583,
        622
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "765": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        583,
        622
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "768": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        583,
        622
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "770": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        583,
        622
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "771": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        583,
        622
      ],
      "op": "DUP2",
      "path": "27"
    },
    "772": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        583,
        622
      ],
      "op": "JUMP",
      "path": "27"
    },
    "773": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "774": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "777": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x313"
    },
    "780": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "781": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "783": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "786": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "jump": "i",
      "offset": [
        15504,
        15673
      ],
      "op": "JUMP",
      "path": "27"
    },
    "787": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "788": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1193"
    },
    "791": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "jump": "i",
      "offset": [
        15504,
        15673
      ],
      "op": "JUMP",
      "path": "27"
    },
    "792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x250"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1212"
    },
    "799": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "800": {
      "offset": [
        1422,
        1455
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1422,
        1455
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE"
    },
    "803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1422,
        1455
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1422,
        1455
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C8"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1422,
        1455
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "op": "SUB"
    },
    "816": {
      "offset": [
        1422,
        1455
      ],
      "op": "AND",
      "path": "27"
    },
    "817": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1422,
        1455
      ],
      "op": "DUP2",
      "path": "27"
    },
    "818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1422,
        1455
      ],
      "op": "JUMP",
      "path": "27"
    },
    "819": {
      "offset": [
        1461,
        1487
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1461,
        1487
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "823": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1461,
        1487
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1461,
        1487
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1461,
        1487
      ],
      "op": "DUP2",
      "path": "27"
    },
    "827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1461,
        1487
      ],
      "op": "JUMP",
      "path": "27"
    },
    "828": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "829": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "831": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "841": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "844": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "845": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10856,
        12741
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "846": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10856,
        12741
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "849": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10856,
        12741
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1248"
    },
    "852": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        10856,
        12741
      ],
      "op": "JUMP",
      "path": "27"
    },
    "853": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "854": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "857": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x363"
    },
    "860": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "861": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "863": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "866": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "jump": "i",
      "offset": [
        2573,
        2869
      ],
      "op": "JUMP",
      "path": "27"
    },
    "867": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "868": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1684"
    },
    "871": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "jump": "i",
      "offset": [
        2573,
        2869
      ],
      "op": "JUMP",
      "path": "27"
    },
    "872": {
      "offset": [
        691,
        727
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "873": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        691,
        727
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "876": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        691,
        727
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "878": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        691,
        727
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "879": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        691,
        727
      ],
      "op": "DUP2",
      "path": "27"
    },
    "880": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        691,
        727
      ],
      "op": "JUMP",
      "path": "27"
    },
    "881": {
      "offset": [
        981,
        1004
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "882": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        981,
        1004
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x7"
    },
    "884": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        981,
        1004
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "885": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        981,
        1004
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C8"
    },
    "888": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        981,
        1004
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "offset": [
        981,
        1004
      ],
      "op": "AND",
      "path": "27"
    },
    "898": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        981,
        1004
      ],
      "op": "DUP2",
      "path": "27"
    },
    "899": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        981,
        1004
      ],
      "op": "JUMP",
      "path": "27"
    },
    "900": {
      "offset": [
        508,
        552
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "901": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        508,
        552
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "904": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        508,
        552
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "906": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        508,
        552
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "907": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        508,
        552
      ],
      "op": "DUP2",
      "path": "27"
    },
    "908": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        508,
        552
      ],
      "op": "JUMP",
      "path": "27"
    },
    "909": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "910": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "913": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x39B"
    },
    "916": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "917": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "919": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "922": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        14763,
        14982
      ],
      "op": "JUMP",
      "path": "27"
    },
    "923": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "924": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x171B"
    },
    "927": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        14763,
        14982
      ],
      "op": "JUMP",
      "path": "27"
    },
    "928": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "929": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "932": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3AE"
    },
    "935": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "936": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "938": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5D"
    },
    "941": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "jump": "i",
      "offset": [
        14400,
        14623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "942": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "943": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x178B"
    },
    "946": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "jump": "i",
      "offset": [
        14400,
        14623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "947": {
      "offset": [
        1349,
        1381
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "948": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        1349,
        1381
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "951": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        1349,
        1381
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xC"
    },
    "953": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        1349,
        1381
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "954": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        1349,
        1381
      ],
      "op": "DUP2",
      "path": "27"
    },
    "955": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        1349,
        1381
      ],
      "op": "JUMP",
      "path": "27"
    },
    "956": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13671,
        13875
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "957": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13671,
        13875
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "960": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13671,
        13875
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17FB"
    },
    "963": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "jump": "i",
      "offset": [
        13671,
        13875
      ],
      "op": "JUMP",
      "path": "27"
    },
    "964": {
      "offset": [
        1494,
        1521
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "965": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        1494,
        1521
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "968": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        1494,
        1521
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x10"
    },
    "970": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        1494,
        1521
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "971": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        1494,
        1521
      ],
      "op": "DUP2",
      "path": "27"
    },
    "972": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        1494,
        1521
      ],
      "op": "JUMP",
      "path": "27"
    },
    "973": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12918,
        13530
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "974": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12918,
        13530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "977": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12918,
        13530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1902"
    },
    "980": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        12918,
        13530
      ],
      "op": "JUMP",
      "path": "27"
    },
    "981": {
      "offset": [
        1191,
        1233
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "982": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x412"
    },
    "985": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3E3"
    },
    "988": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "989": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "991": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D76"
    },
    "994": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        1191,
        1233
      ],
      "op": "JUMP",
      "path": "27"
    },
    "995": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "996": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "998": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1000": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1001": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1003": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1004": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1005": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1006": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1008": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1009": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1010": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1011": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1012": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "1014": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1015": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "ADD",
      "path": "27"
    },
    "1016": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1017": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "1019": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1020": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "ADD",
      "path": "27"
    },
    "1021": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1022": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "1024": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1025": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "ADD",
      "path": "27"
    },
    "1026": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1027": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1029": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1030": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "1031": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "ADD",
      "path": "27"
    },
    "1032": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1033": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1034": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "1035": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1036": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1037": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1038": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1039": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1040": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "DUP6",
      "path": "27"
    },
    "1041": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1042": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1043": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1045": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1046": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        1191,
        1233
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1047": {
      "op": "SWAP6"
    },
    "1048": {
      "op": "DUP7"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1052": {
      "op": "DUP7"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "op": "SWAP5"
    },
    "1055": {
      "op": "SWAP1"
    },
    "1056": {
      "op": "SWAP5"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "SWAP3"
    },
    "1059": {
      "op": "DUP5"
    },
    "1060": {
      "op": "ADD"
    },
    "1061": {
      "op": "SWAP2"
    },
    "1062": {
      "op": "SWAP1"
    },
    "1063": {
      "op": "SWAP2"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1067": {
      "op": "DUP4"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "op": "MSTORE"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "offset": [
        1191,
        1233
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x234"
    },
    "1081": {
      "op": "JUMP"
    },
    "1082": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8656,
        9092
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1083": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8656,
        9092
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "1086": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8656,
        9092
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B00"
    },
    "1089": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "jump": "i",
      "offset": [
        8656,
        9092
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1090": {
      "offset": [
        1277,
        1301
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1091": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        1277,
        1301
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "1094": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        1277,
        1301
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "1096": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        1277,
        1301
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1097": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        1277,
        1301
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1098": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        1277,
        1301
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1099": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x250"
    },
    "1103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "1106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D76"
    },
    "1112": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B62"
    },
    "1117": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1118": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1119": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22A"
    },
    "1122": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x46C"
    },
    "1125": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1126": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1128": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D76"
    },
    "1131": {
      "fn": "singleAssetStaking.pendingReward",
      "jump": "i",
      "offset": [
        9291,
        9405
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1132": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1133": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BFD"
    },
    "1136": {
      "fn": "singleAssetStaking.pendingReward",
      "jump": "i",
      "offset": [
        9291,
        9405
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1137": {
      "offset": [
        1387,
        1416
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1138": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        1387,
        1416
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xD"
    },
    "1140": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        1387,
        1416
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1141": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        1387,
        1416
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C8"
    },
    "1144": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        1387,
        1416
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "SUB"
    },
    "1153": {
      "offset": [
        1387,
        1416
      ],
      "op": "AND",
      "path": "27"
    },
    "1154": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        1387,
        1416
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1155": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        1387,
        1416
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1156": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1157": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4417,
        4431
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1159": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4434,
        4455
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x48F"
    },
    "1162": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4444,
        4454
      ],
      "op": "CALLER",
      "path": "27"
    },
    "1163": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4434,
        4443
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C0E"
    },
    "1166": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        4434,
        4455
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1167": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4434,
        4455
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1168": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4474,
        4484
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 1
    },
    "1169": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1171": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1172": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1173": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1174": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4473
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "1176": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1178": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1179": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1181": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1182": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4485
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1183": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4508,
        4520
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "1184": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4505
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "1186": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4505
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1187": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4505
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1188": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4505
      ],
      "op": "ADD",
      "path": "27"
    },
    "1189": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4465,
        4520
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "1190": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4542,
        4551
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 2,
      "value": "0xA"
    },
    "1192": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4542,
        4551
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1193": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4417,
        4455
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1194": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4417,
        4455
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1195": {
      "op": "POP"
    },
    "1196": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4542,
        4563
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4B5"
    },
    "1199": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4542,
        4563
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1200": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4417,
        4455
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1201": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4542,
        4555
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "1204": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        4542,
        4563
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1205": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4542,
        4563
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1206": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4530,
        4539
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "1208": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4530,
        4563
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "1209": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4603,
        4613
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 3
    },
    "1210": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1212": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1213": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1214": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1215": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4602
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "1217": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1219": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1220": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1222": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1223": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4614
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1224": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4627
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1225": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4638
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1226": {
      "op": "GT"
    },
    "1227": {
      "branch": 117,
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4594,
        4638
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1228": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x53A"
    },
    "1231": {
      "branch": 117,
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1232": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1234": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1243": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1246": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1248": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1249": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "ADD",
      "path": "27"
    },
    "1250": {
      "op": "MSTORE"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1255": {
      "op": "DUP3"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "MSTORE"
    },
    "1258": {
      "op": "PUSH32",
      "value": "0x576974686472617720616D6F756E742063616E206E6F74206265206772656174"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1293": {
      "op": "DUP3"
    },
    "1294": {
      "op": "ADD"
    },
    "1295": {
      "op": "MSTORE"
    },
    "1296": {
      "op": "PUSH21",
      "value": "0x195C881D1A185B881CDD185AD95908185B5BDD5B9D"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "ADD"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1330": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1332": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1333": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1334": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1335": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "SUB",
      "path": "27"
    },
    "1336": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1337": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "27"
    },
    "1338": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4573,
        4717
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1339": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4741,
        4752
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 4,
      "value": "0xF"
    },
    "1341": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4741,
        4752
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1342": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4741,
        4765
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x547"
    },
    "1345": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4741,
        4765
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1346": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4757,
        4764
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1347": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4741,
        4756
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "1350": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        4741,
        4765
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1351": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4741,
        4765
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1352": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4727,
        4738
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "1354": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4727,
        4765
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "1355": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4820,
        4830
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 5
    },
    "1356": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1358": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1359": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1360": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1361": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4819
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "1363": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1365": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1366": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1368": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1369": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4831
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1370": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4857
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1371": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4883
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x564"
    },
    "1374": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4883
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1375": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4875,
        4882
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1376": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4874
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "1379": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        4811,
        4883
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1380": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4811,
        4883
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1381": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4784,
        4794
      ],
      "op": "CALLER",
      "path": "27"
    },
    "1382": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1384": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1385": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1386": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1387": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4783
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "1389": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1391": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1392": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1394": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1395": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4795
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1396": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4883
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1397": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4883
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1398": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4775,
        4883
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "1399": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4978,
        4998
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x6"
    },
    "1401": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4978,
        4998
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1402": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "1404": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4973
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1405": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4973
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1406": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4973
      ],
      "op": "ADD",
      "path": "27"
    },
    "1407": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4973
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1408": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4999
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x588"
    },
    "1411": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4999
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1412": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4977
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "1415": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        4937,
        4999
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1416": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4937,
        4999
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1417": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4910,
        4922
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "1418": {
      "branch": 118,
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4910,
        4999
      ],
      "op": "LT",
      "path": "27"
    },
    "1419": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4893,
        5238
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1420": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4893,
        5238
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x63C"
    },
    "1423": {
      "branch": 118,
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4893,
        5238
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1424": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5048,
        5069
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1426": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5114
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5B2"
    },
    "1429": {
      "offset": [
        679,
        684
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2710"
    },
    "1432": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5101
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5AC"
    },
    "1435": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5084,
        5100
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "1437": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5084,
        5100
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1438": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5079
      ],
      "op": "DUP7",
      "path": "27"
    },
    "1439": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5083
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF5"
    },
    "1442": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5083
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1443": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5101
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1444": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5101
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1445": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5101
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "1450": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5101
      ],
      "op": "AND",
      "path": "27"
    },
    "1451": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5072,
        5101
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1452": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5101
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1453": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5105
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1454": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5105
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D01"
    },
    "1457": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5072,
        5114
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1458": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5072,
        5114
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1459": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5048,
        5114
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1460": {
      "op": "POP"
    },
    "1461": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5138,
        5164
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 6,
      "value": "0x5BE"
    },
    "1464": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5138,
        5145
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1465": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5048,
        5114
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1466": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5138,
        5149
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "1469": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5138,
        5164
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1470": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5138,
        5164
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1471": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5183
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 7,
      "value": "0x7"
    },
    "1473": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5183
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1474": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5193,
        5211
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE"
    },
    "1476": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5193,
        5211
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1477": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1479": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1480": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1487": {
      "op": "SHL"
    },
    "1488": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1489": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1490": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5128,
        5164
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1491": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5128,
        5164
      ],
      "op": "SWAP6",
      "path": "27"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1499": {
      "op": "SHL"
    },
    "1500": {
      "op": "SUB"
    },
    "1501": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5183
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1502": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5183
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1503": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5183
      ],
      "op": "AND",
      "path": "27"
    },
    "1504": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5183
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1505": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5192
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "1510": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5192
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1511": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5F6"
    },
    "1514": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1515": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5193,
        5211
      ],
      "op": "AND",
      "path": "27"
    },
    "1516": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5193,
        5211
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1517": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5213,
        5226
      ],
      "op": "DUP6",
      "path": "27"
    },
    "1518": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5213,
        5226
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1519": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1521": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "ADD",
      "path": "27"
    },
    "1522": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "1525": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5178,
        5227
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1526": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1527": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1529": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1531": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1532": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1533": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1534": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "SUB",
      "path": "27"
    },
    "1535": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1536": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1538": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP8",
      "path": "27"
    },
    "1539": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "GAS",
      "path": "27"
    },
    "1540": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "CALL",
      "path": "27"
    },
    "1541": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1542": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1543": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1544": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x615"
    },
    "1547": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1548": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "1549": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1551": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1552": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "1553": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "1554": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1556": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1557": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1558": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "POP",
      "path": "27"
    },
    "1559": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "POP",
      "path": "27"
    },
    "1560": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "POP",
      "path": "27"
    },
    "1561": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "POP",
      "path": "27"
    },
    "1562": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1564": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1565": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "1566": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "1568": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "NOT",
      "path": "27"
    },
    "1569": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "1571": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1572": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "ADD",
      "path": "27"
    },
    "1573": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "AND",
      "path": "27"
    },
    "1574": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1575": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "ADD",
      "path": "27"
    },
    "1576": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1577": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1579": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1580": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "POP",
      "path": "27"
    },
    "1581": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1582": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "ADD",
      "path": "27"
    },
    "1583": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1584": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x639"
    },
    "1587": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1588": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1589": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "1592": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5178,
        5227
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1593": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1594": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5178,
        5227
      ],
      "op": "POP",
      "path": "27"
    },
    "1595": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5010,
        5238
      ],
      "op": "POP",
      "path": "27"
    },
    "1596": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4893,
        5238
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1597": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5257,
        5276
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 8,
      "value": "0x646"
    },
    "1600": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5257,
        5264
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1601": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5269,
        5275
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1602": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5257,
        5268
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "1605": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5257,
        5276
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1606": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5257,
        5276
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1607": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5291
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 9,
      "value": "0x7"
    },
    "1609": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5291
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1610": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1612": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1613": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1622": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1623": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5247,
        5276
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1624": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5247,
        5276
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5291
      ],
      "op": "AND",
      "path": "27"
    },
    "1635": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5291
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1636": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5300
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "1641": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5300
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1642": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x679"
    },
    "1645": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1646": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5301,
        5311
      ],
      "op": "CALLER",
      "path": "27"
    },
    "1647": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5301,
        5311
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1648": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5247,
        5276
      ],
      "op": "DUP7",
      "path": "27"
    },
    "1649": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5247,
        5276
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1650": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1652": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "ADD",
      "path": "27"
    },
    "1653": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "1656": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5286,
        5321
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1657": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1658": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1660": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1662": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1663": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1664": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1665": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "SUB",
      "path": "27"
    },
    "1666": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1667": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1669": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP8",
      "path": "27"
    },
    "1670": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "GAS",
      "path": "27"
    },
    "1671": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "CALL",
      "path": "27"
    },
    "1672": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1673": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1674": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1675": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x698"
    },
    "1678": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1679": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "1680": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1682": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1683": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "1684": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "1685": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1687": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1688": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1689": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "POP",
      "path": "27"
    },
    "1690": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "POP",
      "path": "27"
    },
    "1691": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "POP",
      "path": "27"
    },
    "1692": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "POP",
      "path": "27"
    },
    "1693": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1695": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1696": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "1697": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "1699": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "NOT",
      "path": "27"
    },
    "1700": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "1702": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1703": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "ADD",
      "path": "27"
    },
    "1704": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "AND",
      "path": "27"
    },
    "1705": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1706": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "ADD",
      "path": "27"
    },
    "1707": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1708": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1710": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1711": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "POP",
      "path": "27"
    },
    "1712": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1713": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "ADD",
      "path": "27"
    },
    "1714": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1715": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6BC"
    },
    "1718": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1719": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1720": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "1723": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5286,
        5321
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1724": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5286,
        5321
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1725": {
      "op": "POP"
    },
    "1726": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5372,
        5382
      ],
      "op": "CALLER",
      "path": "27"
    },
    "1727": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1729": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1730": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1731": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1732": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5371
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "1734": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1736": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1737": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1739": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1740": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5383
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1741": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5363,
        5396
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1742": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5359,
        5876
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x864"
    },
    "1745": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5359,
        5876
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1746": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5451,
        5461
      ],
      "op": "CALLER",
      "path": "27"
    },
    "1747": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5417,
        5439
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1749": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5462
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1750": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5462
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1751": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5462
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1752": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5450
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "1754": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5462
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1756": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5462
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1757": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5462
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1759": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5462
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1760": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5442,
        5462
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1761": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5497,
        5511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "1763": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5497,
        5518
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1764": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5497,
        5522
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6EF"
    },
    "1767": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5497,
        5522
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1768": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5521,
        5522
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "1770": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5521,
        5522
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1771": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5497,
        5522
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DF0"
    },
    "1774": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5497,
        5522
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1775": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5497,
        5522
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1776": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5480,
        5487
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1777": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5480,
        5493
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1779": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5480,
        5493
      ],
      "op": "ADD",
      "path": "27"
    },
    "1780": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5480,
        5493
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1781": {
      "branch": 119,
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5480,
        5522
      ],
      "op": "EQ",
      "path": "27"
    },
    "1782": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5476,
        5791
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x804"
    },
    "1785": {
      "branch": 119,
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5476,
        5791
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1786": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5578
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "1788": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5579,
        5600
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1789": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5579,
        5600
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1790": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5542,
        5561
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1792": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5542,
        5561
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1793": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5578
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1794": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5579,
        5604
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x70D"
    },
    "1797": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5579,
        5604
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1798": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5603,
        5604
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "1800": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5603,
        5604
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1801": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5579,
        5604
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DF0"
    },
    "1804": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5579,
        5604
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1805": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5579,
        5604
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1806": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1807": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1808": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1809": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "LT",
      "path": "27"
    },
    "1810": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x71D"
    },
    "1813": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1814": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x71D"
    },
    "1817": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E07"
    },
    "1820": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5564,
        5605
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1821": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1822": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1823": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1825": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1826": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1828": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1830": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1831": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "ADD",
      "path": "27"
    },
    "1832": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1834": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1835": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1836": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1837": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "1840": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "EXP",
      "path": "27"
    },
    "1841": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1842": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "DIV",
      "path": "27"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5564,
        5605
      ],
      "op": "AND",
      "path": "27"
    },
    "1852": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5542,
        5605
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1853": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5542,
        5605
      ],
      "op": "POP",
      "path": "27"
    },
    "1854": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5655,
        5666
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 10
    },
    "1855": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5637
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "1857": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5638,
        5645
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1858": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5638,
        5651
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1860": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5638,
        5651
      ],
      "op": "ADD",
      "path": "27"
    },
    "1861": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5638,
        5651
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1862": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1863": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1864": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1865": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "LT",
      "path": "27"
    },
    "1866": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x755"
    },
    "1869": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1870": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x755"
    },
    "1873": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E07"
    },
    "1876": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5623,
        5652
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1877": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1878": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1880": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1881": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1882": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1883": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1885": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1886": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1887": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1888": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1889": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1890": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1891": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5652
      ],
      "op": "ADD",
      "path": "27"
    },
    "1892": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1893": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "op": "SUB"
    },
    "1902": {
      "op": "NOT"
    },
    "1903": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "AND",
      "path": "27"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1910": {
      "op": "SHL"
    },
    "1911": {
      "op": "SUB"
    },
    "1912": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "1913": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "DUP6",
      "path": "27"
    },
    "1914": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "AND",
      "path": "27"
    },
    "1915": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "OR",
      "path": "27"
    },
    "1916": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1917": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5623,
        5666
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "1918": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5714,
        5727
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 11,
      "value": "0x4"
    },
    "1920": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5714,
        5727
      ],
      "op": "DUP6",
      "path": "27"
    },
    "1921": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5714,
        5727
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1922": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5714,
        5727
      ],
      "op": "ADD",
      "path": "27"
    },
    "1923": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5714,
        5727
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1924": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "DUP6",
      "path": "27"
    },
    "1925": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "DUP6",
      "path": "27"
    },
    "1926": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "AND",
      "path": "27"
    },
    "1927": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1928": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1929": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5692
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "1931": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1932": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1933": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1934": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1936": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1937": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1938": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5705
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1939": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5711
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1940": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5711
      ],
      "op": "ADD",
      "path": "27"
    },
    "1941": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5727
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1942": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5727
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1943": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5727
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1944": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5684,
        5727
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "1945": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5750
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 12,
      "value": "0x7"
    },
    "1947": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5750
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1948": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1949": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1950": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1957": {
      "op": "SHL"
    },
    "1958": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1959": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1960": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5750
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1961": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5750
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1962": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5750
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "1963": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5750
      ],
      "op": "AND",
      "path": "27"
    },
    "1964": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5750
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1965": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5758
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x95EA7B3"
    },
    "1970": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5758
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1971": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7BE"
    },
    "1974": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1975": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5767,
        5771
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "1976": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5767,
        5771
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1977": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "ADD",
      "path": "27"
    },
    "1978": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "1981": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5745,
        5776
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1982": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1983": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1985": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1987": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1988": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1989": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1990": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "SUB",
      "path": "27"
    },
    "1991": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1992": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1994": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP8",
      "path": "27"
    },
    "1995": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "GAS",
      "path": "27"
    },
    "1996": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "CALL",
      "path": "27"
    },
    "1997": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1998": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1999": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2000": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7DD"
    },
    "2003": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2004": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2005": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2007": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2008": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "2009": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2010": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2012": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "REVERT",
      "path": "27"
    },
    "2013": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2014": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "POP",
      "path": "27"
    },
    "2015": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "POP",
      "path": "27"
    },
    "2016": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "POP",
      "path": "27"
    },
    "2017": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "POP",
      "path": "27"
    },
    "2018": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2020": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2021": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2022": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2024": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "NOT",
      "path": "27"
    },
    "2025": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2027": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2028": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "ADD",
      "path": "27"
    },
    "2029": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "AND",
      "path": "27"
    },
    "2030": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2031": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "ADD",
      "path": "27"
    },
    "2032": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2033": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2035": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2036": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "POP",
      "path": "27"
    },
    "2037": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2038": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "ADD",
      "path": "27"
    },
    "2039": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2040": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x801"
    },
    "2043": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2044": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2045": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "2048": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5745,
        5776
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2049": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2050": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5745,
        5776
      ],
      "op": "POP",
      "path": "27"
    },
    "2051": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5524,
        5791
      ],
      "op": "POP",
      "path": "27"
    },
    "2052": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5476,
        5791
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2053": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5818
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 13,
      "value": "0x9"
    },
    "2055": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2056": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2057": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2058": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x815"
    },
    "2061": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2062": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x815"
    },
    "2065": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E1D"
    },
    "2068": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "i",
      "offset": [
        5804,
        5824
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2069": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2070": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2072": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2073": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2074": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2075": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2077": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2078": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2079": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2080": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2081": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "ADD",
      "path": "27"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2084": {
      "op": "NOT"
    },
    "2085": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2086": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2087": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "ADD",
      "path": "27"
    },
    "2088": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2089": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "op": "SUB"
    },
    "2098": {
      "op": "NOT"
    },
    "2099": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "AND",
      "path": "27"
    },
    "2100": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2101": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2102": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2103": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2104": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "ADD",
      "path": "27"
    },
    "2105": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2106": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2107": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2108": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5854,
        5864
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 14
    },
    "2109": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5845,
        5865
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2110": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5845,
        5865
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2111": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5845,
        5853
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "2113": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5845,
        5865
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2114": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5845,
        5865
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2115": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5845,
        5865
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2117": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5845,
        5865
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2118": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5845,
        5865
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2119": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2120": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2121": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2122": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5804,
        5824
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "2124": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2125": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "ADD",
      "path": "27"
    },
    "2126": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2127": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2128": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2129": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "2131": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2132": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "ADD",
      "path": "27"
    },
    "2133": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2134": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2135": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2136": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "2138": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2139": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "ADD",
      "path": "27"
    },
    "2140": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2141": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2142": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2143": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2145": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "ADD",
      "path": "27"
    },
    "2146": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5838,
        5865
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5359,
        5876
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2149": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5908,
        5917
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 15,
      "value": "0xA"
    },
    "2151": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5908,
        5917
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2152": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5890,
        5918
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2154": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5890,
        5918
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2157": {
      "op": "DUP1"
    },
    "2158": {
      "op": "MLOAD"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2161": {
      "op": "PUSH2",
      "value": "0x1FAA"
    },
    "2164": {
      "op": "DUP4"
    },
    "2165": {
      "op": "CODECOPY"
    },
    "2166": {
      "op": "DUP2"
    },
    "2167": {
      "op": "MLOAD"
    },
    "2168": {
      "op": "SWAP2"
    },
    "2169": {
      "op": "MSTORE"
    },
    "2170": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5890,
        5918
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2171": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5890,
        5918
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2173": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5890,
        5918
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2174": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        5890,
        5918
      ],
      "op": "LOG2",
      "path": "27"
    },
    "2175": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4407,
        5925
      ],
      "op": "POP",
      "path": "27"
    },
    "2176": {
      "fn": "singleAssetStaking.leaveStaking",
      "offset": [
        4361,
        5925
      ],
      "op": "POP",
      "path": "27"
    },
    "2177": {
      "fn": "singleAssetStaking.leaveStaking",
      "jump": "o",
      "offset": [
        4361,
        5925
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2178": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6204,
        7636
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2179": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6255,
        6269
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2181": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6272,
        6293
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x88D"
    },
    "2184": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6282,
        6292
      ],
      "op": "CALLER",
      "path": "27"
    },
    "2185": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6272,
        6281
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C0E"
    },
    "2188": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6272,
        6293
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2189": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6272,
        6293
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2190": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6312,
        6322
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 16
    },
    "2191": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2193": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2194": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2195": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2196": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6311
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "2198": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2200": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2201": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2203": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2204": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6323
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2205": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6346,
        6358
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "2206": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6343
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "2208": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6343
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2209": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6343
      ],
      "op": "ADD",
      "path": "27"
    },
    "2210": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6303,
        6358
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2211": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6391,
        6424
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2212": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6446,
        6455
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 17,
      "value": "0xA"
    },
    "2214": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6446,
        6455
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2215": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6255,
        6293
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2216": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6255,
        6293
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6391,
        6424
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2219": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6446,
        6467
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8B4"
    },
    "2222": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6446,
        6467
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2223": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6255,
        6293
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2224": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6446,
        6459
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "2227": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6446,
        6467
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2228": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6446,
        6467
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2229": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6434,
        6443
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "2231": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6434,
        6467
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2232": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6492,
        6516
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 18,
      "value": "0x8C1"
    },
    "2235": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6492,
        6504
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2236": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6509,
        6515
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2237": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6492,
        6508
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "2240": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6492,
        6516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2241": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6492,
        6516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2242": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6565,
        6575
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 19
    },
    "2243": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2245": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2246": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2247": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2248": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6564
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "2250": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2252": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2253": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2255": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2256": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6576
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2257": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6556,
        6589
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2258": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6540,
        6551
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "2260": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6540,
        6551
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2261": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6477,
        6516
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2262": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6477,
        6516
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6540,
        6590
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8E1"
    },
    "2267": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6540,
        6590
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2268": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6540,
        6551
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2269": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6540,
        6555
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "2272": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6540,
        6590
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2273": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6540,
        6590
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2274": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6526,
        6537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "2276": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6526,
        6590
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2277": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6684,
        6704
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x6"
    },
    "2279": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6684,
        6704
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2280": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6654,
        6664
      ],
      "op": "CALLER",
      "path": "27"
    },
    "2281": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2283": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2284": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2285": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2286": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6653
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "2288": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2290": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2291": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2293": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2294": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6665
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2295": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6681
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "2297": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6681
      ],
      "op": "ADD",
      "path": "27"
    },
    "2298": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6681
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2299": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6704
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x904"
    },
    "2302": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6704
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2303": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6684,
        6704
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2304": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6704
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E33"
    },
    "2307": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6645,
        6704
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2308": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6645,
        6704
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2309": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6618,
        6630
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "2310": {
      "branch": 120,
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6618,
        6704
      ],
      "op": "LT",
      "path": "27"
    },
    "2311": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6601,
        6964
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2312": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6601,
        6964
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x9B2"
    },
    "2315": {
      "branch": 120,
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6601,
        6964
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2316": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6729,
        6750
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2318": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6830
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x928"
    },
    "2321": {
      "offset": [
        679,
        684
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2710"
    },
    "2324": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6787
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5AC"
    },
    "2327": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6770,
        6786
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "2329": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6770,
        6786
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2330": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6765
      ],
      "op": "DUP6",
      "path": "27"
    },
    "2331": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6769
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF5"
    },
    "2334": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6769
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2335": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6787
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2336": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6787
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2337": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6787
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "2342": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6787
      ],
      "op": "AND",
      "path": "27"
    },
    "2343": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6753,
        6787
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2344": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6753,
        6830
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2345": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6729,
        6830
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6859,
        6890
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 20,
      "value": "0x934"
    },
    "2350": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6859,
        6871
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2351": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6729,
        6830
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2352": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6859,
        6875
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "2355": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6859,
        6890
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2356": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6859,
        6890
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2357": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6909
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 21,
      "value": "0x7"
    },
    "2359": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6909
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2360": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6919,
        6937
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE"
    },
    "2362": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6919,
        6937
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2363": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2365": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2366": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2375": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2376": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6844,
        6890
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2377": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6844,
        6890
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2385": {
      "op": "SHL"
    },
    "2386": {
      "op": "SUB"
    },
    "2387": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6909
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2388": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6909
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2389": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6909
      ],
      "op": "AND",
      "path": "27"
    },
    "2390": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6909
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2391": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6918
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "2396": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6918
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2397": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x96C"
    },
    "2400": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2401": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6919,
        6937
      ],
      "op": "AND",
      "path": "27"
    },
    "2402": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6919,
        6937
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2403": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6939,
        6952
      ],
      "op": "DUP6",
      "path": "27"
    },
    "2404": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6939,
        6952
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2405": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2407": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "ADD",
      "path": "27"
    },
    "2408": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "2411": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6904,
        6953
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2412": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2413": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2415": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2417": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2418": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2419": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2420": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "SUB",
      "path": "27"
    },
    "2421": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2422": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2424": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP8",
      "path": "27"
    },
    "2425": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "GAS",
      "path": "27"
    },
    "2426": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "CALL",
      "path": "27"
    },
    "2427": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2428": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2429": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2430": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x98B"
    },
    "2433": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2434": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2435": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2437": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2438": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "2439": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2440": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2442": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "REVERT",
      "path": "27"
    },
    "2443": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2444": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "POP",
      "path": "27"
    },
    "2445": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "POP",
      "path": "27"
    },
    "2446": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "POP",
      "path": "27"
    },
    "2447": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "POP",
      "path": "27"
    },
    "2448": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2450": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2451": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2452": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2454": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "NOT",
      "path": "27"
    },
    "2455": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2457": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2458": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "ADD",
      "path": "27"
    },
    "2459": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "AND",
      "path": "27"
    },
    "2460": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2461": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "ADD",
      "path": "27"
    },
    "2462": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2463": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2465": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2466": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "POP",
      "path": "27"
    },
    "2467": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2468": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "ADD",
      "path": "27"
    },
    "2469": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2470": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x9AF"
    },
    "2473": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2474": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2475": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "2478": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6904,
        6953
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2479": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2480": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6904,
        6953
      ],
      "op": "POP",
      "path": "27"
    },
    "2481": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6715,
        6964
      ],
      "op": "POP",
      "path": "27"
    },
    "2482": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6601,
        6964
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2483": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        6978
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 22,
      "value": "0x7"
    },
    "2485": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        6978
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2486": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2488": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2489": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2498": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2505": {
      "op": "SHL"
    },
    "2506": {
      "op": "SUB"
    },
    "2507": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        6978
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2508": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        6978
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2509": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        6978
      ],
      "op": "AND",
      "path": "27"
    },
    "2510": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        6978
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2511": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        6987
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "2516": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        6987
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2517": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x9E4"
    },
    "2520": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2521": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6988,
        6998
      ],
      "op": "CALLER",
      "path": "27"
    },
    "2522": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6988,
        6998
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2523": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7000,
        7012
      ],
      "op": "DUP6",
      "path": "27"
    },
    "2524": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7000,
        7012
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2525": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2527": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "ADD",
      "path": "27"
    },
    "2528": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "2531": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6973,
        7013
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2532": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2533": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2535": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2537": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2538": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2539": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2540": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "SUB",
      "path": "27"
    },
    "2541": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2542": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2544": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP8",
      "path": "27"
    },
    "2545": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "GAS",
      "path": "27"
    },
    "2546": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "CALL",
      "path": "27"
    },
    "2547": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2548": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2549": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2550": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA03"
    },
    "2553": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2554": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2555": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2557": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2558": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "2559": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2560": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2562": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "REVERT",
      "path": "27"
    },
    "2563": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2564": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "POP",
      "path": "27"
    },
    "2565": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "POP",
      "path": "27"
    },
    "2566": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "POP",
      "path": "27"
    },
    "2567": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "POP",
      "path": "27"
    },
    "2568": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2570": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2571": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2572": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2574": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "NOT",
      "path": "27"
    },
    "2575": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2577": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2578": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "ADD",
      "path": "27"
    },
    "2579": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "AND",
      "path": "27"
    },
    "2580": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2581": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "ADD",
      "path": "27"
    },
    "2582": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2583": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2585": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2586": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "POP",
      "path": "27"
    },
    "2587": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2588": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "ADD",
      "path": "27"
    },
    "2589": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2590": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA27"
    },
    "2593": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2594": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2595": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "2598": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        6973,
        7013
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2599": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        6973,
        7013
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7032,
        7042
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 23
    },
    "2602": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7059,
        7060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2604": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7043
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2605": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7043
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2606": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7043
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2607": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7031
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "2609": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7043
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2611": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7043
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2612": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7043
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2614": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7043
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2615": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7043
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2616": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7060
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2617": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7060
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2618": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7023,
        7060
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2619": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7208,
        7222
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "2621": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7208,
        7229
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2622": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7208,
        7233
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6EF"
    },
    "2625": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7208,
        7233
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2626": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7232,
        7233
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "2628": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7232,
        7233
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2629": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "offset": [
        7208,
        7233
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DF0"
    },
    "2632": {
      "fn": "singleAssetStaking.leaveStakingCompletely",
      "jump": "i",
      "offset": [
        7208,
        7233
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2633": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14023,
        14258
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2634": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2636": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2643": {
      "op": "SHL"
    },
    "2644": {
      "op": "SUB"
    },
    "2645": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2646": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 24
    },
    "2647": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2648": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA73"
    },
    "2651": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2652": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2654": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2663": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2664": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2666": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2667": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "2670": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2671": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "2674": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2675": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2676": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14116,
        14117
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 25,
      "value": "0x0"
    },
    "2678": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14109,
        14113
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2679": {
      "branch": 121,
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14109,
        14117
      ],
      "op": "GT",
      "path": "27"
    },
    "2680": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA93"
    },
    "2683": {
      "branch": 121,
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2684": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2686": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2695": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2696": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2698": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "ADD",
      "path": "27"
    },
    "2699": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "2702": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2703": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E80"
    },
    "2706": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "jump": "i",
      "offset": [
        14101,
        14148
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2707": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14101,
        14148
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2708": {
      "offset": [
        472,
        476
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3E8"
    },
    "2711": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14166,
        14170
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 26
    },
    "2712": {
      "branch": 122,
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14166,
        14180
      ],
      "op": "LT",
      "path": "27"
    },
    "2713": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAB4"
    },
    "2716": {
      "branch": 122,
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2717": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2719": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2726": {
      "op": "SHL"
    },
    "2727": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2728": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2729": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2731": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "ADD",
      "path": "27"
    },
    "2732": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "2735": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2736": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EB7"
    },
    "2739": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "jump": "i",
      "offset": [
        14158,
        14210
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2740": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14158,
        14210
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2741": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14220,
        14244
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 27,
      "value": "0x1"
    },
    "2743": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "offset": [
        14220,
        14251
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2744": {
      "fn": "singleAssetStaking.setPerformanceFeeCompounder",
      "jump": "o",
      "offset": [
        14023,
        14258
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2745": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2746": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2312
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 28,
      "value": "0x7"
    },
    "2748": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2312
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2749": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2751": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2752": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2759": {
      "op": "SHL"
    },
    "2760": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2761": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2762": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2323,
        2333
      ],
      "op": "CALLER",
      "path": "27"
    },
    "2763": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2765": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2766": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "ADD",
      "path": "27"
    },
    "2767": {
      "op": "MSTORE"
    },
    "2768": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2338,
        2345
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2769": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2338,
        2345
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2776": {
      "op": "SHL"
    },
    "2777": {
      "op": "SUB"
    },
    "2778": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2312
      ],
      "op": "AND",
      "path": "27"
    },
    "2779": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2312
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2780": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2322
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x70A08231"
    },
    "2785": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2322
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2788": {
      "op": "ADD"
    },
    "2789": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2791": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2793": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2794": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2795": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2796": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "SUB",
      "path": "27"
    },
    "2797": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2798": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP7",
      "path": "27"
    },
    "2799": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "GAS",
      "path": "27"
    },
    "2800": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "2801": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2802": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2803": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2804": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xB01"
    },
    "2807": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2808": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2809": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2811": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2812": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "2813": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2814": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2816": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "REVERT",
      "path": "27"
    },
    "2817": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2818": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "POP",
      "path": "27"
    },
    "2819": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "POP",
      "path": "27"
    },
    "2820": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "POP",
      "path": "27"
    },
    "2821": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "POP",
      "path": "27"
    },
    "2822": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2824": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2825": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2826": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2828": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "NOT",
      "path": "27"
    },
    "2829": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2831": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2832": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "ADD",
      "path": "27"
    },
    "2833": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "AND",
      "path": "27"
    },
    "2834": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2835": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "ADD",
      "path": "27"
    },
    "2836": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2837": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2839": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2840": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "POP",
      "path": "27"
    },
    "2841": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2842": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "ADD",
      "path": "27"
    },
    "2843": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2844": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xB25"
    },
    "2847": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2848": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2849": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EEE"
    },
    "2852": {
      "fn": "singleAssetStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        2307,
        2334
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2853": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2334
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2854": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2345
      ],
      "op": "LT",
      "path": "27"
    },
    "2855": {
      "branch": 123,
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2307,
        2345
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2856": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xB43"
    },
    "2859": {
      "branch": 123,
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2860": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2862": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2863": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2869": {
      "op": "SHL"
    },
    "2870": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2871": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2872": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2874": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "ADD",
      "path": "27"
    },
    "2875": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "2878": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2879": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F07"
    },
    "2882": {
      "fn": "singleAssetStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        2286,
        2409
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2883": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2286,
        2409
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2884": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2431,
        2440
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 29,
      "value": "0xA"
    },
    "2886": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2431,
        2440
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2887": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2431,
        2453
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xB50"
    },
    "2890": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2431,
        2453
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2891": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2445,
        2452
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2892": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2431,
        2444
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "2895": {
      "fn": "singleAssetStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        2431,
        2453
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2896": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2431,
        2453
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2897": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2419,
        2428
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "2899": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2419,
        2453
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2900": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2468
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 30,
      "value": "0x7"
    },
    "2902": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2468
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2903": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2905": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2906": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2915": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2916": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2482,
        2492
      ],
      "op": "CALLER",
      "path": "27"
    },
    "2917": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2919": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2920": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "ADD",
      "path": "27"
    },
    "2921": {
      "op": "MSTORE"
    },
    "2922": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2502,
        2506
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2925": {
      "op": "DUP3"
    },
    "2926": {
      "op": "ADD"
    },
    "2927": {
      "op": "MSTORE"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2930": {
      "op": "DUP2"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "op": "DUP4"
    },
    "2933": {
      "op": "SWAP1"
    },
    "2934": {
      "op": "MSTORE"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "op": "SUB"
    },
    "2943": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2468
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2944": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2468
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2945": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2468
      ],
      "op": "AND",
      "path": "27"
    },
    "2946": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2468
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2947": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2481
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x23B872DD"
    },
    "2952": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2481
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2958": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2960": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2961": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2962": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2963": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "SUB",
      "path": "27"
    },
    "2964": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2965": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2967": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP8",
      "path": "27"
    },
    "2968": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "GAS",
      "path": "27"
    },
    "2969": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "CALL",
      "path": "27"
    },
    "2970": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2971": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2972": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2973": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBAA"
    },
    "2976": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2977": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2978": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2980": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2981": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "2982": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2983": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2985": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "REVERT",
      "path": "27"
    },
    "2986": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2987": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "POP",
      "path": "27"
    },
    "2988": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "POP",
      "path": "27"
    },
    "2989": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "POP",
      "path": "27"
    },
    "2990": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "POP",
      "path": "27"
    },
    "2991": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2993": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2994": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2995": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2997": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "NOT",
      "path": "27"
    },
    "2998": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3000": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3001": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "ADD",
      "path": "27"
    },
    "3002": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "AND",
      "path": "27"
    },
    "3003": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3004": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "ADD",
      "path": "27"
    },
    "3005": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3006": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3008": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3009": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "POP",
      "path": "27"
    },
    "3010": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3011": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "ADD",
      "path": "27"
    },
    "3012": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3013": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBCE"
    },
    "3016": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3017": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3018": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "3021": {
      "fn": "singleAssetStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        2463,
        2517
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3022": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2463,
        2517
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3023": {
      "op": "POP"
    },
    "3024": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2550,
        2559
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 31,
      "value": "0xA"
    },
    "3026": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2550,
        2559
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3027": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2532,
        2560
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3029": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2532,
        2560
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3032": {
      "op": "DUP1"
    },
    "3033": {
      "op": "MLOAD"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3036": {
      "op": "PUSH2",
      "value": "0x1FAA"
    },
    "3039": {
      "op": "DUP4"
    },
    "3040": {
      "op": "CODECOPY"
    },
    "3041": {
      "op": "DUP2"
    },
    "3042": {
      "op": "MLOAD"
    },
    "3043": {
      "op": "SWAP2"
    },
    "3044": {
      "op": "MSTORE"
    },
    "3045": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2532,
        2560
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3046": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2532,
        2560
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3048": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2532,
        2560
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3049": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2532,
        2560
      ],
      "op": "LOG2",
      "path": "27"
    },
    "3050": {
      "fn": "singleAssetStaking.addRewardToPool",
      "offset": [
        2227,
        2567
      ],
      "op": "POP",
      "path": "27"
    },
    "3051": {
      "fn": "singleAssetStaking.addRewardToPool",
      "jump": "o",
      "offset": [
        2227,
        2567
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3052": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        2992,
        4045
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3053": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3074
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 32,
      "value": "0x7"
    },
    "3055": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3074
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3056": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3058": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3059": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3066": {
      "op": "SHL"
    },
    "3067": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3068": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3069": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3085,
        3095
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3070": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3072": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3073": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "ADD",
      "path": "27"
    },
    "3074": {
      "op": "MSTORE"
    },
    "3075": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3100,
        3107
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3076": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3100,
        3107
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3083": {
      "op": "SHL"
    },
    "3084": {
      "op": "SUB"
    },
    "3085": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3074
      ],
      "op": "AND",
      "path": "27"
    },
    "3086": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3074
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3087": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3084
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x70A08231"
    },
    "3092": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3084
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3095": {
      "op": "ADD"
    },
    "3096": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3098": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3100": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3101": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3102": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3103": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "SUB",
      "path": "27"
    },
    "3104": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3105": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP7",
      "path": "27"
    },
    "3106": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "GAS",
      "path": "27"
    },
    "3107": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "3108": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3109": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3110": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3111": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC34"
    },
    "3114": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3115": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3116": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3118": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3119": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "3120": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3121": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3123": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "REVERT",
      "path": "27"
    },
    "3124": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3125": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "POP",
      "path": "27"
    },
    "3126": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "POP",
      "path": "27"
    },
    "3127": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "POP",
      "path": "27"
    },
    "3128": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "POP",
      "path": "27"
    },
    "3129": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3131": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3132": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3133": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3135": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "NOT",
      "path": "27"
    },
    "3136": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3138": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3139": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "ADD",
      "path": "27"
    },
    "3140": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "AND",
      "path": "27"
    },
    "3141": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3142": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "ADD",
      "path": "27"
    },
    "3143": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3144": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3146": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3147": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "POP",
      "path": "27"
    },
    "3148": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3149": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "ADD",
      "path": "27"
    },
    "3150": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3151": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC58"
    },
    "3154": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3155": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3156": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EEE"
    },
    "3159": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3069,
        3096
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3160": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3096
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3161": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3107
      ],
      "op": "LT",
      "path": "27"
    },
    "3162": {
      "branch": 124,
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3069,
        3107
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3163": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC76"
    },
    "3166": {
      "branch": 124,
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3167": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3169": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3170": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3176": {
      "op": "SHL"
    },
    "3177": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3178": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3179": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3181": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "ADD",
      "path": "27"
    },
    "3182": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "3185": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3186": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F07"
    },
    "3189": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3048,
        3171
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3190": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3048,
        3171
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3191": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3199,
        3200
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 33,
      "value": "0x0"
    },
    "3193": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3189,
        3196
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3194": {
      "branch": 125,
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3189,
        3200
      ],
      "op": "GT",
      "path": "27"
    },
    "3195": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCBF"
    },
    "3198": {
      "branch": 125,
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3199": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3201": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3202": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3208": {
      "op": "SHL"
    },
    "3209": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3210": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3213": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3215": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3216": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "ADD",
      "path": "27"
    },
    "3217": {
      "op": "MSTORE"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3222": {
      "op": "DUP3"
    },
    "3223": {
      "op": "ADD"
    },
    "3224": {
      "op": "MSTORE"
    },
    "3225": {
      "op": "PUSH22",
      "value": "0x125B9D985B1A59081CDD185ADA5B99C8185B5BDD5B9D"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "3250": {
      "op": "SHL"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3253": {
      "op": "DUP3"
    },
    "3254": {
      "op": "ADD"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3258": {
      "op": "ADD"
    },
    "3259": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "3262": {
      "op": "JUMP"
    },
    "3263": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3181,
        3227
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3264": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3257,
        3258
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 34,
      "value": "0x0"
    },
    "3266": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3245,
        3254
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "3268": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3245,
        3254
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3269": {
      "branch": 126,
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3245,
        3258
      ],
      "op": "GT",
      "path": "27"
    },
    "3270": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD09"
    },
    "3273": {
      "branch": 126,
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3274": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3276": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3285": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3288": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3290": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3291": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "ADD",
      "path": "27"
    },
    "3292": {
      "op": "MSTORE"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3297": {
      "op": "DUP3"
    },
    "3298": {
      "op": "ADD"
    },
    "3299": {
      "op": "MSTORE"
    },
    "3300": {
      "op": "PUSH21",
      "value": "0x14995DD85C9908141BDBDB08115E1A185D5CDD1959"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3327": {
      "op": "DUP3"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "op": "MSTORE"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "3336": {
      "op": "JUMP"
    },
    "3337": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3237,
        3284
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3338": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3300
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 35,
      "value": "0x7"
    },
    "3340": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3300
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3341": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3343": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3344": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3351": {
      "op": "SHL"
    },
    "3352": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3353": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3354": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3314,
        3324
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3355": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3357": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3358": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "ADD",
      "path": "27"
    },
    "3359": {
      "op": "MSTORE"
    },
    "3360": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3334,
        3338
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3363": {
      "op": "DUP3"
    },
    "3364": {
      "op": "ADD"
    },
    "3365": {
      "op": "MSTORE"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3368": {
      "op": "DUP2"
    },
    "3369": {
      "op": "ADD"
    },
    "3370": {
      "op": "DUP4"
    },
    "3371": {
      "op": "SWAP1"
    },
    "3372": {
      "op": "MSTORE"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3300
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3382": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3300
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3383": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3300
      ],
      "op": "AND",
      "path": "27"
    },
    "3384": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3300
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3385": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x23B872DD"
    },
    "3390": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3313
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3396": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3398": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3399": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3400": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3401": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "SUB",
      "path": "27"
    },
    "3402": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3403": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3405": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP8",
      "path": "27"
    },
    "3406": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "GAS",
      "path": "27"
    },
    "3407": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "CALL",
      "path": "27"
    },
    "3408": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3409": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3410": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3411": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD60"
    },
    "3414": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3415": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3416": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3418": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3419": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "3420": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3421": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3423": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "REVERT",
      "path": "27"
    },
    "3424": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3425": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "POP",
      "path": "27"
    },
    "3426": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "POP",
      "path": "27"
    },
    "3427": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "POP",
      "path": "27"
    },
    "3428": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "POP",
      "path": "27"
    },
    "3429": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3431": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3432": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3433": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3435": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "NOT",
      "path": "27"
    },
    "3436": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3438": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3439": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "ADD",
      "path": "27"
    },
    "3440": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "AND",
      "path": "27"
    },
    "3441": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3442": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "ADD",
      "path": "27"
    },
    "3443": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3444": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3446": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3447": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "POP",
      "path": "27"
    },
    "3448": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3449": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "ADD",
      "path": "27"
    },
    "3450": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3451": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD84"
    },
    "3454": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3455": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3456": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "3459": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3295,
        3349
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3460": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3295,
        3349
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3461": {
      "op": "POP"
    },
    "3462": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3363,
        3374
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "3464": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3363,
        3374
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3465": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3359,
        3442
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD91"
    },
    "3468": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3359,
        3442
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3469": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3419,
        3431
      ],
      "op": "NUMBER",
      "path": "27",
      "statement": 36
    },
    "3470": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3395,
        3416
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xB"
    },
    "3472": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3395,
        3431
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3473": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3359,
        3442
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3474": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3464,
        3474
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3475": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3477": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3478": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3479": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3480": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3463
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "3482": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3484": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3485": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3487": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3488": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3475
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3489": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3455,
        3488
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3490": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3451,
        3688
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE1E"
    },
    "3493": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3451,
        3688
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3494": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3518,
        3528
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 37
    },
    "3495": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3497": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3498": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3499": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3500": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3517
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "3502": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3504": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3505": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3507": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3508": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3529
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3509": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3552,
        3564
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "3510": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3549
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "3512": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3549
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3513": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3549
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3514": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3549
      ],
      "op": "ADD",
      "path": "27"
    },
    "3515": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3509,
        3564
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3516": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3592
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 38,
      "value": "0x9"
    },
    "3518": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3519": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3520": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "3522": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3523": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3524": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "ADD",
      "path": "27"
    },
    "3525": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3526": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3527": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3528": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3529": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3530": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3531": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
    },
    "3564": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "ADD",
      "path": "27"
    },
    "3565": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3566": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3573": {
      "op": "SHL"
    },
    "3574": {
      "op": "SUB"
    },
    "3575": {
      "op": "NOT"
    },
    "3576": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "AND",
      "path": "27"
    },
    "3577": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3578": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "3579": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "OR",
      "path": "27"
    },
    "3580": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3581": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3582": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3583": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3652,
        3673
      ],
      "op": "SWAP1",
      "path": "27",
      "statement": 39
    },
    "3584": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3652,
        3673
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3585": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3652,
        3677
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE0A"
    },
    "3588": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3652,
        3677
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3589": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3578,
        3609
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3590": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3652,
        3677
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DF0"
    },
    "3593": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3652,
        3677
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3594": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3652,
        3677
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3595": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3632,
        3642
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3596": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3598": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3599": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3600": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3601": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3631
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "3603": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3605": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3606": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3608": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3609": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3643
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3610": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3649
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3612": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3649
      ],
      "op": "ADD",
      "path": "27"
    },
    "3613": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3623,
        3677
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3614": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3451,
        3688
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3615": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3742,
        3752
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 40
    },
    "3616": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3618": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3619": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3620": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3621": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3741
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "3623": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3625": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3626": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3628": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3629": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3753
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3630": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3779
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3631": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3805
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE38"
    },
    "3634": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3805
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3635": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3797,
        3804
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3636": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3796
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "3639": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3733,
        3805
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3640": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3733,
        3805
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3641": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3706,
        3716
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3642": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3644": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3645": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3646": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3647": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3705
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "3649": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3651": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3652": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3654": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3655": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3717
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3656": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3805
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3657": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3805
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3658": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3697,
        3805
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3659": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3854,
        3866
      ],
      "op": "NUMBER",
      "path": "27",
      "statement": 41
    },
    "3660": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3815,
        3851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "3662": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3815,
        3851
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3663": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3815,
        3851
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3664": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3815,
        3851
      ],
      "op": "ADD",
      "path": "27"
    },
    "3665": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3815,
        3866
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3666": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3890,
        3901
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 42,
      "value": "0xF"
    },
    "3668": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3890,
        3901
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3669": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3890,
        3914
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE5E"
    },
    "3672": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3890,
        3914
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3673": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3906,
        3913
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3674": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3890,
        3905
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "3677": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3890,
        3914
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3678": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3890,
        3914
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3679": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3876,
        3887
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "3681": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3876,
        3914
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3682": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3929
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 43,
      "value": "0x7"
    },
    "3684": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3929
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3691": {
      "op": "SHL"
    },
    "3692": {
      "op": "SUB"
    },
    "3693": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3929
      ],
      "op": "AND",
      "path": "27"
    },
    "3694": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3938
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "3699": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3939,
        3949
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3700": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3951,
        3972
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE7C"
    },
    "3703": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3939,
        3949
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3704": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3951,
        3960
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C0E"
    },
    "3707": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3951,
        3972
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3708": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3951,
        3972
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3709": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3711": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3712": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3713": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "3718": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "AND",
      "path": "27"
    },
    "3719": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "3721": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "SHL",
      "path": "27"
    },
    "3722": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3723": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3724": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3726": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "ADD",
      "path": "27"
    },
    "3727": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE99"
    },
    "3730": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3731": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3732": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3733": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "3736": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3924,
        3973
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3737": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3738": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3740": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3742": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3743": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3744": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3745": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "SUB",
      "path": "27"
    },
    "3746": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3747": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3749": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP8",
      "path": "27"
    },
    "3750": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "GAS",
      "path": "27"
    },
    "3751": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "CALL",
      "path": "27"
    },
    "3752": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3753": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3754": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3755": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xEB8"
    },
    "3758": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3759": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3760": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3762": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3763": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "3764": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3765": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3767": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "REVERT",
      "path": "27"
    },
    "3768": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3769": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "POP",
      "path": "27"
    },
    "3770": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "POP",
      "path": "27"
    },
    "3771": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "POP",
      "path": "27"
    },
    "3772": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "POP",
      "path": "27"
    },
    "3773": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3775": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3776": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3777": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3779": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "NOT",
      "path": "27"
    },
    "3780": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3782": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3783": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "ADD",
      "path": "27"
    },
    "3784": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "AND",
      "path": "27"
    },
    "3785": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3786": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "ADD",
      "path": "27"
    },
    "3787": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3788": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3790": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3791": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "POP",
      "path": "27"
    },
    "3792": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3793": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "ADD",
      "path": "27"
    },
    "3794": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3795": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xEDC"
    },
    "3798": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3799": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3800": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "3803": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "i",
      "offset": [
        3924,
        3973
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3804": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3924,
        3973
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "op": "POP"
    },
    "3807": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3992,
        4002
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 44
    },
    "3808": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3810": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3811": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3812": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3813": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        3991
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "3815": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3817": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3818": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3820": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3821": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4003
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3822": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        4026,
        4038
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "3823": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4023
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "3825": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4023
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3826": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4023
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3827": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4023
      ],
      "op": "ADD",
      "path": "27"
    },
    "3828": {
      "fn": "singleAssetStaking.enterStaking",
      "offset": [
        3983,
        4038
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3829": {
      "fn": "singleAssetStaking.enterStaking",
      "jump": "o",
      "offset": [
        2992,
        4045
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3830": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9565,
        9964
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3831": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9599,
        9613
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3833": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9616,
        9637
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF01"
    },
    "3836": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9626,
        9636
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3837": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9616,
        9625
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C0E"
    },
    "3840": {
      "fn": "singleAssetStaking.claim",
      "jump": "i",
      "offset": [
        9616,
        9637
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3841": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9616,
        9637
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3842": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9693,
        9703
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 45
    },
    "3843": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3845": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3846": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3847": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3848": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9692
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "3850": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3852": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3853": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3855": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3856": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9704
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3857": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9731
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "3859": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9731
      ],
      "op": "ADD",
      "path": "27"
    },
    "3860": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9731
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3861": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9599,
        9637
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3862": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9599,
        9637
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3863": {
      "op": "POP"
    },
    "3864": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9756
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF21"
    },
    "3867": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9756
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3868": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9599,
        9637
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3869": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9748
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "3872": {
      "fn": "singleAssetStaking.claim",
      "jump": "i",
      "offset": [
        9684,
        9756
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3873": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9684,
        9756
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3874": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9656,
        9666
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3875": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3877": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3878": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3879": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3880": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9655
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "3882": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3884": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3885": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3887": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3888": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3889": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3890": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9667
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3891": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9681
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "3893": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9681
      ],
      "op": "ADD",
      "path": "27"
    },
    "3894": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9756
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3895": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9756
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3896": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9756
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3897": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9647,
        9756
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3898": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9771
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 46,
      "value": "0x7"
    },
    "3900": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9771
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3901": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3902": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3903": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3910": {
      "op": "SHL"
    },
    "3911": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3912": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3919": {
      "op": "SHL"
    },
    "3920": {
      "op": "SUB"
    },
    "3921": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9771
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3922": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9771
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3923": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9771
      ],
      "op": "AND",
      "path": "27"
    },
    "3924": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9771
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3925": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9780
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "3930": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9780
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3931": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF68"
    },
    "3934": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3935": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9793,
        9799
      ],
      "op": "DUP6",
      "path": "27"
    },
    "3936": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9793,
        9799
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3937": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3939": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "ADD",
      "path": "27"
    },
    "3940": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "3943": {
      "fn": "singleAssetStaking.claim",
      "jump": "i",
      "offset": [
        9766,
        9800
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3944": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3945": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3947": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3949": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3950": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3951": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3952": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "SUB",
      "path": "27"
    },
    "3953": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3954": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3956": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP8",
      "path": "27"
    },
    "3957": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "GAS",
      "path": "27"
    },
    "3958": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "CALL",
      "path": "27"
    },
    "3959": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3960": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3961": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3962": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF87"
    },
    "3965": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3966": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3967": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3969": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3970": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "3971": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3972": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3974": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "REVERT",
      "path": "27"
    },
    "3975": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3976": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "POP",
      "path": "27"
    },
    "3977": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "POP",
      "path": "27"
    },
    "3978": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "POP",
      "path": "27"
    },
    "3979": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "POP",
      "path": "27"
    },
    "3980": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3982": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3983": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3984": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3986": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "NOT",
      "path": "27"
    },
    "3987": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3989": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3990": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "ADD",
      "path": "27"
    },
    "3991": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "AND",
      "path": "27"
    },
    "3992": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3993": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "ADD",
      "path": "27"
    },
    "3994": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3995": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3997": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3998": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "POP",
      "path": "27"
    },
    "3999": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4000": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "ADD",
      "path": "27"
    },
    "4001": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4002": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFAB"
    },
    "4005": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4006": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4007": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "4010": {
      "fn": "singleAssetStaking.claim",
      "jump": "i",
      "offset": [
        9766,
        9800
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4011": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9766,
        9800
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9819,
        9829
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 47
    },
    "4014": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4016": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4017": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4018": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4019": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9818
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "4021": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4023": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4024": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4026": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4027": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9830
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4028": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9853,
        9865
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "4029": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9850
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "4031": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9850
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4032": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9850
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4033": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9850
      ],
      "op": "ADD",
      "path": "27"
    },
    "4034": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9810,
        9865
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4035": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9890,
        9902
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 48,
      "value": "0x10"
    },
    "4037": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9890,
        9902
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4038": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9890,
        9914
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFCF"
    },
    "4041": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9890,
        9914
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4042": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9907,
        9913
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4043": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9890,
        9906
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "4046": {
      "fn": "singleAssetStaking.claim",
      "jump": "i",
      "offset": [
        9890,
        9914
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4047": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9890,
        9914
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4048": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9875,
        9887
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x10"
    },
    "4050": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9875,
        9914
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4051": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9936,
        9945
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 49,
      "value": "0xA"
    },
    "4053": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9936,
        9945
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4054": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9936,
        9957
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFDF"
    },
    "4057": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9936,
        9957
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4058": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9950,
        9956
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4059": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9936,
        9949
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "4062": {
      "fn": "singleAssetStaking.claim",
      "jump": "i",
      "offset": [
        9936,
        9957
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4063": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9936,
        9957
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4064": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9924,
        9933
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "4066": {
      "fn": "singleAssetStaking.claim",
      "offset": [
        9924,
        9957
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "fn": "singleAssetStaking.claim",
      "jump": "o",
      "offset": [
        9565,
        9964
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4069": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10100,
        10677
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4070": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10173,
        10183
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 50
    },
    "4071": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10200,
        10201
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4073": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10184
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4074": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10184
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4075": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10184
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4076": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10172
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "4078": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10184
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4080": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10184
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4081": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10184
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4083": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10184
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4084": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10184
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4085": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10164,
        10197
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4086": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1041"
    },
    "4089": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4090": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4092": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4101": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4104": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4106": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4107": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "ADD",
      "path": "27"
    },
    "4108": {
      "op": "MSTORE"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4113": {
      "op": "DUP3"
    },
    "4114": {
      "op": "ADD"
    },
    "4115": {
      "op": "MSTORE"
    },
    "4116": {
      "op": "PUSH32",
      "value": "0x506C65617365205374616B6520437275736820746F20636F6D706F756E640000"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4151": {
      "op": "DUP3"
    },
    "4152": {
      "op": "ADD"
    },
    "4153": {
      "op": "MSTORE"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4156": {
      "op": "ADD"
    },
    "4157": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "4160": {
      "op": "JUMP"
    },
    "4161": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10143,
        10257
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4162": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10267,
        10281
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4164": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10284,
        10305
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x104C"
    },
    "4167": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10294,
        10304
      ],
      "op": "CALLER",
      "path": "27"
    },
    "4168": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10284,
        10293
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C0E"
    },
    "4171": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "i",
      "offset": [
        10284,
        10305
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4172": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10284,
        10305
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4173": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10361,
        10371
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 51
    },
    "4174": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4176": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4177": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4178": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4179": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10360
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "4181": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4183": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4184": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4186": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4187": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10372
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4188": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10398
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4189": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10267,
        10305
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4190": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10267,
        10305
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4191": {
      "op": "POP"
    },
    "4192": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10423
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1069"
    },
    "4195": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10423
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4196": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10267,
        10305
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4197": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10415
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "4200": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "i",
      "offset": [
        10352,
        10423
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4201": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10352,
        10423
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4202": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10325,
        10335
      ],
      "op": "CALLER",
      "path": "27"
    },
    "4203": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4205": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4206": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4207": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4208": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10324
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "4210": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4212": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4213": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4215": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4216": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10336
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4217": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10316,
        10423
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4218": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10447,
        10458
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 52,
      "value": "0xF"
    },
    "4220": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10447,
        10458
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4221": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10447,
        10470
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1086"
    },
    "4224": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10447,
        10470
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4225": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10463,
        10469
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4226": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10447,
        10462
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "4229": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "i",
      "offset": [
        10447,
        10470
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4230": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10447,
        10470
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4231": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10433,
        10444
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "4233": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10433,
        10470
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4234": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10490,
        10500
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 53
    },
    "4235": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4237": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4238": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4239": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4240": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10489
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "4242": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4244": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4245": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4247": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4248": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10501
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4249": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10524,
        10536
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "4250": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10521
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "4252": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10521
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4253": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10521
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4254": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10521
      ],
      "op": "ADD",
      "path": "27"
    },
    "4255": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10481,
        10536
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4256": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10559,
        10568
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 54,
      "value": "0xA"
    },
    "4258": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10559,
        10568
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4259": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10559,
        10580
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10AC"
    },
    "4262": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10559,
        10580
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4263": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10573,
        10579
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4264": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10559,
        10572
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "4267": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "i",
      "offset": [
        10559,
        10580
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4268": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10559,
        10580
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4269": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10547,
        10556
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "4271": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10547,
        10580
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4272": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10547,
        10580
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4273": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10547,
        10580
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4274": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 55,
      "value": "0x40"
    },
    "4276": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4279": {
      "op": "DUP1"
    },
    "4280": {
      "op": "MLOAD"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x1FAA"
    },
    "4286": {
      "op": "DUP4"
    },
    "4287": {
      "op": "CODECOPY"
    },
    "4288": {
      "op": "DUP2"
    },
    "4289": {
      "op": "MLOAD"
    },
    "4290": {
      "op": "SWAP2"
    },
    "4291": {
      "op": "MSTORE"
    },
    "4292": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4293": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4295": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4296": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10595,
        10623
      ],
      "op": "LOG2",
      "path": "27"
    },
    "4297": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10638,
        10670
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 56,
      "value": "0x40"
    },
    "4299": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10638,
        10670
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4300": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10663,
        10669
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4301": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10663,
        10669
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4302": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10651,
        10661
      ],
      "op": "CALLER",
      "path": "27"
    },
    "4303": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10651,
        10661
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4304": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10638,
        10670
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xAB0E25DC39626189CFB41155020BA89E726B10244275733E9D7C63CF33FFCCDB"
    },
    "4337": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10638,
        10670
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4338": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10638,
        10670
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4340": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10638,
        10670
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4341": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10638,
        10670
      ],
      "op": "LOG3",
      "path": "27"
    },
    "4342": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        10133,
        10677
      ],
      "op": "POP",
      "path": "27"
    },
    "4343": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "o",
      "offset": [
        10100,
        10677
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4344": {
      "offset": [
        1239,
        1270
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4345": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "4347": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4348": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4349": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4350": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4351": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "LT",
      "path": "27"
    },
    "4352": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1108"
    },
    "4355": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4356": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4358": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4359": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4360": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4361": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4363": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4364": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4365": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4366": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4368": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4369": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4370": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4371": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "ADD",
      "path": "27"
    },
    "4372": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4379": {
      "op": "SHL"
    },
    "4380": {
      "op": "SUB"
    },
    "4381": {
      "offset": [
        1239,
        1270
      ],
      "op": "AND",
      "path": "27"
    },
    "4382": {
      "fn": "singleAssetStaking.singleCompound",
      "offset": [
        1239,
        1270
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4383": {
      "op": "POP"
    },
    "4384": {
      "offset": [
        1239,
        1270
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4385": {
      "fn": "singleAssetStaking.singleCompound",
      "jump": "o",
      "offset": [
        1239,
        1270
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4386": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15127,
        15357
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4387": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4389": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4396": {
      "op": "SHL"
    },
    "4397": {
      "op": "SUB"
    },
    "4398": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4399": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4400": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4401": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x114C"
    },
    "4404": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4405": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4407": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4414": {
      "op": "SHL"
    },
    "4415": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4416": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4419": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4420": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "4423": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4424": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "4427": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4428": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4429": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15217,
        15218
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 57,
      "value": "0x0"
    },
    "4431": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15210,
        15214
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4432": {
      "branch": 127,
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15210,
        15218
      ],
      "op": "GT",
      "path": "27"
    },
    "4433": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x116C"
    },
    "4436": {
      "branch": 127,
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4437": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4439": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4446": {
      "op": "SHL"
    },
    "4447": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4448": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4449": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4451": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "ADD",
      "path": "27"
    },
    "4452": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "4455": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4456": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E80"
    },
    "4459": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "jump": "i",
      "offset": [
        15202,
        15249
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4460": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15202,
        15249
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4461": {
      "offset": [
        472,
        476
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3E8"
    },
    "4464": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15267,
        15271
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 58
    },
    "4465": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15267,
        15282
      ],
      "op": "GT",
      "path": "27"
    },
    "4466": {
      "branch": 128,
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15267,
        15282
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4467": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x118E"
    },
    "4470": {
      "branch": 128,
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4471": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4473": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4480": {
      "op": "SHL"
    },
    "4481": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4482": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4483": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4485": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "ADD",
      "path": "27"
    },
    "4486": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "4489": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4490": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EB7"
    },
    "4493": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "jump": "i",
      "offset": [
        15259,
        15312
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4494": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15259,
        15312
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4495": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15322,
        15343
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 59,
      "value": "0x4"
    },
    "4497": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "offset": [
        15322,
        15350
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4498": {
      "fn": "singleAssetStaking.setPerformanceFeeReserve",
      "jump": "o",
      "offset": [
        15127,
        15357
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4499": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15504,
        15673
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4500": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4502": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4509": {
      "op": "SHL"
    },
    "4510": {
      "op": "SUB"
    },
    "4511": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4512": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4513": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4514": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11BD"
    },
    "4517": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4520": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4530": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4532": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "4536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4537": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "4540": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4541": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4542": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15595,
        15596
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 60,
      "value": "0x0"
    },
    "4544": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15587,
        15592
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4545": {
      "branch": 129,
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15587,
        15596
      ],
      "op": "GT",
      "path": "27"
    },
    "4546": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x120D"
    },
    "4549": {
      "branch": 129,
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4550": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4552": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4559": {
      "op": "SHL"
    },
    "4560": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4561": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4564": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4566": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4567": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "ADD",
      "path": "27"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4573": {
      "op": "DUP3"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "MSTORE"
    },
    "4576": {
      "op": "PUSH32",
      "value": "0x54696D65206D7573742062652067726561746572207468616E20300000000000"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4611": {
      "op": "DUP3"
    },
    "4612": {
      "op": "ADD"
    },
    "4613": {
      "op": "MSTORE"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4616": {
      "op": "ADD"
    },
    "4617": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "4620": {
      "op": "JUMP"
    },
    "4621": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15579,
        15628
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4622": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15638,
        15658
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 61,
      "value": "0x6"
    },
    "4624": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "offset": [
        15638,
        15666
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4625": {
      "fn": "singleAssetStaking.setEarlyWithdrawFeeTime",
      "jump": "o",
      "offset": [
        15504,
        15673
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4626": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4627": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4629": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4636": {
      "op": "SHL"
    },
    "4637": {
      "op": "SUB"
    },
    "4638": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4639": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4640": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4641": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123C"
    },
    "4644": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4645": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4648": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4654": {
      "op": "SHL"
    },
    "4655": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4656": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4657": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4659": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4660": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "4663": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4664": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "4667": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4668": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4669": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0x1246"
    },
    "4672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D0D"
    },
    "4677": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4679": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4680": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10856,
        12741
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4681": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10942,
        10954
      ],
      "op": "NUMBER",
      "path": "27",
      "statement": 63
    },
    "4682": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10917,
        10938
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xB"
    },
    "4684": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10917,
        10938
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4685": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10917,
        10954
      ],
      "op": "GT",
      "path": "27"
    },
    "4686": {
      "branch": 130,
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10917,
        10954
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4687": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x129A"
    },
    "4690": {
      "branch": 130,
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4691": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4693": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4694": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4700": {
      "op": "SHL"
    },
    "4701": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4702": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4705": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4707": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4708": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "ADD",
      "path": "27"
    },
    "4709": {
      "op": "DUP2"
    },
    "4710": {
      "op": "SWAP1"
    },
    "4711": {
      "op": "MSTORE"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4714": {
      "op": "DUP3"
    },
    "4715": {
      "op": "ADD"
    },
    "4716": {
      "op": "MSTORE"
    },
    "4717": {
      "op": "PUSH32",
      "value": "0x436F6D706F756E6420416C6C206E6F7420796574206170706C696361626C652E"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4752": {
      "op": "DUP3"
    },
    "4753": {
      "op": "ADD"
    },
    "4754": {
      "op": "MSTORE"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4757": {
      "op": "ADD"
    },
    "4758": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "4761": {
      "op": "JUMP"
    },
    "4762": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10896,
        11012
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4763": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11044,
        11045
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 64,
      "value": "0x0"
    },
    "4765": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11030,
        11041
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "4767": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11030,
        11041
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4768": {
      "branch": 131,
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11030,
        11045
      ],
      "op": "GT",
      "path": "27"
    },
    "4769": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x12EC"
    },
    "4772": {
      "branch": 131,
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4773": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4775": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4784": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4787": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4789": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4790": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "ADD",
      "path": "27"
    },
    "4791": {
      "op": "MSTORE"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4796": {
      "op": "DUP3"
    },
    "4797": {
      "op": "ADD"
    },
    "4798": {
      "op": "MSTORE"
    },
    "4799": {
      "op": "PUSH32",
      "value": "0x4E6F205374616B6564207265776172647320746F20636C61696D000000000000"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4834": {
      "op": "DUP3"
    },
    "4835": {
      "op": "ADD"
    },
    "4836": {
      "op": "MSTORE"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4839": {
      "op": "ADD"
    },
    "4840": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "4843": {
      "op": "JUMP"
    },
    "4844": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11022,
        11076
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4845": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11086,
        11105
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4847": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11119,
        11141
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4848": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11155,
        11176
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4850": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11190,
        11214
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4851": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11233,
        11242
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4853": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11228,
        12462
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4854": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11252,
        11266
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "4856": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11252,
        11273
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4857": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11248,
        11273
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4858": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11248,
        11273
      ],
      "op": "LT",
      "path": "27"
    },
    "4859": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11228,
        12462
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4860": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11228,
        12462
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14E6"
    },
    "4863": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11228,
        12462
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4864": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11294,
        11314
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4866": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11317,
        11345
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1331"
    },
    "4869": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11341
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "4871": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11342,
        11343
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4872": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4873": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4874": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4875": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "LT",
      "path": "27"
    },
    "4876": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1317"
    },
    "4879": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4880": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1317"
    },
    "4883": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E07"
    },
    "4886": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11327,
        11344
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4887": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4888": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4890": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4891": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4892": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4893": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4895": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4896": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4897": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4898": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "ADD",
      "path": "27"
    },
    "4899": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4906": {
      "op": "SHL"
    },
    "4907": {
      "op": "SUB"
    },
    "4908": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11327,
        11344
      ],
      "op": "AND",
      "path": "27"
    },
    "4909": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11317,
        11326
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C0E"
    },
    "4912": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11317,
        11345
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4913": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11317,
        11345
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4914": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11294,
        11345
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4915": {
      "op": "POP"
    },
    "4916": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11375,
        11406
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 65,
      "value": "0x133D"
    },
    "4919": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11375,
        11388
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4920": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11294,
        11345
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4921": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11375,
        11392
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "4924": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11375,
        11406
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4925": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11375,
        11406
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4926": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11432,
        11441
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 66,
      "value": "0xA"
    },
    "4928": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11432,
        11441
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4929": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11359,
        11406
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4930": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11359,
        11406
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "4931": {
      "op": "POP"
    },
    "4932": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11432,
        11459
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x134D"
    },
    "4935": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11432,
        11459
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4936": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11446,
        11458
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4937": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11432,
        11445
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "4940": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11432,
        11459
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4941": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11432,
        11459
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4942": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11420,
        11429
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "4944": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11420,
        11459
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4945": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11511,
        11529
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "4947": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11511,
        11529
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4948": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11473,
        11491
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4950": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11473,
        11491
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4951": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11494,
        11573
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1369"
    },
    "4954": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11494,
        11573
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4955": {
      "offset": [
        679,
        684
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2710"
    },
    "4958": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        679,
        684
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4959": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11494,
        11530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5AC"
    },
    "4962": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11494,
        11530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4963": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11494,
        11506
      ],
      "op": "DUP6",
      "path": "27"
    },
    "4964": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11494,
        11506
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4965": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11494,
        11510
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF5"
    },
    "4968": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11494,
        11530
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4969": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11494,
        11573
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4970": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11473,
        11573
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4971": {
      "op": "POP"
    },
    "4972": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11601,
        11628
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 67,
      "value": "0x1375"
    },
    "4975": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11601,
        11612
      ],
      "op": "DUP8",
      "path": "27"
    },
    "4976": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11473,
        11573
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4977": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11601,
        11616
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "4980": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11601,
        11628
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4981": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11601,
        11628
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4982": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11587,
        11628
      ],
      "op": "SWAP7",
      "path": "27"
    },
    "4983": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11587,
        11628
      ],
      "op": "POP",
      "path": "27"
    },
    "4984": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11643,
        11662
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4986": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11754
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1394"
    },
    "4989": {
      "offset": [
        679,
        684
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2710"
    },
    "4992": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11724
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5AC"
    },
    "4995": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11699,
        11723
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "4997": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11699,
        11723
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4998": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11677
      ],
      "op": "DUP7",
      "path": "27"
    },
    "4999": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11698
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF5"
    },
    "5002": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11698
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5003": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11724
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5004": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11724
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5005": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11724
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "5010": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11724
      ],
      "op": "AND",
      "path": "27"
    },
    "5011": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11665,
        11724
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5012": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11665,
        11754
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5013": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11643,
        11754
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11787,
        11820
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 68,
      "value": "0x13A0"
    },
    "5018": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11787,
        11803
      ],
      "op": "DUP6",
      "path": "27"
    },
    "5019": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11643,
        11754
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5020": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11787,
        11807
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "5023": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11787,
        11820
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5024": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11787,
        11820
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5025": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11768,
        11820
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "5026": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11768,
        11820
      ],
      "op": "POP",
      "path": "27"
    },
    "5027": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11835,
        11853
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5029": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11938
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13BF"
    },
    "5032": {
      "offset": [
        679,
        684
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2710"
    },
    "5035": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11895
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5AC"
    },
    "5038": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11873,
        11894
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5040": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11873,
        11894
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5041": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11868
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5042": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11872
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF5"
    },
    "5045": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11872
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5046": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11895
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5047": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11895
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5048": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11895
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "5053": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11895
      ],
      "op": "AND",
      "path": "27"
    },
    "5054": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11856,
        11895
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5055": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11856,
        11938
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5056": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11835,
        11938
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5057": {
      "op": "POP"
    },
    "5058": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11969,
        11999
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 69,
      "value": "0x13CB"
    },
    "5061": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11969,
        11983
      ],
      "op": "DUP9",
      "path": "27"
    },
    "5062": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11835,
        11938
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5063": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11969,
        11987
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "5066": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11969,
        11999
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5067": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11969,
        11999
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5068": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11952,
        11999
      ],
      "op": "SWAP8",
      "path": "27"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12029,
        12057
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 70,
      "value": "0x13D7"
    },
    "5073": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12029,
        12041
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5074": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12046,
        12056
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5075": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12029,
        12045
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "5078": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12029,
        12057
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5079": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12029,
        12057
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5080": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12014,
        12057
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "5081": {
      "op": "POP"
    },
    "5082": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12086,
        12115
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 71,
      "value": "0x13E3"
    },
    "5085": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12014,
        12057
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5086": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12103,
        12114
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5087": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12086,
        12102
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "5090": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12086,
        12115
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5091": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12086,
        12115
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5092": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12071,
        12115
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "5093": {
      "op": "POP"
    },
    "5094": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12144,
        12172
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 72,
      "value": "0x13EF"
    },
    "5097": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12071,
        12115
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5098": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12161,
        12171
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5099": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12144,
        12160
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "5102": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12144,
        12172
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5103": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12144,
        12172
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5104": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12201,
        12212
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 73,
      "value": "0xF"
    },
    "5106": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12201,
        12212
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5107": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12129,
        12172
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5108": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12129,
        12172
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "5109": {
      "op": "POP"
    },
    "5110": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12201,
        12230
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13FF"
    },
    "5113": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12201,
        12230
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5114": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12129,
        12172
      ],
      "op": "DUP6",
      "path": "27"
    },
    "5115": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12201,
        12216
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "5118": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12201,
        12230
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5119": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12201,
        12230
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5120": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12187,
        12198
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "5122": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12187,
        12230
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5123": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12187,
        12230
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5124": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12187,
        12230
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5125": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12187,
        12230
      ],
      "op": "POP",
      "path": "27"
    },
    "5126": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12375
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 74,
      "value": "0x144B"
    },
    "5129": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12362,
        12374
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5130": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12295
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "5132": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5134": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12327
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "5136": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12328,
        12329
      ],
      "op": "DUP10",
      "path": "27"
    },
    "5137": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5138": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5139": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5140": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "LT",
      "path": "27"
    },
    "5141": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1420"
    },
    "5144": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5145": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1420"
    },
    "5148": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E07"
    },
    "5151": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12313,
        12330
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5152": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5153": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5155": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5156": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5157": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5158": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5160": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5161": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5162": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5163": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5164": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5165": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "ADD",
      "path": "27"
    },
    "5166": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5173": {
      "op": "SHL"
    },
    "5174": {
      "op": "SUB"
    },
    "5175": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12313,
        12330
      ],
      "op": "AND",
      "path": "27"
    },
    "5176": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5177": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5178": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5179": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "ADD",
      "path": "27"
    },
    "5180": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5181": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5182": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5183": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5184": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5186": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "ADD",
      "path": "27"
    },
    "5187": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5188": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12344
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5189": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12357
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5190": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12357
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5191": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12361
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CE9"
    },
    "5194": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12287,
        12375
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5195": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12287,
        12375
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5196": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12252
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "5198": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5200": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12267
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "5202": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12268,
        12269
      ],
      "op": "DUP9",
      "path": "27"
    },
    "5203": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5204": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5205": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5206": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "LT",
      "path": "27"
    },
    "5207": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1462"
    },
    "5210": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5211": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1462"
    },
    "5214": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E07"
    },
    "5217": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12253,
        12270
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5218": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5219": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5221": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5222": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5223": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5224": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5226": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5227": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5228": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5229": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5230": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5231": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "ADD",
      "path": "27"
    },
    "5232": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5239": {
      "op": "SHL"
    },
    "5240": {
      "op": "SUB"
    },
    "5241": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "AND",
      "path": "27"
    },
    "5242": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5243": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5244": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5245": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "ADD",
      "path": "27"
    },
    "5246": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5247": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5248": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5249": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5250": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5252": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "ADD",
      "path": "27"
    },
    "5253": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5254": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12271
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5255": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12375
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5256": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12375
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5257": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12375
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5258": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12244,
        12375
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5259": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12412
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 75,
      "value": "0x9"
    },
    "5261": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5262": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5263": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12439,
        12451
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "5264": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12439,
        12451
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5265": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12397
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "5267": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12397
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5268": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5269": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12253,
        12270
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5270": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12413,
        12414
      ],
      "op": "DUP10",
      "path": "27"
    },
    "5271": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12413,
        12414
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5272": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5273": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "LT",
      "path": "27"
    },
    "5274": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14A5"
    },
    "5277": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5278": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14A5"
    },
    "5281": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E07"
    },
    "5284": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12398,
        12415
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5285": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5286": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5288": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5289": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5290": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5291": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5293": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5294": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5295": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5296": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5297": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5298": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "ADD",
      "path": "27"
    },
    "5299": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5306": {
      "op": "SHL"
    },
    "5307": {
      "op": "SUB"
    },
    "5308": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12398,
        12415
      ],
      "op": "AND",
      "path": "27"
    },
    "5309": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5310": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5311": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5312": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "ADD",
      "path": "27"
    },
    "5313": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5314": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5315": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5316": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5317": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5319": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "ADD",
      "path": "27"
    },
    "5320": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5321": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12416
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5322": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12436
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "5324": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12436
      ],
      "op": "ADD",
      "path": "27"
    },
    "5325": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12389,
        12451
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5326": {
      "op": "POP"
    },
    "5327": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "DUP4",
      "path": "27",
      "statement": 76
    },
    "5328": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5329": {
      "op": "POP"
    },
    "5330": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14DE"
    },
    "5333": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5334": {
      "op": "POP"
    },
    "5335": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5336": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5337": {
      "op": "POP"
    },
    "5338": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F4D"
    },
    "5341": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        11275,
        11278
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5342": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5343": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5344": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "POP",
      "path": "27"
    },
    "5345": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11275,
        11278
      ],
      "op": "POP",
      "path": "27"
    },
    "5346": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11228,
        12462
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x12F5"
    },
    "5349": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11228,
        12462
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5350": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        11228,
        12462
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5351": {
      "op": "POP"
    },
    "5352": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12495,
        12507
      ],
      "op": "NUMBER",
      "path": "27",
      "statement": 77
    },
    "5353": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12471,
        12492
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xB"
    },
    "5355": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12471,
        12507
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5356": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12522
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 78,
      "value": "0x7"
    },
    "5358": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12522
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5359": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5361": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5362": {
      "op": "PUSH4",
      "value": "0x852CD8D"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5369": {
      "op": "SHL"
    },
    "5370": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5371": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5372": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5374": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5375": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "ADD",
      "path": "27"
    },
    "5376": {
      "op": "DUP7"
    },
    "5377": {
      "op": "SWAP1"
    },
    "5378": {
      "op": "MSTORE"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5385": {
      "op": "SHL"
    },
    "5386": {
      "op": "SUB"
    },
    "5387": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12522
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5388": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12522
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5389": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12522
      ],
      "op": "AND",
      "path": "27"
    },
    "5390": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12522
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5391": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12527
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x42966C68"
    },
    "5396": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12527
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5399": {
      "op": "ADD"
    },
    "5400": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5402": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5404": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5405": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5406": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5407": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "SUB",
      "path": "27"
    },
    "5408": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5409": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5411": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5412": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5413": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "EXTCODESIZE",
      "path": "27"
    },
    "5414": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5415": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5416": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5417": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1531"
    },
    "5420": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5421": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5423": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5424": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "REVERT",
      "path": "27"
    },
    "5425": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5426": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "POP",
      "path": "27"
    },
    "5427": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "GAS",
      "path": "27"
    },
    "5428": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "CALL",
      "path": "27"
    },
    "5429": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5430": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5431": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5432": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1545"
    },
    "5435": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5436": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5437": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5439": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5440": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "5441": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5442": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5444": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "REVERT",
      "path": "27"
    },
    "5445": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12517,
        12540
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5446": {
      "op": "POP"
    },
    "5447": {
      "op": "POP"
    },
    "5448": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12555
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 79,
      "value": "0x7"
    },
    "5450": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12555
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5451": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5453": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5454": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5461": {
      "op": "SHL"
    },
    "5462": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5463": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5470": {
      "op": "SHL"
    },
    "5471": {
      "op": "SUB"
    },
    "5472": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12555
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5473": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12555
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5474": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12555
      ],
      "op": "AND",
      "path": "27"
    },
    "5475": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12555
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5476": {
      "op": "POP"
    },
    "5477": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12564
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "5482": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12564
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5483": {
      "op": "POP"
    },
    "5484": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x157B"
    },
    "5487": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5488": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12565,
        12575
      ],
      "op": "CALLER",
      "path": "27"
    },
    "5489": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12565,
        12575
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5490": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12577,
        12593
      ],
      "op": "DUP6",
      "path": "27"
    },
    "5491": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12577,
        12593
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5492": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5494": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "ADD",
      "path": "27"
    },
    "5495": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "5498": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12550,
        12594
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5499": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5500": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5502": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5504": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5505": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5506": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5507": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "SUB",
      "path": "27"
    },
    "5508": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5509": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5511": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5512": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "GAS",
      "path": "27"
    },
    "5513": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "CALL",
      "path": "27"
    },
    "5514": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5515": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5516": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5517": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x159A"
    },
    "5520": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5521": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5522": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5524": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5525": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "5526": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5527": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5529": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "REVERT",
      "path": "27"
    },
    "5530": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5531": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "POP",
      "path": "27"
    },
    "5532": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "POP",
      "path": "27"
    },
    "5533": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "POP",
      "path": "27"
    },
    "5534": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "POP",
      "path": "27"
    },
    "5535": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5537": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5538": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5539": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5541": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "NOT",
      "path": "27"
    },
    "5542": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5544": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5545": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "ADD",
      "path": "27"
    },
    "5546": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "AND",
      "path": "27"
    },
    "5547": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5548": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "ADD",
      "path": "27"
    },
    "5549": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5550": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5552": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5553": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "POP",
      "path": "27"
    },
    "5554": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5555": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "ADD",
      "path": "27"
    },
    "5556": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5557": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x15BE"
    },
    "5560": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5561": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5562": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "5565": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12550,
        12594
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5566": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12550,
        12594
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5567": {
      "op": "POP"
    },
    "5568": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12609
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 80,
      "value": "0x7"
    },
    "5570": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12609
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5571": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12619,
        12633
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xD"
    },
    "5573": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12619,
        12633
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5574": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5576": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5577": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5584": {
      "op": "SHL"
    },
    "5585": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5586": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5593": {
      "op": "SHL"
    },
    "5594": {
      "op": "SUB"
    },
    "5595": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12609
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5596": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12609
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5597": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12609
      ],
      "op": "AND",
      "path": "27"
    },
    "5598": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12609
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5599": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12618
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "5604": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12618
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5605": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x15F5"
    },
    "5608": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5609": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12619,
        12633
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5610": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12619,
        12633
      ],
      "op": "AND",
      "path": "27"
    },
    "5611": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12619,
        12633
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5612": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12635,
        12649
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5613": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12635,
        12649
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5614": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5616": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "ADD",
      "path": "27"
    },
    "5617": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "5620": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12604,
        12650
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5621": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5622": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5624": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5626": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5627": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5628": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5629": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "SUB",
      "path": "27"
    },
    "5630": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5631": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5633": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP8",
      "path": "27"
    },
    "5634": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "GAS",
      "path": "27"
    },
    "5635": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "CALL",
      "path": "27"
    },
    "5636": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5637": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5638": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5639": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1614"
    },
    "5642": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5643": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5644": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5646": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5647": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "5648": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5649": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5651": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "REVERT",
      "path": "27"
    },
    "5652": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5653": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "POP",
      "path": "27"
    },
    "5654": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "POP",
      "path": "27"
    },
    "5655": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "POP",
      "path": "27"
    },
    "5656": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "POP",
      "path": "27"
    },
    "5657": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5659": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5660": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5661": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5663": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "NOT",
      "path": "27"
    },
    "5664": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5666": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5667": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "ADD",
      "path": "27"
    },
    "5668": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "AND",
      "path": "27"
    },
    "5669": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5670": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "ADD",
      "path": "27"
    },
    "5671": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5672": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5674": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5675": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "POP",
      "path": "27"
    },
    "5676": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5677": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "ADD",
      "path": "27"
    },
    "5678": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5679": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1638"
    },
    "5682": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5683": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5684": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "5687": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "i",
      "offset": [
        12604,
        12650
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5688": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12604,
        12650
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5689": {
      "op": "POP"
    },
    "5690": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12665,
        12691
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 81,
      "value": "0x40"
    },
    "5692": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12665,
        12691
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5693": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12677,
        12690
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5694": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12677,
        12690
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5695": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12665,
        12691
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x7C45F13C5F74B8490171F97241162B875F904BC8C550E1F275F16072B93D91A6"
    },
    "5728": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12665,
        12691
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5729": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12665,
        12691
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5731": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12665,
        12691
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5732": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12665,
        12691
      ],
      "op": "LOG2",
      "path": "27"
    },
    "5733": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12724,
        12733
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 82,
      "value": "0xA"
    },
    "5735": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12724,
        12733
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5736": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12706,
        12734
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5738": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12706,
        12734
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5741": {
      "op": "DUP1"
    },
    "5742": {
      "op": "MLOAD"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5745": {
      "op": "PUSH2",
      "value": "0x1FAA"
    },
    "5748": {
      "op": "DUP4"
    },
    "5749": {
      "op": "CODECOPY"
    },
    "5750": {
      "op": "DUP2"
    },
    "5751": {
      "op": "MLOAD"
    },
    "5752": {
      "op": "SWAP2"
    },
    "5753": {
      "op": "MSTORE"
    },
    "5754": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12706,
        12734
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5755": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12706,
        12734
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5757": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12706,
        12734
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5758": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        12706,
        12734
      ],
      "op": "LOG2",
      "path": "27"
    },
    "5759": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10886,
        12741
      ],
      "op": "POP",
      "path": "27"
    },
    "5760": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10886,
        12741
      ],
      "op": "POP",
      "path": "27"
    },
    "5761": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10886,
        12741
      ],
      "op": "POP",
      "path": "27"
    },
    "5762": {
      "fn": "singleAssetStaking.compoundAll",
      "offset": [
        10886,
        12741
      ],
      "op": "POP",
      "path": "27"
    },
    "5763": {
      "fn": "singleAssetStaking.compoundAll",
      "jump": "o",
      "offset": [
        10856,
        12741
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5764": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2573,
        2869
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5765": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5767": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5774": {
      "op": "SHL"
    },
    "5775": {
      "op": "SUB"
    },
    "5776": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5777": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5778": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5779": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AE"
    },
    "5782": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5783": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5785": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5786": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5792": {
      "op": "SHL"
    },
    "5793": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5794": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5795": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5797": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5798": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "5801": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "5805": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5806": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5807": {
      "offset": [
        419,
        439
      ],
      "op": "PUSH8",
      "path": "27",
      "value": "0x8AC7230489E80000"
    },
    "5816": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2734,
        2741
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 83
    },
    "5817": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2734,
        2764
      ],
      "op": "GT",
      "path": "27"
    },
    "5818": {
      "branch": 132,
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2734,
        2764
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5819": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1716"
    },
    "5822": {
      "branch": 132,
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5823": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5825": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5832": {
      "op": "SHL"
    },
    "5833": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5834": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5837": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5839": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5840": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "ADD",
      "path": "27"
    },
    "5841": {
      "op": "MSTORE"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5846": {
      "op": "DUP3"
    },
    "5847": {
      "op": "ADD"
    },
    "5848": {
      "op": "MSTORE"
    },
    "5849": {
      "op": "PUSH32",
      "value": "0x43727573682050657220426C6F636B2063616E206E6F74206265206D6F726520"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5884": {
      "op": "DUP3"
    },
    "5885": {
      "op": "ADD"
    },
    "5886": {
      "op": "MSTORE"
    },
    "5887": {
      "op": "PUSH7",
      "value": "0x7468616E20313"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0xCC"
    },
    "5897": {
      "op": "SHL"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5900": {
      "op": "DUP3"
    },
    "5901": {
      "op": "ADD"
    },
    "5902": {
      "op": "MSTORE"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5905": {
      "op": "ADD"
    },
    "5906": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "5909": {
      "op": "JUMP"
    },
    "5910": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2713,
        2829
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5911": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2839,
        2852
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 84,
      "value": "0xC"
    },
    "5913": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "offset": [
        2839,
        2862
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5914": {
      "fn": "singleAssetStaking.setCrushPerBlock",
      "jump": "o",
      "offset": [
        2573,
        2869
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5915": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14763,
        14982
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5916": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5918": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5925": {
      "op": "SHL"
    },
    "5926": {
      "op": "SUB"
    },
    "5927": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5928": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5929": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5930": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1745"
    },
    "5933": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5934": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5936": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5943": {
      "op": "SHL"
    },
    "5944": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5945": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5946": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5948": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5949": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "5952": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5953": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "5956": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5957": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5958": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14848,
        14849
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 85,
      "value": "0x0"
    },
    "5960": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14841,
        14845
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5961": {
      "branch": 133,
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14841,
        14849
      ],
      "op": "GT",
      "path": "27"
    },
    "5962": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1765"
    },
    "5965": {
      "branch": 133,
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5966": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5968": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5975": {
      "op": "SHL"
    },
    "5976": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5977": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5978": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5980": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "ADD",
      "path": "27"
    },
    "5981": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "5984": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5985": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E80"
    },
    "5988": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        14833,
        14880
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5989": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14833,
        14880
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5990": {
      "offset": [
        472,
        476
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3E8"
    },
    "5993": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14898,
        14902
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 86
    },
    "5994": {
      "branch": 134,
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14898,
        14912
      ],
      "op": "LT",
      "path": "27"
    },
    "5995": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1786"
    },
    "5998": {
      "branch": 134,
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5999": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6001": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6008": {
      "op": "SHL"
    },
    "6009": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6010": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6011": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6013": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "ADD",
      "path": "27"
    },
    "6014": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "6017": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6018": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EB7"
    },
    "6021": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        14890,
        14942
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6022": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14890,
        14942
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6023": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14952,
        14968
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 87,
      "value": "0x3"
    },
    "6025": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "offset": [
        14952,
        14975
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6026": {
      "fn": "singleAssetStaking.setEarlyWithdrawFee",
      "jump": "o",
      "offset": [
        14763,
        14982
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6027": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14400,
        14623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6028": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6030": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6037": {
      "op": "SHL"
    },
    "6038": {
      "op": "SUB"
    },
    "6039": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6040": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6041": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6042": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B5"
    },
    "6045": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6046": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6055": {
      "op": "SHL"
    },
    "6056": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6057": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6060": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6061": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "6064": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "6068": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6069": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6070": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14487,
        14488
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 88,
      "value": "0x0"
    },
    "6072": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14480,
        14484
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6073": {
      "branch": 135,
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14480,
        14488
      ],
      "op": "GT",
      "path": "27"
    },
    "6074": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17D5"
    },
    "6077": {
      "branch": 135,
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6078": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6080": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6087": {
      "op": "SHL"
    },
    "6088": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6089": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6090": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6092": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "ADD",
      "path": "27"
    },
    "6093": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "6096": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6097": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E80"
    },
    "6100": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "jump": "i",
      "offset": [
        14472,
        14519
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6101": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14472,
        14519
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6102": {
      "offset": [
        472,
        476
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3E8"
    },
    "6105": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14537,
        14541
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 89
    },
    "6106": {
      "branch": 136,
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14537,
        14551
      ],
      "op": "LT",
      "path": "27"
    },
    "6107": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17F6"
    },
    "6110": {
      "branch": 136,
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6111": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6113": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6120": {
      "op": "SHL"
    },
    "6121": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6122": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6123": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6125": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "ADD",
      "path": "27"
    },
    "6126": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "6129": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6130": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EB7"
    },
    "6133": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "jump": "i",
      "offset": [
        14529,
        14581
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6134": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14529,
        14581
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6135": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14591,
        14609
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 90,
      "value": "0x2"
    },
    "6137": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "offset": [
        14591,
        14616
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6138": {
      "fn": "singleAssetStaking.setPerformanceFeeBurn",
      "jump": "o",
      "offset": [
        14400,
        14623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6139": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13671,
        13875
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6140": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6142": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6149": {
      "op": "SHL"
    },
    "6150": {
      "op": "SUB"
    },
    "6151": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6152": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6153": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6154": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1825"
    },
    "6157": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6158": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6160": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6167": {
      "op": "SHL"
    },
    "6168": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6169": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6172": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6173": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "6176": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6177": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "6180": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6181": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6182": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13756,
        13757
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 91,
      "value": "0x0"
    },
    "6184": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13744,
        13753
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "6186": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13744,
        13753
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6187": {
      "branch": 137,
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13744,
        13757
      ],
      "op": "GT",
      "path": "27"
    },
    "6188": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1883"
    },
    "6191": {
      "branch": 137,
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6192": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6194": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6201": {
      "op": "SHL"
    },
    "6202": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6203": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6206": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6208": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6209": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "ADD",
      "path": "27"
    },
    "6210": {
      "op": "MSTORE"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6213": {
      "op": "DUP1"
    },
    "6214": {
      "op": "DUP3"
    },
    "6215": {
      "op": "ADD"
    },
    "6216": {
      "op": "MSTORE"
    },
    "6217": {
      "op": "PUSH32",
      "value": "0x546F74616C20506F6F6C206E65656420746F2062652067726561746572207468"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6252": {
      "op": "DUP3"
    },
    "6253": {
      "op": "ADD"
    },
    "6254": {
      "op": "MSTORE"
    },
    "6255": {
      "op": "PUSH4",
      "value": "0x616E203"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "6262": {
      "op": "SHL"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6265": {
      "op": "DUP3"
    },
    "6266": {
      "op": "ADD"
    },
    "6267": {
      "op": "MSTORE"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6270": {
      "op": "ADD"
    },
    "6271": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x531"
    },
    "6274": {
      "op": "JUMP"
    },
    "6275": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13736,
        13798
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6276": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13813
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 92,
      "value": "0x7"
    },
    "6278": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13813
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6279": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13835,
        13844
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "6281": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13835,
        13844
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6282": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6284": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6285": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6292": {
      "op": "SHL"
    },
    "6293": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6294": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6301": {
      "op": "SHL"
    },
    "6302": {
      "op": "SUB"
    },
    "6303": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13813
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6304": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13813
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "6305": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13813
      ],
      "op": "AND",
      "path": "27"
    },
    "6306": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13813
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6307": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13822
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "6312": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13822
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6313": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x18B7"
    },
    "6316": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6317": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13823,
        13833
      ],
      "op": "CALLER",
      "path": "27"
    },
    "6318": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13823,
        13833
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6319": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13835,
        13844
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6320": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6322": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "ADD",
      "path": "27"
    },
    "6323": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "6326": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "jump": "i",
      "offset": [
        13808,
        13845
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6327": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6328": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6330": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6332": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6333": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6334": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6335": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "SUB",
      "path": "27"
    },
    "6336": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6337": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6339": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP8",
      "path": "27"
    },
    "6340": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "GAS",
      "path": "27"
    },
    "6341": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "CALL",
      "path": "27"
    },
    "6342": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6343": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6344": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6345": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x18D6"
    },
    "6348": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6349": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6350": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6352": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6353": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "6354": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6355": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6357": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "REVERT",
      "path": "27"
    },
    "6358": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6359": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "POP",
      "path": "27"
    },
    "6360": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "POP",
      "path": "27"
    },
    "6361": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "POP",
      "path": "27"
    },
    "6362": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "POP",
      "path": "27"
    },
    "6363": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6365": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6366": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6367": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6369": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "NOT",
      "path": "27"
    },
    "6370": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6372": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6373": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "ADD",
      "path": "27"
    },
    "6374": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "AND",
      "path": "27"
    },
    "6375": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6376": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "ADD",
      "path": "27"
    },
    "6377": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6378": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6380": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6381": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "POP",
      "path": "27"
    },
    "6382": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6383": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "ADD",
      "path": "27"
    },
    "6384": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6385": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x18FA"
    },
    "6388": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6389": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6390": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "6393": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "jump": "i",
      "offset": [
        13808,
        13845
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6394": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13808,
        13845
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6395": {
      "op": "POP"
    },
    "6396": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13867,
        13868
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 93,
      "value": "0x0"
    },
    "6398": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13855,
        13864
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "6400": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "offset": [
        13855,
        13868
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6401": {
      "fn": "singleAssetStaking.emergencyTotalPoolWithdraw",
      "jump": "o",
      "offset": [
        13671,
        13875
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6402": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12918,
        13530
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6403": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12969
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 94,
      "value": "0x7"
    },
    "6405": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12969
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6406": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12979,
        12989
      ],
      "op": "CALLER",
      "path": "27"
    },
    "6407": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12969
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6409": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6410": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6411": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6412": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        12999
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "6414": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6416": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6417": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6419": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6420": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6421": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6422": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13011
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6423": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12991,
        13024
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6424": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6425": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6426": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6433": {
      "op": "SHL"
    },
    "6434": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6435": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6442": {
      "op": "SHL"
    },
    "6443": {
      "op": "SUB"
    },
    "6444": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12969
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6445": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12969
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "6446": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12969
      ],
      "op": "AND",
      "path": "27"
    },
    "6447": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12969
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "6448": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12978
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "6453": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        12978
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "6454": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1943"
    },
    "6457": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "6458": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12979,
        12989
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6459": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12979,
        12989
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6460": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6462": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "ADD",
      "path": "27"
    },
    "6463": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "6466": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        12964,
        13025
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6467": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6468": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6470": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6472": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6473": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6474": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6475": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "SUB",
      "path": "27"
    },
    "6476": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6477": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6479": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP8",
      "path": "27"
    },
    "6480": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "GAS",
      "path": "27"
    },
    "6481": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "CALL",
      "path": "27"
    },
    "6482": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6483": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6484": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6485": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1962"
    },
    "6488": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6489": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6490": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6492": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6493": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "6494": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6495": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6497": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "REVERT",
      "path": "27"
    },
    "6498": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6499": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "POP",
      "path": "27"
    },
    "6500": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "POP",
      "path": "27"
    },
    "6501": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "POP",
      "path": "27"
    },
    "6502": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "POP",
      "path": "27"
    },
    "6503": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6505": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6506": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6507": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6509": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "NOT",
      "path": "27"
    },
    "6510": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6512": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6513": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "ADD",
      "path": "27"
    },
    "6514": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "AND",
      "path": "27"
    },
    "6515": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6516": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "ADD",
      "path": "27"
    },
    "6517": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6518": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6520": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6521": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "POP",
      "path": "27"
    },
    "6522": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6523": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "ADD",
      "path": "27"
    },
    "6524": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6525": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1986"
    },
    "6528": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6529": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6530": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "6533": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        12964,
        13025
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6534": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12964,
        13025
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6535": {
      "op": "POP"
    },
    "6536": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13044,
        13054
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 95
    },
    "6537": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13071,
        13072
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6539": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13055
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6540": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13055
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6541": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13055
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6542": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13043
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "6544": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6546": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13055
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6547": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6549": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13055
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6550": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13055
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6551": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13072
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6552": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13072
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6553": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13035,
        13072
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6554": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13126,
        13138
      ],
      "op": "NUMBER",
      "path": "27",
      "statement": 96
    },
    "6555": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13083,
        13123
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "6557": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13083,
        13123
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6558": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13083,
        13123
      ],
      "op": "ADD",
      "path": "27"
    },
    "6559": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13083,
        13138
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6560": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13224,
        13238
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "6562": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13224,
        13245
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6563": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13224,
        13249
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x19AE"
    },
    "6566": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13224,
        13249
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6567": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13248,
        13249
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "6569": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13248,
        13249
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6570": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13224,
        13249
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DF0"
    },
    "6573": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13224,
        13249
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6574": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13224,
        13249
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6575": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13207,
        13214
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6576": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13207,
        13220
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6578": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13207,
        13220
      ],
      "op": "ADD",
      "path": "27"
    },
    "6579": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13207,
        13220
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6580": {
      "branch": 138,
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13207,
        13249
      ],
      "op": "EQ",
      "path": "27"
    },
    "6581": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13203,
        13453
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A53"
    },
    "6584": {
      "branch": 138,
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13203,
        13453
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6585": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13301
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "6587": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13302,
        13323
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6588": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13302,
        13323
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6589": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13265,
        13284
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6591": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13265,
        13284
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6592": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13301
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6593": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13302,
        13327
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x19CC"
    },
    "6596": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13302,
        13327
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6597": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13326,
        13327
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "6599": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13326,
        13327
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6600": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13302,
        13327
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DF0"
    },
    "6603": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13302,
        13327
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6604": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13302,
        13327
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6605": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6606": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6607": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6608": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "LT",
      "path": "27"
    },
    "6609": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x19DC"
    },
    "6612": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6613": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x19DC"
    },
    "6616": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E07"
    },
    "6619": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13287,
        13328
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6620": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6621": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6622": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6624": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6625": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6627": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6629": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6630": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "ADD",
      "path": "27"
    },
    "6631": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6633": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6634": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6635": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6636": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "6639": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "EXP",
      "path": "27"
    },
    "6640": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6641": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "DIV",
      "path": "27"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6648": {
      "op": "SHL"
    },
    "6649": {
      "op": "SUB"
    },
    "6650": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13287,
        13328
      ],
      "op": "AND",
      "path": "27"
    },
    "6651": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13265,
        13328
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6652": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13265,
        13328
      ],
      "op": "POP",
      "path": "27"
    },
    "6653": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13374,
        13385
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 97
    },
    "6654": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13356
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9"
    },
    "6656": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13357,
        13364
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6657": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13357,
        13370
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6659": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13357,
        13370
      ],
      "op": "ADD",
      "path": "27"
    },
    "6660": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13357,
        13370
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6661": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6662": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6663": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6664": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "LT",
      "path": "27"
    },
    "6665": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A14"
    },
    "6668": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6669": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A14"
    },
    "6672": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E07"
    },
    "6675": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13342,
        13371
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6676": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6677": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6679": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6680": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6681": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6682": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6684": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6685": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6686": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6687": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6688": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6689": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6690": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13371
      ],
      "op": "ADD",
      "path": "27"
    },
    "6691": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6692": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6699": {
      "op": "SHL"
    },
    "6700": {
      "op": "SUB"
    },
    "6701": {
      "op": "NOT"
    },
    "6702": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "AND",
      "path": "27"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6709": {
      "op": "SHL"
    },
    "6710": {
      "op": "SUB"
    },
    "6711": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "6712": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "DUP6",
      "path": "27"
    },
    "6713": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "AND",
      "path": "27"
    },
    "6714": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "OR",
      "path": "27"
    },
    "6715": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6716": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13342,
        13385
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6717": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13429,
        13442
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 98,
      "value": "0x4"
    },
    "6719": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13429,
        13442
      ],
      "op": "DUP6",
      "path": "27"
    },
    "6720": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13429,
        13442
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6721": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13429,
        13442
      ],
      "op": "ADD",
      "path": "27"
    },
    "6722": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13429,
        13442
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6723": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "6724": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6725": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "6726": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "AND",
      "path": "27"
    },
    "6727": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6728": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6729": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13407
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "6731": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6732": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6733": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6735": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6736": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13420
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6737": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13426
      ],
      "op": "ADD",
      "path": "27"
    },
    "6738": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13399,
        13442
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6739": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13203,
        13453
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6740": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13476
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 99,
      "value": "0x9"
    },
    "6742": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6743": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6744": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6745": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A64"
    },
    "6748": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6749": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A64"
    },
    "6752": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E1D"
    },
    "6755": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13462,
        13482
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6756": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6757": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6759": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6760": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6761": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6762": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6764": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6765": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6768": {
      "op": "NOT"
    },
    "6769": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6770": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6771": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "ADD",
      "path": "27"
    },
    "6772": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6773": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "ADD",
      "path": "27"
    },
    "6774": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6775": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6782": {
      "op": "SHL"
    },
    "6783": {
      "op": "SUB"
    },
    "6784": {
      "op": "NOT"
    },
    "6785": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "AND",
      "path": "27"
    },
    "6786": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6787": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6788": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6789": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6790": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "ADD",
      "path": "27"
    },
    "6791": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6792": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6793": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13462,
        13482
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6794": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13497
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 100,
      "value": "0x7"
    },
    "6796": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13497
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6797": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6799": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6800": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6807": {
      "op": "SHL"
    },
    "6808": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6809": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6816": {
      "op": "SHL"
    },
    "6817": {
      "op": "SUB"
    },
    "6818": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13497
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6819": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13497
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6820": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13497
      ],
      "op": "AND",
      "path": "27"
    },
    "6821": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13497
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6822": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13505
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x95EA7B3"
    },
    "6827": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13505
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6828": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1AB9"
    },
    "6831": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6832": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13514,
        13518
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "6833": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13514,
        13518
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6834": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6836": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "ADD",
      "path": "27"
    },
    "6837": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D9F"
    },
    "6840": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13492,
        13523
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6841": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6842": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6844": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6846": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6847": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6848": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6849": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "SUB",
      "path": "27"
    },
    "6850": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6851": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6853": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP8",
      "path": "27"
    },
    "6854": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "GAS",
      "path": "27"
    },
    "6855": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "CALL",
      "path": "27"
    },
    "6856": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6857": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6858": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6859": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1AD8"
    },
    "6862": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6863": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6864": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6866": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6867": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "6868": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6869": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6871": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "REVERT",
      "path": "27"
    },
    "6872": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6873": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "POP",
      "path": "27"
    },
    "6874": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "POP",
      "path": "27"
    },
    "6875": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "POP",
      "path": "27"
    },
    "6876": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "POP",
      "path": "27"
    },
    "6877": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6879": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6880": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6881": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6883": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "NOT",
      "path": "27"
    },
    "6884": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6886": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6887": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "ADD",
      "path": "27"
    },
    "6888": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "AND",
      "path": "27"
    },
    "6889": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6890": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "ADD",
      "path": "27"
    },
    "6891": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6892": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6894": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6895": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "POP",
      "path": "27"
    },
    "6896": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6897": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "ADD",
      "path": "27"
    },
    "6898": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6899": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1AFC"
    },
    "6902": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6903": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6904": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DB8"
    },
    "6907": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13492,
        13523
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6908": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6909": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        13492,
        13523
      ],
      "op": "POP",
      "path": "27"
    },
    "6910": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "offset": [
        12954,
        13530
      ],
      "op": "POP",
      "path": "27"
    },
    "6911": {
      "fn": "singleAssetStaking.emergencyWithdraw",
      "jump": "o",
      "offset": [
        12918,
        13530
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6912": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8656,
        9092
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6913": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8708,
        8715
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6915": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8747,
        8768
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xB"
    },
    "6917": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8747,
        8768
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6918": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8731,
        8743
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "6919": {
      "branch": 139,
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8731,
        8768
      ],
      "op": "GT",
      "path": "27"
    },
    "6920": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8727,
        8933
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B11"
    },
    "6923": {
      "branch": 139,
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8727,
        8933
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6924": {
      "op": "POP"
    },
    "6925": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8791,
        8792
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 101,
      "value": "0x0"
    },
    "6927": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8791,
        8792
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6928": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "jump": "o",
      "offset": [
        8656,
        9092
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6929": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8727,
        8933
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6930": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8813,
        8834
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xB"
    },
    "6932": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8813,
        8834
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6933": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8809,
        8933
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B1E"
    },
    "6936": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8809,
        8933
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6937": {
      "op": "POP"
    },
    "6938": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8862,
        8863
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 102,
      "value": "0x0"
    },
    "6940": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8862,
        8863
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6941": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "jump": "o",
      "offset": [
        8656,
        9092
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6942": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8809,
        8933
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6943": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8884,
        8893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "6945": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8884,
        8893
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6946": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8880,
        8933
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B2B"
    },
    "6949": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8880,
        8933
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6950": {
      "op": "POP"
    },
    "6951": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8921,
        8922
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 103,
      "value": "0x0"
    },
    "6953": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8921,
        8922
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6954": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "jump": "o",
      "offset": [
        8656,
        9092
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6955": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8880,
        8933
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6956": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8943,
        8957
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6958": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8999
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B42"
    },
    "6961": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8977,
        8998
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xB"
    },
    "6963": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8977,
        8998
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6964": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8972
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "6965": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8976
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "6968": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8976
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6969": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8999
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6970": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8999
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6971": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8999
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "6976": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8999
      ],
      "op": "AND",
      "path": "27"
    },
    "6977": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "jump": "i",
      "offset": [
        8960,
        8999
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6978": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8960,
        8999
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6979": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8943,
        8999
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6980": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8943,
        8999
      ],
      "op": "POP",
      "path": "27"
    },
    "6981": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9009,
        9028
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6983": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9056
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B5B"
    },
    "6986": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9042,
        9055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xC"
    },
    "6988": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9042,
        9055
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6989": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9037
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6990": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9041
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF5"
    },
    "6993": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9041
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6994": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9056
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6995": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9056
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6996": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9056
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "7001": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9056
      ],
      "op": "AND",
      "path": "27"
    },
    "7002": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "jump": "i",
      "offset": [
        9031,
        9056
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7003": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9031,
        9056
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7004": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        9009,
        9056
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "7005": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "offset": [
        8656,
        9092
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "7006": {
      "op": "POP"
    },
    "7007": {
      "op": "POP"
    },
    "7008": {
      "op": "POP"
    },
    "7009": {
      "fn": "singleAssetStaking.totalPendingRewards",
      "jump": "o",
      "offset": [
        8656,
        9092
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7010": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7011": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7013": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7020": {
      "op": "SHL"
    },
    "7021": {
      "op": "SUB"
    },
    "7022": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7023": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7024": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7025": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B8C"
    },
    "7028": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7031": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7038": {
      "op": "SHL"
    },
    "7039": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7043": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7044": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "7047": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "7051": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7059": {
      "op": "SHL"
    },
    "7060": {
      "op": "SUB"
    },
    "7061": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 104
    },
    "7062": {
      "branch": 144,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "7063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF1"
    },
    "7066": {
      "branch": 144,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7076": {
      "op": "SHL"
    },
    "7077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7083": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7084": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "7085": {
      "op": "MSTORE"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7090": {
      "op": "DUP3"
    },
    "7091": {
      "op": "ADD"
    },
    "7092": {
      "op": "MSTORE"
    },
    "7093": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7128": {
      "op": "DUP3"
    },
    "7129": {
      "op": "ADD"
    },
    "7130": {
      "op": "MSTORE"
    },
    "7131": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7140": {
      "op": "SHL"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7143": {
      "op": "DUP3"
    },
    "7144": {
      "op": "ADD"
    },
    "7145": {
      "op": "MSTORE"
    },
    "7146": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7148": {
      "op": "ADD"
    },
    "7149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x531"
    },
    "7152": {
      "op": "JUMP"
    },
    "7153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 105,
      "value": "0x1BFA"
    },
    "7157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D0D"
    },
    "7161": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "7164": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7165": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7166": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9353,
        9360
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7168": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9379,
        9398
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 106,
      "value": "0x1C08"
    },
    "7171": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9389,
        9397
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7172": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9379,
        9388
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C0E"
    },
    "7175": {
      "fn": "singleAssetStaking.pendingReward",
      "jump": "i",
      "offset": [
        9379,
        9398
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7176": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9379,
        9398
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7177": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9372,
        9398
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "7178": {
      "fn": "singleAssetStaking.pendingReward",
      "offset": [
        9291,
        9405
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7179": {
      "op": "POP"
    },
    "7180": {
      "op": "POP"
    },
    "7181": {
      "fn": "singleAssetStaking.pendingReward",
      "jump": "o",
      "offset": [
        9291,
        9405
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7182": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7642,
        8533
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7189": {
      "op": "SHL"
    },
    "7190": {
      "op": "SUB"
    },
    "7191": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7192": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "AND",
      "path": "27"
    },
    "7193": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7702,
        7709
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7195": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7196": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7197": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7198": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7749
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "7200": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7202": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7203": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7205": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7206": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7759
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "7207": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7779
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "7209": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7779
      ],
      "op": "ADD",
      "path": "27"
    },
    "7210": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7741,
        7779
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7211": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7725,
        7737
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "7212": {
      "branch": 140,
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7725,
        7779
      ],
      "op": "GT",
      "path": "27"
    },
    "7213": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7721,
        8527
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C38"
    },
    "7216": {
      "branch": 140,
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7721,
        8527
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7217": {
      "op": "POP"
    },
    "7218": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7802,
        7803
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 107,
      "value": "0x0"
    },
    "7220": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7802,
        7803
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7221": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7642,
        8533
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7222": {
      "op": "POP"
    },
    "7223": {
      "fn": "singleAssetStaking.getReward",
      "jump": "o",
      "offset": [
        7642,
        8533
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7224": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7721,
        8527
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7225": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7838,
        7847
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "7227": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7838,
        7847
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7228": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7838,
        7852
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7229": {
      "branch": 141,
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7838,
        7852
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7230": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7838,
        7872
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C47"
    },
    "7233": {
      "branch": 141,
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7838,
        7872
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7234": {
      "op": "POP"
    },
    "7235": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7856,
        7867
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "7237": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7856,
        7867
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7238": {
      "branch": 142,
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7856,
        7872
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7239": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7838,
        7872
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7240": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7834,
        8517
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7241": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7834,
        8517
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C54"
    },
    "7244": {
      "branch": 142,
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7834,
        8517
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7245": {
      "op": "POP"
    },
    "7246": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7899,
        7900
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 108,
      "value": "0x0"
    },
    "7248": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7899,
        7900
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7249": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7642,
        8533
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7250": {
      "op": "POP"
    },
    "7251": {
      "fn": "singleAssetStaking.getReward",
      "jump": "o",
      "offset": [
        7642,
        8533
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7252": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7834,
        8517
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7259": {
      "op": "SHL"
    },
    "7260": {
      "op": "SUB"
    },
    "7261": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7262": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "AND",
      "path": "27"
    },
    "7263": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8029,
        8043
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7265": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7266": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7267": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7268": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8092
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "7270": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7272": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7273": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7275": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7276": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8102
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "7277": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8122
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "7279": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8122
      ],
      "op": "ADD",
      "path": "27"
    },
    "7280": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8084,
        8122
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7281": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8046,
        8140
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C7B"
    },
    "7284": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8046,
        8140
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7285": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8046,
        8058
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "7286": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8046,
        8058
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7287": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8046,
        8062
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CDD"
    },
    "7290": {
      "fn": "singleAssetStaking.getReward",
      "jump": "i",
      "offset": [
        8046,
        8140
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7291": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8046,
        8140
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7292": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8029,
        8140
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7293": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8029,
        8140
      ],
      "op": "POP",
      "path": "27"
    },
    "7294": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8158,
        8177
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7296": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8205
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C94"
    },
    "7299": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8191,
        8204
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xC"
    },
    "7301": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8191,
        8204
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7302": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8186
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7303": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8190
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF5"
    },
    "7306": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8190
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7307": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8205
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7308": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8205
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7309": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8205
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "7314": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8205
      ],
      "op": "AND",
      "path": "27"
    },
    "7315": {
      "fn": "singleAssetStaking.getReward",
      "jump": "i",
      "offset": [
        8180,
        8205
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7316": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8180,
        8205
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7317": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8341,
        8352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xF"
    },
    "7319": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8341,
        8352
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7326": {
      "op": "SHL"
    },
    "7327": {
      "op": "SUB"
    },
    "7328": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7329": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "AND",
      "path": "27"
    },
    "7330": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8223,
        8243
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7332": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7333": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7334": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7335": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8291
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x8"
    },
    "7337": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7339": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7340": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7342": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7343": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8301
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "7344": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8283,
        8314
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7345": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8158,
        8205
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "7346": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8158,
        8205
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "7347": {
      "op": "POP"
    },
    "7348": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8223,
        8243
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7349": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8246,
        8353
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CC4"
    },
    "7352": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8246,
        8353
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7353": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8341,
        8352
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7354": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8246,
        8315
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5AC"
    },
    "7357": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8246,
        8315
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7358": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8158,
        8205
      ],
      "op": "DUP6",
      "path": "27"
    },
    "7359": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8158,
        8205
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7360": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8246,
        8282
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF5"
    },
    "7363": {
      "fn": "singleAssetStaking.getReward",
      "jump": "i",
      "offset": [
        8246,
        8315
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7364": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8246,
        8353
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7365": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8223,
        8353
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7366": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8223,
        8353
      ],
      "op": "POP",
      "path": "27"
    },
    "7367": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8390,
        8399
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "7369": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8390,
        8399
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7370": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8375,
        8387
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7371": {
      "branch": 143,
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8375,
        8399
      ],
      "op": "GT",
      "path": "27"
    },
    "7372": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8371,
        8466
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7373": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8371,
        8466
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CD5"
    },
    "7376": {
      "branch": 143,
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8371,
        8466
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7377": {
      "op": "POP"
    },
    "7378": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8438,
        8447
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 109,
      "value": "0xA"
    },
    "7380": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8438,
        8447
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7381": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8371,
        8466
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7382": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        8490,
        8502
      ],
      "op": "SWAP5",
      "path": "27",
      "statement": 110
    },
    "7383": {
      "fn": "singleAssetStaking.getReward",
      "offset": [
        7642,
        8533
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "7384": {
      "op": "POP"
    },
    "7385": {
      "op": "POP"
    },
    "7386": {
      "op": "POP"
    },
    "7387": {
      "op": "POP"
    },
    "7388": {
      "fn": "singleAssetStaking.getReward",
      "jump": "o",
      "offset": [
        7642,
        8533
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7389": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7390": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7392": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 111,
      "value": "0x1B5B"
    },
    "7395": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7396": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7397": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DF0"
    },
    "7400": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7401": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7402": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7404": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 112,
      "value": "0x1B5B"
    },
    "7407": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7408": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7409": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E33"
    },
    "7412": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7413": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7414": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7416": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 113,
      "value": "0x1B5B"
    },
    "7419": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7420": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7421": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F68"
    },
    "7424": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7425": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7426": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7428": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 114,
      "value": "0x1B5B"
    },
    "7431": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7432": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7433": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F87"
    },
    "7436": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7441": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7448": {
      "op": "SHL"
    },
    "7449": {
      "op": "SUB"
    },
    "7450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 115
    },
    "7451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7452": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7459": {
      "op": "SHL"
    },
    "7460": {
      "op": "SUB"
    },
    "7461": {
      "op": "NOT"
    },
    "7462": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7463": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "7464": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7465": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "7466": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7467": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7468": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 116,
      "value": "0x40"
    },
    "7470": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7471": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7472": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7473": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7474": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "7475": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7476": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7477": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7478": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7511": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7512": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7513": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "7514": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "7515": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "7516": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7517": {
      "op": "JUMPDEST"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7522": {
      "op": "DUP3"
    },
    "7523": {
      "op": "DUP5"
    },
    "7524": {
      "op": "SUB"
    },
    "7525": {
      "op": "SLT"
    },
    "7526": {
      "op": "ISZERO"
    },
    "7527": {
      "op": "PUSH2",
      "value": "0x1D6F"
    },
    "7530": {
      "op": "JUMPI"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7533": {
      "op": "DUP1"
    },
    "7534": {
      "op": "REVERT"
    },
    "7535": {
      "op": "JUMPDEST"
    },
    "7536": {
      "op": "POP"
    },
    "7537": {
      "op": "CALLDATALOAD"
    },
    "7538": {
      "op": "SWAP2"
    },
    "7539": {
      "op": "SWAP1"
    },
    "7540": {
      "op": "POP"
    },
    "7541": {
      "jump": "o",
      "op": "JUMP"
    },
    "7542": {
      "op": "JUMPDEST"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7547": {
      "op": "DUP3"
    },
    "7548": {
      "op": "DUP5"
    },
    "7549": {
      "op": "SUB"
    },
    "7550": {
      "op": "SLT"
    },
    "7551": {
      "op": "ISZERO"
    },
    "7552": {
      "op": "PUSH2",
      "value": "0x1D88"
    },
    "7555": {
      "op": "JUMPI"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7558": {
      "op": "DUP1"
    },
    "7559": {
      "op": "REVERT"
    },
    "7560": {
      "op": "JUMPDEST"
    },
    "7561": {
      "op": "DUP2"
    },
    "7562": {
      "op": "CALLDATALOAD"
    },
    "7563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7569": {
      "op": "SHL"
    },
    "7570": {
      "op": "SUB"
    },
    "7571": {
      "op": "DUP2"
    },
    "7572": {
      "op": "AND"
    },
    "7573": {
      "op": "DUP2"
    },
    "7574": {
      "op": "EQ"
    },
    "7575": {
      "op": "PUSH2",
      "value": "0x1B5B"
    },
    "7578": {
      "op": "JUMPI"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7581": {
      "op": "DUP1"
    },
    "7582": {
      "op": "REVERT"
    },
    "7583": {
      "op": "JUMPDEST"
    },
    "7584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7590": {
      "op": "SHL"
    },
    "7591": {
      "op": "SUB"
    },
    "7592": {
      "op": "SWAP3"
    },
    "7593": {
      "op": "SWAP1"
    },
    "7594": {
      "op": "SWAP3"
    },
    "7595": {
      "op": "AND"
    },
    "7596": {
      "op": "DUP3"
    },
    "7597": {
      "op": "MSTORE"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7600": {
      "op": "DUP3"
    },
    "7601": {
      "op": "ADD"
    },
    "7602": {
      "op": "MSTORE"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7605": {
      "op": "ADD"
    },
    "7606": {
      "op": "SWAP1"
    },
    "7607": {
      "jump": "o",
      "op": "JUMP"
    },
    "7608": {
      "op": "JUMPDEST"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7613": {
      "op": "DUP3"
    },
    "7614": {
      "op": "DUP5"
    },
    "7615": {
      "op": "SUB"
    },
    "7616": {
      "op": "SLT"
    },
    "7617": {
      "op": "ISZERO"
    },
    "7618": {
      "op": "PUSH2",
      "value": "0x1DCA"
    },
    "7621": {
      "op": "JUMPI"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7624": {
      "op": "DUP1"
    },
    "7625": {
      "op": "REVERT"
    },
    "7626": {
      "op": "JUMPDEST"
    },
    "7627": {
      "op": "DUP2"
    },
    "7628": {
      "op": "MLOAD"
    },
    "7629": {
      "op": "DUP1"
    },
    "7630": {
      "op": "ISZERO"
    },
    "7631": {
      "op": "ISZERO"
    },
    "7632": {
      "op": "DUP2"
    },
    "7633": {
      "op": "EQ"
    },
    "7634": {
      "op": "PUSH2",
      "value": "0x1B5B"
    },
    "7637": {
      "op": "JUMPI"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7640": {
      "op": "DUP1"
    },
    "7641": {
      "op": "REVERT"
    },
    "7642": {
      "op": "JUMPDEST"
    },
    "7643": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7650": {
      "op": "SHL"
    },
    "7651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7653": {
      "op": "MSTORE"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7658": {
      "op": "MSTORE"
    },
    "7659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7663": {
      "op": "REVERT"
    },
    "7664": {
      "op": "JUMPDEST"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7667": {
      "op": "DUP3"
    },
    "7668": {
      "op": "DUP3"
    },
    "7669": {
      "op": "LT"
    },
    "7670": {
      "op": "ISZERO"
    },
    "7671": {
      "op": "PUSH2",
      "value": "0x1E02"
    },
    "7674": {
      "op": "JUMPI"
    },
    "7675": {
      "op": "PUSH2",
      "value": "0x1E02"
    },
    "7678": {
      "op": "PUSH2",
      "value": "0x1DDA"
    },
    "7681": {
      "jump": "i",
      "op": "JUMP"
    },
    "7682": {
      "op": "JUMPDEST"
    },
    "7683": {
      "op": "POP"
    },
    "7684": {
      "op": "SUB"
    },
    "7685": {
      "op": "SWAP1"
    },
    "7686": {
      "jump": "o",
      "op": "JUMP"
    },
    "7687": {
      "op": "JUMPDEST"
    },
    "7688": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7695": {
      "op": "SHL"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7698": {
      "op": "MSTORE"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7703": {
      "op": "MSTORE"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7708": {
      "op": "REVERT"
    },
    "7709": {
      "op": "JUMPDEST"
    },
    "7710": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7717": {
      "op": "SHL"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7720": {
      "op": "MSTORE"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7725": {
      "op": "MSTORE"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7730": {
      "op": "REVERT"
    },
    "7731": {
      "op": "JUMPDEST"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7734": {
      "op": "DUP3"
    },
    "7735": {
      "op": "NOT"
    },
    "7736": {
      "op": "DUP3"
    },
    "7737": {
      "op": "GT"
    },
    "7738": {
      "op": "ISZERO"
    },
    "7739": {
      "op": "PUSH2",
      "value": "0x1E46"
    },
    "7742": {
      "op": "JUMPI"
    },
    "7743": {
      "op": "PUSH2",
      "value": "0x1E46"
    },
    "7746": {
      "op": "PUSH2",
      "value": "0x1DDA"
    },
    "7749": {
      "jump": "i",
      "op": "JUMP"
    },
    "7750": {
      "op": "JUMPDEST"
    },
    "7751": {
      "op": "POP"
    },
    "7752": {
      "op": "ADD"
    },
    "7753": {
      "op": "SWAP1"
    },
    "7754": {
      "jump": "o",
      "op": "JUMP"
    },
    "7755": {
      "op": "JUMPDEST"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7758": {
      "op": "DUP1"
    },
    "7759": {
      "op": "DUP3"
    },
    "7760": {
      "op": "MSTORE"
    },
    "7761": {
      "op": "DUP2"
    },
    "7762": {
      "op": "DUP2"
    },
    "7763": {
      "op": "ADD"
    },
    "7764": {
      "op": "MSTORE"
    },
    "7765": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7800": {
      "op": "DUP3"
    },
    "7801": {
      "op": "ADD"
    },
    "7802": {
      "op": "MSTORE"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7805": {
      "op": "ADD"
    },
    "7806": {
      "op": "SWAP1"
    },
    "7807": {
      "jump": "o",
      "op": "JUMP"
    },
    "7808": {
      "op": "JUMPDEST"
    },
    "7809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7811": {
      "op": "DUP1"
    },
    "7812": {
      "op": "DUP3"
    },
    "7813": {
      "op": "MSTORE"
    },
    "7814": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7816": {
      "op": "SWAP1"
    },
    "7817": {
      "op": "DUP3"
    },
    "7818": {
      "op": "ADD"
    },
    "7819": {
      "op": "MSTORE"
    },
    "7820": {
      "op": "PUSH32",
      "value": "0x466565206D7573742062652067726561746572207468616E2030000000000000"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7855": {
      "op": "DUP3"
    },
    "7856": {
      "op": "ADD"
    },
    "7857": {
      "op": "MSTORE"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7860": {
      "op": "ADD"
    },
    "7861": {
      "op": "SWAP1"
    },
    "7862": {
      "jump": "o",
      "op": "JUMP"
    },
    "7863": {
      "op": "JUMPDEST"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7866": {
      "op": "DUP1"
    },
    "7867": {
      "op": "DUP3"
    },
    "7868": {
      "op": "MSTORE"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7871": {
      "op": "SWAP1"
    },
    "7872": {
      "op": "DUP3"
    },
    "7873": {
      "op": "ADD"
    },
    "7874": {
      "op": "MSTORE"
    },
    "7875": {
      "op": "PUSH32",
      "value": "0x466565206D757374206265206C657373207468616E2031302500000000000000"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7910": {
      "op": "DUP3"
    },
    "7911": {
      "op": "ADD"
    },
    "7912": {
      "op": "MSTORE"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7915": {
      "op": "ADD"
    },
    "7916": {
      "op": "SWAP1"
    },
    "7917": {
      "jump": "o",
      "op": "JUMP"
    },
    "7918": {
      "op": "JUMPDEST"
    },
    "7919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7923": {
      "op": "DUP3"
    },
    "7924": {
      "op": "DUP5"
    },
    "7925": {
      "op": "SUB"
    },
    "7926": {
      "op": "SLT"
    },
    "7927": {
      "op": "ISZERO"
    },
    "7928": {
      "op": "PUSH2",
      "value": "0x1F00"
    },
    "7931": {
      "op": "JUMPI"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7934": {
      "op": "DUP1"
    },
    "7935": {
      "op": "REVERT"
    },
    "7936": {
      "op": "JUMPDEST"
    },
    "7937": {
      "op": "POP"
    },
    "7938": {
      "op": "MLOAD"
    },
    "7939": {
      "op": "SWAP2"
    },
    "7940": {
      "op": "SWAP1"
    },
    "7941": {
      "op": "POP"
    },
    "7942": {
      "jump": "o",
      "op": "JUMP"
    },
    "7943": {
      "op": "JUMPDEST"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7946": {
      "op": "DUP1"
    },
    "7947": {
      "op": "DUP3"
    },
    "7948": {
      "op": "MSTORE"
    },
    "7949": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7951": {
      "op": "SWAP1"
    },
    "7952": {
      "op": "DUP3"
    },
    "7953": {
      "op": "ADD"
    },
    "7954": {
      "op": "MSTORE"
    },
    "7955": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420437275736820746F6B656E7320666F72207472"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7990": {
      "op": "DUP3"
    },
    "7991": {
      "op": "ADD"
    },
    "7992": {
      "op": "MSTORE"
    },
    "7993": {
      "op": "PUSH6",
      "value": "0x30B739B332B9"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "8002": {
      "op": "SHL"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8005": {
      "op": "DUP3"
    },
    "8006": {
      "op": "ADD"
    },
    "8007": {
      "op": "MSTORE"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8010": {
      "op": "ADD"
    },
    "8011": {
      "op": "SWAP1"
    },
    "8012": {
      "jump": "o",
      "op": "JUMP"
    },
    "8013": {
      "op": "JUMPDEST"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8018": {
      "op": "NOT"
    },
    "8019": {
      "op": "DUP3"
    },
    "8020": {
      "op": "EQ"
    },
    "8021": {
      "op": "ISZERO"
    },
    "8022": {
      "op": "PUSH2",
      "value": "0x1F61"
    },
    "8025": {
      "op": "JUMPI"
    },
    "8026": {
      "op": "PUSH2",
      "value": "0x1F61"
    },
    "8029": {
      "op": "PUSH2",
      "value": "0x1DDA"
    },
    "8032": {
      "jump": "i",
      "op": "JUMP"
    },
    "8033": {
      "op": "JUMPDEST"
    },
    "8034": {
      "op": "POP"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8037": {
      "op": "ADD"
    },
    "8038": {
      "op": "SWAP1"
    },
    "8039": {
      "jump": "o",
      "op": "JUMP"
    },
    "8040": {
      "op": "JUMPDEST"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8043": {
      "op": "DUP2"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8046": {
      "op": "NOT"
    },
    "8047": {
      "op": "DIV"
    },
    "8048": {
      "op": "DUP4"
    },
    "8049": {
      "op": "GT"
    },
    "8050": {
      "op": "DUP3"
    },
    "8051": {
      "op": "ISZERO"
    },
    "8052": {
      "op": "ISZERO"
    },
    "8053": {
      "op": "AND"
    },
    "8054": {
      "op": "ISZERO"
    },
    "8055": {
      "op": "PUSH2",
      "value": "0x1F82"
    },
    "8058": {
      "op": "JUMPI"
    },
    "8059": {
      "op": "PUSH2",
      "value": "0x1F82"
    },
    "8062": {
      "op": "PUSH2",
      "value": "0x1DDA"
    },
    "8065": {
      "jump": "i",
      "op": "JUMP"
    },
    "8066": {
      "op": "JUMPDEST"
    },
    "8067": {
      "op": "POP"
    },
    "8068": {
      "op": "MUL"
    },
    "8069": {
      "op": "SWAP1"
    },
    "8070": {
      "jump": "o",
      "op": "JUMP"
    },
    "8071": {
      "op": "JUMPDEST"
    },
    "8072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8074": {
      "op": "DUP3"
    },
    "8075": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "8078": {
      "op": "JUMPI"
    },
    "8079": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8086": {
      "op": "SHL"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8089": {
      "op": "MSTORE"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8094": {
      "op": "MSTORE"
    },
    "8095": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8099": {
      "op": "REVERT"
    },
    "8100": {
      "op": "JUMPDEST"
    },
    "8101": {
      "op": "POP"
    },
    "8102": {
      "op": "DIV"
    },
    "8103": {
      "op": "SWAP1"
    },
    "8104": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "74ab8be6996933abbacbbf317d3f7188c45766ed",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity >=0.6.2;\n\n//Also called staking\n//BSC Address: 0x4Bc5dCbbF7bd30C301544279545D426886c89b4d\n//openzeppelin\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n//bitcrush\nimport \"./CrushToken.sol\";\n\ncontract singleAssetStaking is Ownable {\n    using SafeMath for uint256;\n\n    uint256 constant MAX_CRUSH_PER_BLOCK = 10000000000000000000;\n    uint256 constant MAX_FEE = 1000; // 1000/10000 * 100 = 10%\n    uint256 public performanceFeeCompounder = 10; // 10/10000 * 100 = 0.1%\n    uint256 public performanceFeeBurn = 100; // 100/10000 * 100 = 1%\n    uint256 constant divisor = 10000;\n\n    uint256 public earlyWithdrawFee = 50; // 50/10000 * 100 = 0.5%\n    uint256 public performanceFeeReserve = 190; // 190/10000 * 100 = 1.9%\n\n    uint256 public blockPerSecond = 3;\n    uint256 public earlyWithdrawFeeTime = (72 * 60 * 60) / blockPerSecond;\n\n    //address of the crush token\n    CRUSHToken public crush;\n\n    struct staked {\n        uint256 stakedAmount;\n        uint256 claimedAmount;\n        uint256 lastBlockCompounded;\n        uint256 lastBlockStaked;\n        uint256 index;\n    }\n    mapping(address => staked) public stakings;\n    address[] public addressIndexes;\n\n    uint256 public totalPool;\n    uint256 public lastAutoCompoundBlock;\n    uint256 public crushPerBlock = 5;\n    address public reserveAddress;\n    address public withdrawFeeAddress;\n    uint256 public totalStaked;\n\n    uint256 public totalClaimed;\n\n    event RewardPoolUpdated(uint256 indexed _totalPool);\n    event CompoundAll(uint256 indexed _totalRewarded);\n    event StakeUpdated(address indexed recipeint, uint256 indexed _amount);\n\n    constructor(\n        CRUSHToken _crush,\n        uint256 _crushPerBlock,\n        address _reserveAddress,\n        address _withdrawFeeAddress\n    ) {\n        crush = _crush;\n        crushPerBlock = _crushPerBlock;\n        reserveAddress = _reserveAddress;\n        lastAutoCompoundBlock = 0;\n        withdrawFeeAddress = _withdrawFeeAddress;\n    }\n\n    /// Adds the provided amount to the totalPool\n    /// @param _amount the amount to add\n    /// @dev adds the provided amount to `totalPool` state variable\n    function addRewardToPool(uint256 _amount) public {\n        require(\n            crush.balanceOf(msg.sender) >= _amount,\n            \"Insufficient Crush tokens for transfer\"\n        );\n        totalPool = totalPool.add(_amount);\n        crush.transferFrom(msg.sender, address(this), _amount);\n        emit RewardPoolUpdated(totalPool);\n    }\n\n    function setCrushPerBlock(uint256 _amount) public onlyOwner {\n        require(_amount >= 0, \"Crush per Block can not be negative\");\n        require(\n            _amount <= MAX_CRUSH_PER_BLOCK,\n            \"Crush Per Block can not be more than 10\"\n        );\n        crushPerBlock = _amount;\n    }\n\n    /// Stake the provided amount\n    /// @param _amount the amount to stake\n    /// @dev stakes the provided amount\n    function enterStaking(uint256 _amount) public {\n        require(\n            crush.balanceOf(msg.sender) >= _amount,\n            \"Insufficient Crush tokens for transfer\"\n        );\n        require(_amount > 0, \"Invalid staking amount\");\n        require(totalPool > 0, \"Reward Pool Exhausted\");\n\n        crush.transferFrom(msg.sender, address(this), _amount);\n        if (totalStaked == 0) {\n            lastAutoCompoundBlock = block.number;\n        }\n        if (stakings[msg.sender].stakedAmount == 0) {\n            stakings[msg.sender].lastBlockCompounded = block.number;\n            addressIndexes.push(msg.sender);\n            stakings[msg.sender].index = addressIndexes.length - 1;\n        }\n        stakings[msg.sender].stakedAmount = stakings[msg.sender]\n            .stakedAmount\n            .add(_amount);\n        stakings[msg.sender].lastBlockStaked = block.number;\n        totalStaked = totalStaked.add(_amount);\n        crush.transfer(msg.sender, getReward(msg.sender));\n        stakings[msg.sender].lastBlockCompounded = block.number;\n    }\n\n    /// Leaves staking for a user by the specified amount and transfering staked amount and reward to users address\n    /// @param _amount the amount to unstake\n    /// @dev leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime\n    function leaveStaking(uint256 _amount) public {\n        uint256 reward = getReward(msg.sender);\n        stakings[msg.sender].lastBlockCompounded = block.number;\n        totalPool = totalPool.sub(reward);\n        require(\n            stakings[msg.sender].stakedAmount >= _amount,\n            \"Withdraw amount can not be greater than staked amount\"\n        );\n        totalStaked = totalStaked.sub(_amount);\n        stakings[msg.sender].stakedAmount = stakings[msg.sender]\n            .stakedAmount\n            .sub(_amount);\n        if (\n            block.number <\n            stakings[msg.sender].lastBlockStaked.add(earlyWithdrawFeeTime)\n        ) {\n            //apply fee\n            uint256 withdrawalFee = _amount.mul(earlyWithdrawFee).div(divisor);\n            _amount = _amount.sub(withdrawalFee);\n            crush.transfer(withdrawFeeAddress, withdrawalFee);\n        }\n        _amount = _amount.add(reward);\n        crush.transfer(msg.sender, _amount);\n        //remove from array\n        if (stakings[msg.sender].stakedAmount == 0) {\n            staked storage staking = stakings[msg.sender];\n            if (staking.index != addressIndexes.length - 1) {\n                address lastAddress = addressIndexes[addressIndexes.length - 1];\n                addressIndexes[staking.index] = lastAddress;\n                stakings[lastAddress].index = staking.index;\n                crush.approve(address(this), 0);\n            }\n            addressIndexes.pop();\n            delete stakings[msg.sender];\n        }\n        emit RewardPoolUpdated(totalPool);\n    }\n\n    /// Leaves staking for a user while setting stakedAmount to 0 and transfering staked amount and reward to users address\n    /// @dev leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime\n    function leaveStakingCompletely() public {\n        uint256 reward = getReward(msg.sender);\n        stakings[msg.sender].lastBlockCompounded = block.number;\n        uint256 stakedAmount = stakings[msg.sender].stakedAmount;\n        totalPool = totalPool.sub(reward);\n        stakedAmount = stakedAmount.add(reward);\n        totalStaked = totalStaked.sub(stakings[msg.sender].stakedAmount);\n\n        if (\n            block.number <\n            stakings[msg.sender].lastBlockStaked + earlyWithdrawFeeTime\n        ) {\n            uint256 withdrawalFee = stakedAmount.mul(earlyWithdrawFee).div(\n                divisor\n            );\n            stakedAmount = stakedAmount.sub(withdrawalFee);\n            crush.transfer(withdrawFeeAddress, withdrawalFee);\n        }\n        crush.transfer(msg.sender, stakedAmount);\n        stakings[msg.sender].stakedAmount = 0;\n        if (stakings[msg.sender].stakedAmount == 0) {\n            staked storage staking = stakings[msg.sender];\n            if (staking.index != addressIndexes.length - 1) {\n                address lastAddress = addressIndexes[addressIndexes.length - 1];\n                addressIndexes[staking.index] = lastAddress;\n                stakings[lastAddress].index = staking.index;\n                crush.approve(address(this), 0);\n            }\n            addressIndexes.pop();\n            delete stakings[msg.sender];\n        }\n        emit RewardPoolUpdated(totalPool);\n    }\n\n    function getReward(address _address) internal view returns (uint256) {\n        if (block.number <= stakings[_address].lastBlockCompounded) {\n            return 0;\n        } else {\n            if (totalPool == 0 || totalStaked == 0) {\n                return 0;\n            } else {\n                //if the staker reward is greater than total pool => set it to total pool\n                uint256 blocks = block.number.sub(\n                    stakings[_address].lastBlockCompounded\n                );\n                uint256 totalReward = blocks.mul(crushPerBlock);\n                uint256 stakerReward = totalReward\n                    .mul(stakings[_address].stakedAmount)\n                    .div(totalStaked);\n                if (stakerReward > totalPool) {\n                    stakerReward = totalPool;\n                }\n                return stakerReward;\n            }\n        }\n    }\n\n    /// Calculates total potential pending rewards\n    /// @dev Calculates potential reward based on crush per block\n    function totalPendingRewards() public view returns (uint256) {\n        if (block.number <= lastAutoCompoundBlock) {\n            return 0;\n        } else if (lastAutoCompoundBlock == 0) {\n            return 0;\n        } else if (totalPool == 0) {\n            return 0;\n        }\n\n        uint256 blocks = block.number.sub(lastAutoCompoundBlock);\n        uint256 totalReward = blocks.mul(crushPerBlock);\n\n        return totalReward;\n    }\n\n    /// Get pending rewards of a user\n    /// @param _address the address to calculate the reward for\n    /// @dev calculates potential reward for the address provided based on crush per block\n    function pendingReward(address _address) public view returns (uint256) {\n        return getReward(_address);\n    }\n\n    /// transfers the rewards of a user to their address\n    /// @dev calculates users rewards and transfers it out while deducting reward from totalPool\n    function claim() public {\n        uint256 reward = getReward(msg.sender);\n        stakings[msg.sender].claimedAmount = stakings[msg.sender]\n            .claimedAmount\n            .add(reward);\n        crush.transfer(msg.sender, reward);\n        stakings[msg.sender].lastBlockCompounded = block.number;\n        totalClaimed = totalClaimed.add(reward);\n        totalPool = totalPool.sub(reward);\n    }\n\n    /// compounds the rewards of the caller\n    /// @dev compounds the rewards of the caller add adds it into their staked amount\n    function singleCompound() public {\n        require(\n            stakings[msg.sender].stakedAmount > 0,\n            \"Please Stake Crush to compound\"\n        );\n        uint256 reward = getReward(msg.sender);\n\n        stakings[msg.sender].stakedAmount = stakings[msg.sender]\n            .stakedAmount\n            .add(reward);\n        totalStaked = totalStaked.add(reward);\n\n        stakings[msg.sender].lastBlockCompounded = block.number;\n\n        totalPool = totalPool.sub(reward);\n        emit RewardPoolUpdated(totalPool);\n        emit StakeUpdated(msg.sender, reward);\n    }\n\n    /// compounds the rewards of all users in the pool\n    /// @dev compounds the rewards of all users in the pool add adds it into their staked amount while deducting fees\n    function compoundAll() public {\n        require(\n            lastAutoCompoundBlock <= block.number,\n            \"Compound All not yet applicable.\"\n        );\n        require(totalStaked > 0, \"No Staked rewards to claim\");\n        uint256 crushToBurn = 0;\n        uint256 performanceFee = 0;\n        uint256 totalRewarded = 0;\n        uint256 compounderReward = 0;\n        for (uint256 i = 0; i < addressIndexes.length; i++) {\n            uint256 stakerReward = getReward(addressIndexes[i]);\n            totalRewarded = totalRewarded.add(stakerReward);\n            totalPool = totalPool.sub(stakerReward);\n            uint256 stakerBurn = stakerReward.mul(performanceFeeBurn).div(\n                divisor\n            );\n            crushToBurn = crushToBurn.add(stakerBurn);\n\n            uint256 cpAllReward = stakerReward\n                .mul(performanceFeeCompounder)\n                .div(divisor);\n            compounderReward = compounderReward.add(cpAllReward);\n\n            uint256 feeReserve = stakerReward.mul(performanceFeeReserve).div(\n                divisor\n            );\n            performanceFee = performanceFee.add(feeReserve);\n\n            stakerReward = stakerReward.sub(stakerBurn);\n            stakerReward = stakerReward.sub(cpAllReward);\n            stakerReward = stakerReward.sub(feeReserve);\n\n            totalStaked = totalStaked.add(stakerReward);\n            stakings[addressIndexes[i]].stakedAmount = stakings[\n                addressIndexes[i]\n            ].stakedAmount.add(stakerReward);\n            stakings[addressIndexes[i]].lastBlockCompounded = block.number;\n        }\n        lastAutoCompoundBlock = block.number;\n        crush.burn(crushToBurn);\n        crush.transfer(msg.sender, compounderReward);\n        crush.transfer(reserveAddress, performanceFee);\n        emit CompoundAll(totalRewarded);\n        emit RewardPoolUpdated(totalPool);\n    }\n\n    /// withdraws the staked amount of user in case of emergency.\n    /// @dev drains the staked amount and sets the state variable `stakedAmount` of staking mapping to 0\n    function emergencyWithdraw() public {\n        crush.transfer(msg.sender, stakings[msg.sender].stakedAmount);\n        stakings[msg.sender].stakedAmount = 0;\n\n        stakings[msg.sender].lastBlockCompounded = block.number;\n        staked storage staking = stakings[msg.sender];\n        if (staking.index != addressIndexes.length - 1) {\n            address lastAddress = addressIndexes[addressIndexes.length - 1];\n            addressIndexes[staking.index] = lastAddress;\n            stakings[lastAddress].index = staking.index;\n        }\n        addressIndexes.pop();\n        crush.approve(address(this), 0);\n    }\n\n    /// withdraws the total pool in case of emergency.\n    /// @dev drains the total pool and sets the state variable `totalPool` to 0\n    function emergencyTotalPoolWithdraw() public onlyOwner {\n        require(totalPool > 0, \"Total Pool need to be greater than 0\");\n        crush.transfer(msg.sender, totalPool);\n        totalPool = 0;\n    }\n\n    /// Store `_fee`.\n    /// @param _fee the new value to store\n    /// @dev stores the fee in the state variable `performanceFeeCompounder`\n    function setPerformanceFeeCompounder(uint256 _fee) public onlyOwner {\n        require(_fee > 0, \"Fee must be greater than 0\");\n        require(_fee < MAX_FEE, \"Fee must be less than 10%\");\n        performanceFeeCompounder = _fee;\n    }\n\n    /// Store `_fee`.\n    /// @param _fee the new value to store\n    /// @dev stores the fee in the state variable `performanceFeeBurn`\n    function setPerformanceFeeBurn(uint256 _fee) public onlyOwner {\n        require(_fee > 0, \"Fee must be greater than 0\");\n        require(_fee < MAX_FEE, \"Fee must be less than 10%\");\n        performanceFeeBurn = _fee;\n    }\n\n    /// Store `_fee`.\n    /// @param _fee the new value to store\n    /// @dev stores the fee in the state variable `earlyWithdrawFee`\n    function setEarlyWithdrawFee(uint256 _fee) public onlyOwner {\n        require(_fee > 0, \"Fee must be greater than 0\");\n        require(_fee < MAX_FEE, \"Fee must be less than 10%\");\n        earlyWithdrawFee = _fee;\n    }\n\n    /// Store `_fee`.\n    /// @param _fee the new value to store\n    /// @dev stores the fee in the state variable `performanceFeeReserve`\n    function setPerformanceFeeReserve(uint256 _fee) public onlyOwner {\n        require(_fee > 0, \"Fee must be greater than 0\");\n        require(_fee <= MAX_FEE, \"Fee must be less than 10%\");\n        performanceFeeReserve = _fee;\n    }\n\n    /// Store `_time`.\n    /// @param _time the new value to store\n    /// @dev stores the time in the state variable `earlyWithdrawFeeTime`\n    function setEarlyWithdrawFeeTime(uint256 _time) public onlyOwner {\n        require(_time > 0, \"Time must be greater than 0\");\n        earlyWithdrawFeeTime = _time;\n    }\n}\n",
  "sourceMap": "302:15373:27:-:0;;;550:2;508:44;;619:3;583:39;;725:2;691:36;;797:3;758:42;;865:1;833:33;;927:14;;911:12;910:31;;;;:::i;:::-;872:69;;1380:1;1349:32;;1717:345;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:12;921:18:0;:32::i;:::-;1874:5:27;:14;;-1:-1:-1;;;;;1874:14:27;;;-1:-1:-1;;;;;;1874:14:27;;;;;;;1898:13;:30;;;;1938:14;:32;;;;;;;;;;;;;;;1874:5;1980:21;:25;2015:18;:40;;;;;;;;;;;302:15373;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:217:33:-;54:1;80;70:132;;124:10;119:3;115:20;112:1;105:31;159:4;156:1;149:15;187:4;184:1;177:15;70:132;-1:-1:-1;216:9:33;;14:217::o;236:143::-;-1:-1:-1;;;;;323:31:33;;313:42;;303:70;;369:1;366;359:12;303:70;236:143;:::o;384:636::-;500:6;508;516;524;577:3;565:9;556:7;552:23;548:33;545:53;;;594:1;591;584:12;545:53;626:9;620:16;645:43;682:5;645:43;:::i;:::-;752:2;737:18;;731:25;801:2;786:18;;780:25;707:5;;-1:-1:-1;731:25:33;-1:-1:-1;814:45:33;780:25;814:45;:::i;:::-;930:2;915:18;;909:25;878:7;;-1:-1:-1;943:45:33;909:25;943:45;:::i;:::-;384:636;;;;-1:-1:-1;384:636:33;;-1:-1:-1;;384:636:33:o;:::-;302:15373:27;;;;;;",
  "sourcePath": "contracts/SingleAsset.sol",
  "type": "contract"
}