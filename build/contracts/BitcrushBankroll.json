{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20Burnable",
          "name": "_crush",
          "type": "address"
        },
        {
          "internalType": "contract BitcrushStaking",
          "name": "_stakingPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lottery",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_profitShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_houseBankrollShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lotteryShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveShare",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_houseBankrollShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_profitShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lotteryShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_reserveShare",
          "type": "uint256"
        }
      ],
      "name": "SharesUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURN_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addToBankroll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addUserLoss",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "authorizeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorizedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "brSinceCompound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crush",
      "outputs": [
        {
          "internalType": "contract ERC20Burnable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "houseBankrollShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lottery",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "negativeBankroll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "negativeBrSinceCompound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_winner",
          "type": "address"
        }
      ],
      "name": "payOutUserWinning",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolDepleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profitShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profitThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverBankroll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lottery",
          "type": "address"
        }
      ],
      "name": "setLotteryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "setProfitThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        }
      ],
      "name": "setReserveAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_houseBankrollShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_profitShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lotteryShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveShare",
          "type": "uint256"
        }
      ],
      "name": "setShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract BitcrushStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBankroll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWinnings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "12": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "16": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "17": "contracts/BankStaking.sol",
    "18": "contracts/Bankroll.sol",
    "19": "contracts/CrushToken.sol",
    "2": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "22": "contracts/LiveWallet.sol",
    "3": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "5": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "6": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/Bankroll.sol",
    "exportedSymbols": {
      "Address": [
        12694
      ],
      "BitcrushBankroll": [
        3203
      ],
      "BitcrushLiveWallet": [
        7167
      ],
      "BitcrushStaking": [
        2213
      ],
      "CRUSHToken": [
        3289
      ],
      "Context": [
        12716
      ],
      "ERC20": [
        12296
      ],
      "ERC20Burnable": [
        11708
      ],
      "IERC20": [
        12374
      ],
      "IERC20Metadata": [
        12399
      ],
      "Ownable": [
        11128
      ],
      "SafeERC20": [
        11352
      ],
      "SafeMath": [
        11664
      ]
    },
    "id": 3204,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2215,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:24:18"
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2216,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3204,
        "sourceUnit": 11129,
        "src": "130:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2217,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3204,
        "sourceUnit": 11353,
        "src": "183:65:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2218,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3204,
        "sourceUnit": 11665,
        "src": "249:57:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 2219,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3204,
        "sourceUnit": 11709,
        "src": "307:74:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BankStaking.sol",
        "file": "./BankStaking.sol",
        "id": 2220,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3204,
        "sourceUnit": 2214,
        "src": "393:27:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/LiveWallet.sol",
        "file": "./LiveWallet.sol",
        "id": 2221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3204,
        "sourceUnit": 7168,
        "src": "421:26:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2222,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11128,
              "src": "478:7:18"
            },
            "id": 2223,
            "nodeType": "InheritanceSpecifier",
            "src": "478:7:18"
          }
        ],
        "canonicalName": "BitcrushBankroll",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3203,
        "linearizedBaseContracts": [
          3203,
          11128,
          12716
        ],
        "name": "BitcrushBankroll",
        "nameLocation": "458:16:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2226,
            "libraryName": {
              "id": 2224,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11664,
              "src": "498:8:18"
            },
            "nodeType": "UsingForDirective",
            "src": "492:27:18",
            "typeName": {
              "id": 2225,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2230,
            "libraryName": {
              "id": 2227,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11352,
              "src": "530:9:18"
            },
            "nodeType": "UsingForDirective",
            "src": "524:34:18",
            "typeName": {
              "id": 2229,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2228,
                "name": "ERC20Burnable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11708,
                "src": "544:13:18"
              },
              "referencedDeclaration": 11708,
              "src": "544:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                "typeString": "contract ERC20Burnable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "b4055d15",
            "id": 2232,
            "mutability": "mutable",
            "name": "totalBankroll",
            "nameLocation": "578:13:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "563:28:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2231,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "563:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "203c27a6",
            "id": 2234,
            "mutability": "mutable",
            "name": "poolDepleted",
            "nameLocation": "609:12:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "597:24:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2233,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "597:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e3fd80dd",
            "id": 2236,
            "mutability": "mutable",
            "name": "negativeBankroll",
            "nameLocation": "642:16:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "627:31:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2235,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "627:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b359a9f9",
            "id": 2239,
            "mutability": "immutable",
            "name": "crush",
            "nameLocation": "728:5:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "697:36:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
              "typeString": "contract ERC20Burnable"
            },
            "typeName": {
              "id": 2238,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2237,
                "name": "ERC20Burnable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11708,
                "src": "697:13:18"
              },
              "referencedDeclaration": 11708,
              "src": "697:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                "typeString": "contract ERC20Burnable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c56ae3b",
            "id": 2242,
            "mutability": "immutable",
            "name": "stakingPool",
            "nameLocation": "772:11:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "739:44:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
              "typeString": "contract BitcrushStaking"
            },
            "typeName": {
              "id": 2241,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2240,
                "name": "BitcrushStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2213,
                "src": "739:15:18"
              },
              "referencedDeclaration": 2213,
              "src": "739:15:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                "typeString": "contract BitcrushStaking"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cd3293de",
            "id": 2244,
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "805:7:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "790:22:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2243,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "790:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ba13a572",
            "id": 2246,
            "mutability": "mutable",
            "name": "lottery",
            "nameLocation": "833:7:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "818:22:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2245,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "818:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3410fe6e",
            "id": 2249,
            "mutability": "constant",
            "name": "DIVISOR",
            "nameLocation": "871:7:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "847:39:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2247,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 2248,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "881:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f846a885",
            "id": 2252,
            "mutability": "constant",
            "name": "BURN_RATE",
            "nameLocation": "916:9:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "892:39:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2250,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "892:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 2251,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "928:3:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f974821a",
            "id": 2254,
            "mutability": "mutable",
            "name": "profitThreshold",
            "nameLocation": "952:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "937:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2253,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "937:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e1f55e4",
            "id": 2256,
            "mutability": "mutable",
            "name": "profitShare",
            "nameLocation": "1014:11:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "999:26:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "999:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2feda8d4",
            "id": 2258,
            "mutability": "mutable",
            "name": "houseBankrollShare",
            "nameLocation": "1046:18:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1031:33:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2257,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1031:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4e584e11",
            "id": 2260,
            "mutability": "mutable",
            "name": "lotteryShare",
            "nameLocation": "1085:12:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1070:27:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2259,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1070:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7cb3d67",
            "id": 2262,
            "mutability": "mutable",
            "name": "reserveShare",
            "nameLocation": "1118:12:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1103:27:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2261,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1103:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7d903ecc",
            "id": 2264,
            "mutability": "mutable",
            "name": "brSinceCompound",
            "nameLocation": "1174:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1159:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2263,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1159:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8e4a6142",
            "id": 2266,
            "mutability": "mutable",
            "name": "negativeBrSinceCompound",
            "nameLocation": "1210:23:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1195:38:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2265,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1195:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b72481f8",
            "id": 2268,
            "mutability": "mutable",
            "name": "totalWinnings",
            "nameLocation": "1302:13:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1287:28:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2267,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1287:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "86001519",
            "id": 2270,
            "mutability": "mutable",
            "name": "totalProfit",
            "nameLocation": "1336:11:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1321:26:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2269,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1321:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2272,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "1362:5:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1354:13:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2271,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1354:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2286,
              "nodeType": "Block",
              "src": "1411:134:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2275,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1442:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1442:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2279,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2272,
                              "src": "1464:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1456:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2277,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1456:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1456:14:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1442:28:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416363657373207265737472696374656420746f2061646d696e206f6e6c79",
                        "id": 2282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1484:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4aa5da9237c6f6c0b797fa6ee0420799c2210733e81474737e101e1370d24f39",
                          "typeString": "literal_string \"Access restricted to admin only\""
                        },
                        "value": "Access restricted to admin only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4aa5da9237c6f6c0b797fa6ee0420799c2210733e81474737e101e1370d24f39",
                          "typeString": "literal_string \"Access restricted to admin only\""
                        }
                      ],
                      "id": 2274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1421:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:106:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2284,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:106:18"
                },
                {
                  "id": 2285,
                  "nodeType": "PlaceholderStatement",
                  "src": "1537:1:18"
                }
              ]
            },
            "id": 2287,
            "name": "adminOnly",
            "nameLocation": "1399:9:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:2:18"
            },
            "src": "1390:155:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f19e207e",
            "id": 2291,
            "mutability": "mutable",
            "name": "authorizedAddresses",
            "nameLocation": "1610:19:18",
            "nodeType": "VariableDeclaration",
            "scope": 3203,
            "src": "1578:51:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2290,
              "keyType": {
                "id": 2288,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1586:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1578:24:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2289,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1597:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2301,
            "name": "SharesUpdated",
            "nameLocation": "1641:13:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_houseBankrollShare",
                  "nameLocation": "1672:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "1664:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2295,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_profitShare",
                  "nameLocation": "1709:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "1701:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_lotteryShare",
                  "nameLocation": "1739:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "1731:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2299,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_reserveShare",
                  "nameLocation": "1770:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "1762:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1654:135:18"
            },
            "src": "1635:155:18"
          },
          {
            "body": {
              "id": 2360,
              "nodeType": "Block",
              "src": "2087:309:18",
              "statements": [
                {
                  "expression": {
                    "id": 2326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2324,
                      "name": "crush",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2239,
                      "src": "2097:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                        "typeString": "contract ERC20Burnable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2325,
                      "name": "_crush",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2304,
                      "src": "2105:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                        "typeString": "contract ERC20Burnable"
                      }
                    },
                    "src": "2097:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                      "typeString": "contract ERC20Burnable"
                    }
                  },
                  "id": 2327,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:14:18"
                },
                {
                  "expression": {
                    "id": 2330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2328,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2242,
                      "src": "2121:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                        "typeString": "contract BitcrushStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2329,
                      "name": "_stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2307,
                      "src": "2135:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                        "typeString": "contract BitcrushStaking"
                      }
                    },
                    "src": "2121:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                      "typeString": "contract BitcrushStaking"
                    }
                  },
                  "id": 2331,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:26:18"
                },
                {
                  "expression": {
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2332,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2244,
                      "src": "2157:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2333,
                      "name": "_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2309,
                      "src": "2167:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2157:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:18:18"
                },
                {
                  "expression": {
                    "id": 2338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2336,
                      "name": "lottery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2246,
                      "src": "2185:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2337,
                      "name": "_lottery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2311,
                      "src": "2195:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2185:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2339,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:18:18"
                },
                {
                  "expression": {
                    "id": 2342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2340,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2256,
                      "src": "2213:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2341,
                      "name": "_profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2313,
                      "src": "2227:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2213:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2343,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:26:18"
                },
                {
                  "expression": {
                    "id": 2346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2344,
                      "name": "houseBankrollShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2258,
                      "src": "2249:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2345,
                      "name": "_houseBankrollShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "2270:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2249:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2347,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:40:18"
                },
                {
                  "expression": {
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2348,
                      "name": "lotteryShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2260,
                      "src": "2299:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2349,
                      "name": "_lotteryShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2317,
                      "src": "2314:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2299:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2351,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:28:18"
                },
                {
                  "expression": {
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2352,
                      "name": "reserveShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2262,
                      "src": "2337:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2353,
                      "name": "_reserveShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2319,
                      "src": "2352:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2337:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "2337:28:18"
                },
                {
                  "expression": {
                    "id": 2358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2356,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "2375:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2357,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2321,
                      "src": "2383:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2375:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2359,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:14:18"
                }
              ]
            },
            "id": 2361,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2304,
                  "mutability": "mutable",
                  "name": "_crush",
                  "nameLocation": "1831:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "1817:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                    "typeString": "contract ERC20Burnable"
                  },
                  "typeName": {
                    "id": 2303,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2302,
                      "name": "ERC20Burnable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11708,
                      "src": "1817:13:18"
                    },
                    "referencedDeclaration": 11708,
                    "src": "1817:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                      "typeString": "contract ERC20Burnable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2307,
                  "mutability": "mutable",
                  "name": "_stakingPool",
                  "nameLocation": "1863:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "1847:28:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                    "typeString": "contract BitcrushStaking"
                  },
                  "typeName": {
                    "id": 2306,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2305,
                      "name": "BitcrushStaking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2213,
                      "src": "1847:15:18"
                    },
                    "referencedDeclaration": 2213,
                    "src": "1847:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                      "typeString": "contract BitcrushStaking"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2309,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nameLocation": "1893:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "1885:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1885:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2311,
                  "mutability": "mutable",
                  "name": "_lottery",
                  "nameLocation": "1919:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "1911:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1911:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2313,
                  "mutability": "mutable",
                  "name": "_profitShare",
                  "nameLocation": "1945:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "1937:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2315,
                  "mutability": "mutable",
                  "name": "_houseBankrollShare",
                  "nameLocation": "1975:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "1967:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2317,
                  "mutability": "mutable",
                  "name": "_lotteryShare",
                  "nameLocation": "2012:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "2004:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "_reserveShare",
                  "nameLocation": "2043:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "2035:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "2074:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "2066:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1807:279:18"
            },
            "returnParameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2087:0:18"
            },
            "scope": 3203,
            "src": "1796:600:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2375,
              "nodeType": "Block",
              "src": "2649:53:18",
              "statements": [
                {
                  "expression": {
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2369,
                        "name": "authorizedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2291,
                        "src": "2659:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2371,
                      "indexExpression": {
                        "id": 2370,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2364,
                        "src": "2679:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2659:29:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2691:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2659:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2374,
                  "nodeType": "ExpressionStatement",
                  "src": "2659:36:18"
                }
              ]
            },
            "documentation": {
              "id": 2362,
              "nodeType": "StructuredDocumentation",
              "src": "2402:181:18",
              "text": "authorize address to register wins and losses\n @param _address the address to be authorized\n @dev updates the authorizedAddresses mapping to true for given address"
            },
            "functionSelector": "4a5db3b5",
            "id": 2376,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2367,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2366,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "2639:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2639:9:18"
              }
            ],
            "name": "authorizeAddress",
            "nameLocation": "2597:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2364,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2622:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2376,
                  "src": "2614:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2613:18:18"
            },
            "returnParameters": {
              "id": 2368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2649:0:18"
            },
            "scope": 3203,
            "src": "2588:114:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2389,
              "nodeType": "Block",
              "src": "2984:53:18",
              "statements": [
                {
                  "expression": {
                    "id": 2387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2994:36:18",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2384,
                        "name": "authorizedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2291,
                        "src": "3001:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2386,
                      "indexExpression": {
                        "id": 2385,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2379,
                        "src": "3021:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3001:29:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2388,
                  "nodeType": "ExpressionStatement",
                  "src": "2994:36:18"
                }
              ]
            },
            "documentation": {
              "id": 2377,
              "nodeType": "StructuredDocumentation",
              "src": "2708:207:18",
              "text": "remove authorization of an address from register wins and losses\n @param _address the address to be removed\n @dev updates the authorizedAddresses mapping by deleting entry for given address"
            },
            "functionSelector": "94f3f81d",
            "id": 2390,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2382,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2381,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "2974:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2974:9:18"
              }
            ],
            "name": "removeAuthorization",
            "nameLocation": "2929:19:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2379,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2957:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2390,
                  "src": "2949:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2948:18:18"
            },
            "returnParameters": {
              "id": 2383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2984:0:18"
            },
            "scope": 3203,
            "src": "2920:117:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2506,
              "nodeType": "Block",
              "src": "3215:1077:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2398,
                      "name": "poolDepleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2234,
                      "src": "3229:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 2399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3245:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3229:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2504,
                    "nodeType": "Block",
                    "src": "4147:139:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2488,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4184:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4184:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2492,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4204:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                    "typeString": "contract BitcrushBankroll"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                    "typeString": "contract BitcrushBankroll"
                                  }
                                ],
                                "id": 2491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4196:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2490,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4196:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4196:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2494,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2393,
                              "src": "4211:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2485,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "4161:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                "typeString": "contract ERC20Burnable"
                              }
                            },
                            "id": 2487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11185,
                            "src": "4161:22:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4161:58:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2496,
                        "nodeType": "ExpressionStatement",
                        "src": "4161:58:18"
                      },
                      {
                        "expression": {
                          "id": 2502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2497,
                            "name": "totalBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "4233:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2500,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2393,
                                "src": "4267:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2498,
                                "name": "totalBankroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2232,
                                "src": "4249:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "4249:17:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4249:26:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4233:42:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2503,
                        "nodeType": "ExpressionStatement",
                        "src": "4233:42:18"
                      }
                    ]
                  },
                  "id": 2505,
                  "nodeType": "IfStatement",
                  "src": "3225:1061:18",
                  "trueBody": {
                    "id": 2484,
                    "nodeType": "Block",
                    "src": "3251:890:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2401,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2393,
                            "src": "3269:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2402,
                            "name": "negativeBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "3280:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3269:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2482,
                          "nodeType": "Block",
                          "src": "3835:296:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2460,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3897:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3897:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2464,
                                        "name": "stakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2242,
                                        "src": "3937:11:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                          "typeString": "contract BitcrushStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                          "typeString": "contract BitcrushStaking"
                                        }
                                      ],
                                      "id": 2463,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3929:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2462,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3929:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3929:20:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2466,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2393,
                                    "src": "3971:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2457,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2239,
                                    "src": "3853:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                      "typeString": "contract ERC20Burnable"
                                    }
                                  },
                                  "id": 2459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11185,
                                  "src": "3853:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 2467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3853:143:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2468,
                              "nodeType": "ExpressionStatement",
                              "src": "3853:143:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2472,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2393,
                                    "src": "4042:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2469,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "4014:11:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                      "typeString": "contract BitcrushStaking"
                                    }
                                  },
                                  "id": 2471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "unfreezeStaking",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1738,
                                  "src": "4014:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 2473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4014:36:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2474,
                              "nodeType": "ExpressionStatement",
                              "src": "4014:36:18"
                            },
                            {
                              "expression": {
                                "id": 2480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2475,
                                  "name": "negativeBankroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2236,
                                  "src": "4068:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2478,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2393,
                                      "src": "4108:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2476,
                                      "name": "negativeBankroll",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2236,
                                      "src": "4087:16:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2477,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "4087:20:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4087:29:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4068:48:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2481,
                              "nodeType": "ExpressionStatement",
                              "src": "4068:48:18"
                            }
                          ]
                        },
                        "id": 2483,
                        "nodeType": "IfStatement",
                        "src": "3265:866:18",
                        "trueBody": {
                          "id": 2456,
                          "nodeType": "Block",
                          "src": "3298:531:18",
                          "statements": [
                            {
                              "assignments": [
                                2405
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2405,
                                  "mutability": "mutable",
                                  "name": "remainder",
                                  "nameLocation": "3324:9:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2456,
                                  "src": "3316:17:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2404,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3316:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2410,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2408,
                                    "name": "negativeBankroll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "3348:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2406,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2393,
                                    "src": "3336:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11543,
                                  "src": "3336:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3336:29:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3316:49:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2414,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3427:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2415,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3427:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2418,
                                        "name": "stakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2242,
                                        "src": "3467:11:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                          "typeString": "contract BitcrushStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                          "typeString": "contract BitcrushStaking"
                                        }
                                      ],
                                      "id": 2417,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3459:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2416,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3459:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3459:20:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2420,
                                    "name": "negativeBankroll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "3501:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2411,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2239,
                                    "src": "3383:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                      "typeString": "contract ERC20Burnable"
                                    }
                                  },
                                  "id": 2413,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11185,
                                  "src": "3383:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 2421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3383:152:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2422,
                              "nodeType": "ExpressionStatement",
                              "src": "3383:152:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2426,
                                    "name": "negativeBankroll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "3581:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2423,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "3553:11:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                      "typeString": "contract BitcrushStaking"
                                    }
                                  },
                                  "id": 2425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "unfreezeStaking",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1738,
                                  "src": "3553:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 2427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3553:45:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2428,
                              "nodeType": "ExpressionStatement",
                              "src": "3553:45:18"
                            },
                            {
                              "expression": {
                                "id": 2431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2429,
                                  "name": "negativeBankroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2236,
                                  "src": "3616:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3635:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3616:20:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2432,
                              "nodeType": "ExpressionStatement",
                              "src": "3616:20:18"
                            },
                            {
                              "expression": {
                                "id": 2435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2433,
                                  "name": "poolDepleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2234,
                                  "src": "3654:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 2434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3669:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "3654:20:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2436,
                              "nodeType": "ExpressionStatement",
                              "src": "3654:20:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2440,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3715:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3715:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2444,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3735:4:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                          "typeString": "contract BitcrushBankroll"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                          "typeString": "contract BitcrushBankroll"
                                        }
                                      ],
                                      "id": 2443,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3727:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2442,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3727:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2445,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3727:13:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2446,
                                    "name": "remainder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2405,
                                    "src": "3742:9:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2437,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2239,
                                    "src": "3692:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                      "typeString": "contract ERC20Burnable"
                                    }
                                  },
                                  "id": 2439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11185,
                                  "src": "3692:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 2447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3692:60:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2448,
                              "nodeType": "ExpressionStatement",
                              "src": "3692:60:18"
                            },
                            {
                              "expression": {
                                "id": 2454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2449,
                                  "name": "totalBankroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2232,
                                  "src": "3770:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2452,
                                      "name": "remainder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2405,
                                      "src": "3804:9:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2450,
                                      "name": "totalBankroll",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2232,
                                      "src": "3786:13:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "3786:17:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3786:28:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3770:44:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2455,
                              "nodeType": "ExpressionStatement",
                              "src": "3770:44:18"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2391,
              "nodeType": "StructuredDocumentation",
              "src": "3043:110:18",
              "text": "Add funds to the bankroll\n @param _amount the amount to add\n @dev adds funds to the bankroll"
            },
            "functionSelector": "151fac7b",
            "id": 2507,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2396,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2395,
                  "name": "adminOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2287,
                  "src": "3205:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3205:9:18"
              }
            ],
            "name": "addToBankroll",
            "nameLocation": "3167:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3189:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2507,
                  "src": "3181:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3181:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3180:17:18"
            },
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:0:18"
            },
            "scope": 3203,
            "src": "3158:1134:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2635,
              "nodeType": "Block",
              "src": "4560:1466:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2514,
                            "name": "authorizedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2291,
                            "src": "4591:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2517,
                          "indexExpression": {
                            "expression": {
                              "id": 2515,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4611:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4611:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4591:31:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 2518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4626:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4591:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d75737420626520617574686f72697a6564",
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4644:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fce70a759547fc07de5fbf447df245ef9b0c40bbac727fa7000a83a126242f5f",
                          "typeString": "literal_string \"Caller must be authorized\""
                        },
                        "value": "Caller must be authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fce70a759547fc07de5fbf447df245ef9b0c40bbac727fa7000a83a126242f5f",
                          "typeString": "literal_string \"Caller must be authorized\""
                        }
                      ],
                      "id": 2513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4570:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4570:111:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2522,
                  "nodeType": "ExpressionStatement",
                  "src": "4570:111:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2523,
                      "name": "poolDepleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2234,
                      "src": "4924:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 2524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4940:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4924:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2629,
                    "nodeType": "Block",
                    "src": "5842:139:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2613,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5879:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5879:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2617,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5899:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                    "typeString": "contract BitcrushBankroll"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                    "typeString": "contract BitcrushBankroll"
                                  }
                                ],
                                "id": 2616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5891:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2615,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5891:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5891:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2619,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "5906:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2610,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "5856:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                "typeString": "contract ERC20Burnable"
                              }
                            },
                            "id": 2612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11185,
                            "src": "5856:22:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5856:58:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2621,
                        "nodeType": "ExpressionStatement",
                        "src": "5856:58:18"
                      },
                      {
                        "expression": {
                          "id": 2627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2622,
                            "name": "totalBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "5928:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2625,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2510,
                                "src": "5962:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2623,
                                "name": "totalBankroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2232,
                                "src": "5944:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "5944:17:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5944:26:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5928:42:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2628,
                        "nodeType": "ExpressionStatement",
                        "src": "5928:42:18"
                      }
                    ]
                  },
                  "id": 2630,
                  "nodeType": "IfStatement",
                  "src": "4920:1061:18",
                  "trueBody": {
                    "id": 2609,
                    "nodeType": "Block",
                    "src": "4946:890:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2526,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2510,
                            "src": "4964:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2527,
                            "name": "negativeBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "4975:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4964:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2607,
                          "nodeType": "Block",
                          "src": "5530:296:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2585,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5592:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5592:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2589,
                                        "name": "stakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2242,
                                        "src": "5632:11:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                          "typeString": "contract BitcrushStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                          "typeString": "contract BitcrushStaking"
                                        }
                                      ],
                                      "id": 2588,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5624:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2587,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5624:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5624:20:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2591,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2510,
                                    "src": "5666:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2582,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2239,
                                    "src": "5548:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                      "typeString": "contract ERC20Burnable"
                                    }
                                  },
                                  "id": 2584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11185,
                                  "src": "5548:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 2592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5548:143:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2593,
                              "nodeType": "ExpressionStatement",
                              "src": "5548:143:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2597,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2510,
                                    "src": "5737:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2594,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "5709:11:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                      "typeString": "contract BitcrushStaking"
                                    }
                                  },
                                  "id": 2596,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "unfreezeStaking",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1738,
                                  "src": "5709:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 2598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5709:36:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2599,
                              "nodeType": "ExpressionStatement",
                              "src": "5709:36:18"
                            },
                            {
                              "expression": {
                                "id": 2605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2600,
                                  "name": "negativeBankroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2236,
                                  "src": "5763:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2603,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2510,
                                      "src": "5803:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2601,
                                      "name": "negativeBankroll",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2236,
                                      "src": "5782:16:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2602,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "5782:20:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5782:29:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5763:48:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2606,
                              "nodeType": "ExpressionStatement",
                              "src": "5763:48:18"
                            }
                          ]
                        },
                        "id": 2608,
                        "nodeType": "IfStatement",
                        "src": "4960:866:18",
                        "trueBody": {
                          "id": 2581,
                          "nodeType": "Block",
                          "src": "4993:531:18",
                          "statements": [
                            {
                              "assignments": [
                                2530
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2530,
                                  "mutability": "mutable",
                                  "name": "remainder",
                                  "nameLocation": "5019:9:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2581,
                                  "src": "5011:17:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2529,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5011:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2535,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2533,
                                    "name": "negativeBankroll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "5043:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2531,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2510,
                                    "src": "5031:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11543,
                                  "src": "5031:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5031:29:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5011:49:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2539,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5122:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2540,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5122:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2543,
                                        "name": "stakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2242,
                                        "src": "5162:11:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                          "typeString": "contract BitcrushStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                          "typeString": "contract BitcrushStaking"
                                        }
                                      ],
                                      "id": 2542,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5154:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2541,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5154:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2544,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5154:20:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2545,
                                    "name": "negativeBankroll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "5196:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2536,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2239,
                                    "src": "5078:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                      "typeString": "contract ERC20Burnable"
                                    }
                                  },
                                  "id": 2538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11185,
                                  "src": "5078:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 2546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5078:152:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2547,
                              "nodeType": "ExpressionStatement",
                              "src": "5078:152:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2551,
                                    "name": "negativeBankroll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "5276:16:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2548,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "5248:11:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                      "typeString": "contract BitcrushStaking"
                                    }
                                  },
                                  "id": 2550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "unfreezeStaking",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1738,
                                  "src": "5248:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 2552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5248:45:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2553,
                              "nodeType": "ExpressionStatement",
                              "src": "5248:45:18"
                            },
                            {
                              "expression": {
                                "id": 2556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2554,
                                  "name": "negativeBankroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2236,
                                  "src": "5311:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5330:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5311:20:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2557,
                              "nodeType": "ExpressionStatement",
                              "src": "5311:20:18"
                            },
                            {
                              "expression": {
                                "id": 2560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2558,
                                  "name": "poolDepleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2234,
                                  "src": "5349:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 2559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5364:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5349:20:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2561,
                              "nodeType": "ExpressionStatement",
                              "src": "5349:20:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2565,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5410:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5410:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2569,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5430:4:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                          "typeString": "contract BitcrushBankroll"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                          "typeString": "contract BitcrushBankroll"
                                        }
                                      ],
                                      "id": 2568,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5422:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2567,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5422:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5422:13:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2571,
                                    "name": "remainder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2530,
                                    "src": "5437:9:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2562,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2239,
                                    "src": "5387:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                      "typeString": "contract ERC20Burnable"
                                    }
                                  },
                                  "id": 2564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11185,
                                  "src": "5387:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 2572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5387:60:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2573,
                              "nodeType": "ExpressionStatement",
                              "src": "5387:60:18"
                            },
                            {
                              "expression": {
                                "id": 2579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2574,
                                  "name": "totalBankroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2232,
                                  "src": "5465:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2577,
                                      "name": "remainder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2530,
                                      "src": "5499:9:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2575,
                                      "name": "totalBankroll",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2232,
                                      "src": "5481:13:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2576,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "5481:17:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2578,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5481:28:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5465:44:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2580,
                              "nodeType": "ExpressionStatement",
                              "src": "5465:44:18"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2632,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2510,
                        "src": "6011:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2631,
                      "name": "addToBrSinceCompound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2871,
                      "src": "5990:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5990:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2634,
                  "nodeType": "ExpressionStatement",
                  "src": "5990:29:18"
                }
              ]
            },
            "documentation": {
              "id": 2508,
              "nodeType": "StructuredDocumentation",
              "src": "4298:212:18",
              "text": "Add users loss to the bankroll\n @param _amount the amount to add\n @dev adds funds to the bankroll if bankroll is in positive, otherwise its transfered to the staking pool to recover frozen funds"
            },
            "functionSelector": "c2e50b16",
            "id": 2636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addUserLoss",
            "nameLocation": "4524:11:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2510,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4544:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2636,
                  "src": "4536:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4536:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4535:17:18"
            },
            "returnParameters": {
              "id": 2512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4560:0:18"
            },
            "scope": 3203,
            "src": "4515:1511:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2699,
              "nodeType": "Block",
              "src": "6081:520:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2642,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6112:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6112:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2646,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2242,
                              "src": "6134:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                "typeString": "contract BitcrushStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                "typeString": "contract BitcrushStaking"
                              }
                            ],
                            "id": 2645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6126:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2644,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6126:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6126:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6112:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d757374206265207374616b696e6720706f6f6c",
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6160:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da541bd5d964a1cf11d8bdae760d6b3de60b4d929702201227a675548fce0195",
                          "typeString": "literal_string \"Caller must be staking pool\""
                        },
                        "value": "Caller must be staking pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da541bd5d964a1cf11d8bdae760d6b3de60b4d929702201227a675548fce0195",
                          "typeString": "literal_string \"Caller must be staking pool\""
                        }
                      ],
                      "id": 2641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6091:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6091:108:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2651,
                  "nodeType": "ExpressionStatement",
                  "src": "6091:108:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2652,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2638,
                      "src": "6213:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 2653,
                      "name": "negativeBankroll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2236,
                      "src": "6224:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6213:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2697,
                    "nodeType": "Block",
                    "src": "6522:73:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 2695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2690,
                            "name": "negativeBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "6536:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2693,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2638,
                                "src": "6576:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2691,
                                "name": "negativeBankroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2236,
                                "src": "6555:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "6555:20:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6555:29:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6536:48:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2696,
                        "nodeType": "ExpressionStatement",
                        "src": "6536:48:18"
                      }
                    ]
                  },
                  "id": 2698,
                  "nodeType": "IfStatement",
                  "src": "6209:386:18",
                  "trueBody": {
                    "id": 2689,
                    "nodeType": "Block",
                    "src": "6242:274:18",
                    "statements": [
                      {
                        "assignments": [
                          2656
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2656,
                            "mutability": "mutable",
                            "name": "remainder",
                            "nameLocation": "6264:9:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2689,
                            "src": "6256:17:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2655,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6256:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2661,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2659,
                              "name": "negativeBankroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2236,
                              "src": "6288:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2657,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2638,
                              "src": "6276:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11543,
                            "src": "6276:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6276:29:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6256:49:18"
                      },
                      {
                        "expression": {
                          "id": 2664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2662,
                            "name": "negativeBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "6319:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6338:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6319:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2665,
                        "nodeType": "ExpressionStatement",
                        "src": "6319:20:18"
                      },
                      {
                        "expression": {
                          "id": 2668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2666,
                            "name": "poolDepleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2234,
                            "src": "6353:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6368:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6353:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2669,
                        "nodeType": "ExpressionStatement",
                        "src": "6353:20:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2673,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6410:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6410:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2677,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6430:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                    "typeString": "contract BitcrushBankroll"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                    "typeString": "contract BitcrushBankroll"
                                  }
                                ],
                                "id": 2676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6422:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2675,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6422:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6422:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2679,
                              "name": "remainder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2656,
                              "src": "6437:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2670,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "6387:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                "typeString": "contract ERC20Burnable"
                              }
                            },
                            "id": 2672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11185,
                            "src": "6387:22:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6387:60:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2681,
                        "nodeType": "ExpressionStatement",
                        "src": "6387:60:18"
                      },
                      {
                        "expression": {
                          "id": 2687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2682,
                            "name": "totalBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "6461:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2685,
                                "name": "remainder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2656,
                                "src": "6495:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2683,
                                "name": "totalBankroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2232,
                                "src": "6477:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "6477:17:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6477:28:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6461:44:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2688,
                        "nodeType": "ExpressionStatement",
                        "src": "6461:44:18"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "59c53fd4",
            "id": 2700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverBankroll",
            "nameLocation": "6041:15:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2638,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6065:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "6057:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6057:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6056:17:18"
            },
            "returnParameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6081:0:18"
            },
            "scope": 3203,
            "src": "6032:569:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2787,
              "nodeType": "Block",
              "src": "6909:877:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2709,
                            "name": "authorizedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2291,
                            "src": "6940:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2712,
                          "indexExpression": {
                            "expression": {
                              "id": 2710,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6960:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6960:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6940:31:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6975:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6940:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d75737420626520617574686f72697a6564",
                        "id": 2715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6993:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fce70a759547fc07de5fbf447df245ef9b0c40bbac727fa7000a83a126242f5f",
                          "typeString": "literal_string \"Caller must be authorized\""
                        },
                        "value": "Caller must be authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fce70a759547fc07de5fbf447df245ef9b0c40bbac727fa7000a83a126242f5f",
                          "typeString": "literal_string \"Caller must be authorized\""
                        }
                      ],
                      "id": 2708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6919:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6919:111:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2717,
                  "nodeType": "ExpressionStatement",
                  "src": "6919:111:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2718,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2703,
                      "src": "7189:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 2719,
                      "name": "totalBankroll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2232,
                      "src": "7199:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7189:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2774,
                    "nodeType": "Block",
                    "src": "7557:127:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 2765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2760,
                            "name": "totalBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "7571:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2763,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2703,
                                "src": "7605:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2761,
                                "name": "totalBankroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2232,
                                "src": "7587:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "7587:17:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7587:26:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7571:42:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2766,
                        "nodeType": "ExpressionStatement",
                        "src": "7571:42:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2768,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2703,
                              "src": "7644:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2769,
                              "name": "_winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2705,
                              "src": "7653:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2770,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7662:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7662:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2767,
                            "name": "transferWinnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2820,
                            "src": "7627:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 2772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7627:46:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2773,
                        "nodeType": "ExpressionStatement",
                        "src": "7627:46:18"
                      }
                    ]
                  },
                  "id": 2775,
                  "nodeType": "IfStatement",
                  "src": "7185:499:18",
                  "trueBody": {
                    "id": 2759,
                    "nodeType": "Block",
                    "src": "7214:337:18",
                    "statements": [
                      {
                        "assignments": [
                          2722
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2722,
                            "mutability": "mutable",
                            "name": "remainder",
                            "nameLocation": "7236:9:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2759,
                            "src": "7228:17:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2721,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7228:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2727,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2725,
                              "name": "totalBankroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2232,
                              "src": "7260:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2723,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2703,
                              "src": "7248:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11543,
                            "src": "7248:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7248:26:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7228:46:18"
                      },
                      {
                        "expression": {
                          "id": 2730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2728,
                            "name": "poolDepleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2234,
                            "src": "7288:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7303:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7288:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2731,
                        "nodeType": "ExpressionStatement",
                        "src": "7288:19:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2735,
                              "name": "remainder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2722,
                              "src": "7347:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2736,
                              "name": "_winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2705,
                              "src": "7358:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2737,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7367:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7367:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2732,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2242,
                              "src": "7321:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                "typeString": "contract BitcrushStaking"
                              }
                            },
                            "id": 2734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "freezeStaking",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1700,
                            "src": "7321:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address) external"
                            }
                          },
                          "id": 2739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7321:57:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2740,
                        "nodeType": "ExpressionStatement",
                        "src": "7321:57:18"
                      },
                      {
                        "expression": {
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2741,
                            "name": "negativeBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "7392:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2744,
                                "name": "remainder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2722,
                                "src": "7432:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2742,
                                "name": "negativeBankroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2236,
                                "src": "7411:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "7411:20:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7411:31:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7392:50:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2747,
                        "nodeType": "ExpressionStatement",
                        "src": "7392:50:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2749,
                              "name": "totalBankroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2232,
                              "src": "7473:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2750,
                              "name": "_winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2705,
                              "src": "7488:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2751,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7497:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7497:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2748,
                            "name": "transferWinnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2820,
                            "src": "7456:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 2753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7456:52:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2754,
                        "nodeType": "ExpressionStatement",
                        "src": "7456:52:18"
                      },
                      {
                        "expression": {
                          "id": 2757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2755,
                            "name": "totalBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "7523:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7539:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7523:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2758,
                        "nodeType": "ExpressionStatement",
                        "src": "7523:17:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2777,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2703,
                        "src": "7719:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2776,
                      "name": "removeFromBrSinceCompound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2922,
                      "src": "7693:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7693:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2779,
                  "nodeType": "ExpressionStatement",
                  "src": "7693:34:18"
                },
                {
                  "expression": {
                    "id": 2785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2780,
                      "name": "totalWinnings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2268,
                      "src": "7737:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2783,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2703,
                          "src": "7771:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2781,
                          "name": "totalWinnings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2268,
                          "src": "7753:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "7753:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7753:26:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7737:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2786,
                  "nodeType": "ExpressionStatement",
                  "src": "7737:42:18"
                }
              ]
            },
            "documentation": {
              "id": 2701,
              "nodeType": "StructuredDocumentation",
              "src": "6607:229:18",
              "text": "Deduct users win from the bankroll\n @param _amount the amount to deduct\n @dev deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative"
            },
            "functionSelector": "61433d88",
            "id": 2788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payOutUserWinning",
            "nameLocation": "6850:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2703,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6876:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2788,
                  "src": "6868:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6868:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nameLocation": "6893:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2788,
                  "src": "6885:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6885:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6867:34:18"
            },
            "returnParameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6909:0:18"
            },
            "scope": 3203,
            "src": "6841:945:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2819,
              "nodeType": "Block",
              "src": "8147:182:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2801,
                        "name": "_lwAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "8176:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2802,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2791,
                        "src": "8188:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2798,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "8157:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 2800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "8157:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8157:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2804,
                  "nodeType": "ExpressionStatement",
                  "src": "8157:39:18"
                },
                {
                  "assignments": [
                    2807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2807,
                      "mutability": "mutable",
                      "name": "currentLw",
                      "nameLocation": "8225:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2819,
                      "src": "8206:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                        "typeString": "contract BitcrushLiveWallet"
                      },
                      "typeName": {
                        "id": 2806,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2805,
                          "name": "BitcrushLiveWallet",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7167,
                          "src": "8206:18:18"
                        },
                        "referencedDeclaration": 7167,
                        "src": "8206:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                          "typeString": "contract BitcrushLiveWallet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2811,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2809,
                        "name": "_lwAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "8256:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2808,
                      "name": "BitcrushLiveWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7167,
                      "src": "8237:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BitcrushLiveWallet_$7167_$",
                        "typeString": "type(contract BitcrushLiveWallet)"
                      }
                    },
                    "id": 2810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8237:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                      "typeString": "contract BitcrushLiveWallet"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8206:61:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2815,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2791,
                        "src": "8305:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2816,
                        "name": "_winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2793,
                        "src": "8314:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2812,
                        "name": "currentLw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2807,
                        "src": "8277:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                          "typeString": "contract BitcrushLiveWallet"
                        }
                      },
                      "id": 2814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToUserWinnings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6976,
                      "src": "8277:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8277:45:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "8277:45:18"
                }
              ]
            },
            "documentation": {
              "id": 2789,
              "nodeType": "StructuredDocumentation",
              "src": "7792:231:18",
              "text": "transfer winnings from bankroll contract to live wallet\n @param _amount the amount to tranfer\n @param _winner the winners address\n @dev transfers funds from the bankroll to the live wallet as users winnings"
            },
            "id": 2820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferWinnings",
            "nameLocation": "8037:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2791,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8071:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "8063:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8063:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2793,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nameLocation": "8096:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "8088:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8088:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2795,
                  "mutability": "mutable",
                  "name": "_lwAddress",
                  "nameLocation": "8121:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "8113:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8113:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8053:84:18"
            },
            "returnParameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8147:0:18"
            },
            "scope": 3203,
            "src": "8028:301:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2870,
              "nodeType": "Block",
              "src": "8553:492:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2826,
                      "name": "negativeBrSinceCompound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2266,
                      "src": "8567:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8593:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8567:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2868,
                    "nodeType": "Block",
                    "src": "8968:71:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 2866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2861,
                            "name": "brSinceCompound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2264,
                            "src": "8982:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2864,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2823,
                                "src": "9020:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2862,
                                "name": "brSinceCompound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2264,
                                "src": "9000:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "9000:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9000:28:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8982:46:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2867,
                        "nodeType": "ExpressionStatement",
                        "src": "8982:46:18"
                      }
                    ]
                  },
                  "id": 2869,
                  "nodeType": "IfStatement",
                  "src": "8563:476:18",
                  "trueBody": {
                    "id": 2860,
                    "nodeType": "Block",
                    "src": "8596:366:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2829,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2823,
                            "src": "8614:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2830,
                            "name": "negativeBrSinceCompound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2266,
                            "src": "8624:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8614:33:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2858,
                          "nodeType": "Block",
                          "src": "8857:95:18",
                          "statements": [
                            {
                              "expression": {
                                "id": 2856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2851,
                                  "name": "negativeBrSinceCompound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2266,
                                  "src": "8875:23:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2854,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2823,
                                      "src": "8929:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2852,
                                      "name": "negativeBrSinceCompound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2266,
                                      "src": "8901:23:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2853,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "8901:27:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8901:36:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8875:62:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2857,
                              "nodeType": "ExpressionStatement",
                              "src": "8875:62:18"
                            }
                          ]
                        },
                        "id": 2859,
                        "nodeType": "IfStatement",
                        "src": "8610:342:18",
                        "trueBody": {
                          "id": 2850,
                          "nodeType": "Block",
                          "src": "8649:202:18",
                          "statements": [
                            {
                              "assignments": [
                                2833
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2833,
                                  "mutability": "mutable",
                                  "name": "difference",
                                  "nameLocation": "8675:10:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2850,
                                  "src": "8667:18:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2832,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8667:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2838,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2836,
                                    "name": "negativeBrSinceCompound",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2266,
                                    "src": "8700:23:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2834,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2823,
                                    "src": "8688:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2835,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11543,
                                  "src": "8688:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8688:36:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8667:57:18"
                            },
                            {
                              "expression": {
                                "id": 2841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2839,
                                  "name": "negativeBrSinceCompound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2266,
                                  "src": "8742:23:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8768:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "8742:27:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2842,
                              "nodeType": "ExpressionStatement",
                              "src": "8742:27:18"
                            },
                            {
                              "expression": {
                                "id": 2848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2843,
                                  "name": "brSinceCompound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2264,
                                  "src": "8787:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2846,
                                      "name": "difference",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2833,
                                      "src": "8825:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2844,
                                      "name": "brSinceCompound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2264,
                                      "src": "8805:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2845,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "8805:19:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8805:31:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8787:49:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2849,
                              "nodeType": "ExpressionStatement",
                              "src": "8787:49:18"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2821,
              "nodeType": "StructuredDocumentation",
              "src": "8335:157:18",
              "text": "track funds added since last compound and profit transfer\n @param _amount the amount to add\n @dev add funds to the variable brSinceCompound"
            },
            "id": 2871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addToBrSinceCompound",
            "nameLocation": "8506:20:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2823,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8535:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2871,
                  "src": "8527:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8527:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8526:17:18"
            },
            "returnParameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8553:0:18"
            },
            "scope": 3203,
            "src": "8497:548:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2921,
              "nodeType": "Block",
              "src": "9282:522:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2877,
                      "name": "negativeBrSinceCompound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2266,
                      "src": "9296:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9322:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9296:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2919,
                    "nodeType": "Block",
                    "src": "9418:380:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2888,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2874,
                            "src": "9436:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2889,
                            "name": "brSinceCompound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2264,
                            "src": "9446:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9436:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2917,
                          "nodeType": "Block",
                          "src": "9709:79:18",
                          "statements": [
                            {
                              "expression": {
                                "id": 2915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2910,
                                  "name": "brSinceCompound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2264,
                                  "src": "9727:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2913,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2874,
                                      "src": "9765:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2911,
                                      "name": "brSinceCompound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2264,
                                      "src": "9745:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2912,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "9745:19:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2914,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9745:28:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9727:46:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2916,
                              "nodeType": "ExpressionStatement",
                              "src": "9727:46:18"
                            }
                          ]
                        },
                        "id": 2918,
                        "nodeType": "IfStatement",
                        "src": "9432:356:18",
                        "trueBody": {
                          "id": 2909,
                          "nodeType": "Block",
                          "src": "9463:240:18",
                          "statements": [
                            {
                              "assignments": [
                                2892
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2892,
                                  "mutability": "mutable",
                                  "name": "difference",
                                  "nameLocation": "9489:10:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2909,
                                  "src": "9481:18:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2891,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9481:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2897,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2895,
                                    "name": "brSinceCompound",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2264,
                                    "src": "9514:15:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2893,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2874,
                                    "src": "9502:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11543,
                                  "src": "9502:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9502:28:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9481:49:18"
                            },
                            {
                              "expression": {
                                "id": 2900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2898,
                                  "name": "brSinceCompound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2264,
                                  "src": "9548:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9566:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9548:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2901,
                              "nodeType": "ExpressionStatement",
                              "src": "9548:19:18"
                            },
                            {
                              "expression": {
                                "id": 2907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2902,
                                  "name": "negativeBrSinceCompound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2266,
                                  "src": "9585:23:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2905,
                                      "name": "difference",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2892,
                                      "src": "9660:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2903,
                                      "name": "negativeBrSinceCompound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2266,
                                      "src": "9611:23:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2904,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "9611:27:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9611:77:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9585:103:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2908,
                              "nodeType": "ExpressionStatement",
                              "src": "9585:103:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 2920,
                  "nodeType": "IfStatement",
                  "src": "9292:506:18",
                  "trueBody": {
                    "id": 2887,
                    "nodeType": "Block",
                    "src": "9325:87:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 2885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2880,
                            "name": "negativeBrSinceCompound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2266,
                            "src": "9339:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2883,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2874,
                                "src": "9393:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2881,
                                "name": "negativeBrSinceCompound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2266,
                                "src": "9365:23:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "9365:27:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9365:36:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9339:62:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2886,
                        "nodeType": "ExpressionStatement",
                        "src": "9339:62:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2872,
              "nodeType": "StructuredDocumentation",
              "src": "9051:165:18",
              "text": "track funds remvoed since last compound and profit transfer\n @param _amount the amount to remove\n @dev deduct funds to the variable brSinceCompound"
            },
            "id": 2922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromBrSinceCompound",
            "nameLocation": "9230:25:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2874,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9264:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2922,
                  "src": "9256:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9256:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9255:17:18"
            },
            "returnParameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9282:0:18"
            },
            "scope": 3203,
            "src": "9221:583:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3085,
              "nodeType": "Block",
              "src": "10034:1614:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2929,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10065:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10065:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2933,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2242,
                              "src": "10087:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                "typeString": "contract BitcrushStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                "typeString": "contract BitcrushStaking"
                              }
                            ],
                            "id": 2932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10079:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2931,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10079:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10079:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10065:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d757374206265207374616b696e6720706f6f6c",
                        "id": 2936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10113:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da541bd5d964a1cf11d8bdae760d6b3de60b4d929702201227a675548fce0195",
                          "typeString": "literal_string \"Caller must be staking pool\""
                        },
                        "value": "Caller must be staking pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da541bd5d964a1cf11d8bdae760d6b3de60b4d929702201227a675548fce0195",
                          "typeString": "literal_string \"Caller must be staking pool\""
                        }
                      ],
                      "id": 2928,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10044:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10044:108:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2938,
                  "nodeType": "ExpressionStatement",
                  "src": "10044:108:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2939,
                      "name": "brSinceCompound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2264,
                      "src": "10166:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 2940,
                      "name": "profitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2254,
                      "src": "10185:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10166:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3083,
                    "nodeType": "Block",
                    "src": "11609:33:18",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 3081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11630:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2927,
                        "id": 3082,
                        "nodeType": "Return",
                        "src": "11623:8:18"
                      }
                    ]
                  },
                  "id": 3084,
                  "nodeType": "IfStatement",
                  "src": "10162:1480:18",
                  "trueBody": {
                    "id": 3080,
                    "nodeType": "Block",
                    "src": "10202:1401:18",
                    "statements": [
                      {
                        "assignments": [
                          2943
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2943,
                            "mutability": "mutable",
                            "name": "profit",
                            "nameLocation": "10244:6:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 3080,
                            "src": "10236:14:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2942,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10236:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2945,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10253:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10236:18:18"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2946,
                            "name": "profitShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2256,
                            "src": "10272:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10286:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10272:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2967,
                        "nodeType": "IfStatement",
                        "src": "10268:233:18",
                        "trueBody": {
                          "id": 2966,
                          "nodeType": "Block",
                          "src": "10289:212:18",
                          "statements": [
                            {
                              "assignments": [
                                2950
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2950,
                                  "mutability": "mutable",
                                  "name": "stakingBankrollProfit",
                                  "nameLocation": "10315:21:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2966,
                                  "src": "10307:29:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2949,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10307:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2958,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2956,
                                    "name": "DIVISOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2249,
                                    "src": "10418:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2953,
                                        "name": "profitShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2256,
                                        "src": "10380:11:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2951,
                                        "name": "brSinceCompound",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2264,
                                        "src": "10339:15:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2952,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "10339:40:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2954,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10339:53:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2955,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "10339:78:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10339:87:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10307:119:18"
                            },
                            {
                              "expression": {
                                "id": 2964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2959,
                                  "name": "profit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2943,
                                  "src": "10444:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2962,
                                      "name": "stakingBankrollProfit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2950,
                                      "src": "10464:21:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2960,
                                      "name": "profit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2943,
                                      "src": "10453:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2961,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "10453:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2963,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10453:33:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10444:42:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2965,
                              "nodeType": "ExpressionStatement",
                              "src": "10444:42:18"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2968,
                            "name": "reserveShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2262,
                            "src": "10518:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10533:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10518:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2989,
                        "nodeType": "IfStatement",
                        "src": "10514:221:18",
                        "trueBody": {
                          "id": 2988,
                          "nodeType": "Block",
                          "src": "10536:199:18",
                          "statements": [
                            {
                              "assignments": [
                                2972
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2972,
                                  "mutability": "mutable",
                                  "name": "reserveCrush",
                                  "nameLocation": "10562:12:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2988,
                                  "src": "10554:20:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2971,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10554:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2980,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2978,
                                    "name": "DIVISOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2249,
                                    "src": "10636:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2975,
                                        "name": "reserveShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2262,
                                        "src": "10597:12:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2973,
                                        "name": "brSinceCompound",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2264,
                                        "src": "10577:15:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2974,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "10577:19:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10577:33:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "10577:37:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10577:84:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10554:107:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2984,
                                    "name": "reserve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2244,
                                    "src": "10698:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2985,
                                    "name": "reserveCrush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2972,
                                    "src": "10707:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2981,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2239,
                                    "src": "10679:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                      "typeString": "contract ERC20Burnable"
                                    }
                                  },
                                  "id": 2983,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11159,
                                  "src": "10679:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 2986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10679:41:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2987,
                              "nodeType": "ExpressionStatement",
                              "src": "10679:41:18"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2990,
                            "name": "lotteryShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2260,
                            "src": "10752:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10767:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10752:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3011,
                        "nodeType": "IfStatement",
                        "src": "10748:221:18",
                        "trueBody": {
                          "id": 3010,
                          "nodeType": "Block",
                          "src": "10770:199:18",
                          "statements": [
                            {
                              "assignments": [
                                2994
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2994,
                                  "mutability": "mutable",
                                  "name": "lotteryCrush",
                                  "nameLocation": "10796:12:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3010,
                                  "src": "10788:20:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2993,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10788:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3002,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3000,
                                    "name": "DIVISOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2249,
                                    "src": "10870:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2997,
                                        "name": "lotteryShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2260,
                                        "src": "10831:12:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2995,
                                        "name": "brSinceCompound",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2264,
                                        "src": "10811:15:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2996,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "10811:19:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10811:33:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "10811:37:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10811:84:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10788:107:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3006,
                                    "name": "lottery",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2246,
                                    "src": "10932:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3007,
                                    "name": "lotteryCrush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2994,
                                    "src": "10941:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3003,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2239,
                                    "src": "10913:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                      "typeString": "contract ERC20Burnable"
                                    }
                                  },
                                  "id": 3005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11159,
                                  "src": "10913:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 3008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10913:41:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3009,
                              "nodeType": "ExpressionStatement",
                              "src": "10913:41:18"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3013
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3013,
                            "mutability": "mutable",
                            "name": "burn",
                            "nameLocation": "10991:4:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 3080,
                            "src": "10983:12:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3012,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10983:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3021,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3019,
                              "name": "DIVISOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2249,
                              "src": "11033:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3016,
                                  "name": "BURN_RATE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2252,
                                  "src": "11018:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3014,
                                  "name": "brSinceCompound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2264,
                                  "src": "10998:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "10998:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10998:30:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "10998:34:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10998:43:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10983:58:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3025,
                              "name": "burn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3013,
                              "src": "11066:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3022,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "11055:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                "typeString": "contract ERC20Burnable"
                              }
                            },
                            "id": 3024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11686,
                            "src": "11055:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 3026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11055:16:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3027,
                        "nodeType": "ExpressionStatement",
                        "src": "11055:16:18"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3028,
                            "name": "houseBankrollShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2258,
                            "src": "11090:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11111:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11090:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3049,
                        "nodeType": "IfStatement",
                        "src": "11086:249:18",
                        "trueBody": {
                          "id": 3048,
                          "nodeType": "Block",
                          "src": "11114:221:18",
                          "statements": [
                            {
                              "assignments": [
                                3032
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3032,
                                  "mutability": "mutable",
                                  "name": "bankrollShare",
                                  "nameLocation": "11140:13:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3048,
                                  "src": "11132:21:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3031,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11132:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3040,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3038,
                                    "name": "DIVISOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2249,
                                    "src": "11242:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3035,
                                        "name": "houseBankrollShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2258,
                                        "src": "11197:18:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3033,
                                        "name": "brSinceCompound",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2264,
                                        "src": "11156:15:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3034,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "11156:40:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3036,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11156:60:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3037,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "11156:85:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11156:94:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11132:118:18"
                            },
                            {
                              "expression": {
                                "id": 3046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3041,
                                  "name": "brSinceCompound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2264,
                                  "src": "11268:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3044,
                                      "name": "bankrollShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3032,
                                      "src": "11306:13:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3042,
                                      "name": "brSinceCompound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2264,
                                      "src": "11286:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3043,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "11286:19:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11286:34:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11268:52:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3047,
                              "nodeType": "ExpressionStatement",
                              "src": "11268:52:18"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3050,
                            "name": "totalBankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "11349:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3053,
                                "name": "brSinceCompound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2264,
                                "src": "11383:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3051,
                                "name": "totalBankroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2232,
                                "src": "11365:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "11365:17:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11365:34:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11349:50:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3056,
                        "nodeType": "ExpressionStatement",
                        "src": "11349:50:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3062,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2242,
                                  "src": "11460:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                    "typeString": "contract BitcrushStaking"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                    "typeString": "contract BitcrushStaking"
                                  }
                                ],
                                "id": 3061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11452:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3060,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11452:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11452:20:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3064,
                              "name": "profit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2943,
                              "src": "11474:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3057,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "11433:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Burnable_$11708",
                                "typeString": "contract ERC20Burnable"
                              }
                            },
                            "id": 3059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11159,
                            "src": "11433:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11433:48:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3066,
                        "nodeType": "ExpressionStatement",
                        "src": "11433:48:18"
                      },
                      {
                        "expression": {
                          "id": 3072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3067,
                            "name": "totalProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2270,
                            "src": "11495:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3070,
                                "name": "profit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2943,
                                "src": "11525:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3068,
                                "name": "totalProfit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2270,
                                "src": "11509:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "11509:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11509:23:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11495:37:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3073,
                        "nodeType": "ExpressionStatement",
                        "src": "11495:37:18"
                      },
                      {
                        "expression": {
                          "id": 3076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3074,
                            "name": "brSinceCompound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2264,
                            "src": "11546:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11564:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11546:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3077,
                        "nodeType": "ExpressionStatement",
                        "src": "11546:19:18"
                      },
                      {
                        "expression": {
                          "id": 3078,
                          "name": "profit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2943,
                          "src": "11586:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2927,
                        "id": 3079,
                        "nodeType": "Return",
                        "src": "11579:13:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2923,
              "nodeType": "StructuredDocumentation",
              "src": "9810:168:18",
              "text": "transfer profits to staking pool to be ditributed to stakers.\n @dev transfer profits since last compound to the staking pool while taking out necessary fees."
            },
            "functionSelector": "45c9c1d1",
            "id": 3086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferProfit",
            "nameLocation": "9992:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10006:2:18"
            },
            "returnParameters": {
              "id": 2927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2926,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3086,
                  "src": "10025:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10025:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10024:9:18"
            },
            "scope": 3203,
            "src": "9983:1665:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3105,
              "nodeType": "Block",
              "src": "11879:191:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3095,
                          "name": "_threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3089,
                          "src": "11910:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030303030303030",
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11923:24:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000"
                          },
                          "value": "100000000000000000000000"
                        },
                        "src": "11910:37:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61782070726f666974207468726573686f6c642063616e742062652067726561746572207468616e203130306b204372757368",
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11961:54:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a650d9a9af20d3cb4f2df4ba0fc91440bed183cc3e983a21d9309967aa53fd78",
                          "typeString": "literal_string \"Max profit threshold cant be greater than 100k Crush\""
                        },
                        "value": "Max profit threshold cant be greater than 100k Crush"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a650d9a9af20d3cb4f2df4ba0fc91440bed183cc3e983a21d9309967aa53fd78",
                          "typeString": "literal_string \"Max profit threshold cant be greater than 100k Crush\""
                        }
                      ],
                      "id": 3094,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11889:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11889:136:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3100,
                  "nodeType": "ExpressionStatement",
                  "src": "11889:136:18"
                },
                {
                  "expression": {
                    "id": 3103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3101,
                      "name": "profitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2254,
                      "src": "12035:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3102,
                      "name": "_threshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3089,
                      "src": "12053:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12035:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3104,
                  "nodeType": "ExpressionStatement",
                  "src": "12035:28:18"
                }
              ]
            },
            "documentation": {
              "id": 3087,
              "nodeType": "StructuredDocumentation",
              "src": "11654:155:18",
              "text": "Store `_threshold`.\n @param _threshold the new value to store\n @dev stores the _threshold address in the state variable `profitThreshold`"
            },
            "functionSelector": "28821182",
            "id": 3106,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3092,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3091,
                  "name": "adminOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2287,
                  "src": "11869:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "11869:9:18"
              }
            ],
            "name": "setProfitThreshold",
            "nameLocation": "11823:18:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3089,
                  "mutability": "mutable",
                  "name": "_threshold",
                  "nameLocation": "11850:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "11842:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11842:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11841:20:18"
            },
            "returnParameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11879:0:18"
            },
            "scope": 3203,
            "src": "11814:256:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3162,
              "nodeType": "Block",
              "src": "12599:585:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3132,
                              "name": "BURN_RATE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2252,
                              "src": "12778:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3129,
                                  "name": "_reserveShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3115,
                                  "src": "12742:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3126,
                                      "name": "_lotteryShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3113,
                                      "src": "12706:13:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3123,
                                          "name": "_profitShare",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3111,
                                          "src": "12671:12:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 3121,
                                          "name": "_houseBankrollShare",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3109,
                                          "src": "12630:19:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 3122,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "add",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 11528,
                                        "src": "12630:40:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 3124,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12630:54:18",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "12630:75:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3127,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12630:90:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11528,
                                "src": "12630:111:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12630:126:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11528,
                            "src": "12630:147:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12630:158:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3134,
                          "name": "DIVISOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2249,
                          "src": "12792:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12630:169:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53756d206f6620616c6c207368617265732073686f756c642061646420757020746f2031303025",
                        "id": 3136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12813:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32114b9df8dbb32a89ff77547d03ba089620653aabd79206fe422030878162e7",
                          "typeString": "literal_string \"Sum of all shares should add up to 100%\""
                        },
                        "value": "Sum of all shares should add up to 100%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32114b9df8dbb32a89ff77547d03ba089620653aabd79206fe422030878162e7",
                          "typeString": "literal_string \"Sum of all shares should add up to 100%\""
                        }
                      ],
                      "id": 3120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12609:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12609:255:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3138,
                  "nodeType": "ExpressionStatement",
                  "src": "12609:255:18"
                },
                {
                  "expression": {
                    "id": 3141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3139,
                      "name": "houseBankrollShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2258,
                      "src": "12874:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3140,
                      "name": "_houseBankrollShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3109,
                      "src": "12895:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12874:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3142,
                  "nodeType": "ExpressionStatement",
                  "src": "12874:40:18"
                },
                {
                  "expression": {
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3143,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2256,
                      "src": "12924:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3144,
                      "name": "_profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3111,
                      "src": "12938:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12924:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3146,
                  "nodeType": "ExpressionStatement",
                  "src": "12924:26:18"
                },
                {
                  "expression": {
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3147,
                      "name": "lotteryShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2260,
                      "src": "12960:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3148,
                      "name": "_lotteryShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3113,
                      "src": "12975:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12960:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "12960:28:18"
                },
                {
                  "expression": {
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3151,
                      "name": "reserveShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2262,
                      "src": "12998:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3152,
                      "name": "_reserveShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3115,
                      "src": "13013:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12998:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "12998:28:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3156,
                        "name": "_houseBankrollShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3109,
                        "src": "13068:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3157,
                        "name": "_profitShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3111,
                        "src": "13101:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3158,
                        "name": "_lotteryShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3113,
                        "src": "13127:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3159,
                        "name": "_reserveShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3115,
                        "src": "13154:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3155,
                      "name": "SharesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "13041:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 3160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13041:136:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3161,
                  "nodeType": "EmitStatement",
                  "src": "13036:141:18"
                }
              ]
            },
            "documentation": {
              "id": 3107,
              "nodeType": "StructuredDocumentation",
              "src": "12076:347:18",
              "text": "updates all share percentage values\n @param _houseBankrollShare the new value to store\n @param _profitShare the new value to store\n @param _lotteryShare the new value to store\n @param _reserveShare the new value to store\n @dev stores the _houseBankrollShare address in the state variable `houseBankrollShare`"
            },
            "functionSelector": "f03b6ffc",
            "id": 3163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3118,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3117,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "12589:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "12589:9:18"
              }
            ],
            "name": "setShares",
            "nameLocation": "12437:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3109,
                  "mutability": "mutable",
                  "name": "_houseBankrollShare",
                  "nameLocation": "12464:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "12456:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12456:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3111,
                  "mutability": "mutable",
                  "name": "_profitShare",
                  "nameLocation": "12501:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "12493:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12493:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3113,
                  "mutability": "mutable",
                  "name": "_lotteryShare",
                  "nameLocation": "12531:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "12523:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12523:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3115,
                  "mutability": "mutable",
                  "name": "_reserveShare",
                  "nameLocation": "12562:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "12554:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12554:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12446:135:18"
            },
            "returnParameters": {
              "id": 3119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12599:0:18"
            },
            "scope": 3203,
            "src": "12428:756:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3175,
              "nodeType": "Block",
              "src": "13406:35:18",
              "statements": [
                {
                  "expression": {
                    "id": 3173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3171,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2244,
                      "src": "13416:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3172,
                      "name": "_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3166,
                      "src": "13426:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13416:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3174,
                  "nodeType": "ExpressionStatement",
                  "src": "13416:18:18"
                }
              ]
            },
            "documentation": {
              "id": 3164,
              "nodeType": "StructuredDocumentation",
              "src": "13190:149:18",
              "text": "store new address in reserve address\n @param _reserve the new address to store\n @dev changes the address which recieves reserve fees"
            },
            "functionSelector": "14673d31",
            "id": 3176,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3168,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "13396:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "13396:9:18"
              }
            ],
            "name": "setReserveAddress",
            "nameLocation": "13353:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3166,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nameLocation": "13379:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3176,
                  "src": "13371:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13371:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13370:18:18"
            },
            "returnParameters": {
              "id": 3170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13406:0:18"
            },
            "scope": 3203,
            "src": "13344:97:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3188,
              "nodeType": "Block",
              "src": "13663:35:18",
              "statements": [
                {
                  "expression": {
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3184,
                      "name": "lottery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2246,
                      "src": "13673:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3185,
                      "name": "_lottery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3179,
                      "src": "13683:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13673:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "13673:18:18"
                }
              ]
            },
            "documentation": {
              "id": 3177,
              "nodeType": "StructuredDocumentation",
              "src": "13447:149:18",
              "text": "store new address in lottery address\n @param _lottery the new address to store\n @dev changes the address which recieves lottery fees"
            },
            "functionSelector": "2a332b2a",
            "id": 3189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "13653:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "13653:9:18"
              }
            ],
            "name": "setLotteryAddress",
            "nameLocation": "13610:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3179,
                  "mutability": "mutable",
                  "name": "_lottery",
                  "nameLocation": "13636:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "13628:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13628:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13627:18:18"
            },
            "returnParameters": {
              "id": 3183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13663:0:18"
            },
            "scope": 3203,
            "src": "13601:97:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3201,
              "nodeType": "Block",
              "src": "13917:31:18",
              "statements": [
                {
                  "expression": {
                    "id": 3199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3197,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "13927:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3198,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3192,
                      "src": "13935:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13927:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3200,
                  "nodeType": "ExpressionStatement",
                  "src": "13927:14:18"
                }
              ]
            },
            "documentation": {
              "id": 3190,
              "nodeType": "StructuredDocumentation",
              "src": "13704:157:18",
              "text": "store new address in admin address\n @param _admin the new address to store\n @dev changes the address which is used by the adminOnly modifier"
            },
            "functionSelector": "704b6c02",
            "id": 3202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3195,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3194,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "13907:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "13907:9:18"
              }
            ],
            "name": "setAdmin",
            "nameLocation": "13875:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3192,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "13892:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3202,
                  "src": "13884:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13884:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13883:16:18"
            },
            "returnParameters": {
              "id": 3196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13917:0:18"
            },
            "scope": 3203,
            "src": "13866:82:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3204,
        "src": "449:13501:18",
        "usedErrors": []
      }
    ],
    "src": "31:13920:18"
  },
  "bytecode": "60c06040523480156200001157600080fd5b5060405162001d8b38038062001d8b833981016040819052620000349162000105565b6200003f336200009c565b6001600160a01b0398891660805296881660a052600480549689166001600160a01b03199788161790556005805495891695871695909517909455600792909255600855600955600a55600f8054929093169116179055620001ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200010257600080fd5b50565b60008060008060008060008060006101208a8c0312156200012557600080fd5b89516200013281620000ec565b60208b01519099506200014581620000ec565b60408b01519098506200015881620000ec565b60608b01519097506200016b81620000ec565b8096505060808a0151945060a08a0151935060c08a0151925060e08a015191506101008a01516200019c81620000ec565b809150509295985092959850929598565b60805160a051611b0262000289600039600081816102100152818161054c015281816105c2015281816106ae015281816106e9015281816108d801528181610b7701528181610c1601528181610db301528181610fd80152818161104e0152818161113c015261117701526000818161038c01528181610570015281816106420152818161068b0152818161076e015281816109cb01528181610a3101528181610a9301528181610b5501528181610cc101528181610ffc015281816110ce01528181611119015281816111fe01526114c70152611b026000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063860015191161011a578063c2e50b16116100ad578063f03b6ffc1161007c578063f03b6ffc1461040b578063f19e207e1461041e578063f2fde38b14610441578063f846a88514610454578063f974821a1461045c57600080fd5b8063c2e50b16146103d3578063cd3293de146103e6578063e3fd80dd146103f9578063e7cb3d671461040257600080fd5b8063b359a9f9116100e9578063b359a9f914610387578063b4055d15146103ae578063b72481f8146103b7578063ba13a572146103c057600080fd5b806386001519146103515780638da5cb5b1461035a5780638e4a61421461036b57806394f3f81d1461037457600080fd5b80633e1f55e41161019d57806359c53fd41161016c57806359c53fd41461030757806361433d881461031a578063704b6c021461032d578063715018a6146103405780637d903ecc1461034857600080fd5b80633e1f55e4146102da57806345c9c1d1146102e35780634a5db3b5146102eb5780634e584e11146102fe57600080fd5b806328821182116101d957806328821182146102945780632a332b2a146102a75780632feda8d4146102ba5780633410fe6e146102d157600080fd5b80630c56ae3b1461020b57806314673d311461024f578063151fac7b14610264578063203c27a614610277575b600080fd5b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61026261025d3660046118e2565b610465565b005b6102626102723660046118fd565b6104ba565b6002546102849060ff1681565b6040519015158152602001610246565b6102626102a23660046118fd565b6107aa565b6102626102b53660046118e2565b61087f565b6102c360085481565b604051908152602001610246565b6102c361271081565b6102c360075481565b6102c36108cb565b6102626102f93660046118e2565b610bbd565b6102c360095481565b6102626103153660046118fd565b610c0b565b610262610328366004611916565b610cf6565b61026261033b3660046118e2565b610e73565b610262610ebf565b6102c3600b5481565b6102c3600e5481565b6000546001600160a01b0316610232565b6102c3600c5481565b6102626103823660046118e2565b610ef5565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6102c360015481565b6102c3600d5481565b600554610232906001600160a01b031681565b6102626103e13660046118fd565b610f40565b600454610232906001600160a01b031681565b6102c360035481565b6102c3600a5481565b610262610419366004611942565b611240565b61028461042c3660046118e2565b60106020526000908152604090205460ff1681565b61026261044f3660046118e2565b611345565b6102c3606481565b6102c360065481565b6000546001600160a01b031633146104985760405162461bcd60e51b815260040161048f90611974565b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600f546001600160a01b031633146105145760405162461bcd60e51b815260206004820152601f60248201527f416363657373207265737472696374656420746f2061646d696e206f6e6c7900604482015260640161048f565b60025460ff1615156001141561076157600354811061067e576000610544600354836113dd90919063ffffffff16565b90506105a8337f00000000000000000000000000000000000000000000000000000000000000006003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166113f0909392919063ffffffff16565b6003546040516338e7eaa960e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e39faaa490602401600060405180830381600087803b15801561060e57600080fd5b505af1158015610622573d6000803e3d6000fd5b5050600060035550506002805460ff1916905561066a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b6001546106779082611461565b6001555050565b6106d36001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f0000000000000000000000000000000000000000000000000000000000000000846113f0565b6040516338e7eaa960e21b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e39faaa490602401600060405180830381600087803b15801561073557600080fd5b505af1158015610749573d6000803e3d6000fd5b505060035461075b92509050826113dd565b60035550565b6107966001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b6001546107a39082611461565b6001555b50565b600f546001600160a01b031633146108045760405162461bcd60e51b815260206004820152601f60248201527f416363657373207265737472696374656420746f2061646d696e206f6e6c7900604482015260640161048f565b69152d02c7e14af6800000811061087a5760405162461bcd60e51b815260206004820152603460248201527f4d61782070726f666974207468726573686f6c642063616e74206265206772656044820152730c2e8cae440e8d0c2dc40626060d64086e4eae6d60631b606482015260840161048f565b600655565b6000546001600160a01b031633146108a95760405162461bcd60e51b815260040161048f90611974565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109455760405162461bcd60e51b815260206004820152601b60248201527f43616c6c6572206d757374206265207374616b696e6720706f6f6c0000000000604482015260640161048f565b600654600b5410610bb7576007546000901561099057600061098061271061097a600754600b5461146d90919063ffffffff16565b90611479565b905061098c8282611461565b9150505b600a54156109f65760006109b761271061097a600a54600b5461146d90919063ffffffff16565b6004549091506109f4906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683611485565b505b60095415610a5c576000610a1d61271061097a600954600b5461146d90919063ffffffff16565b600554909150610a5a906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683611485565b505b6000610a7a61271061097a6064600b5461146d90919063ffffffff16565b604051630852cd8d60e31b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b5050505060006008541115610b36576000610b2161271061097a600854600b5461146d90919063ffffffff16565b600b54909150610b3190826113dd565b600b55505b600b54600154610b45916113dd565b600155610b9c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000084611485565b600e54610ba99083611461565b600e55506000600b55919050565b50600090565b6000546001600160a01b03163314610be75760405162461bcd60e51b815260040161048f90611974565b6001600160a01b03166000908152601060205260409020805460ff19166001179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c835760405162461bcd60e51b815260206004820152601b60248201527f43616c6c6572206d757374206265207374616b696e6720706f6f6c0000000000604482015260640161048f565b6003548110610ce9576000610ca3600354836113dd90919063ffffffff16565b60006003556002805460ff19169055905061066a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b60035461075b90826113dd565b3360009081526010602052604090205460ff161515600114610d565760405162461bcd60e51b815260206004820152601960248201527810d85b1b195c881b5d5cdd08189948185d5d1a1bdc9a5e9959603a1b604482015260640161048f565b600154821115610e3b576000610d77600154846113dd90919063ffffffff16565b6002805460ff191660011790556040516323d13aff60e21b8152600481018290526001600160a01b0384811660248301523360448301529192507f000000000000000000000000000000000000000000000000000000000000000090911690638f44ebfc90606401600060405180830381600087803b158015610df957600080fd5b505af1158015610e0d573d6000803e3d6000fd5b5050600354610e1f9250905082611461565b600355600154610e309083336114ba565b506000600155610e56565b600154610e4890836113dd565b600155610e568282336114ba565b610e5f82611559565b600d54610e6c9083611461565b600d555050565b6000546001600160a01b03163314610e9d5760405162461bcd60e51b815260040161048f90611974565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ee95760405162461bcd60e51b815260040161048f90611974565b610ef360006115c4565b565b6000546001600160a01b03163314610f1f5760405162461bcd60e51b815260040161048f90611974565b6001600160a01b03166000908152601060205260409020805460ff19169055565b3360009081526010602052604090205460ff161515600114610fa05760405162461bcd60e51b815260206004820152601960248201527810d85b1b195c881b5d5cdd08189948185d5d1a1bdc9a5e9959603a1b604482015260640161048f565b60025460ff161515600114156111f157600354811061110c576000610fd0600354836113dd90919063ffffffff16565b9050611034337f00000000000000000000000000000000000000000000000000000000000000006003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166113f0909392919063ffffffff16565b6003546040516338e7eaa960e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e39faaa490602401600060405180830381600087803b15801561109a57600080fd5b505af11580156110ae573d6000803e3d6000fd5b5050600060035550506002805460ff191690556110f66001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b6001546111039082611461565b60015550611237565b6111616001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f0000000000000000000000000000000000000000000000000000000000000000846113f0565b6040516338e7eaa960e21b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e39faaa490602401600060405180830381600087803b1580156111c357600080fd5b505af11580156111d7573d6000803e3d6000fd5b50506003546111e992509050826113dd565b600355611237565b6112266001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b6001546112339082611461565b6001555b6107a781611614565b6000546001600160a01b0316331461126a5760405162461bcd60e51b815260040161048f90611974565b6127106112866064611280848187818b8b611461565b90611461565b146112e35760405162461bcd60e51b815260206004820152602760248201527f53756d206f6620616c6c207368617265732073686f756c642061646420757020604482015266746f203130302560c81b606482015260840161048f565b600884905560078390556009829055600a8190556040805185815260208101859052908101839052606081018290527f1ab182163a0683cd3182c000705483ef0ccdc375a845ab7b68678f89d90de4d79060800160405180910390a150505050565b6000546001600160a01b0316331461136f5760405162461bcd60e51b815260040161048f90611974565b6001600160a01b0381166113d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048f565b6107a7816115c4565b60006113e982846119bf565b9392505050565b6040516001600160a01b038085166024830152831660448201526064810182905261145b9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611673565b50505050565b60006113e982846119d6565b60006113e982846119ee565b60006113e98284611a0d565b6040516001600160a01b0383166024820152604481018290526114b590849063a9059cbb60e01b90606401611424565b505050565b6114ee6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168285611485565b604051630f62cf8d60e41b8152600481018490526001600160a01b03838116602483015282919082169063f62cf8d090604401600060405180830381600087803b15801561153b57600080fd5b505af115801561154f573d6000803e3d6000fd5b5050505050505050565b600c541561157457600c5461156e9082611461565b600c5550565b600b548111156115b1576000611595600b54836113dd90919063ffffffff16565b6000600b55600c549091506115aa9082611461565b600c555050565b600b546115be90826113dd565b600b5550565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600c541561166657600c5481111561165957600061163d600c54836113dd90919063ffffffff16565b6000600c55600b549091506116529082611461565b600b555050565b600c5461156e90826113dd565b600b546115be9082611461565b60006116c8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117459092919063ffffffff16565b8051909150156114b557808060200190518101906116e69190611a2f565b6114b55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161048f565b6060611754848460008561175c565b949350505050565b6060824710156117bd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161048f565b6001600160a01b0385163b6118145760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161048f565b600080866001600160a01b031685876040516118309190611a7d565b60006040518083038185875af1925050503d806000811461186d576040519150601f19603f3d011682016040523d82523d6000602084013e611872565b606091505b509150915061188282828661188d565b979650505050505050565b6060831561189c5750816113e9565b8251156118ac5782518084602001fd5b8160405162461bcd60e51b815260040161048f9190611a99565b80356001600160a01b03811681146118dd57600080fd5b919050565b6000602082840312156118f457600080fd5b6113e9826118c6565b60006020828403121561190f57600080fd5b5035919050565b6000806040838503121561192957600080fd5b82359150611939602084016118c6565b90509250929050565b6000806000806080858703121561195857600080fd5b5050823594602084013594506040840135936060013592509050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156119d1576119d16119a9565b500390565b600082198211156119e9576119e96119a9565b500190565b6000816000190483118215151615611a0857611a086119a9565b500290565b600082611a2a57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611a4157600080fd5b815180151581146113e957600080fd5b60005b83811015611a6c578181015183820152602001611a54565b8381111561145b5750506000910152565b60008251611a8f818460208701611a51565b9190910192915050565b6020815260008251806020840152611ab8816040850160208701611a51565b601f01601f1916919091016040019291505056fea26469706673582212207d4ebba5406932198cf1e9258319fdabfe73f6be96f4034ad125377b56fd6f6a64736f6c634300080c0033",
  "bytecodeSha1": "9109e33de1e2d19af123d627e3b84b9b9ef53b74",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "BitcrushBankroll",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "119": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {
        "Address.functionCallWithValue": {
          "116": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "117": [
            7735,
            7742,
            false
          ],
          "118": [
            7876,
            7897,
            false
          ]
        }
      },
      "12": {},
      "16": {},
      "17": {},
      "18": {
        "BitcrushBankroll.addToBankroll": {
          "95": [
            3229,
            3249,
            false
          ],
          "96": [
            3269,
            3296,
            false
          ]
        },
        "BitcrushBankroll.addToBrSinceCompound": {
          "114": [
            8567,
            8594,
            false
          ],
          "115": [
            8614,
            8647,
            false
          ]
        },
        "BitcrushBankroll.addUserLoss": {
          "108": [
            4591,
            4630,
            true
          ],
          "109": [
            4924,
            4944,
            false
          ],
          "110": [
            4964,
            4991,
            false
          ]
        },
        "BitcrushBankroll.payOutUserWinning": {
          "106": [
            6940,
            6979,
            true
          ],
          "107": [
            7189,
            7212,
            false
          ]
        },
        "BitcrushBankroll.recoverBankroll": {
          "104": [
            6112,
            6146,
            true
          ],
          "105": [
            6213,
            6240,
            false
          ]
        },
        "BitcrushBankroll.removeFromBrSinceCompound": {
          "112": [
            9296,
            9323,
            false
          ],
          "113": [
            9436,
            9461,
            false
          ]
        },
        "BitcrushBankroll.setProfitThreshold": {
          "97": [
            11910,
            11947,
            true
          ]
        },
        "BitcrushBankroll.setShares": {
          "111": [
            12630,
            12799,
            true
          ]
        },
        "BitcrushBankroll.transferProfit": {
          "98": [
            10065,
            10099,
            true
          ],
          "99": [
            10166,
            10200,
            false
          ],
          "100": [
            10272,
            10287,
            false
          ],
          "101": [
            10518,
            10534,
            false
          ],
          "102": [
            10752,
            10768,
            false
          ],
          "103": [
            11090,
            11112,
            false
          ]
        }
      },
      "19": {},
      "2": {},
      "22": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "120": [
            3735,
            3756,
            false
          ],
          "121": [
            3819,
            3849,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "81": [
            2378,
            2395
          ],
          "82": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "46": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "67": [
            1998,
            2071
          ],
          "68": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Address.functionCall": {
          "88": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "89": [
            5137,
            5218
          ],
          "91": [
            5228,
            5288
          ],
          "92": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "90": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "93": [
            7758,
            7775
          ],
          "94": [
            8202,
            8222
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "16": {
        "SafeMath.add": {
          "71": [
            2818,
            2830
          ]
        },
        "SafeMath.div": {
          "73": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "72": [
            3528,
            3540
          ]
        },
        "SafeMath.sub": {
          "69": [
            3185,
            3197
          ]
        }
      },
      "17": {},
      "18": {
        "BitcrushBankroll.addToBankroll": {
          "3": [
            3383,
            3535
          ],
          "4": [
            3553,
            3598
          ],
          "5": [
            3616,
            3636
          ],
          "6": [
            3654,
            3674
          ],
          "7": [
            3692,
            3752
          ],
          "8": [
            3770,
            3814
          ],
          "9": [
            3853,
            3996
          ],
          "10": [
            4014,
            4050
          ],
          "11": [
            4068,
            4116
          ],
          "12": [
            4161,
            4219
          ],
          "13": [
            4233,
            4275
          ]
        },
        "BitcrushBankroll.addToBrSinceCompound": {
          "83": [
            8742,
            8769
          ],
          "84": [
            8787,
            8836
          ],
          "85": [
            8875,
            8937
          ],
          "86": [
            8982,
            9028
          ]
        },
        "BitcrushBankroll.addUserLoss": {
          "48": [
            4570,
            4681
          ],
          "49": [
            5078,
            5230
          ],
          "50": [
            5248,
            5293
          ],
          "51": [
            5311,
            5331
          ],
          "52": [
            5349,
            5369
          ],
          "53": [
            5387,
            5447
          ],
          "54": [
            5465,
            5509
          ],
          "55": [
            5548,
            5691
          ],
          "56": [
            5709,
            5745
          ],
          "57": [
            5763,
            5811
          ],
          "58": [
            5856,
            5914
          ],
          "59": [
            5928,
            5970
          ],
          "60": [
            5990,
            6019
          ]
        },
        "BitcrushBankroll.authorizeAddress": {
          "29": [
            2659,
            2695
          ]
        },
        "BitcrushBankroll.payOutUserWinning": {
          "35": [
            6919,
            7030
          ],
          "36": [
            7288,
            7307
          ],
          "37": [
            7321,
            7378
          ],
          "38": [
            7392,
            7442
          ],
          "39": [
            7456,
            7508
          ],
          "40": [
            7523,
            7540
          ],
          "41": [
            7571,
            7613
          ],
          "42": [
            7627,
            7673
          ],
          "43": [
            7693,
            7727
          ],
          "44": [
            7737,
            7779
          ]
        },
        "BitcrushBankroll.recoverBankroll": {
          "30": [
            6091,
            6199
          ],
          "31": [
            6319,
            6339
          ],
          "32": [
            6353,
            6373
          ],
          "33": [
            6387,
            6447
          ],
          "34": [
            6536,
            6584
          ]
        },
        "BitcrushBankroll.removeAuthorization": {
          "47": [
            2994,
            3030
          ]
        },
        "BitcrushBankroll.removeFromBrSinceCompound": {
          "77": [
            9339,
            9401
          ],
          "78": [
            9548,
            9567
          ],
          "79": [
            9585,
            9688
          ],
          "80": [
            9727,
            9773
          ]
        },
        "BitcrushBankroll.setAdmin": {
          "45": [
            13927,
            13941
          ]
        },
        "BitcrushBankroll.setLotteryAddress": {
          "16": [
            13673,
            13691
          ]
        },
        "BitcrushBankroll.setProfitThreshold": {
          "14": [
            11889,
            12025
          ],
          "15": [
            12035,
            12063
          ]
        },
        "BitcrushBankroll.setReserveAddress": {
          "2": [
            13416,
            13434
          ]
        },
        "BitcrushBankroll.setShares": {
          "61": [
            12609,
            12864
          ],
          "62": [
            12874,
            12914
          ],
          "63": [
            12924,
            12950
          ],
          "64": [
            12960,
            12988
          ],
          "65": [
            12998,
            13026
          ],
          "66": [
            13036,
            13177
          ]
        },
        "BitcrushBankroll.transferProfit": {
          "17": [
            10044,
            10152
          ],
          "18": [
            10444,
            10486
          ],
          "19": [
            10679,
            10720
          ],
          "20": [
            10913,
            10954
          ],
          "21": [
            11055,
            11071
          ],
          "22": [
            11268,
            11320
          ],
          "23": [
            11349,
            11399
          ],
          "24": [
            11433,
            11481
          ],
          "25": [
            11495,
            11532
          ],
          "26": [
            11546,
            11565
          ],
          "27": [
            11579,
            11592
          ],
          "28": [
            11623,
            11631
          ]
        },
        "BitcrushBankroll.transferWinnings": {
          "75": [
            8157,
            8196
          ],
          "76": [
            8277,
            8322
          ]
        }
      },
      "19": {},
      "2": {},
      "22": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "87": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "74": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "70": [
            1050,
            1146
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "BitcrushLiveWallet",
    "BitcrushStaking",
    "CRUSHToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "449:13501:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:44;;;;;;;;-1:-1:-1;;;;;202:32:33;;;184:51;;172:2;157:18;739:44:18;;;;;;;;13344:97;;;;;;:::i;:::-;;:::i;:::-;;3158:1134;;;;;;:::i;:::-;;:::i;597:24::-;;;;;;;;;;;;965:14:33;;958:22;940:41;;928:2;913:18;597:24:18;800:187:33;11814:256:18;;;;;;:::i;:::-;;:::i;13601:97::-;;;;;;:::i;:::-;;:::i;1031:33::-;;;;;;;;;1138:25:33;;;1126:2;1111:18;1031:33:18;992:177:33;847:39:18;;881:5;847:39;;999:26;;;;;;9983:1665;;;:::i;2588:114::-;;;;;;:::i;:::-;;:::i;1070:27::-;;;;;;6032:569;;;;;;:::i;:::-;;:::i;6841:945::-;;;;;;:::i;:::-;;:::i;13866:82::-;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1159:30:18:-;;;;;;1321:26;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;1195:38:18;;;;;;2920:117;;;;;;:::i;:::-;;:::i;697:36::-;;;;;563:28;;;;;;1287;;;;;;818:22;;;;;-1:-1:-1;;;;;818:22:18;;;4515:1511;;;;;;:::i;:::-;;:::i;790:22::-;;;;;-1:-1:-1;;;;;790:22:18;;;627:31;;;;;;1103:27;;;;;;12428:756;;;;;;:::i;:::-;;:::i;1578:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;892:39:18:-;;928:3;892:39;;937:30;;;;;;13344:97;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;13416:7:18::1;:18:::0;;-1:-1:-1;;;;;;13416:18:18::1;-1:-1:-1::0;;;;;13416:18:18;;;::::1;::::0;;;::::1;::::0;;13344:97::o;3158:1134::-;1464:5;;-1:-1:-1;;;;;1464:5:18;1442:10;:28;1421:106;;;;-1:-1:-1;;;1421:106:18;;2825:2:33;1421:106:18;;;2807:21:33;2864:2;2844:18;;;2837:30;2903:33;2883:18;;;2876:61;2954:18;;1421:106:18;2623:355:33;1421:106:18;3229:12:::1;::::0;::::1;;:20;;:12:::0;:20:::1;3225:1061;;;3280:16;;3269:7;:27;3265:866;;3316:17;3336:29;3348:16;;3336:7;:11;;:29;;;;:::i;:::-;3316:49;;3383:152;3427:10;3467:11;3501:16;;3383:5;-1:-1:-1::0;;;;;3383:22:18::1;;;:152;;;;;;:::i;:::-;3581:16;::::0;3553:45:::1;::::0;-1:-1:-1;;;3553:45:18;;::::1;::::0;::::1;1138:25:33::0;;;;3553:11:18::1;-1:-1:-1::0;;;;;3553:27:18::1;::::0;::::1;::::0;1111:18:33;;3553:45:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3635:1:18::1;3616:16;:20:::0;-1:-1:-1;;3654:12:18::1;:20:::0;;-1:-1:-1;;3654:20:18::1;::::0;;3692:60:::1;-1:-1:-1::0;;;;;3692:5:18::1;:22;3715:10;3735:4;3742:9:::0;3692:22:::1;:60::i;:::-;3786:13;::::0;:28:::1;::::0;3804:9;3786:17:::1;:28::i;:::-;3770:13;:44:::0;-1:-1:-1;3158:1134:18;:::o;3265:866::-:1;3853:143;-1:-1:-1::0;;;;;3853:5:18::1;:22;3897:10;3937:11;3971:7:::0;3853:22:::1;:143::i;:::-;4014:36;::::0;-1:-1:-1;;;4014:36:18;;::::1;::::0;::::1;1138:25:33::0;;;4014:11:18::1;-1:-1:-1::0;;;;;4014:27:18::1;::::0;::::1;::::0;1111:18:33;;4014:36:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4087:16:18::1;::::0;:29:::1;::::0;-1:-1:-1;4087:16:18;-1:-1:-1;4108:7:18;4087:20:::1;:29::i;:::-;4068:16;:48:::0;3158:1134;:::o;3225:1061::-:1;4161:58;-1:-1:-1::0;;;;;4161:5:18::1;:22;4184:10;4204:4;4211:7:::0;4161:22:::1;:58::i;:::-;4249:13;::::0;:26:::1;::::0;4267:7;4249:17:::1;:26::i;:::-;4233:13;:42:::0;3225:1061:::1;3158:1134:::0;:::o;11814:256::-;1464:5;;-1:-1:-1;;;;;1464:5:18;1442:10;:28;1421:106;;;;-1:-1:-1;;;1421:106:18;;2825:2:33;1421:106:18;;;2807:21:33;2864:2;2844:18;;;2837:30;2903:33;2883:18;;;2876:61;2954:18;;1421:106:18;2623:355:33;1421:106:18;11923:24:::1;11910:10;:37;11889:136;;;::::0;-1:-1:-1;;;11889:136:18;;3185:2:33;11889:136:18::1;::::0;::::1;3167:21:33::0;3224:2;3204:18;;;3197:30;3263:34;3243:18;;;3236:62;-1:-1:-1;;;3314:18:33;;;3307:50;3374:19;;11889:136:18::1;2983:416:33::0;11889:136:18::1;12035:15;:28:::0;11814:256::o;13601:97::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;13673:7:18::1;:18:::0;;-1:-1:-1;;;;;;13673:18:18::1;-1:-1:-1::0;;;;;13673:18:18;;;::::1;::::0;;;::::1;::::0;;13601:97::o;9983:1665::-;10025:7;10065:10;-1:-1:-1;;;;;10087:11:18;10065:34;;10044:108;;;;-1:-1:-1;;;10044:108:18;;3606:2:33;10044:108:18;;;3588:21:33;3645:2;3625:18;;;3618:30;3684:29;3664:18;;;3657:57;3731:18;;10044:108:18;3404:351:33;10044:108:18;10185:15;;10166;;:34;10162:1480;;10272:11;;10236:14;;10272:15;10268:233;;10307:29;10339:87;881:5;10339:53;10380:11;;10339:15;;:40;;:53;;;;:::i;:::-;:78;;:87::i;:::-;10307:119;-1:-1:-1;10453:33:18;:6;10307:119;10453:10;:33::i;:::-;10444:42;;10289:212;10268:233;10518:12;;:16;10514:221;;10554:20;10577:84;881:5;10577:33;10597:12;;10577:15;;:19;;:33;;;;:::i;:84::-;10698:7;;10554:107;;-1:-1:-1;10679:41:18;;-1:-1:-1;;;;;10679:5:18;:18;;;10698:7;10554:107;10679:18;:41::i;:::-;10536:199;10514:221;10752:12;;:16;10748:221;;10788:20;10811:84;881:5;10811:33;10831:12;;10811:15;;:19;;:33;;;;:::i;:84::-;10932:7;;10788:107;;-1:-1:-1;10913:41:18;;-1:-1:-1;;;;;10913:5:18;:18;;;10932:7;10788:107;10913:18;:41::i;:::-;10770:199;10748:221;10983:12;10998:43;881:5;10998:30;928:3;10998:15;;:19;;:30;;;;:::i;:43::-;11055:16;;-1:-1:-1;;;11055:16:18;;;;;1138:25:33;;;10983:58:18;;-1:-1:-1;11055:5:18;-1:-1:-1;;;;;11055:10:18;;;;1111:18:33;;11055:16:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11111:1;11090:18;;:22;11086:249;;;11132:21;11156:94;881:5;11156:60;11197:18;;11156:15;;:40;;:60;;;;:::i;:94::-;11286:15;;11132:118;;-1:-1:-1;11286:34:18;;11132:118;11286:19;:34::i;:::-;11268:15;:52;-1:-1:-1;11086:249:18;11383:15;;11365:13;;:34;;:17;:34::i;:::-;11349:13;:50;11433:48;-1:-1:-1;;;;;11433:5:18;:18;11460:11;11474:6;11433:18;:48::i;:::-;11509:11;;:23;;11525:6;11509:15;:23::i;:::-;11495:11;:37;-1:-1:-1;11564:1:18;11546:15;:19;11586:6;9983:1665;-1:-1:-1;9983:1665:18:o;10162:1480::-;-1:-1:-1;11630:1:18;;9983:1665::o;2588:114::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2659:29:18::1;;::::0;;;:19:::1;:29;::::0;;;;:36;;-1:-1:-1;;2659:36:18::1;2691:4;2659:36;::::0;;2588:114::o;6032:569::-;6112:10;-1:-1:-1;;;;;6134:11:18;6112:34;;6091:108;;;;-1:-1:-1;;;6091:108:18;;3606:2:33;6091:108:18;;;3588:21:33;3645:2;3625:18;;;3618:30;3684:29;3664:18;;;3657:57;3731:18;;6091:108:18;3404:351:33;6091:108:18;6224:16;;6213:7;:27;6209:386;;6256:17;6276:29;6288:16;;6276:7;:11;;:29;;;;:::i;:::-;6338:1;6319:16;:20;6353:12;:20;;-1:-1:-1;;6353:20:18;;;6256:49;-1:-1:-1;6387:60:18;-1:-1:-1;;;;;6387:5:18;:22;6410:10;6430:4;6256:49;6387:22;:60::i;6209:386::-;6555:16;;:29;;6576:7;6555:20;:29::i;6841:945::-;6960:10;6940:31;;;;:19;:31;;;;;;;;:39;;:31;:39;6919:111;;;;-1:-1:-1;;;6919:111:18;;3962:2:33;6919:111:18;;;3944:21:33;4001:2;3981:18;;;3974:30;-1:-1:-1;;;4020:18:33;;;4013:55;4085:18;;6919:111:18;3760:349:33;6919:111:18;7199:13;;7189:7;:23;7185:499;;;7228:17;7248:26;7260:13;;7248:7;:11;;:26;;;;:::i;:::-;7288:12;:19;;-1:-1:-1;;7288:19:18;7303:4;7288:19;;;7321:57;;-1:-1:-1;;;7321:57:18;;;;;4316:25:33;;;-1:-1:-1;;;;;4415:15:33;;;4395:18;;;4388:43;7367:10:18;4447:18:33;;;4440:43;4316:25;;-1:-1:-1;7321:11:18;:25;;;;;;4289:18:33;;7321:57:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7411:16:18;;:31;;-1:-1:-1;7411:16:18;-1:-1:-1;7432:9:18;7411:20;:31::i;:::-;7392:16;:50;7473:13;;7456:52;;7488:7;7497:10;7456:16;:52::i;:::-;-1:-1:-1;7539:1:18;7523:13;:17;7185:499;;;7587:13;;:26;;7605:7;7587:17;:26::i;:::-;7571:13;:42;7627:46;7644:7;7653;7662:10;7627:16;:46::i;:::-;7693:34;7719:7;7693:25;:34::i;:::-;7753:13;;:26;;7771:7;7753:17;:26::i;:::-;7737:13;:42;-1:-1:-1;;6841:945:18:o;13866:82::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;13927:5:18::1;:14:::0;;-1:-1:-1;;;;;;13927:14:18::1;-1:-1:-1::0;;;;;13927:14:18;;;::::1;::::0;;;::::1;::::0;;13866:82::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2920:117:18:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3001:29:18::1;;::::0;;;:19:::1;:29;::::0;;;;2994:36;;-1:-1:-1;;2994:36:18::1;::::0;;2920:117::o;4515:1511::-;4611:10;4591:31;;;;:19;:31;;;;;;;;:39;;:31;:39;4570:111;;;;-1:-1:-1;;;4570:111:18;;3962:2:33;4570:111:18;;;3944:21:33;4001:2;3981:18;;;3974:30;-1:-1:-1;;;4020:18:33;;;4013:55;4085:18;;4570:111:18;3760:349:33;4570:111:18;4924:12;;;;:20;;:12;:20;4920:1061;;;4975:16;;4964:7;:27;4960:866;;5011:17;5031:29;5043:16;;5031:7;:11;;:29;;;;:::i;:::-;5011:49;;5078:152;5122:10;5162:11;5196:16;;5078:5;-1:-1:-1;;;;;5078:22:18;;;:152;;;;;;:::i;:::-;5276:16;;5248:45;;-1:-1:-1;;;5248:45:18;;;;;1138:25:33;;;;5248:11:18;-1:-1:-1;;;;;5248:27:18;;;;1111:18:33;;5248:45:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5330:1:18;5311:16;:20;-1:-1:-1;;5349:12:18;:20;;-1:-1:-1;;5349:20:18;;;5387:60;-1:-1:-1;;;;;5387:5:18;:22;5410:10;5430:4;5437:9;5387:22;:60::i;:::-;5481:13;;:28;;5499:9;5481:17;:28::i;:::-;5465:13;:44;-1:-1:-1;4920:1061:18;;4960:866;5548:143;-1:-1:-1;;;;;5548:5:18;:22;5592:10;5632:11;5666:7;5548:22;:143::i;:::-;5709:36;;-1:-1:-1;;;5709:36:18;;;;;1138:25:33;;;5709:11:18;-1:-1:-1;;;;;5709:27:18;;;;1111:18:33;;5709:36:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5782:16:18;;:29;;-1:-1:-1;5782:16:18;-1:-1:-1;5803:7:18;5782:20;:29::i;:::-;5763:16;:48;4920:1061;;;5856:58;-1:-1:-1;;;;;5856:5:18;:22;5879:10;5899:4;5906:7;5856:22;:58::i;:::-;5944:13;;:26;;5962:7;5944:17;:26::i;:::-;5928:13;:42;4920:1061;5990:29;6011:7;5990:20;:29::i;12428:756::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;881:5:18::1;12630:158;928:3;12630:126;12742:13:::0;12630:126;12706:13;12630:126;:19;12671:12;12630:40:::1;:54::i;:::-;:75:::0;::::1;:90::i;:158::-;:169;12609:255;;;::::0;-1:-1:-1;;;12609:255:18;;4696:2:33;12609:255:18::1;::::0;::::1;4678:21:33::0;4735:2;4715:18;;;4708:30;4774:34;4754:18;;;4747:62;-1:-1:-1;;;4825:18:33;;;4818:37;4872:19;;12609:255:18::1;4494:403:33::0;12609:255:18::1;12874:18;:40:::0;;;12924:11:::1;:26:::0;;;12960:12:::1;:28:::0;;;12998:12:::1;:28:::0;;;13041:136:::1;::::0;;5133:25:33;;;5189:2;5174:18;;5167:34;;;5217:18;;;5210:34;;;5275:2;5260:18;;5253:34;;;13041:136:18::1;::::0;5120:3:33;5105:19;13041:136:18::1;;;;;;;12428:756:::0;;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5500:2:33;1998:73:0::1;::::0;::::1;5482:21:33::0;5539:2;5519:18;;;5512:30;5578:34;5558:18;;;5551:62;-1:-1:-1;;;5629:18:33;;;5622:36;5675:19;;1998:73:0::1;5298:402:33::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;3108:96:16:-:0;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:16:o;912:241:6:-;1077:68;;-1:-1:-1;;;;;6225:15:33;;;1077:68:6;;;6207:34:33;6277:15;;6257:18;;;6250:43;6309:18;;;6302:34;;;1050:96:6;;1070:5;;-1:-1:-1;;;1100:27:6;6142:18:33;;1077:68:6;;;;-1:-1:-1;;1077:68:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:6;-1:-1:-1;;;;;;1077:68:6;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;2741:96:16:-;2799:7;2825:5;2829:1;2825;:5;:::i;3451:96::-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;701:205:6:-;840:58;;-1:-1:-1;;;;;7067:32:33;;840:58:6;;;7049:51:33;7116:18;;;7109:34;;;813:86:6;;833:5;;-1:-1:-1;;;863:23:6;7022:18:33;;840:58:6;6875:274:33;813:86:6;701:205;;;:::o;8028:301:18:-;8157:39;-1:-1:-1;;;;;8157:5:18;:18;8176:10;8188:7;8157:18;:39::i;:::-;8277:45;;-1:-1:-1;;;8277:45:18;;;;;7328:25:33;;;-1:-1:-1;;;;;7389:32:33;;;7369:18;;;7362:60;8256:10:18;;8277:27;;;;;;7301:18:33;;8277:45:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8147:182;8028:301;;;:::o;9221:583::-;9296:23;;:27;9292:506;;9365:23;;:36;;9393:7;9365:27;:36::i;:::-;9339:23;:62;3158:1134;:::o;9292:506::-;9446:15;;9436:7;:25;9432:356;;;9481:18;9502:28;9514:15;;9502:7;:11;;:28;;;;:::i;:::-;9566:1;9548:15;:19;9611:23;;9481:49;;-1:-1:-1;9611:77:18;;9481:49;9611:27;:77::i;:::-;9585:23;:103;-1:-1:-1;3158:1134:18;:::o;9432:356::-;9745:15;;:28;;9765:7;9745:19;:28::i;:::-;9727:15;:46;9221:583;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;8497:548:18:-;8567:23;;:27;8563:476;;8624:23;;8614:7;:33;8610:342;;;8667:18;8688:36;8700:23;;8688:7;:11;;:36;;;;:::i;:::-;8768:1;8742:23;:27;8805:15;;8667:57;;-1:-1:-1;8805:31:18;;8667:57;8805:19;:31::i;:::-;8787:15;:49;-1:-1:-1;3158:1134:18;:::o;8610:342::-;8901:23;;:36;;8929:7;8901:27;:36::i;8563:476::-;9000:15;;:28;;9020:7;9000:19;:28::i;3207:706:6:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:6;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:6;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:6;;7917:2:33;3811:85:6;;;7899:21:33;7956:2;7936:18;;;7929:30;7995:34;7975:18;;;7968:62;-1:-1:-1;;;8046:18:33;;;8039:40;8096:19;;3811:85:6;7715:406:33;3861:223:11;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:11:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:11;;8328:2:33;5137:81:11;;;8310:21:33;8367:2;8347:18;;;8340:30;8406:34;8386:18;;;8379:62;-1:-1:-1;;;8457:18:33;;;8450:36;8503:19;;5137:81:11;8126:402:33;5137:81:11;-1:-1:-1;;;;;1465:19:11;;;5228:60;;;;-1:-1:-1;;;5228:60:11;;8735:2:33;5228:60:11;;;8717:21:33;8774:2;8754:18;;;8747:30;8813:31;8793:18;;;8786:59;8862:18;;5228:60:11;8533:353:33;5228:60:11;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:11;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:11:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:11;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:11;;;;;;;;:::i;246:173:33:-;314:20;;-1:-1:-1;;;;;363:31:33;;353:42;;343:70;;409:1;406;399:12;343:70;246:173;;;:::o;424:186::-;483:6;536:2;524:9;515:7;511:23;507:32;504:52;;;552:1;549;542:12;504:52;575:29;594:9;575:29;:::i;615:180::-;674:6;727:2;715:9;706:7;702:23;698:32;695:52;;;743:1;740;733:12;695:52;-1:-1:-1;766:23:33;;615:180;-1:-1:-1;615:180:33:o;1174:254::-;1242:6;1250;1303:2;1291:9;1282:7;1278:23;1274:32;1271:52;;;1319:1;1316;1309:12;1271:52;1355:9;1342:23;1332:33;;1384:38;1418:2;1407:9;1403:18;1384:38;:::i;:::-;1374:48;;1174:254;;;;;:::o;1872:385::-;1958:6;1966;1974;1982;2035:3;2023:9;2014:7;2010:23;2006:33;2003:53;;;2052:1;2049;2042:12;2003:53;-1:-1:-1;;2075:23:33;;;2145:2;2130:18;;2117:32;;-1:-1:-1;2196:2:33;2181:18;;2168:32;;2247:2;2232:18;2219:32;;-1:-1:-1;1872:385:33;-1:-1:-1;1872:385:33:o;2262:356::-;2464:2;2446:21;;;2483:18;;;2476:30;2542:34;2537:2;2522:18;;2515:62;2609:2;2594:18;;2262:356::o;5705:127::-;5766:10;5761:3;5757:20;5754:1;5747:31;5797:4;5794:1;5787:15;5821:4;5818:1;5811:15;5837:125;5877:4;5905:1;5902;5899:8;5896:34;;;5910:18;;:::i;:::-;-1:-1:-1;5947:9:33;;5837:125::o;6347:128::-;6387:3;6418:1;6414:6;6411:1;6408:13;6405:39;;;6424:18;;:::i;:::-;-1:-1:-1;6460:9:33;;6347:128::o;6480:168::-;6520:7;6586:1;6582;6578:6;6574:14;6571:1;6568:21;6563:1;6556:9;6549:17;6545:45;6542:71;;;6593:18;;:::i;:::-;-1:-1:-1;6633:9:33;;6480:168::o;6653:217::-;6693:1;6719;6709:132;;6763:10;6758:3;6754:20;6751:1;6744:31;6798:4;6795:1;6788:15;6826:4;6823:1;6816:15;6709:132;-1:-1:-1;6855:9:33;;6653:217::o;7433:277::-;7500:6;7553:2;7541:9;7532:7;7528:23;7524:32;7521:52;;;7569:1;7566;7559:12;7521:52;7601:9;7595:16;7654:5;7647:13;7640:21;7633:5;7630:32;7620:60;;7676:1;7673;7666:12;8891:258;8963:1;8973:113;8987:6;8984:1;8981:13;8973:113;;;9063:11;;;9057:18;9044:11;;;9037:39;9009:2;9002:10;8973:113;;;9104:6;9101:1;9098:13;9095:48;;;-1:-1:-1;;9139:1:33;9121:16;;9114:27;8891:258::o;9154:274::-;9283:3;9321:6;9315:13;9337:53;9383:6;9378:3;9371:4;9363:6;9359:17;9337:53;:::i;:::-;9406:16;;;;;9154:274;-1:-1:-1;;9154:274:33:o;9433:383::-;9582:2;9571:9;9564:21;9545:4;9614:6;9608:13;9657:6;9652:2;9641:9;9637:18;9630:34;9673:66;9732:6;9727:2;9716:9;9712:18;9707:2;9699:6;9695:15;9673:66;:::i;:::-;9800:2;9779:15;-1:-1:-1;;9775:29:33;9760:45;;;;9807:2;9756:54;;9433:383;-1:-1:-1;;9433:383:33:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addToBankroll(uint256)": {
        "details": "adds funds to the bankroll",
        "notice": "Add funds to the bankroll",
        "params": {
          "_amount": "the amount to add"
        }
      },
      "addUserLoss(uint256)": {
        "details": "adds funds to the bankroll if bankroll is in positive, otherwise its transfered to the staking pool to recover frozen funds",
        "notice": "Add users loss to the bankroll",
        "params": {
          "_amount": "the amount to add"
        }
      },
      "authorizeAddress(address)": {
        "details": "updates the authorizedAddresses mapping to true for given address",
        "notice": "authorize address to register wins and losses",
        "params": {
          "_address": "the address to be authorized"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "payOutUserWinning(uint256,address)": {
        "details": "deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative",
        "notice": "Deduct users win from the bankroll",
        "params": {
          "_amount": "the amount to deduct"
        }
      },
      "removeAuthorization(address)": {
        "details": "updates the authorizedAddresses mapping by deleting entry for given address",
        "notice": "remove authorization of an address from register wins and losses",
        "params": {
          "_address": "the address to be removed"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAdmin(address)": {
        "details": "changes the address which is used by the adminOnly modifier",
        "notice": "store new address in admin address",
        "params": {
          "_admin": "the new address to store"
        }
      },
      "setLotteryAddress(address)": {
        "details": "changes the address which recieves lottery fees",
        "notice": "store new address in lottery address",
        "params": {
          "_lottery": "the new address to store"
        }
      },
      "setProfitThreshold(uint256)": {
        "details": "stores the _threshold address in the state variable `profitThreshold`",
        "notice": "Store `_threshold`.",
        "params": {
          "_threshold": "the new value to store"
        }
      },
      "setReserveAddress(address)": {
        "details": "changes the address which recieves reserve fees",
        "notice": "store new address in reserve address",
        "params": {
          "_reserve": "the new address to store"
        }
      },
      "setShares(uint256,uint256,uint256,uint256)": {
        "details": "stores the _houseBankrollShare address in the state variable `houseBankrollShare`",
        "notice": "updates all share percentage values",
        "params": {
          "_houseBankrollShare": "the new value to store",
          "_lotteryShare": "the new value to store",
          "_profitShare": "the new value to store",
          "_reserveShare": "the new value to store"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferProfit()": {
        "details": "transfer profits since last compound to the staking pool while taking out necessary fees.",
        "notice": "transfer profits to staking pool to be ditributed to stakers."
      }
    },
    "version": 1
  },
  "offset": [
    449,
    13950
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86001519 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC2E50B16 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF03B6FFC GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF03B6FFC EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xF19E207E EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xF846A885 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2E50B16 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xCD3293DE EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xE3FD80DD EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xE7CB3D67 EQ PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB359A9F9 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xB359A9F9 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xB4055D15 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xB72481F8 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xBA13A572 EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86001519 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8E4A6142 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x94F3F81D EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E1F55E4 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x59C53FD4 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x59C53FD4 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x61433D88 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x7D903ECC EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E1F55E4 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x45C9C1D1 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x4A5DB3B5 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x4E584E11 EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x28821182 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x28821182 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x2A332B2A EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x2FEDA8D4 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x3410FE6E EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC56AE3B EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x14673D31 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x151FAC7B EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x203C27A6 EQ PUSH2 0x277 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x284 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x262 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246 JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x262 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x262 PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x1916 JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x262 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x232 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x232 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x232 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x232 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1942 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373207265737472696374656420746F2061646D696E206F6E6C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x761 JUMPI PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x67E JUMPI PUSH1 0x0 PUSH2 0x544 PUSH1 0x3 SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x5A8 CALLER PUSH32 0x0 PUSH1 0x3 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x38E7EAA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE39FAAA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x3 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x66A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x677 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x6D3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER PUSH32 0x0 DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38E7EAA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE39FAAA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x749 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x75B SWAP3 POP SWAP1 POP DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH2 0x796 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x7A3 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373207265737472696374656420746F2061646D696E206F6E6C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH10 0x152D02C7E14AF6800000 DUP2 LT PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782070726F666974207468726573686F6C642063616E7420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xC2E8CAE440E8D0C2DC40626060D64086E4EAE6D PUSH1 0x63 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265207374616B696E6720706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xB SLOAD LT PUSH2 0xBB7 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 PUSH2 0x980 PUSH2 0x2710 PUSH2 0x97A PUSH1 0x7 SLOAD PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP1 POP PUSH2 0x98C DUP3 DUP3 PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 PUSH2 0x9B7 PUSH2 0x2710 PUSH2 0x97A PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH2 0x9F4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1485 JUMP JUMPDEST POP JUMPDEST PUSH1 0x9 SLOAD ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 PUSH2 0xA1D PUSH2 0x2710 PUSH2 0x97A PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0xA5A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1485 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xA7A PUSH2 0x2710 PUSH2 0x97A PUSH1 0x64 PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x8 SLOAD GT ISZERO PUSH2 0xB36 JUMPI PUSH1 0x0 PUSH2 0xB21 PUSH2 0x2710 PUSH2 0x97A PUSH1 0x8 SLOAD PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0xB31 SWAP1 DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0xB SSTORE POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 SLOAD PUSH2 0xB45 SWAP2 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xB9C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP5 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0xBA9 SWAP1 DUP4 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xE SSTORE POP PUSH1 0x0 PUSH1 0xB SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265207374616B696E6720706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0xCE9 JUMPI PUSH1 0x0 PUSH2 0xCA3 PUSH1 0x3 SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 POP PUSH2 0x66A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x75B SWAP1 DUP3 PUSH2 0x13DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x10D85B1B195C881B5D5CDD08189948185D5D1A1BDC9A5E9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0xE3B JUMPI PUSH1 0x0 PUSH2 0xD77 PUSH1 0x1 SLOAD DUP5 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x23D13AFF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE CALLER PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x8F44EBFC SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0xE1F SWAP3 POP SWAP1 POP DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 SLOAD PUSH2 0xE30 SWAP1 DUP4 CALLER PUSH2 0x14BA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SSTORE PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE48 SWAP1 DUP4 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xE56 DUP3 DUP3 CALLER PUSH2 0x14BA JUMP JUMPDEST PUSH2 0xE5F DUP3 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xE6C SWAP1 DUP4 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0xEF3 PUSH1 0x0 PUSH2 0x15C4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x10D85B1B195C881B5D5CDD08189948185D5D1A1BDC9A5E9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x11F1 JUMPI PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x110C JUMPI PUSH1 0x0 PUSH2 0xFD0 PUSH1 0x3 SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1034 CALLER PUSH32 0x0 PUSH1 0x3 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x38E7EAA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE39FAAA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x3 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x10F6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1103 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 SSTORE POP PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x1161 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER PUSH32 0x0 DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38E7EAA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE39FAAA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x11E9 SWAP3 POP SWAP1 POP DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x1226 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1233 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x126A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1286 PUSH1 0x64 PUSH2 0x1280 DUP5 DUP2 DUP8 DUP2 DUP12 DUP12 PUSH2 0x1461 JUMP JUMPDEST SWAP1 PUSH2 0x1461 JUMP JUMPDEST EQ PUSH2 0x12E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F6620616C6C207368617265732073686F756C642061646420757020 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x746F2031303025 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x8 DUP5 SWAP1 SSTORE PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x1AB182163A0683CD3182C000705483EF0CCDC375A845AB7B68678F89D90DE4D7 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x136F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 DUP5 PUSH2 0x19BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x145B SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1673 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 DUP5 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 DUP5 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 DUP5 PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x14B5 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1424 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14EE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP6 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF62CF8D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0xF62CF8D0 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x153B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x154F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD ISZERO PUSH2 0x1574 JUMPI PUSH1 0xC SLOAD PUSH2 0x156E SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 GT ISZERO PUSH2 0x15B1 JUMPI PUSH1 0x0 PUSH2 0x1595 PUSH1 0xB SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH2 0x15AA SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xC SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x15BE SWAP1 DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0xB SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD ISZERO PUSH2 0x1666 JUMPI PUSH1 0xC SLOAD DUP2 GT ISZERO PUSH2 0x1659 JUMPI PUSH1 0x0 PUSH2 0x163D PUSH1 0xC SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x1652 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xB SSTORE POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x156E SWAP1 DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x15BE SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1745 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x14B5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x16E6 SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x14B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1754 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x175C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1830 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1882 DUP3 DUP3 DUP7 PUSH2 0x188D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x189C JUMPI POP DUP2 PUSH2 0x13E9 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x18AC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E9 DUP3 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1939 PUSH1 0x20 DUP5 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19D1 JUMPI PUSH2 0x19D1 PUSH2 0x19A9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19E9 JUMPI PUSH2 0x19E9 PUSH2 0x19A9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x1A08 PUSH2 0x19A9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A6C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A54 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x145B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A8F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A51 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AB8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x4EBBA5406932198CF1E9258319FDABFE73F6BE96F4034AD125377B56FD6F PUSH11 0x64736F6C634300080C0033 ",
  "pcMap": {
    "0": {
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x206"
    },
    "25": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x86001519"
    },
    "38": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "GT",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11A"
    },
    "42": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC2E50B16"
    },
    "49": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "GT",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF03B6FFC"
    },
    "60": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "GT",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF03B6FFC"
    },
    "71": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "72": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x40B"
    },
    "75": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "76": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF19E207E"
    },
    "82": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "83": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41E"
    },
    "86": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "87": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "94": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x441"
    },
    "97": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "98": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF846A885"
    },
    "104": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "105": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x454"
    },
    "108": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "109": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF974821A"
    },
    "115": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "116": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45C"
    },
    "119": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "120": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "123": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "124": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "125": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "126": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC2E50B16"
    },
    "131": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "132": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D3"
    },
    "135": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "136": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "137": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCD3293DE"
    },
    "142": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E6"
    },
    "146": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "147": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "148": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE3FD80DD"
    },
    "153": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "154": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F9"
    },
    "157": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "158": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "159": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE7CB3D67"
    },
    "164": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "165": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x402"
    },
    "168": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "169": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "172": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "173": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "174": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "175": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB359A9F9"
    },
    "180": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "GT",
      "path": "18"
    },
    "181": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "185": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "186": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB359A9F9"
    },
    "191": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "192": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x387"
    },
    "195": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "196": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "197": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB4055D15"
    },
    "202": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "203": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AE"
    },
    "206": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "207": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "208": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB72481F8"
    },
    "213": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "214": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B7"
    },
    "217": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "218": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "219": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBA13A572"
    },
    "224": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "225": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C0"
    },
    "228": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "229": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "232": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "233": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "234": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "235": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x86001519"
    },
    "240": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "241": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x351"
    },
    "244": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "245": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "246": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8DA5CB5B"
    },
    "251": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "252": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x35A"
    },
    "255": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "256": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "257": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8E4A6142"
    },
    "262": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "263": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x36B"
    },
    "266": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "267": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "268": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x94F3F81D"
    },
    "273": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "274": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x374"
    },
    "277": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "278": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "280": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "281": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "282": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "283": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "284": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3E1F55E4"
    },
    "289": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "GT",
      "path": "18"
    },
    "290": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19D"
    },
    "293": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "294": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "295": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x59C53FD4"
    },
    "300": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "GT",
      "path": "18"
    },
    "301": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16C"
    },
    "304": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "305": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "306": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x59C53FD4"
    },
    "311": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "312": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x307"
    },
    "315": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "316": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "317": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x61433D88"
    },
    "322": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "323": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x31A"
    },
    "326": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "327": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "328": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x704B6C02"
    },
    "333": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "334": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x32D"
    },
    "337": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "338": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "339": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x715018A6"
    },
    "344": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "345": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x340"
    },
    "348": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "349": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "350": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7D903ECC"
    },
    "355": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "356": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x348"
    },
    "359": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "360": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "362": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "363": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "364": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "365": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "366": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3E1F55E4"
    },
    "371": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "372": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2DA"
    },
    "375": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "376": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "377": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x45C9C1D1"
    },
    "382": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "383": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E3"
    },
    "386": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "387": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "388": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4A5DB3B5"
    },
    "393": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "394": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EB"
    },
    "397": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "398": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "399": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E584E11"
    },
    "404": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "405": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2FE"
    },
    "408": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "409": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "412": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "413": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "414": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "415": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x28821182"
    },
    "420": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "GT",
      "path": "18"
    },
    "421": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D9"
    },
    "424": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "425": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "426": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x28821182"
    },
    "431": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "432": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x294"
    },
    "435": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "436": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "437": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2A332B2A"
    },
    "442": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "443": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A7"
    },
    "446": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "447": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "448": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2FEDA8D4"
    },
    "453": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "454": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BA"
    },
    "457": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "458": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "459": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3410FE6E"
    },
    "464": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "465": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D1"
    },
    "468": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "469": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "471": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "472": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "473": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "474": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "475": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC56AE3B"
    },
    "480": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "481": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20B"
    },
    "484": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "485": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "486": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x14673D31"
    },
    "491": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "492": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24F"
    },
    "495": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "496": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "497": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x151FAC7B"
    },
    "502": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "503": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x264"
    },
    "506": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "507": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "508": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x203C27A6"
    },
    "513": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "EQ",
      "path": "18"
    },
    "514": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x277"
    },
    "517": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "518": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "519": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "DUP1",
      "path": "18"
    },
    "522": {
      "first_revert": true,
      "fn": null,
      "offset": [
        449,
        13950
      ],
      "op": "REVERT",
      "path": "18"
    },
    "523": {
      "offset": [
        739,
        783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "524": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x232"
    },
    "527": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "560": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "DUP2",
      "path": "18"
    },
    "561": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "JUMP",
      "path": "18"
    },
    "562": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "563": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "565": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "op": "SUB"
    },
    "574": {
      "op": "SWAP1"
    },
    "575": {
      "op": "SWAP2"
    },
    "576": {
      "op": "AND"
    },
    "577": {
      "op": "DUP2"
    },
    "578": {
      "op": "MSTORE"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "581": {
      "op": "ADD"
    },
    "582": {
      "offset": [
        739,
        783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "583": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "585": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "586": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "DUP1",
      "path": "18"
    },
    "587": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "588": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "SUB",
      "path": "18"
    },
    "589": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "590": {
      "fn": null,
      "offset": [
        739,
        783
      ],
      "op": "RETURN",
      "path": "18"
    },
    "591": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "592": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "595": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x25D"
    },
    "598": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "599": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "601": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18E2"
    },
    "604": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "jump": "i",
      "offset": [
        13344,
        13441
      ],
      "op": "JUMP",
      "path": "18"
    },
    "605": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "606": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x465"
    },
    "609": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "jump": "i",
      "offset": [
        13344,
        13441
      ],
      "op": "JUMP",
      "path": "18"
    },
    "610": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "611": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "STOP",
      "path": "18"
    },
    "612": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "613": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "616": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x272"
    },
    "619": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "620": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "622": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18FD"
    },
    "625": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMP",
      "path": "18"
    },
    "626": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "627": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4BA"
    },
    "630": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMP",
      "path": "18"
    },
    "631": {
      "offset": [
        597,
        621
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "632": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "634": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "635": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x284"
    },
    "638": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "639": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "641": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "AND",
      "path": "18"
    },
    "642": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "DUP2",
      "path": "18"
    },
    "643": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "JUMP",
      "path": "18"
    },
    "644": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "645": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "647": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        597,
        621
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "648": {
      "op": "SWAP1"
    },
    "649": {
      "op": "ISZERO"
    },
    "650": {
      "op": "ISZERO"
    },
    "651": {
      "op": "DUP2"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "offset": [
        597,
        621
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x246"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "661": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "664": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A2"
    },
    "667": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "668": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "670": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18FD"
    },
    "673": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "jump": "i",
      "offset": [
        11814,
        12070
      ],
      "op": "JUMP",
      "path": "18"
    },
    "674": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "675": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7AA"
    },
    "678": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "jump": "i",
      "offset": [
        11814,
        12070
      ],
      "op": "JUMP",
      "path": "18"
    },
    "679": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "680": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "683": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B5"
    },
    "686": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "687": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "689": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18E2"
    },
    "692": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "jump": "i",
      "offset": [
        13601,
        13698
      ],
      "op": "JUMP",
      "path": "18"
    },
    "693": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "694": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x87F"
    },
    "697": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "jump": "i",
      "offset": [
        13601,
        13698
      ],
      "op": "JUMP",
      "path": "18"
    },
    "698": {
      "offset": [
        1031,
        1064
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "699": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        1031,
        1064
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "702": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        1031,
        1064
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "704": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        1031,
        1064
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "705": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        1031,
        1064
      ],
      "op": "DUP2",
      "path": "18"
    },
    "706": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        1031,
        1064
      ],
      "op": "JUMP",
      "path": "18"
    },
    "707": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        1031,
        1064
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "708": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        1031,
        1064
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "710": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        1031,
        1064
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "711": {
      "op": "SWAP1"
    },
    "712": {
      "op": "DUP2"
    },
    "713": {
      "op": "MSTORE"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "716": {
      "op": "ADD"
    },
    "717": {
      "offset": [
        1031,
        1064
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x246"
    },
    "720": {
      "op": "JUMP"
    },
    "721": {
      "offset": [
        847,
        886
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "722": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        847,
        886
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "725": {
      "offset": [
        881,
        886
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2710"
    },
    "728": {
      "offset": [
        847,
        886
      ],
      "op": "DUP2",
      "path": "18"
    },
    "729": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        847,
        886
      ],
      "op": "JUMP",
      "path": "18"
    },
    "730": {
      "offset": [
        999,
        1025
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "731": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        999,
        1025
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "734": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        999,
        1025
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "736": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        999,
        1025
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "737": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        999,
        1025
      ],
      "op": "DUP2",
      "path": "18"
    },
    "738": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        999,
        1025
      ],
      "op": "JUMP",
      "path": "18"
    },
    "739": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        9983,
        11648
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "740": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        9983,
        11648
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "743": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        9983,
        11648
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8CB"
    },
    "746": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        9983,
        11648
      ],
      "op": "JUMP",
      "path": "18"
    },
    "747": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "748": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "751": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F9"
    },
    "754": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "755": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "757": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18E2"
    },
    "760": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "jump": "i",
      "offset": [
        2588,
        2702
      ],
      "op": "JUMP",
      "path": "18"
    },
    "761": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "762": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBBD"
    },
    "765": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "jump": "i",
      "offset": [
        2588,
        2702
      ],
      "op": "JUMP",
      "path": "18"
    },
    "766": {
      "offset": [
        1070,
        1097
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "767": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        1070,
        1097
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "770": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        1070,
        1097
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "772": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        1070,
        1097
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "773": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        1070,
        1097
      ],
      "op": "DUP2",
      "path": "18"
    },
    "774": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        1070,
        1097
      ],
      "op": "JUMP",
      "path": "18"
    },
    "775": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "776": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "779": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x315"
    },
    "782": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "783": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "785": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18FD"
    },
    "788": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "jump": "i",
      "offset": [
        6032,
        6601
      ],
      "op": "JUMP",
      "path": "18"
    },
    "789": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "790": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC0B"
    },
    "793": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "jump": "i",
      "offset": [
        6032,
        6601
      ],
      "op": "JUMP",
      "path": "18"
    },
    "794": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "795": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "798": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x328"
    },
    "801": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "802": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "804": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1916"
    },
    "807": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        6841,
        7786
      ],
      "op": "JUMP",
      "path": "18"
    },
    "808": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "809": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCF6"
    },
    "812": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        6841,
        7786
      ],
      "op": "JUMP",
      "path": "18"
    },
    "813": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "814": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "817": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33B"
    },
    "820": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "821": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "823": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18E2"
    },
    "826": {
      "fn": "BitcrushBankroll.setAdmin",
      "jump": "i",
      "offset": [
        13866,
        13948
      ],
      "op": "JUMP",
      "path": "18"
    },
    "827": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "828": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE73"
    },
    "831": {
      "fn": "BitcrushBankroll.setAdmin",
      "jump": "i",
      "offset": [
        13866,
        13948
      ],
      "op": "JUMP",
      "path": "18"
    },
    "832": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x262"
    },
    "836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEBF"
    },
    "839": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "840": {
      "offset": [
        1159,
        1189
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "841": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1159,
        1189
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "844": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1159,
        1189
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "846": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1159,
        1189
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "847": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1159,
        1189
      ],
      "op": "DUP2",
      "path": "18"
    },
    "848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1159,
        1189
      ],
      "op": "JUMP",
      "path": "18"
    },
    "849": {
      "offset": [
        1321,
        1347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "850": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1321,
        1347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "853": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1321,
        1347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "855": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1321,
        1347
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "856": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1321,
        1347
      ],
      "op": "DUP2",
      "path": "18"
    },
    "857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1321,
        1347
      ],
      "op": "JUMP",
      "path": "18"
    },
    "858": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "859": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "861": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "868": {
      "op": "SHL"
    },
    "869": {
      "op": "SUB"
    },
    "870": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "871": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x232"
    },
    "874": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "875": {
      "offset": [
        1195,
        1233
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "876": {
      "fn": "Ownable.owner",
      "offset": [
        1195,
        1233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "879": {
      "fn": "Ownable.owner",
      "offset": [
        1195,
        1233
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "881": {
      "fn": "Ownable.owner",
      "offset": [
        1195,
        1233
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "882": {
      "fn": "Ownable.owner",
      "offset": [
        1195,
        1233
      ],
      "op": "DUP2",
      "path": "18"
    },
    "883": {
      "fn": "Ownable.owner",
      "offset": [
        1195,
        1233
      ],
      "op": "JUMP",
      "path": "18"
    },
    "884": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "885": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "888": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x382"
    },
    "891": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "892": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "894": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18E2"
    },
    "897": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "jump": "i",
      "offset": [
        2920,
        3037
      ],
      "op": "JUMP",
      "path": "18"
    },
    "898": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "899": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEF5"
    },
    "902": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "jump": "i",
      "offset": [
        2920,
        3037
      ],
      "op": "JUMP",
      "path": "18"
    },
    "903": {
      "offset": [
        697,
        733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "904": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        697,
        733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x232"
    },
    "907": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        697,
        733
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "940": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        697,
        733
      ],
      "op": "DUP2",
      "path": "18"
    },
    "941": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        697,
        733
      ],
      "op": "JUMP",
      "path": "18"
    },
    "942": {
      "offset": [
        563,
        591
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "943": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        563,
        591
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "946": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        563,
        591
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "948": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        563,
        591
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "949": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        563,
        591
      ],
      "op": "DUP2",
      "path": "18"
    },
    "950": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        563,
        591
      ],
      "op": "JUMP",
      "path": "18"
    },
    "951": {
      "offset": [
        1287,
        1315
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "952": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        1287,
        1315
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "955": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        1287,
        1315
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "957": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        1287,
        1315
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "958": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        1287,
        1315
      ],
      "op": "DUP2",
      "path": "18"
    },
    "959": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        1287,
        1315
      ],
      "op": "JUMP",
      "path": "18"
    },
    "960": {
      "offset": [
        818,
        840
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "961": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        818,
        840
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "963": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        818,
        840
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "964": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        818,
        840
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x232"
    },
    "967": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        818,
        840
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "op": "SUB"
    },
    "976": {
      "offset": [
        818,
        840
      ],
      "op": "AND",
      "path": "18"
    },
    "977": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        818,
        840
      ],
      "op": "DUP2",
      "path": "18"
    },
    "978": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        818,
        840
      ],
      "op": "JUMP",
      "path": "18"
    },
    "979": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "980": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "983": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E1"
    },
    "986": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "987": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "989": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18FD"
    },
    "992": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        4515,
        6026
      ],
      "op": "JUMP",
      "path": "18"
    },
    "993": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "994": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF40"
    },
    "997": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        4515,
        6026
      ],
      "op": "JUMP",
      "path": "18"
    },
    "998": {
      "offset": [
        790,
        812
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "999": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        790,
        812
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1001": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        790,
        812
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1002": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        790,
        812
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x232"
    },
    "1005": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        790,
        812
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1012": {
      "op": "SHL"
    },
    "1013": {
      "op": "SUB"
    },
    "1014": {
      "offset": [
        790,
        812
      ],
      "op": "AND",
      "path": "18"
    },
    "1015": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        790,
        812
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1016": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        790,
        812
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1017": {
      "offset": [
        627,
        658
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1018": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        627,
        658
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "1021": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        627,
        658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1023": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        627,
        658
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1024": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        627,
        658
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1025": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        627,
        658
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1026": {
      "offset": [
        1103,
        1130
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1027": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        1103,
        1130
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "1030": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        1103,
        1130
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "1032": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        1103,
        1130
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1033": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        1103,
        1130
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1034": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        1103,
        1130
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1035": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1036": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "1039": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x419"
    },
    "1042": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1043": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1045": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1942"
    },
    "1048": {
      "fn": "BitcrushBankroll.setShares",
      "jump": "i",
      "offset": [
        12428,
        13184
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1049": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1050": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1240"
    },
    "1053": {
      "fn": "BitcrushBankroll.setShares",
      "jump": "i",
      "offset": [
        12428,
        13184
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1054": {
      "offset": [
        1578,
        1629
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1055": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x284"
    },
    "1058": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42C"
    },
    "1061": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1062": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1064": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18E2"
    },
    "1067": {
      "fn": "BitcrushBankroll.setShares",
      "jump": "i",
      "offset": [
        1578,
        1629
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1068": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1069": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "1071": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1073": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1074": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1076": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1077": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1078": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1079": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1081": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1082": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1083": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1084": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1086": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "AND",
      "path": "18"
    },
    "1087": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1088": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        1578,
        1629
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1090": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x262"
    },
    "1093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44F"
    },
    "1096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1099": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E2"
    },
    "1102": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1104": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1345"
    },
    "1107": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1108": {
      "offset": [
        892,
        931
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        892,
        931
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "1112": {
      "offset": [
        928,
        931
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "1114": {
      "offset": [
        892,
        931
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        892,
        931
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1116": {
      "offset": [
        937,
        967
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        967
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C3"
    },
    "1120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        967
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "1122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        967
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        967
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        967
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1125": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13344,
        13441
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1126": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1128": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1135": {
      "op": "SHL"
    },
    "1136": {
      "op": "SUB"
    },
    "1137": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1138": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 1
    },
    "1139": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1140": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x498"
    },
    "1143": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1144": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1146": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1147": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1153": {
      "op": "SHL"
    },
    "1154": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1155": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1156": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1158": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1159": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "1162": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1163": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "1166": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1167": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1168": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1171": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1172": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1173": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1174": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1176": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1177": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13423
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 2,
      "value": "0x4"
    },
    "1179": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1180": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1187": {
      "op": "SHL"
    },
    "1188": {
      "op": "SUB"
    },
    "1189": {
      "op": "NOT"
    },
    "1190": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "AND",
      "path": "18"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1197": {
      "op": "SHL"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1200": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1201": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1202": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "AND",
      "path": "18"
    },
    "1203": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1204": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1205": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1206": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "OR",
      "path": "18"
    },
    "1207": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1208": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "offset": [
        13416,
        13434
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1209": {
      "fn": "BitcrushBankroll.setReserveAddress",
      "jump": "o",
      "offset": [
        13344,
        13441
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1210": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1211": {
      "offset": [
        1464,
        1469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "1213": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        1464,
        1469
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "offset": [
        1464,
        1469
      ],
      "op": "AND",
      "path": "18"
    },
    "1223": {
      "offset": [
        1442,
        1452
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1224": {
      "offset": [
        1442,
        1470
      ],
      "op": "EQ",
      "path": "18"
    },
    "1225": {
      "offset": [
        1421,
        1527
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x514"
    },
    "1228": {
      "offset": [
        1421,
        1527
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1229": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        1421,
        1527
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1231": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        1421,
        1527
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "offset": [
        1421,
        1527
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1240": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        1421,
        1527
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1243": {
      "offset": [
        1421,
        1527
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1245": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        1421,
        1527
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1246": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        1421,
        1527
      ],
      "op": "ADD",
      "path": "18"
    },
    "1247": {
      "op": "MSTORE"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1252": {
      "op": "DUP3"
    },
    "1253": {
      "op": "ADD"
    },
    "1254": {
      "op": "MSTORE"
    },
    "1255": {
      "op": "PUSH32",
      "value": "0x416363657373207265737472696374656420746F2061646D696E206F6E6C7900"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1290": {
      "op": "DUP3"
    },
    "1291": {
      "op": "ADD"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1295": {
      "op": "ADD"
    },
    "1296": {
      "offset": [
        1421,
        1527
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "1299": {
      "op": "JUMP"
    },
    "1300": {
      "offset": [
        1421,
        1527
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1301": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3229,
        3241
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1303": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3229,
        3241
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1304": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3229,
        3241
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1306": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3229,
        3241
      ],
      "op": "AND",
      "path": "18"
    },
    "1307": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3229,
        3249
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1308": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3229,
        3249
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1309": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3229,
        3241
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1311": {
      "branch": 95,
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3229,
        3249
      ],
      "op": "EQ",
      "path": "18"
    },
    "1312": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3225,
        4286
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1313": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3225,
        4286
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x761"
    },
    "1316": {
      "branch": 95,
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3225,
        4286
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1317": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3280,
        3296
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1319": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3280,
        3296
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1320": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3269,
        3276
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1321": {
      "branch": 96,
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3269,
        3296
      ],
      "op": "LT",
      "path": "18"
    },
    "1322": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3265,
        4131
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x67E"
    },
    "1325": {
      "branch": 96,
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3265,
        4131
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1326": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3316,
        3333
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1328": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3365
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x544"
    },
    "1331": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3348,
        3364
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1333": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3348,
        3364
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1334": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3343
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1335": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "1338": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3347
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1339": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3365
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1340": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3365
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1341": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3365
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "1346": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3365
      ],
      "op": "AND",
      "path": "18"
    },
    "1347": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        3336,
        3365
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1348": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3336,
        3365
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1349": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3316,
        3365
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1350": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3316,
        3365
      ],
      "op": "POP",
      "path": "18"
    },
    "1351": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3535
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 3,
      "value": "0x5A8"
    },
    "1354": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3427,
        3437
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1355": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3467,
        3478
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1388": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3501,
        3517
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1390": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3501,
        3517
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1391": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3388
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "op": "SUB"
    },
    "1432": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3405
      ],
      "op": "AND",
      "path": "18"
    },
    "1433": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3405
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "1436": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3405
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1437": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3535
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1438": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3535
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1439": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3535
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1440": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3535
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1441": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3535
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "1446": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3535
      ],
      "op": "AND",
      "path": "18"
    },
    "1447": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        3383,
        3535
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1448": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3383,
        3535
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1449": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3581,
        3597
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 4,
      "value": "0x3"
    },
    "1451": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3581,
        3597
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1452": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1454": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1455": {
      "op": "PUSH4",
      "value": "0x38E7EAA9"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1464": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1465": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1467": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1468": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "ADD",
      "path": "18"
    },
    "1469": {
      "op": "SWAP2"
    },
    "1470": {
      "op": "SWAP1"
    },
    "1471": {
      "op": "SWAP2"
    },
    "1472": {
      "op": "MSTORE"
    },
    "1473": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3564
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "SUB"
    },
    "1514": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3580
      ],
      "op": "AND",
      "path": "18"
    },
    "1515": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3580
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1516": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3580
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE39FAAA4"
    },
    "1521": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3580
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1527": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1529": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1530": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1531": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1532": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "SUB",
      "path": "18"
    },
    "1533": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1534": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1536": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1537": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1538": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "1539": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1540": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1541": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1542": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x60E"
    },
    "1545": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1546": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1548": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1549": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1550": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1551": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "POP",
      "path": "18"
    },
    "1552": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "GAS",
      "path": "18"
    },
    "1553": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "CALL",
      "path": "18"
    },
    "1554": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1555": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1556": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1557": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x622"
    },
    "1560": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1561": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1562": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1564": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1565": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "1566": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1567": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1569": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1570": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3553,
        3598
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "op": "POP"
    },
    "1573": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3635,
        3636
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 5,
      "value": "0x0"
    },
    "1575": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3616,
        3632
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1577": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3616,
        3636
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "op": "POP"
    },
    "1580": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3654,
        3666
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 6,
      "value": "0x2"
    },
    "1582": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3654,
        3674
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1583": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3654,
        3674
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1586": {
      "op": "NOT"
    },
    "1587": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3654,
        3674
      ],
      "op": "AND",
      "path": "18"
    },
    "1588": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3654,
        3674
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1589": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3654,
        3674
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1590": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3692,
        3752
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 7,
      "value": "0x66A"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "op": "SUB"
    },
    "1601": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3692,
        3697
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1634": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3692,
        3714
      ],
      "op": "AND",
      "path": "18"
    },
    "1635": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3715,
        3725
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1636": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3735,
        3739
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "1637": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3742,
        3751
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1638": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3692,
        3714
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "1641": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        3692,
        3752
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1642": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3692,
        3752
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1643": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3786,
        3799
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 8,
      "value": "0x1"
    },
    "1645": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3786,
        3799
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1646": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3786,
        3814
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x677"
    },
    "1649": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3786,
        3814
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1650": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3804,
        3813
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1651": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3786,
        3803
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "1654": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        3786,
        3814
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1655": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3786,
        3814
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1656": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3770,
        3783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1658": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3770,
        3814
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1659": {
      "op": "POP"
    },
    "1660": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "POP",
      "path": "18"
    },
    "1661": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "o",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1662": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3265,
        4131
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1663": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3853,
        3996
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 9,
      "value": "0x6D3"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1672": {
      "op": "SHL"
    },
    "1673": {
      "op": "SUB"
    },
    "1674": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3853,
        3858
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1707": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3853,
        3875
      ],
      "op": "AND",
      "path": "18"
    },
    "1708": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3897,
        3907
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1709": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3937,
        3948
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1742": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3971,
        3978
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1743": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3853,
        3875
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "1746": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        3853,
        3996
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1747": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3853,
        3996
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1748": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 10,
      "value": "0x40"
    },
    "1750": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1751": {
      "op": "PUSH4",
      "value": "0x38E7EAA9"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1760": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1761": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1763": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1764": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "ADD",
      "path": "18"
    },
    "1765": {
      "op": "DUP3"
    },
    "1766": {
      "op": "SWAP1"
    },
    "1767": {
      "op": "MSTORE"
    },
    "1768": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4025
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4041
      ],
      "op": "AND",
      "path": "18"
    },
    "1810": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4041
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1811": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4041
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE39FAAA4"
    },
    "1816": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4041
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1819": {
      "op": "ADD"
    },
    "1820": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1822": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1824": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1825": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1826": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1827": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "SUB",
      "path": "18"
    },
    "1828": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1829": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1831": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1832": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1833": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "1834": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1835": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1836": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1837": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x735"
    },
    "1840": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1841": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1843": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1844": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1845": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1846": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "POP",
      "path": "18"
    },
    "1847": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "GAS",
      "path": "18"
    },
    "1848": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "CALL",
      "path": "18"
    },
    "1849": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1850": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1851": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1852": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x749"
    },
    "1855": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1856": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1857": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1859": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1860": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "1861": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1862": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1864": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1865": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4014,
        4050
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1866": {
      "op": "POP"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4087,
        4103
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 11,
      "value": "0x3"
    },
    "1870": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4087,
        4103
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1871": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4087,
        4116
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x75B"
    },
    "1874": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4087,
        4116
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4087,
        4103
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4108,
        4115
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1879": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4087,
        4107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "1882": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        4087,
        4116
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1883": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4087,
        4116
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1884": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4068,
        4084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1886": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4068,
        4116
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1887": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "POP",
      "path": "18"
    },
    "1888": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "o",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1889": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3225,
        4286
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1890": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4161,
        4219
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 12,
      "value": "0x796"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "SUB"
    },
    "1901": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4161,
        4166
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1934": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4161,
        4183
      ],
      "op": "AND",
      "path": "18"
    },
    "1935": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4184,
        4194
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1936": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4204,
        4208
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "1937": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4211,
        4218
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1938": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4161,
        4183
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "1941": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        4161,
        4219
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1942": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4161,
        4219
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1943": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4249,
        4262
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 13,
      "value": "0x1"
    },
    "1945": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4249,
        4262
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1946": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4249,
        4275
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7A3"
    },
    "1949": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4249,
        4275
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1950": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4267,
        4274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1951": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4249,
        4266
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "1954": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "i",
      "offset": [
        4249,
        4275
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1955": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4249,
        4275
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1956": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4233,
        4246
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1958": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        4233,
        4275
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1959": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3225,
        4286
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1960": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "POP",
      "path": "18"
    },
    "1961": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "o",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1962": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11814,
        12070
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1963": {
      "offset": [
        1464,
        1469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "1965": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        1464,
        1469
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1972": {
      "op": "SHL"
    },
    "1973": {
      "op": "SUB"
    },
    "1974": {
      "offset": [
        1464,
        1469
      ],
      "op": "AND",
      "path": "18"
    },
    "1975": {
      "offset": [
        1442,
        1452
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1976": {
      "offset": [
        1442,
        1470
      ],
      "op": "EQ",
      "path": "18"
    },
    "1977": {
      "offset": [
        1421,
        1527
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x804"
    },
    "1980": {
      "offset": [
        1421,
        1527
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1981": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        1421,
        1527
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1983": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        1421,
        1527
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1990": {
      "op": "SHL"
    },
    "1991": {
      "offset": [
        1421,
        1527
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1992": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        1421,
        1527
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1995": {
      "offset": [
        1421,
        1527
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1997": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        1421,
        1527
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1998": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        1421,
        1527
      ],
      "op": "ADD",
      "path": "18"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2004": {
      "op": "DUP3"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "op": "MSTORE"
    },
    "2007": {
      "op": "PUSH32",
      "value": "0x416363657373207265737472696374656420746F2061646D696E206F6E6C7900"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2042": {
      "op": "DUP3"
    },
    "2043": {
      "op": "ADD"
    },
    "2044": {
      "op": "MSTORE"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2047": {
      "op": "ADD"
    },
    "2048": {
      "offset": [
        1421,
        1527
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "2051": {
      "op": "JUMP"
    },
    "2052": {
      "offset": [
        1421,
        1527
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2053": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11923,
        11947
      ],
      "op": "PUSH10",
      "path": "18",
      "statement": 14,
      "value": "0x152D02C7E14AF6800000"
    },
    "2064": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11910,
        11920
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2065": {
      "branch": 97,
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11910,
        11947
      ],
      "op": "LT",
      "path": "18"
    },
    "2066": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x87A"
    },
    "2069": {
      "branch": 97,
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2070": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2072": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2079": {
      "op": "SHL"
    },
    "2080": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2081": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2084": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2086": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2087": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "ADD",
      "path": "18"
    },
    "2088": {
      "op": "MSTORE"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2093": {
      "op": "DUP3"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH32",
      "value": "0x4D61782070726F666974207468726573686F6C642063616E7420626520677265"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2131": {
      "op": "DUP3"
    },
    "2132": {
      "op": "ADD"
    },
    "2133": {
      "op": "MSTORE"
    },
    "2134": {
      "op": "PUSH20",
      "value": "0xC2E8CAE440E8D0C2DC40626060D64086E4EAE6D"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2160": {
      "op": "DUP3"
    },
    "2161": {
      "op": "ADD"
    },
    "2162": {
      "op": "MSTORE"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2165": {
      "op": "ADD"
    },
    "2166": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "2169": {
      "op": "JUMP"
    },
    "2170": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        11889,
        12025
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2171": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        12035,
        12050
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 15,
      "value": "0x6"
    },
    "2173": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "offset": [
        12035,
        12063
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2174": {
      "fn": "BitcrushBankroll.setProfitThreshold",
      "jump": "o",
      "offset": [
        11814,
        12070
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2175": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13601,
        13698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2176": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2178": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2185": {
      "op": "SHL"
    },
    "2186": {
      "op": "SUB"
    },
    "2187": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2188": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2189": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2190": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A9"
    },
    "2193": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2194": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2196": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2205": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2206": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2208": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2209": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "2212": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2213": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "2216": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2217": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2218": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13680
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 16,
      "value": "0x5"
    },
    "2220": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2221": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "op": "SUB"
    },
    "2230": {
      "op": "NOT"
    },
    "2231": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "AND",
      "path": "18"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2238": {
      "op": "SHL"
    },
    "2239": {
      "op": "SUB"
    },
    "2240": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2241": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2242": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2243": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "AND",
      "path": "18"
    },
    "2244": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2245": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2246": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2247": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "OR",
      "path": "18"
    },
    "2248": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2249": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "offset": [
        13673,
        13691
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2250": {
      "fn": "BitcrushBankroll.setLotteryAddress",
      "jump": "o",
      "offset": [
        13601,
        13698
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2251": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        9983,
        11648
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2252": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10025,
        10032
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2254": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10065,
        10075
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 17
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2261": {
      "op": "SHL"
    },
    "2262": {
      "op": "SUB"
    },
    "2263": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10087,
        10098
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2296": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10065,
        10099
      ],
      "op": "AND",
      "path": "18"
    },
    "2297": {
      "branch": 98,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10065,
        10099
      ],
      "op": "EQ",
      "path": "18"
    },
    "2298": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x945"
    },
    "2301": {
      "branch": 98,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2302": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2304": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2311": {
      "op": "SHL"
    },
    "2312": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2313": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2316": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2318": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2319": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "ADD",
      "path": "18"
    },
    "2320": {
      "op": "MSTORE"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2325": {
      "op": "DUP3"
    },
    "2326": {
      "op": "ADD"
    },
    "2327": {
      "op": "MSTORE"
    },
    "2328": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D757374206265207374616B696E6720706F6F6C0000000000"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2363": {
      "op": "DUP3"
    },
    "2364": {
      "op": "ADD"
    },
    "2365": {
      "op": "MSTORE"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2368": {
      "op": "ADD"
    },
    "2369": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "2372": {
      "op": "JUMP"
    },
    "2373": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10044,
        10152
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2374": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10185,
        10200
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "2376": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10185,
        10200
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2377": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10166,
        10181
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "2379": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10166,
        10181
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2380": {
      "branch": 99,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10166,
        10200
      ],
      "op": "LT",
      "path": "18"
    },
    "2381": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10162,
        11642
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBB7"
    },
    "2384": {
      "branch": 99,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10162,
        11642
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2385": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10272,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "2387": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10272,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2388": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10236,
        10250
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2390": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10236,
        10250
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2391": {
      "branch": 100,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10272,
        10287
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2392": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10268,
        10501
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x990"
    },
    "2395": {
      "branch": 100,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10268,
        10501
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2396": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10307,
        10336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2398": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10426
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x980"
    },
    "2401": {
      "offset": [
        881,
        886
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2710"
    },
    "2404": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10392
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97A"
    },
    "2407": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10380,
        10391
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "2409": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10380,
        10391
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2410": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10354
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "2412": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10354
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2413": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10379
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x146D"
    },
    "2416": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10379
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2417": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10392
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2418": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10392
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2419": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10392
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "2424": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10392
      ],
      "op": "AND",
      "path": "18"
    },
    "2425": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        10339,
        10392
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2426": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10392
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2427": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10417
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2428": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10417
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1479"
    },
    "2431": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        10339,
        10426
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2432": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10339,
        10426
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2433": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10307,
        10426
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2434": {
      "op": "POP"
    },
    "2435": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10453,
        10486
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 18,
      "value": "0x98C"
    },
    "2438": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10453,
        10459
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2439": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10307,
        10426
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2440": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10453,
        10463
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "2443": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        10453,
        10486
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2444": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10453,
        10486
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2445": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10444,
        10486
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2446": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10444,
        10486
      ],
      "op": "POP",
      "path": "18"
    },
    "2447": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10289,
        10501
      ],
      "op": "POP",
      "path": "18"
    },
    "2448": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10268,
        10501
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2449": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10518,
        10530
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2451": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10518,
        10530
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2452": {
      "branch": 101,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10518,
        10534
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2453": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10514,
        10735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9F6"
    },
    "2456": {
      "branch": 101,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10514,
        10735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2457": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10554,
        10574
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2459": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10661
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9B7"
    },
    "2462": {
      "offset": [
        881,
        886
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2710"
    },
    "2465": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10610
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97A"
    },
    "2468": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10597,
        10609
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2470": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10597,
        10609
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2471": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "2473": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10592
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2474": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10596
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x146D"
    },
    "2477": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10596
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2478": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10610
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2479": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10610
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2480": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10610
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "2485": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10610
      ],
      "op": "AND",
      "path": "18"
    },
    "2486": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        10577,
        10610
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2487": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10577,
        10661
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2488": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10698,
        10705
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 19,
      "value": "0x4"
    },
    "2490": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10698,
        10705
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2491": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10554,
        10661
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2492": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10554,
        10661
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10679,
        10720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9F4"
    },
    "2497": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10679,
        10720
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2504": {
      "op": "SHL"
    },
    "2505": {
      "op": "SUB"
    },
    "2506": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10679,
        10684
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2539": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10679,
        10697
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2540": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10679,
        10697
      ],
      "op": "AND",
      "path": "18"
    },
    "2541": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10679,
        10697
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2542": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10698,
        10705
      ],
      "op": "AND",
      "path": "18"
    },
    "2543": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10554,
        10661
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2544": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10679,
        10697
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1485"
    },
    "2547": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        10679,
        10720
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2548": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10679,
        10720
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2549": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10536,
        10735
      ],
      "op": "POP",
      "path": "18"
    },
    "2550": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10514,
        10735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2551": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10752,
        10764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "2553": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10752,
        10764
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2554": {
      "branch": 102,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10752,
        10768
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2555": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10748,
        10969
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA5C"
    },
    "2558": {
      "branch": 102,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10748,
        10969
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2559": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10788,
        10808
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2561": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10895
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA1D"
    },
    "2564": {
      "offset": [
        881,
        886
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2710"
    },
    "2567": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10844
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97A"
    },
    "2570": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10831,
        10843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "2572": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10831,
        10843
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2573": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10826
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "2575": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10826
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2576": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10830
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x146D"
    },
    "2579": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10830
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2580": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10844
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2581": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10844
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2582": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10844
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "2587": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10844
      ],
      "op": "AND",
      "path": "18"
    },
    "2588": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        10811,
        10844
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2589": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10811,
        10895
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2590": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10932,
        10939
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 20,
      "value": "0x5"
    },
    "2592": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10932,
        10939
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2593": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10788,
        10895
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2594": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10788,
        10895
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10913,
        10954
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA5A"
    },
    "2599": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10913,
        10954
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2606": {
      "op": "SHL"
    },
    "2607": {
      "op": "SUB"
    },
    "2608": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10913,
        10918
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2641": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10913,
        10931
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2642": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10913,
        10931
      ],
      "op": "AND",
      "path": "18"
    },
    "2643": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10913,
        10931
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2644": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10932,
        10939
      ],
      "op": "AND",
      "path": "18"
    },
    "2645": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10788,
        10895
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2646": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10913,
        10931
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1485"
    },
    "2649": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        10913,
        10954
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2650": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10913,
        10954
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2651": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10770,
        10969
      ],
      "op": "POP",
      "path": "18"
    },
    "2652": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10748,
        10969
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2653": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10983,
        10995
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2655": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11041
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA7A"
    },
    "2658": {
      "offset": [
        881,
        886
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2710"
    },
    "2661": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11028
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97A"
    },
    "2664": {
      "offset": [
        928,
        931
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "2666": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11013
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "2668": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11013
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2669": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11017
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x146D"
    },
    "2672": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11017
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2673": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11028
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2674": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11028
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2675": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11028
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "2680": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11028
      ],
      "op": "AND",
      "path": "18"
    },
    "2681": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        10998,
        11028
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2682": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10998,
        11041
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2683": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 21,
      "value": "0x40"
    },
    "2685": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2686": {
      "op": "PUSH4",
      "value": "0x852CD8D"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2695": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2696": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2698": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2699": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "ADD",
      "path": "18"
    },
    "2700": {
      "op": "DUP3"
    },
    "2701": {
      "op": "SWAP1"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10983,
        11041
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2704": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10983,
        11041
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2705": {
      "op": "POP"
    },
    "2706": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11060
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11065
      ],
      "op": "AND",
      "path": "18"
    },
    "2748": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11065
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2749": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11065
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x42966C68"
    },
    "2754": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11065
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2757": {
      "op": "ADD"
    },
    "2758": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2760": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2762": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2763": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2764": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2765": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "SUB",
      "path": "18"
    },
    "2766": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2767": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2769": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2770": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2771": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "2772": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2773": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2774": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2775": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xADF"
    },
    "2778": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2779": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2781": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2782": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2783": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2784": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "POP",
      "path": "18"
    },
    "2785": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "GAS",
      "path": "18"
    },
    "2786": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "CALL",
      "path": "18"
    },
    "2787": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2788": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2789": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2790": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAF3"
    },
    "2793": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2794": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2795": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2797": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2798": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "2799": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2800": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2802": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2803": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2804": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "POP",
      "path": "18"
    },
    "2805": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "POP",
      "path": "18"
    },
    "2806": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "POP",
      "path": "18"
    },
    "2807": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11055,
        11071
      ],
      "op": "POP",
      "path": "18"
    },
    "2808": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11111,
        11112
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2810": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11090,
        11108
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2812": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11090,
        11108
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2813": {
      "branch": 103,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11090,
        11112
      ],
      "op": "GT",
      "path": "18"
    },
    "2814": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11086,
        11335
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2815": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11086,
        11335
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB36"
    },
    "2818": {
      "branch": 103,
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11086,
        11335
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2819": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11132,
        11153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2821": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11250
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB21"
    },
    "2824": {
      "offset": [
        881,
        886
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2710"
    },
    "2827": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11216
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97A"
    },
    "2830": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11197,
        11215
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2832": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11197,
        11215
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2833": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11171
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "2835": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11171
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2836": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11196
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x146D"
    },
    "2839": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2840": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11216
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2841": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11216
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2842": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11216
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "2847": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11216
      ],
      "op": "AND",
      "path": "18"
    },
    "2848": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        11156,
        11216
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2849": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11156,
        11250
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2850": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11286,
        11301
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 22,
      "value": "0xB"
    },
    "2852": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11286,
        11301
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2853": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11132,
        11250
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2854": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11132,
        11250
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2855": {
      "op": "POP"
    },
    "2856": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11286,
        11320
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB31"
    },
    "2859": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11286,
        11320
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2860": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11132,
        11250
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2861": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11286,
        11305
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "2864": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        11286,
        11320
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2865": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11286,
        11320
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2866": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11268,
        11283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "2868": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11268,
        11320
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11086,
        11335
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2871": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11383,
        11398
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 23,
      "value": "0xB"
    },
    "2873": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11383,
        11398
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2874": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11365,
        11378
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2876": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11365,
        11378
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2877": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11365,
        11399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB45"
    },
    "2880": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11365,
        11399
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2881": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11365,
        11382
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "2884": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        11365,
        11399
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2885": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11365,
        11399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2886": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11349,
        11362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2888": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11349,
        11399
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2889": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11433,
        11481
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 24,
      "value": "0xB9C"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2898": {
      "op": "SHL"
    },
    "2899": {
      "op": "SUB"
    },
    "2900": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11433,
        11438
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2933": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11433,
        11451
      ],
      "op": "AND",
      "path": "18"
    },
    "2934": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11460,
        11471
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2967": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11474,
        11480
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2968": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11433,
        11451
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1485"
    },
    "2971": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        11433,
        11481
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2972": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11433,
        11481
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2973": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11509,
        11520
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 25,
      "value": "0xE"
    },
    "2975": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11509,
        11520
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2976": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11509,
        11532
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBA9"
    },
    "2979": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11509,
        11532
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2980": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11525,
        11531
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2981": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11509,
        11524
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "2984": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "i",
      "offset": [
        11509,
        11532
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2985": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11509,
        11532
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2986": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11495,
        11506
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "2988": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11495,
        11532
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2989": {
      "op": "POP"
    },
    "2990": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11564,
        11565
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 26,
      "value": "0x0"
    },
    "2992": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11546,
        11561
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "2994": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11546,
        11565
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2995": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11586,
        11592
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 27
    },
    "2996": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        9983,
        11648
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2997": {
      "op": "POP"
    },
    "2998": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "o",
      "offset": [
        9983,
        11648
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2999": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        10162,
        11642
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3000": {
      "op": "POP"
    },
    "3001": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11630,
        11631
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 28,
      "value": "0x0"
    },
    "3003": {
      "fn": "BitcrushBankroll.transferProfit",
      "offset": [
        11630,
        11631
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3004": {
      "fn": "BitcrushBankroll.transferProfit",
      "jump": "o",
      "offset": [
        9983,
        11648
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3005": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2588,
        2702
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3006": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3008": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "op": "SUB"
    },
    "3017": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3018": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3019": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3020": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE7"
    },
    "3023": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3024": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3026": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3033": {
      "op": "SHL"
    },
    "3034": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3035": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3036": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3038": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "3042": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3043": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "3046": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3047": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "op": "SUB"
    },
    "3056": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "AND",
      "path": "18",
      "statement": 29
    },
    "3057": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3059": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3060": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3061": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3062": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2678
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "3064": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3066": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3067": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3069": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3070": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2688
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3071": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2695
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3072": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2695
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3075": {
      "op": "NOT"
    },
    "3076": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2695
      ],
      "op": "AND",
      "path": "18"
    },
    "3077": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2691,
        2695
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3079": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2695
      ],
      "op": "OR",
      "path": "18"
    },
    "3080": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2695
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3081": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "offset": [
        2659,
        2695
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3082": {
      "fn": "BitcrushBankroll.authorizeAddress",
      "jump": "o",
      "offset": [
        2588,
        2702
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3083": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6032,
        6601
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3084": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6112,
        6122
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 30
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3091": {
      "op": "SHL"
    },
    "3092": {
      "op": "SUB"
    },
    "3093": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6134,
        6145
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3126": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6112,
        6146
      ],
      "op": "AND",
      "path": "18"
    },
    "3127": {
      "branch": 104,
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6112,
        6146
      ],
      "op": "EQ",
      "path": "18"
    },
    "3128": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC83"
    },
    "3131": {
      "branch": 104,
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3132": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3134": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3141": {
      "op": "SHL"
    },
    "3142": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3143": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3146": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3148": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3149": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "ADD",
      "path": "18"
    },
    "3150": {
      "op": "MSTORE"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3155": {
      "op": "DUP3"
    },
    "3156": {
      "op": "ADD"
    },
    "3157": {
      "op": "MSTORE"
    },
    "3158": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D757374206265207374616B696E6720706F6F6C0000000000"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3193": {
      "op": "DUP3"
    },
    "3194": {
      "op": "ADD"
    },
    "3195": {
      "op": "MSTORE"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3198": {
      "op": "ADD"
    },
    "3199": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "3202": {
      "op": "JUMP"
    },
    "3203": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6091,
        6199
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3204": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6224,
        6240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3206": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6224,
        6240
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3207": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6213,
        6220
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3208": {
      "branch": 105,
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6213,
        6240
      ],
      "op": "LT",
      "path": "18"
    },
    "3209": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6209,
        6595
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCE9"
    },
    "3212": {
      "branch": 105,
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6209,
        6595
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3213": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6256,
        6273
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3215": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6305
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCA3"
    },
    "3218": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6288,
        6304
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3220": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6288,
        6304
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3221": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3222": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6287
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "3225": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6287
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3226": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6305
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3227": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6305
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3228": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6305
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "3233": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6305
      ],
      "op": "AND",
      "path": "18"
    },
    "3234": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "jump": "i",
      "offset": [
        6276,
        6305
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3235": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6276,
        6305
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3236": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6338,
        6339
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 31,
      "value": "0x0"
    },
    "3238": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6319,
        6335
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3240": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6319,
        6339
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3241": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6353,
        6365
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 32,
      "value": "0x2"
    },
    "3243": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6353,
        6373
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3244": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6353,
        6373
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3247": {
      "op": "NOT"
    },
    "3248": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6353,
        6373
      ],
      "op": "AND",
      "path": "18"
    },
    "3249": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6353,
        6373
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3250": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6353,
        6373
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3251": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6256,
        6305
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3252": {
      "op": "POP"
    },
    "3253": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6387,
        6447
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 33,
      "value": "0x66A"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3262": {
      "op": "SHL"
    },
    "3263": {
      "op": "SUB"
    },
    "3264": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6387,
        6392
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3297": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6387,
        6409
      ],
      "op": "AND",
      "path": "18"
    },
    "3298": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6410,
        6420
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3299": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6430,
        6434
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3300": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6256,
        6305
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3301": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6387,
        6409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "3304": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "jump": "i",
      "offset": [
        6387,
        6447
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3305": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6209,
        6595
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3306": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6555,
        6571
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 34,
      "value": "0x3"
    },
    "3308": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6555,
        6571
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3309": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6555,
        6584
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x75B"
    },
    "3312": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6555,
        6584
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3313": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6576,
        6583
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3314": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "offset": [
        6555,
        6575
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "3317": {
      "fn": "BitcrushBankroll.recoverBankroll",
      "jump": "i",
      "offset": [
        6555,
        6584
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3318": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6841,
        7786
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3319": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6960,
        6970
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 35
    },
    "3320": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3322": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3323": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3324": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3325": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6959
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "3327": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3329": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3330": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3332": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3333": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3334": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3335": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3337": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "AND",
      "path": "18"
    },
    "3338": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6979
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3339": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6979
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3340": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3342": {
      "branch": 106,
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6940,
        6979
      ],
      "op": "EQ",
      "path": "18"
    },
    "3343": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD56"
    },
    "3346": {
      "branch": 106,
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3347": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3349": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3350": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3358": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3361": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3363": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3364": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "ADD",
      "path": "18"
    },
    "3365": {
      "op": "MSTORE"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3370": {
      "op": "DUP3"
    },
    "3371": {
      "op": "ADD"
    },
    "3372": {
      "op": "MSTORE"
    },
    "3373": {
      "op": "PUSH25",
      "value": "0x10D85B1B195C881B5D5CDD08189948185D5D1A1BDC9A5E9959"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "3401": {
      "op": "SHL"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3404": {
      "op": "DUP3"
    },
    "3405": {
      "op": "ADD"
    },
    "3406": {
      "op": "MSTORE"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3409": {
      "op": "ADD"
    },
    "3410": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "3413": {
      "op": "JUMP"
    },
    "3414": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        6919,
        7030
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3415": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7199,
        7212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3417": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7199,
        7212
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3418": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7189,
        7196
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3419": {
      "branch": 107,
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7189,
        7212
      ],
      "op": "GT",
      "path": "18"
    },
    "3420": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7185,
        7684
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3421": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7185,
        7684
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE3B"
    },
    "3424": {
      "branch": 107,
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7185,
        7684
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3425": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7228,
        7245
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3427": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD77"
    },
    "3430": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7260,
        7273
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3432": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7260,
        7273
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3433": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7255
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3434": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7259
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "3437": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7259
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3438": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3439": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3440": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7274
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "3445": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7274
      ],
      "op": "AND",
      "path": "18"
    },
    "3446": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        7248,
        7274
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3447": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7248,
        7274
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3448": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7288,
        7300
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 36,
      "value": "0x2"
    },
    "3450": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7288,
        7307
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3451": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7288,
        7307
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3454": {
      "op": "NOT"
    },
    "3455": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7288,
        7307
      ],
      "op": "AND",
      "path": "18"
    },
    "3456": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7303,
        7307
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3458": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7288,
        7307
      ],
      "op": "OR",
      "path": "18"
    },
    "3459": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7288,
        7307
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3460": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7288,
        7307
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3461": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 37,
      "value": "0x40"
    },
    "3463": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3464": {
      "op": "PUSH4",
      "value": "0x23D13AFF"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3471": {
      "op": "SHL"
    },
    "3472": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3473": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3474": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3476": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3477": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "ADD",
      "path": "18"
    },
    "3478": {
      "op": "DUP3"
    },
    "3479": {
      "op": "SWAP1"
    },
    "3480": {
      "op": "MSTORE"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3487": {
      "op": "SHL"
    },
    "3488": {
      "op": "SUB"
    },
    "3489": {
      "op": "DUP5"
    },
    "3490": {
      "op": "DUP2"
    },
    "3491": {
      "op": "AND"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3494": {
      "op": "DUP4"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "op": "MSTORE"
    },
    "3497": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7367,
        7377
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3500": {
      "op": "DUP4"
    },
    "3501": {
      "op": "ADD"
    },
    "3502": {
      "op": "MSTORE"
    },
    "3503": {
      "op": "SWAP2"
    },
    "3504": {
      "op": "SWAP3"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7332
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3539": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7346
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3540": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7346
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3541": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7346
      ],
      "op": "AND",
      "path": "18"
    },
    "3542": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7346
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3543": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7346
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8F44EBFC"
    },
    "3548": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7346
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3551": {
      "op": "ADD"
    },
    "3552": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3554": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3556": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3557": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3558": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3559": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "SUB",
      "path": "18"
    },
    "3560": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3561": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3563": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3564": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3565": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "3566": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3567": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3568": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3569": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDF9"
    },
    "3572": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3573": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3575": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3576": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3577": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3578": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "POP",
      "path": "18"
    },
    "3579": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "GAS",
      "path": "18"
    },
    "3580": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "CALL",
      "path": "18"
    },
    "3581": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3582": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3583": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3584": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE0D"
    },
    "3587": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3588": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3589": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3591": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3592": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3593": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3594": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3596": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3597": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7321,
        7378
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3598": {
      "op": "POP"
    },
    "3599": {
      "op": "POP"
    },
    "3600": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7411,
        7427
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 38,
      "value": "0x3"
    },
    "3602": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7411,
        7427
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3603": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7411,
        7442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE1F"
    },
    "3606": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7411,
        7442
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7411,
        7427
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7432,
        7441
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3611": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7411,
        7431
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "3614": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        7411,
        7442
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3615": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7411,
        7442
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3616": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7392,
        7408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3618": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7392,
        7442
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3619": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7473,
        7486
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 39,
      "value": "0x1"
    },
    "3621": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7473,
        7486
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3622": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7456,
        7508
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE30"
    },
    "3625": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7456,
        7508
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3626": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7488,
        7495
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3627": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7497,
        7507
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3628": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7456,
        7472
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14BA"
    },
    "3631": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        7456,
        7508
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3632": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7456,
        7508
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3633": {
      "op": "POP"
    },
    "3634": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7539,
        7540
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 40,
      "value": "0x0"
    },
    "3636": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7523,
        7536
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3638": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7523,
        7540
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3639": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7185,
        7684
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE56"
    },
    "3642": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7185,
        7684
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3643": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7185,
        7684
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3644": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7587,
        7600
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 41,
      "value": "0x1"
    },
    "3646": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7587,
        7600
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3647": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7587,
        7613
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE48"
    },
    "3650": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7587,
        7613
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3651": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7605,
        7612
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3652": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7587,
        7604
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "3655": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        7587,
        7613
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3656": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7587,
        7613
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3657": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7571,
        7584
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3659": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7571,
        7613
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3660": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7627,
        7673
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 42,
      "value": "0xE56"
    },
    "3663": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7644,
        7651
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3664": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7653,
        7660
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3665": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7662,
        7672
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3666": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7627,
        7643
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14BA"
    },
    "3669": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        7627,
        7673
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3670": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7627,
        7673
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3671": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7693,
        7727
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 43,
      "value": "0xE5F"
    },
    "3674": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7719,
        7726
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3675": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7693,
        7718
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1559"
    },
    "3678": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        7693,
        7727
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3679": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7693,
        7727
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3680": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7753,
        7766
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 44,
      "value": "0xD"
    },
    "3682": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7753,
        7766
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3683": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7753,
        7779
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE6C"
    },
    "3686": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7753,
        7779
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3687": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7771,
        7778
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3688": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7753,
        7770
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "3691": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "i",
      "offset": [
        7753,
        7779
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3692": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7753,
        7779
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3693": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7737,
        7750
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "3695": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "offset": [
        7737,
        7779
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3696": {
      "op": "POP"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "fn": "BitcrushBankroll.payOutUserWinning",
      "jump": "o",
      "offset": [
        6841,
        7786
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3699": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13866,
        13948
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3700": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3702": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3709": {
      "op": "SHL"
    },
    "3710": {
      "op": "SUB"
    },
    "3711": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3712": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3713": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3714": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9D"
    },
    "3717": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3718": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3720": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3727": {
      "op": "SHL"
    },
    "3728": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3729": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3730": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3732": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3733": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "3736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3737": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "3740": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3741": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3742": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13932
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 45,
      "value": "0xF"
    },
    "3744": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3745": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3752": {
      "op": "SHL"
    },
    "3753": {
      "op": "SUB"
    },
    "3754": {
      "op": "NOT"
    },
    "3755": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "AND",
      "path": "18"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3765": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3766": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3767": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "AND",
      "path": "18"
    },
    "3768": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3769": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3770": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3771": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "OR",
      "path": "18"
    },
    "3772": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3773": {
      "fn": "BitcrushBankroll.setAdmin",
      "offset": [
        13927,
        13941
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3774": {
      "fn": "BitcrushBankroll.setAdmin",
      "jump": "o",
      "offset": [
        13866,
        13948
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3776": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3778": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3785": {
      "op": "SHL"
    },
    "3786": {
      "op": "SUB"
    },
    "3787": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3788": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3789": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3790": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE9"
    },
    "3793": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3794": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3803": {
      "op": "SHL"
    },
    "3804": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3805": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3806": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3808": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3809": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "3812": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3813": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "3816": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3817": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0xEF3"
    },
    "3821": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3823": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C4"
    },
    "3826": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3828": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3829": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2920,
        3037
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3830": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3832": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3839": {
      "op": "SHL"
    },
    "3840": {
      "op": "SUB"
    },
    "3841": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3842": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3843": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3844": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "3847": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3848": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3850": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3851": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3857": {
      "op": "SHL"
    },
    "3858": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3859": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3860": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3863": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "3866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3867": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "3870": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3878": {
      "op": "SHL"
    },
    "3879": {
      "op": "SUB"
    },
    "3880": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "AND",
      "path": "18",
      "statement": 47
    },
    "3881": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3883": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3884": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3885": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3886": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "3888": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3890": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3891": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3893": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3894": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        3001,
        3030
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3895": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2994,
        3030
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3896": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2994,
        3030
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3899": {
      "op": "NOT"
    },
    "3900": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2994,
        3030
      ],
      "op": "AND",
      "path": "18"
    },
    "3901": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2994,
        3030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3902": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "offset": [
        2994,
        3030
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3903": {
      "fn": "BitcrushBankroll.removeAuthorization",
      "jump": "o",
      "offset": [
        2920,
        3037
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3904": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4515,
        6026
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3905": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4611,
        4621
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 48
    },
    "3906": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3908": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3909": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3910": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3911": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4610
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "3913": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3915": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3916": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3918": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3919": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3920": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3921": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3923": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "AND",
      "path": "18"
    },
    "3924": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4630
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3925": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4630
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3926": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4622
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3928": {
      "branch": 108,
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4591,
        4630
      ],
      "op": "EQ",
      "path": "18"
    },
    "3929": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFA0"
    },
    "3932": {
      "branch": 108,
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3933": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3935": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3942": {
      "op": "SHL"
    },
    "3943": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3944": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3947": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3949": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3950": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "ADD",
      "path": "18"
    },
    "3951": {
      "op": "MSTORE"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3956": {
      "op": "DUP3"
    },
    "3957": {
      "op": "ADD"
    },
    "3958": {
      "op": "MSTORE"
    },
    "3959": {
      "op": "PUSH25",
      "value": "0x10D85B1B195C881B5D5CDD08189948185D5D1A1BDC9A5E9959"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "3987": {
      "op": "SHL"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3990": {
      "op": "DUP3"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "3999": {
      "op": "JUMP"
    },
    "4000": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4570,
        4681
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4001": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4924,
        4936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "4003": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4924,
        4936
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4004": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4924,
        4936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4006": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4924,
        4936
      ],
      "op": "AND",
      "path": "18"
    },
    "4007": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4924,
        4944
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4008": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4924,
        4944
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4009": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4924,
        4936
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4011": {
      "branch": 109,
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4924,
        4944
      ],
      "op": "EQ",
      "path": "18"
    },
    "4012": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4013": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11F1"
    },
    "4016": {
      "branch": 109,
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4017": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4975,
        4991
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4019": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4975,
        4991
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4020": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4964,
        4971
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4021": {
      "branch": 110,
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4964,
        4991
      ],
      "op": "LT",
      "path": "18"
    },
    "4022": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4960,
        5826
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x110C"
    },
    "4025": {
      "branch": 110,
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4960,
        5826
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4026": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5011,
        5028
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4028": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFD0"
    },
    "4031": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5043,
        5059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4033": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5043,
        5059
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4034": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5038
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4035": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5042
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "4038": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5042
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4039": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4040": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4041": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5060
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "4046": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5060
      ],
      "op": "AND",
      "path": "18"
    },
    "4047": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5031,
        5060
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4048": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5031,
        5060
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4049": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5011,
        5060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4050": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5011,
        5060
      ],
      "op": "POP",
      "path": "18"
    },
    "4051": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5230
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 49,
      "value": "0x1034"
    },
    "4054": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5122,
        5132
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4055": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5162,
        5173
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4088": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5196,
        5212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4090": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5196,
        5212
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4091": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5083
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4130": {
      "op": "SHL"
    },
    "4131": {
      "op": "SUB"
    },
    "4132": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5100
      ],
      "op": "AND",
      "path": "18"
    },
    "4133": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "4136": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5100
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4137": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5230
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4138": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5230
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4139": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5230
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4140": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5230
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4141": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5230
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "4146": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5230
      ],
      "op": "AND",
      "path": "18"
    },
    "4147": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5078,
        5230
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4148": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5078,
        5230
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4149": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5276,
        5292
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 50,
      "value": "0x3"
    },
    "4151": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5276,
        5292
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4152": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4154": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4155": {
      "op": "PUSH4",
      "value": "0x38E7EAA9"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4162": {
      "op": "SHL"
    },
    "4163": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4164": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4165": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4167": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4168": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "ADD",
      "path": "18"
    },
    "4169": {
      "op": "SWAP2"
    },
    "4170": {
      "op": "SWAP1"
    },
    "4171": {
      "op": "SWAP2"
    },
    "4172": {
      "op": "MSTORE"
    },
    "4173": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5259
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4212": {
      "op": "SHL"
    },
    "4213": {
      "op": "SUB"
    },
    "4214": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5275
      ],
      "op": "AND",
      "path": "18"
    },
    "4215": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5275
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4216": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5275
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE39FAAA4"
    },
    "4221": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5275
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4224": {
      "op": "ADD"
    },
    "4225": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4227": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4229": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4230": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4231": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4232": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "SUB",
      "path": "18"
    },
    "4233": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4234": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4236": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4237": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4238": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "4239": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4240": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4241": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4242": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x109A"
    },
    "4245": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4246": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4248": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4249": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4250": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4251": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "POP",
      "path": "18"
    },
    "4252": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "GAS",
      "path": "18"
    },
    "4253": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "CALL",
      "path": "18"
    },
    "4254": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4255": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4256": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4257": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10AE"
    },
    "4260": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4261": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4262": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4264": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4265": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4266": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4267": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4269": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4270": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5248,
        5293
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4271": {
      "op": "POP"
    },
    "4272": {
      "op": "POP"
    },
    "4273": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5330,
        5331
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 51,
      "value": "0x0"
    },
    "4275": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5311,
        5327
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4277": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5311,
        5331
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5349,
        5361
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 52,
      "value": "0x2"
    },
    "4282": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5349,
        5369
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4283": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5349,
        5369
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4286": {
      "op": "NOT"
    },
    "4287": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5349,
        5369
      ],
      "op": "AND",
      "path": "18"
    },
    "4288": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5349,
        5369
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4289": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5349,
        5369
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4290": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5387,
        5447
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 53,
      "value": "0x10F6"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4299": {
      "op": "SHL"
    },
    "4300": {
      "op": "SUB"
    },
    "4301": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5387,
        5392
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4334": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5387,
        5409
      ],
      "op": "AND",
      "path": "18"
    },
    "4335": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5410,
        5420
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4336": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5430,
        5434
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4337": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5437,
        5446
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4338": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5387,
        5409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "4341": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5387,
        5447
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4342": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5387,
        5447
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4343": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5481,
        5494
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 54,
      "value": "0x1"
    },
    "4345": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5481,
        5494
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4346": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5481,
        5509
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1103"
    },
    "4349": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5481,
        5509
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4350": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5499,
        5508
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4351": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5481,
        5498
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "4354": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5481,
        5509
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4355": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5481,
        5509
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4356": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5465,
        5478
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4358": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5465,
        5509
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4359": {
      "op": "POP"
    },
    "4360": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1237"
    },
    "4363": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4364": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4960,
        5826
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4365": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5548,
        5691
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 55,
      "value": "0x1161"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4374": {
      "op": "SHL"
    },
    "4375": {
      "op": "SUB"
    },
    "4376": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5548,
        5553
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4409": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5548,
        5570
      ],
      "op": "AND",
      "path": "18"
    },
    "4410": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5592,
        5602
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4411": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5632,
        5643
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4444": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5666,
        5673
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4445": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5548,
        5570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "4448": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5548,
        5691
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4449": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5548,
        5691
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4450": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 56,
      "value": "0x40"
    },
    "4452": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4453": {
      "op": "PUSH4",
      "value": "0x38E7EAA9"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4460": {
      "op": "SHL"
    },
    "4461": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4462": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4463": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4465": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4466": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "ADD",
      "path": "18"
    },
    "4467": {
      "op": "DUP3"
    },
    "4468": {
      "op": "SWAP1"
    },
    "4469": {
      "op": "MSTORE"
    },
    "4470": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5720
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4509": {
      "op": "SHL"
    },
    "4510": {
      "op": "SUB"
    },
    "4511": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5736
      ],
      "op": "AND",
      "path": "18"
    },
    "4512": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5736
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4513": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5736
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE39FAAA4"
    },
    "4518": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5736
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4524": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4526": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4527": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4528": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4529": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "SUB",
      "path": "18"
    },
    "4530": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4531": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4533": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4534": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4535": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "4536": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4537": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4538": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4539": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11C3"
    },
    "4542": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4543": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4545": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4546": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4547": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4548": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "POP",
      "path": "18"
    },
    "4549": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "GAS",
      "path": "18"
    },
    "4550": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "CALL",
      "path": "18"
    },
    "4551": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4552": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4553": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4554": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11D7"
    },
    "4557": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4558": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4559": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4561": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4562": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4563": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4564": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4566": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4567": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5709,
        5745
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "op": "POP"
    },
    "4570": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5782,
        5798
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 57,
      "value": "0x3"
    },
    "4572": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5782,
        5798
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4573": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5782,
        5811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11E9"
    },
    "4576": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5782,
        5811
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5782,
        5798
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5803,
        5810
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4581": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5782,
        5802
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "4584": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5782,
        5811
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4585": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5782,
        5811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4586": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5763,
        5779
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4588": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5763,
        5811
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4589": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1237"
    },
    "4592": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4593": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4594": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5856,
        5914
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 58,
      "value": "0x1226"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4603": {
      "op": "SHL"
    },
    "4604": {
      "op": "SUB"
    },
    "4605": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5856,
        5861
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4638": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5856,
        5878
      ],
      "op": "AND",
      "path": "18"
    },
    "4639": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5879,
        5889
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4640": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5899,
        5903
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4641": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5906,
        5913
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4642": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5856,
        5878
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F0"
    },
    "4645": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5856,
        5914
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4646": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5856,
        5914
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4647": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5944,
        5957
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 59,
      "value": "0x1"
    },
    "4649": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5944,
        5957
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4650": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5944,
        5970
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1233"
    },
    "4653": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5944,
        5970
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4654": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5962,
        5969
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4655": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5944,
        5961
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "4658": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5944,
        5970
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4659": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5944,
        5970
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4660": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5928,
        5941
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4662": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5928,
        5970
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4663": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        4920,
        5981
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4664": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5990,
        6019
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 60,
      "value": "0x7A7"
    },
    "4667": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        6011,
        6018
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4668": {
      "fn": "BitcrushBankroll.addUserLoss",
      "offset": [
        5990,
        6010
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1614"
    },
    "4671": {
      "fn": "BitcrushBankroll.addUserLoss",
      "jump": "i",
      "offset": [
        5990,
        6019
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4672": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4673": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4675": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "op": "SUB"
    },
    "4684": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4685": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4686": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4687": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126A"
    },
    "4690": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4694": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4700": {
      "op": "SHL"
    },
    "4701": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4702": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4703": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "4709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4710": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "4713": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4714": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4715": {
      "offset": [
        881,
        886
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2710"
    },
    "4718": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12788
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 61,
      "value": "0x1286"
    },
    "4721": {
      "offset": [
        928,
        931
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "4723": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12756
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1280"
    },
    "4726": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12742,
        12755
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4727": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12756
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4728": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12706,
        12719
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4729": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12756
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4730": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12649
      ],
      "op": "DUP12",
      "path": "18"
    },
    "4731": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12671,
        12683
      ],
      "op": "DUP12",
      "path": "18"
    },
    "4732": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12670
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "4735": {
      "fn": "BitcrushBankroll.setShares",
      "jump": "i",
      "offset": [
        12630,
        12684
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4736": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12684
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4737": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12705
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4738": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12705
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "4741": {
      "fn": "BitcrushBankroll.setShares",
      "jump": "i",
      "offset": [
        12630,
        12720
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4742": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12788
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4743": {
      "branch": 111,
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12630,
        12799
      ],
      "op": "EQ",
      "path": "18"
    },
    "4744": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12E3"
    },
    "4747": {
      "branch": 111,
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4748": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4750": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4757": {
      "op": "SHL"
    },
    "4758": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4759": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4762": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4764": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4765": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "ADD",
      "path": "18"
    },
    "4766": {
      "op": "MSTORE"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4771": {
      "op": "DUP3"
    },
    "4772": {
      "op": "ADD"
    },
    "4773": {
      "op": "MSTORE"
    },
    "4774": {
      "op": "PUSH32",
      "value": "0x53756D206F6620616C6C207368617265732073686F756C642061646420757020"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4809": {
      "op": "DUP3"
    },
    "4810": {
      "op": "ADD"
    },
    "4811": {
      "op": "MSTORE"
    },
    "4812": {
      "op": "PUSH7",
      "value": "0x746F2031303025"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4822": {
      "op": "SHL"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4825": {
      "op": "DUP3"
    },
    "4826": {
      "op": "ADD"
    },
    "4827": {
      "op": "MSTORE"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4830": {
      "op": "ADD"
    },
    "4831": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "4834": {
      "op": "JUMP"
    },
    "4835": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12609,
        12864
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4836": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12874,
        12892
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 62,
      "value": "0x8"
    },
    "4838": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12874,
        12914
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4839": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12874,
        12914
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4840": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12874,
        12914
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4841": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12924,
        12935
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 63,
      "value": "0x7"
    },
    "4843": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12924,
        12950
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4844": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12924,
        12950
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4845": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12924,
        12950
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4846": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12960,
        12972
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 64,
      "value": "0x9"
    },
    "4848": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12960,
        12988
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4849": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12960,
        12988
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4850": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12960,
        12988
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4851": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12998,
        13010
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 65,
      "value": "0xA"
    },
    "4853": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12998,
        13026
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4854": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12998,
        13026
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4855": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12998,
        13026
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4856": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 66,
      "value": "0x40"
    },
    "4858": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4859": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4860": {
      "op": "DUP6"
    },
    "4861": {
      "op": "DUP2"
    },
    "4862": {
      "op": "MSTORE"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4865": {
      "op": "DUP2"
    },
    "4866": {
      "op": "ADD"
    },
    "4867": {
      "op": "DUP6"
    },
    "4868": {
      "op": "SWAP1"
    },
    "4869": {
      "op": "MSTORE"
    },
    "4870": {
      "op": "SWAP1"
    },
    "4871": {
      "op": "DUP2"
    },
    "4872": {
      "op": "ADD"
    },
    "4873": {
      "op": "DUP4"
    },
    "4874": {
      "op": "SWAP1"
    },
    "4875": {
      "op": "MSTORE"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4878": {
      "op": "DUP2"
    },
    "4879": {
      "op": "ADD"
    },
    "4880": {
      "op": "DUP3"
    },
    "4881": {
      "op": "SWAP1"
    },
    "4882": {
      "op": "MSTORE"
    },
    "4883": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x1AB182163A0683CD3182C000705483EF0CCDC375A845AB7B68678F89D90DE4D7"
    },
    "4916": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4919": {
      "op": "ADD"
    },
    "4920": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4922": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4923": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4924": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4925": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "SUB",
      "path": "18"
    },
    "4926": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4927": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        13041,
        13177
      ],
      "op": "LOG1",
      "path": "18"
    },
    "4928": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "POP",
      "path": "18"
    },
    "4929": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "POP",
      "path": "18"
    },
    "4930": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "POP",
      "path": "18"
    },
    "4931": {
      "fn": "BitcrushBankroll.setShares",
      "offset": [
        12428,
        13184
      ],
      "op": "POP",
      "path": "18"
    },
    "4932": {
      "fn": "BitcrushBankroll.setShares",
      "jump": "o",
      "offset": [
        12428,
        13184
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4934": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4936": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4943": {
      "op": "SHL"
    },
    "4944": {
      "op": "SUB"
    },
    "4945": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4946": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4947": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4948": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136F"
    },
    "4951": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4952": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4954": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4961": {
      "op": "SHL"
    },
    "4962": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4963": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4964": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4966": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4967": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "4970": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4971": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "4974": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4975": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "op": "SUB"
    },
    "4984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 67
    },
    "4985": {
      "branch": 119,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "4986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D4"
    },
    "4989": {
      "branch": 119,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4999": {
      "op": "SHL"
    },
    "5000": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "5008": {
      "op": "MSTORE"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5013": {
      "op": "DUP3"
    },
    "5014": {
      "op": "ADD"
    },
    "5015": {
      "op": "MSTORE"
    },
    "5016": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5051": {
      "op": "DUP3"
    },
    "5052": {
      "op": "ADD"
    },
    "5053": {
      "op": "MSTORE"
    },
    "5054": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5063": {
      "op": "SHL"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5066": {
      "op": "DUP3"
    },
    "5067": {
      "op": "ADD"
    },
    "5068": {
      "op": "MSTORE"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "5075": {
      "op": "JUMP"
    },
    "5076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 68,
      "value": "0x7A7"
    },
    "5080": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C4"
    },
    "5084": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5085": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5086": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5088": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 69,
      "value": "0x13E9"
    },
    "5091": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5092": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5093": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19BF"
    },
    "5096": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5097": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5098": {
      "fn": "SafeMath.sub",
      "offset": [
        3185,
        3197
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "5099": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "op": "POP"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5104": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5105": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 70,
      "value": "0x40"
    },
    "5107": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5114": {
      "op": "SHL"
    },
    "5115": {
      "op": "SUB"
    },
    "5116": {
      "op": "DUP1"
    },
    "5117": {
      "op": "DUP6"
    },
    "5118": {
      "op": "AND"
    },
    "5119": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "5121": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5122": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "5123": {
      "op": "MSTORE"
    },
    "5124": {
      "op": "DUP4"
    },
    "5125": {
      "op": "AND"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5128": {
      "op": "DUP3"
    },
    "5129": {
      "op": "ADD"
    },
    "5130": {
      "op": "MSTORE"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5133": {
      "op": "DUP2"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "op": "DUP3"
    },
    "5136": {
      "op": "SWAP1"
    },
    "5137": {
      "op": "MSTORE"
    },
    "5138": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x145B"
    },
    "5141": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5142": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5143": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5144": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5151": {
      "op": "SHL"
    },
    "5152": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5157": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5159": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5160": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5163": {
      "op": "NOT"
    },
    "5164": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5165": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5166": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "6"
    },
    "5167": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "5168": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5169": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5170": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5171": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5172": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5173": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5175": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5176": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "5177": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5178": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5185": {
      "op": "SHL"
    },
    "5186": {
      "op": "SUB"
    },
    "5187": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "6"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5194": {
      "op": "SHL"
    },
    "5195": {
      "op": "SUB"
    },
    "5196": {
      "op": "NOT"
    },
    "5197": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5198": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5199": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "6"
    },
    "5200": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5201": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5202": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5203": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "6"
    },
    "5204": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5205": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5206": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5207": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1673"
    },
    "5210": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5211": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5212": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "5213": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "5214": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "5215": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "5216": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        912,
        1153
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5217": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5218": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5220": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 71,
      "value": "0x13E9"
    },
    "5223": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5224": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5225": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19D6"
    },
    "5228": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5229": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5230": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5232": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 72,
      "value": "0x13E9"
    },
    "5235": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5236": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5237": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19EE"
    },
    "5240": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5241": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5242": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5244": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 73,
      "value": "0x13E9"
    },
    "5247": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5248": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5249": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A0D"
    },
    "5252": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5253": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5254": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 74,
      "value": "0x40"
    },
    "5256": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5263": {
      "op": "SHL"
    },
    "5264": {
      "op": "SUB"
    },
    "5265": {
      "op": "DUP4"
    },
    "5266": {
      "op": "AND"
    },
    "5267": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "5269": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5270": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "6"
    },
    "5271": {
      "op": "MSTORE"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5274": {
      "op": "DUP2"
    },
    "5275": {
      "op": "ADD"
    },
    "5276": {
      "op": "DUP3"
    },
    "5277": {
      "op": "SWAP1"
    },
    "5278": {
      "op": "MSTORE"
    },
    "5279": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14B5"
    },
    "5282": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5283": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5284": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5285": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5292": {
      "op": "SHL"
    },
    "5293": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5296": {
      "op": "ADD"
    },
    "5297": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1424"
    },
    "5300": {
      "op": "JUMP"
    },
    "5301": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5302": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "5303": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "5304": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "5305": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5306": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8028,
        8329
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5307": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8157,
        8196
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 75,
      "value": "0x14EE"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5316": {
      "op": "SHL"
    },
    "5317": {
      "op": "SUB"
    },
    "5318": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8157,
        8162
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5351": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8157,
        8175
      ],
      "op": "AND",
      "path": "18"
    },
    "5352": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8176,
        8186
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5353": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8188,
        8195
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5354": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8157,
        8175
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1485"
    },
    "5357": {
      "fn": "BitcrushBankroll.transferWinnings",
      "jump": "i",
      "offset": [
        8157,
        8196
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5358": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8157,
        8196
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5359": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 76,
      "value": "0x40"
    },
    "5361": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5362": {
      "op": "PUSH4",
      "value": "0xF62CF8D"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "5369": {
      "op": "SHL"
    },
    "5370": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5371": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5372": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5374": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5375": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "ADD",
      "path": "18"
    },
    "5376": {
      "op": "DUP5"
    },
    "5377": {
      "op": "SWAP1"
    },
    "5378": {
      "op": "MSTORE"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5385": {
      "op": "SHL"
    },
    "5386": {
      "op": "SUB"
    },
    "5387": {
      "op": "DUP4"
    },
    "5388": {
      "op": "DUP2"
    },
    "5389": {
      "op": "AND"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5392": {
      "op": "DUP4"
    },
    "5393": {
      "op": "ADD"
    },
    "5394": {
      "op": "MSTORE"
    },
    "5395": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8256,
        8266
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5396": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8256,
        8266
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5397": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8304
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5398": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8304
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5399": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8304
      ],
      "op": "AND",
      "path": "18"
    },
    "5400": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8304
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5401": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8304
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF62CF8D0"
    },
    "5406": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8304
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5409": {
      "op": "ADD"
    },
    "5410": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5412": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5414": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5415": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5416": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5417": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "SUB",
      "path": "18"
    },
    "5418": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5419": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5421": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5422": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5423": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "5424": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5425": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5426": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5427": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x153B"
    },
    "5430": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5431": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5433": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5434": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5435": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5436": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "POP",
      "path": "18"
    },
    "5437": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "GAS",
      "path": "18"
    },
    "5438": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "CALL",
      "path": "18"
    },
    "5439": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5440": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5441": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5442": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x154F"
    },
    "5445": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5446": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5447": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5449": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5450": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5451": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5452": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5454": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5455": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5456": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "POP",
      "path": "18"
    },
    "5457": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "POP",
      "path": "18"
    },
    "5458": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "POP",
      "path": "18"
    },
    "5459": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8277,
        8322
      ],
      "op": "POP",
      "path": "18"
    },
    "5460": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8147,
        8329
      ],
      "op": "POP",
      "path": "18"
    },
    "5461": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8028,
        8329
      ],
      "op": "POP",
      "path": "18"
    },
    "5462": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8028,
        8329
      ],
      "op": "POP",
      "path": "18"
    },
    "5463": {
      "fn": "BitcrushBankroll.transferWinnings",
      "offset": [
        8028,
        8329
      ],
      "op": "POP",
      "path": "18"
    },
    "5464": {
      "fn": "BitcrushBankroll.transferWinnings",
      "jump": "o",
      "offset": [
        8028,
        8329
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5465": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9221,
        9804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5466": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9296,
        9319
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "5468": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9296,
        9319
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5469": {
      "branch": 112,
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9296,
        9323
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5470": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9292,
        9798
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1574"
    },
    "5473": {
      "branch": 112,
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9292,
        9798
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5474": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9365,
        9388
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 77,
      "value": "0xC"
    },
    "5476": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9365,
        9388
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5477": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9365,
        9401
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x156E"
    },
    "5480": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9365,
        9401
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5481": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9393,
        9400
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5482": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9365,
        9392
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "5485": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "jump": "i",
      "offset": [
        9365,
        9401
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5486": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9365,
        9401
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5487": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9339,
        9362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "5489": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9339,
        9401
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5490": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "POP",
      "path": "18"
    },
    "5491": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "o",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5492": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9292,
        9798
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5493": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9446,
        9461
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "5495": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9446,
        9461
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5496": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9436,
        9443
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5497": {
      "branch": 113,
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9436,
        9461
      ],
      "op": "GT",
      "path": "18"
    },
    "5498": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9432,
        9788
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5499": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9432,
        9788
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15B1"
    },
    "5502": {
      "branch": 113,
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9432,
        9788
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5503": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9481,
        9499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5505": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9530
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1595"
    },
    "5508": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9514,
        9529
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "5510": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9514,
        9529
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5511": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9509
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5512": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9513
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "5515": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9513
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5516": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9530
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5517": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9530
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5518": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9530
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5523": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9530
      ],
      "op": "AND",
      "path": "18"
    },
    "5524": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "jump": "i",
      "offset": [
        9502,
        9530
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5525": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9502,
        9530
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5526": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9566,
        9567
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 78,
      "value": "0x0"
    },
    "5528": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9548,
        9563
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "5530": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9548,
        9567
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5531": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9611,
        9634
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 79,
      "value": "0xC"
    },
    "5533": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9611,
        9634
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5534": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9481,
        9530
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5535": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9481,
        9530
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5536": {
      "op": "POP"
    },
    "5537": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9611,
        9688
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15AA"
    },
    "5540": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9611,
        9688
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5541": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9481,
        9530
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5542": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9611,
        9638
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "5545": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "jump": "i",
      "offset": [
        9611,
        9688
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5546": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9611,
        9688
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5547": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9585,
        9608
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "5549": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9585,
        9688
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5550": {
      "op": "POP"
    },
    "5551": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "POP",
      "path": "18"
    },
    "5552": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "o",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5553": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9432,
        9788
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5554": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9745,
        9760
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 80,
      "value": "0xB"
    },
    "5556": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9745,
        9760
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5557": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9745,
        9773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15BE"
    },
    "5560": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9745,
        9773
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5561": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9765,
        9772
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5562": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9745,
        9764
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "5565": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "jump": "i",
      "offset": [
        9745,
        9773
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5566": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9745,
        9773
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5567": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9727,
        9742
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "5569": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9727,
        9773
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5570": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "offset": [
        9221,
        9804
      ],
      "op": "POP",
      "path": "18"
    },
    "5571": {
      "fn": "BitcrushBankroll.removeFromBrSinceCompound",
      "jump": "o",
      "offset": [
        9221,
        9804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5572": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5573": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5575": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5576": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5583": {
      "op": "SHL"
    },
    "5584": {
      "op": "SUB"
    },
    "5585": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 81
    },
    "5586": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5587": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5594": {
      "op": "SHL"
    },
    "5595": {
      "op": "SUB"
    },
    "5596": {
      "op": "NOT"
    },
    "5597": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5598": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "5599": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5600": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "5601": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5602": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5603": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 82,
      "value": "0x40"
    },
    "5605": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5606": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5607": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5608": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5609": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "5610": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5611": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5612": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5613": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5646": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5647": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5648": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5649": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "5650": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "5651": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5652": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8497,
        9045
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5653": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8567,
        8590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "5655": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8567,
        8590
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5656": {
      "branch": 114,
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8567,
        8594
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5657": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8563,
        9039
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1666"
    },
    "5660": {
      "branch": 114,
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8563,
        9039
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5661": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8624,
        8647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "5663": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8624,
        8647
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5664": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8614,
        8621
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5665": {
      "branch": 115,
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8614,
        8647
      ],
      "op": "GT",
      "path": "18"
    },
    "5666": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8610,
        8952
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5667": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8610,
        8952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1659"
    },
    "5670": {
      "branch": 115,
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8610,
        8952
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5671": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8667,
        8685
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5673": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8724
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x163D"
    },
    "5676": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8700,
        8723
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "5678": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8700,
        8723
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5679": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8695
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5680": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8699
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "5683": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8699
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5684": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8724
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5685": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8724
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5686": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8724
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5691": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8724
      ],
      "op": "AND",
      "path": "18"
    },
    "5692": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "jump": "i",
      "offset": [
        8688,
        8724
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5693": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8688,
        8724
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5694": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8768,
        8769
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 83,
      "value": "0x0"
    },
    "5696": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8742,
        8765
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "5698": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8742,
        8769
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5699": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8805,
        8820
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 84,
      "value": "0xB"
    },
    "5701": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8805,
        8820
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5702": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8667,
        8724
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5703": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8667,
        8724
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5704": {
      "op": "POP"
    },
    "5705": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8805,
        8836
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1652"
    },
    "5708": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8805,
        8836
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5709": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8667,
        8724
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5710": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8805,
        8824
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "5713": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "jump": "i",
      "offset": [
        8805,
        8836
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5714": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8805,
        8836
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5715": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8787,
        8802
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "5717": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8787,
        8836
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5718": {
      "op": "POP"
    },
    "5719": {
      "fn": "BitcrushBankroll.addToBankroll",
      "offset": [
        3158,
        4292
      ],
      "op": "POP",
      "path": "18"
    },
    "5720": {
      "fn": "BitcrushBankroll.addToBankroll",
      "jump": "o",
      "offset": [
        3158,
        4292
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5721": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8610,
        8952
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5722": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8901,
        8924
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 85,
      "value": "0xC"
    },
    "5724": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8901,
        8924
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5725": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8901,
        8937
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x156E"
    },
    "5728": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8901,
        8937
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5729": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8929,
        8936
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5730": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8901,
        8928
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DD"
    },
    "5733": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "jump": "i",
      "offset": [
        8901,
        8937
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5734": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        8563,
        9039
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5735": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        9000,
        9015
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 86,
      "value": "0xB"
    },
    "5737": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        9000,
        9015
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5738": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        9000,
        9028
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15BE"
    },
    "5741": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        9000,
        9028
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5742": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        9020,
        9027
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5743": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "offset": [
        9000,
        9019
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1461"
    },
    "5746": {
      "fn": "BitcrushBankroll.addToBrSinceCompound",
      "jump": "i",
      "offset": [
        9000,
        9028
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5747": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5748": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5750": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16C8"
    },
    "5753": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5754": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5756": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5757": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5758": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5760": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "5761": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5763": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5764": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5765": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5767": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5768": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5769": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5771": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "5772": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5805": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "6"
    },
    "5808": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5815": {
      "op": "SHL"
    },
    "5816": {
      "op": "SUB"
    },
    "5817": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "6"
    },
    "5818": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1745"
    },
    "5821": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5822": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5823": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5824": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5825": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "5830": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "6"
    },
    "5831": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5832": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5833": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5834": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5835": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5836": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "branch": 120,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5839": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14B5"
    },
    "5842": {
      "branch": 120,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5843": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 87
    },
    "5844": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5845": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5847": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "5848": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5849": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5850": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5851": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "5852": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5853": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16E6"
    },
    "5856": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5857": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5858": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A2F"
    },
    "5861": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5862": {
      "branch": 121,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14B5"
    },
    "5866": {
      "branch": 121,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5869": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5870": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5876": {
      "op": "SHL"
    },
    "5877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "6"
    },
    "5885": {
      "op": "MSTORE"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5888": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5890": {
      "op": "DUP3"
    },
    "5891": {
      "op": "ADD"
    },
    "5892": {
      "op": "MSTORE"
    },
    "5893": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5928": {
      "op": "DUP3"
    },
    "5929": {
      "op": "ADD"
    },
    "5930": {
      "op": "MSTORE"
    },
    "5931": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "5944": {
      "op": "SHL"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5947": {
      "op": "DUP3"
    },
    "5948": {
      "op": "ADD"
    },
    "5949": {
      "op": "MSTORE"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5952": {
      "op": "ADD"
    },
    "5953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x48F"
    },
    "5956": {
      "op": "JUMP"
    },
    "5957": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5958": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5960": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 88,
      "value": "0x1754"
    },
    "5963": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5964": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5965": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5967": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5968": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x175C"
    },
    "5971": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5972": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5973": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "5974": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "5975": {
      "op": "POP"
    },
    "5976": {
      "op": "POP"
    },
    "5977": {
      "op": "POP"
    },
    "5978": {
      "op": "POP"
    },
    "5979": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5981": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 89
    },
    "5984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "5985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "11"
    },
    "5986": {
      "branch": 116,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17BD"
    },
    "5990": {
      "branch": 116,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6000": {
      "op": "SHL"
    },
    "6001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "11"
    },
    "6009": {
      "op": "MSTORE"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6014": {
      "op": "DUP3"
    },
    "6015": {
      "op": "ADD"
    },
    "6016": {
      "op": "MSTORE"
    },
    "6017": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6052": {
      "op": "DUP3"
    },
    "6053": {
      "op": "ADD"
    },
    "6054": {
      "op": "MSTORE"
    },
    "6055": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "6064": {
      "op": "SHL"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6067": {
      "op": "DUP3"
    },
    "6068": {
      "op": "ADD"
    },
    "6069": {
      "op": "MSTORE"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6072": {
      "op": "ADD"
    },
    "6073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x48F"
    },
    "6076": {
      "op": "JUMP"
    },
    "6077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6084": {
      "op": "SHL"
    },
    "6085": {
      "op": "SUB"
    },
    "6086": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "11",
      "statement": 90
    },
    "6087": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "11"
    },
    "6088": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "6089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 91,
      "value": "0x1814"
    },
    "6092": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6095": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6102": {
      "op": "SHL"
    },
    "6103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "11"
    },
    "6111": {
      "op": "MSTORE"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6116": {
      "op": "DUP3"
    },
    "6117": {
      "op": "ADD"
    },
    "6118": {
      "op": "MSTORE"
    },
    "6119": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6154": {
      "op": "DUP3"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "op": "MSTORE"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6159": {
      "op": "ADD"
    },
    "6160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x48F"
    },
    "6163": {
      "op": "JUMP"
    },
    "6164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6175": {
      "op": "SHL"
    },
    "6176": {
      "op": "SUB"
    },
    "6177": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "11"
    },
    "6178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "11"
    },
    "6179": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6180": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6182": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6183": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1830"
    },
    "6186": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6187": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6188": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A7D"
    },
    "6191": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6192": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6198": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6200": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "11"
    },
    "6201": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6202": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "11"
    },
    "6203": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6204": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "11"
    },
    "6205": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "11"
    },
    "6206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6207": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "6208": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "6209": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "6210": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6211": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6215": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "11"
    },
    "6216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x186D"
    },
    "6219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6223": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6224": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "6225": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6227": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "11"
    },
    "6228": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "6230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6231": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "6232": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "11"
    },
    "6233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "6235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6237": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6240": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6241": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6242": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6246": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "6248": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1872"
    },
    "6252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "6256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "6258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "6260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "6262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "6264": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 92,
      "value": "0x1882"
    },
    "6267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6269": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x188D"
    },
    "6273": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "6276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "6277": {
      "op": "POP"
    },
    "6278": {
      "op": "POP"
    },
    "6279": {
      "op": "POP"
    },
    "6280": {
      "op": "POP"
    },
    "6281": {
      "op": "POP"
    },
    "6282": {
      "op": "POP"
    },
    "6283": {
      "op": "POP"
    },
    "6284": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6285": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6286": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "6288": {
      "branch": 117,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6289": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6290": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x189C"
    },
    "6293": {
      "branch": 117,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6294": {
      "op": "POP"
    },
    "6295": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 93
    },
    "6296": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E9"
    },
    "6299": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6300": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6301": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6302": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6303": {
      "branch": 118,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6304": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18AC"
    },
    "6307": {
      "branch": 118,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6308": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6309": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6310": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6311": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6312": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6314": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "11"
    },
    "6315": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6316": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6317": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 94
    },
    "6318": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6320": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6327": {
      "op": "SHL"
    },
    "6328": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6329": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6330": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6332": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "11"
    },
    "6333": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x48F"
    },
    "6336": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6337": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6338": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A99"
    },
    "6341": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6342": {
      "op": "JUMPDEST"
    },
    "6343": {
      "op": "DUP1"
    },
    "6344": {
      "op": "CALLDATALOAD"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6351": {
      "op": "SHL"
    },
    "6352": {
      "op": "SUB"
    },
    "6353": {
      "op": "DUP2"
    },
    "6354": {
      "op": "AND"
    },
    "6355": {
      "op": "DUP2"
    },
    "6356": {
      "op": "EQ"
    },
    "6357": {
      "op": "PUSH2",
      "value": "0x18DD"
    },
    "6360": {
      "op": "JUMPI"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6363": {
      "op": "DUP1"
    },
    "6364": {
      "op": "REVERT"
    },
    "6365": {
      "op": "JUMPDEST"
    },
    "6366": {
      "op": "SWAP2"
    },
    "6367": {
      "op": "SWAP1"
    },
    "6368": {
      "op": "POP"
    },
    "6369": {
      "jump": "o",
      "op": "JUMP"
    },
    "6370": {
      "op": "JUMPDEST"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6375": {
      "op": "DUP3"
    },
    "6376": {
      "op": "DUP5"
    },
    "6377": {
      "op": "SUB"
    },
    "6378": {
      "op": "SLT"
    },
    "6379": {
      "op": "ISZERO"
    },
    "6380": {
      "op": "PUSH2",
      "value": "0x18F4"
    },
    "6383": {
      "op": "JUMPI"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6386": {
      "op": "DUP1"
    },
    "6387": {
      "op": "REVERT"
    },
    "6388": {
      "op": "JUMPDEST"
    },
    "6389": {
      "op": "PUSH2",
      "value": "0x13E9"
    },
    "6392": {
      "op": "DUP3"
    },
    "6393": {
      "op": "PUSH2",
      "value": "0x18C6"
    },
    "6396": {
      "jump": "i",
      "op": "JUMP"
    },
    "6397": {
      "op": "JUMPDEST"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6402": {
      "op": "DUP3"
    },
    "6403": {
      "op": "DUP5"
    },
    "6404": {
      "op": "SUB"
    },
    "6405": {
      "op": "SLT"
    },
    "6406": {
      "op": "ISZERO"
    },
    "6407": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "6410": {
      "op": "JUMPI"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6413": {
      "op": "DUP1"
    },
    "6414": {
      "op": "REVERT"
    },
    "6415": {
      "op": "JUMPDEST"
    },
    "6416": {
      "op": "POP"
    },
    "6417": {
      "op": "CALLDATALOAD"
    },
    "6418": {
      "op": "SWAP2"
    },
    "6419": {
      "op": "SWAP1"
    },
    "6420": {
      "op": "POP"
    },
    "6421": {
      "jump": "o",
      "op": "JUMP"
    },
    "6422": {
      "op": "JUMPDEST"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6425": {
      "op": "DUP1"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6428": {
      "op": "DUP4"
    },
    "6429": {
      "op": "DUP6"
    },
    "6430": {
      "op": "SUB"
    },
    "6431": {
      "op": "SLT"
    },
    "6432": {
      "op": "ISZERO"
    },
    "6433": {
      "op": "PUSH2",
      "value": "0x1929"
    },
    "6436": {
      "op": "JUMPI"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6439": {
      "op": "DUP1"
    },
    "6440": {
      "op": "REVERT"
    },
    "6441": {
      "op": "JUMPDEST"
    },
    "6442": {
      "op": "DUP3"
    },
    "6443": {
      "op": "CALLDATALOAD"
    },
    "6444": {
      "op": "SWAP2"
    },
    "6445": {
      "op": "POP"
    },
    "6446": {
      "op": "PUSH2",
      "value": "0x1939"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6451": {
      "op": "DUP5"
    },
    "6452": {
      "op": "ADD"
    },
    "6453": {
      "op": "PUSH2",
      "value": "0x18C6"
    },
    "6456": {
      "jump": "i",
      "op": "JUMP"
    },
    "6457": {
      "op": "JUMPDEST"
    },
    "6458": {
      "op": "SWAP1"
    },
    "6459": {
      "op": "POP"
    },
    "6460": {
      "op": "SWAP3"
    },
    "6461": {
      "op": "POP"
    },
    "6462": {
      "op": "SWAP3"
    },
    "6463": {
      "op": "SWAP1"
    },
    "6464": {
      "op": "POP"
    },
    "6465": {
      "jump": "o",
      "op": "JUMP"
    },
    "6466": {
      "op": "JUMPDEST"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6469": {
      "op": "DUP1"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6472": {
      "op": "DUP1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6475": {
      "op": "DUP6"
    },
    "6476": {
      "op": "DUP8"
    },
    "6477": {
      "op": "SUB"
    },
    "6478": {
      "op": "SLT"
    },
    "6479": {
      "op": "ISZERO"
    },
    "6480": {
      "op": "PUSH2",
      "value": "0x1958"
    },
    "6483": {
      "op": "JUMPI"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6486": {
      "op": "DUP1"
    },
    "6487": {
      "op": "REVERT"
    },
    "6488": {
      "op": "JUMPDEST"
    },
    "6489": {
      "op": "POP"
    },
    "6490": {
      "op": "POP"
    },
    "6491": {
      "op": "DUP3"
    },
    "6492": {
      "op": "CALLDATALOAD"
    },
    "6493": {
      "op": "SWAP5"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6496": {
      "op": "DUP5"
    },
    "6497": {
      "op": "ADD"
    },
    "6498": {
      "op": "CALLDATALOAD"
    },
    "6499": {
      "op": "SWAP5"
    },
    "6500": {
      "op": "POP"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6503": {
      "op": "DUP5"
    },
    "6504": {
      "op": "ADD"
    },
    "6505": {
      "op": "CALLDATALOAD"
    },
    "6506": {
      "op": "SWAP4"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6509": {
      "op": "ADD"
    },
    "6510": {
      "op": "CALLDATALOAD"
    },
    "6511": {
      "op": "SWAP3"
    },
    "6512": {
      "op": "POP"
    },
    "6513": {
      "op": "SWAP1"
    },
    "6514": {
      "op": "POP"
    },
    "6515": {
      "jump": "o",
      "op": "JUMP"
    },
    "6516": {
      "op": "JUMPDEST"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6519": {
      "op": "DUP1"
    },
    "6520": {
      "op": "DUP3"
    },
    "6521": {
      "op": "MSTORE"
    },
    "6522": {
      "op": "DUP2"
    },
    "6523": {
      "op": "DUP2"
    },
    "6524": {
      "op": "ADD"
    },
    "6525": {
      "op": "MSTORE"
    },
    "6526": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6561": {
      "op": "DUP3"
    },
    "6562": {
      "op": "ADD"
    },
    "6563": {
      "op": "MSTORE"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6566": {
      "op": "ADD"
    },
    "6567": {
      "op": "SWAP1"
    },
    "6568": {
      "jump": "o",
      "op": "JUMP"
    },
    "6569": {
      "op": "JUMPDEST"
    },
    "6570": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6577": {
      "op": "SHL"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6580": {
      "op": "MSTORE"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6585": {
      "op": "MSTORE"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6590": {
      "op": "REVERT"
    },
    "6591": {
      "op": "JUMPDEST"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6594": {
      "op": "DUP3"
    },
    "6595": {
      "op": "DUP3"
    },
    "6596": {
      "op": "LT"
    },
    "6597": {
      "op": "ISZERO"
    },
    "6598": {
      "op": "PUSH2",
      "value": "0x19D1"
    },
    "6601": {
      "op": "JUMPI"
    },
    "6602": {
      "op": "PUSH2",
      "value": "0x19D1"
    },
    "6605": {
      "op": "PUSH2",
      "value": "0x19A9"
    },
    "6608": {
      "jump": "i",
      "op": "JUMP"
    },
    "6609": {
      "op": "JUMPDEST"
    },
    "6610": {
      "op": "POP"
    },
    "6611": {
      "op": "SUB"
    },
    "6612": {
      "op": "SWAP1"
    },
    "6613": {
      "jump": "o",
      "op": "JUMP"
    },
    "6614": {
      "op": "JUMPDEST"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6617": {
      "op": "DUP3"
    },
    "6618": {
      "op": "NOT"
    },
    "6619": {
      "op": "DUP3"
    },
    "6620": {
      "op": "GT"
    },
    "6621": {
      "op": "ISZERO"
    },
    "6622": {
      "op": "PUSH2",
      "value": "0x19E9"
    },
    "6625": {
      "op": "JUMPI"
    },
    "6626": {
      "op": "PUSH2",
      "value": "0x19E9"
    },
    "6629": {
      "op": "PUSH2",
      "value": "0x19A9"
    },
    "6632": {
      "jump": "i",
      "op": "JUMP"
    },
    "6633": {
      "op": "JUMPDEST"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "op": "ADD"
    },
    "6636": {
      "op": "SWAP1"
    },
    "6637": {
      "jump": "o",
      "op": "JUMP"
    },
    "6638": {
      "op": "JUMPDEST"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6641": {
      "op": "DUP2"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6644": {
      "op": "NOT"
    },
    "6645": {
      "op": "DIV"
    },
    "6646": {
      "op": "DUP4"
    },
    "6647": {
      "op": "GT"
    },
    "6648": {
      "op": "DUP3"
    },
    "6649": {
      "op": "ISZERO"
    },
    "6650": {
      "op": "ISZERO"
    },
    "6651": {
      "op": "AND"
    },
    "6652": {
      "op": "ISZERO"
    },
    "6653": {
      "op": "PUSH2",
      "value": "0x1A08"
    },
    "6656": {
      "op": "JUMPI"
    },
    "6657": {
      "op": "PUSH2",
      "value": "0x1A08"
    },
    "6660": {
      "op": "PUSH2",
      "value": "0x19A9"
    },
    "6663": {
      "jump": "i",
      "op": "JUMP"
    },
    "6664": {
      "op": "JUMPDEST"
    },
    "6665": {
      "op": "POP"
    },
    "6666": {
      "op": "MUL"
    },
    "6667": {
      "op": "SWAP1"
    },
    "6668": {
      "jump": "o",
      "op": "JUMP"
    },
    "6669": {
      "op": "JUMPDEST"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6672": {
      "op": "DUP3"
    },
    "6673": {
      "op": "PUSH2",
      "value": "0x1A2A"
    },
    "6676": {
      "op": "JUMPI"
    },
    "6677": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6684": {
      "op": "SHL"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6687": {
      "op": "MSTORE"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6692": {
      "op": "MSTORE"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6697": {
      "op": "REVERT"
    },
    "6698": {
      "op": "JUMPDEST"
    },
    "6699": {
      "op": "POP"
    },
    "6700": {
      "op": "DIV"
    },
    "6701": {
      "op": "SWAP1"
    },
    "6702": {
      "jump": "o",
      "op": "JUMP"
    },
    "6703": {
      "op": "JUMPDEST"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6708": {
      "op": "DUP3"
    },
    "6709": {
      "op": "DUP5"
    },
    "6710": {
      "op": "SUB"
    },
    "6711": {
      "op": "SLT"
    },
    "6712": {
      "op": "ISZERO"
    },
    "6713": {
      "op": "PUSH2",
      "value": "0x1A41"
    },
    "6716": {
      "op": "JUMPI"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6719": {
      "op": "DUP1"
    },
    "6720": {
      "op": "REVERT"
    },
    "6721": {
      "op": "JUMPDEST"
    },
    "6722": {
      "op": "DUP2"
    },
    "6723": {
      "op": "MLOAD"
    },
    "6724": {
      "op": "DUP1"
    },
    "6725": {
      "op": "ISZERO"
    },
    "6726": {
      "op": "ISZERO"
    },
    "6727": {
      "op": "DUP2"
    },
    "6728": {
      "op": "EQ"
    },
    "6729": {
      "op": "PUSH2",
      "value": "0x13E9"
    },
    "6732": {
      "op": "JUMPI"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6735": {
      "op": "DUP1"
    },
    "6736": {
      "op": "REVERT"
    },
    "6737": {
      "op": "JUMPDEST"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6740": {
      "op": "JUMPDEST"
    },
    "6741": {
      "op": "DUP4"
    },
    "6742": {
      "op": "DUP2"
    },
    "6743": {
      "op": "LT"
    },
    "6744": {
      "op": "ISZERO"
    },
    "6745": {
      "op": "PUSH2",
      "value": "0x1A6C"
    },
    "6748": {
      "op": "JUMPI"
    },
    "6749": {
      "op": "DUP2"
    },
    "6750": {
      "op": "DUP2"
    },
    "6751": {
      "op": "ADD"
    },
    "6752": {
      "op": "MLOAD"
    },
    "6753": {
      "op": "DUP4"
    },
    "6754": {
      "op": "DUP3"
    },
    "6755": {
      "op": "ADD"
    },
    "6756": {
      "op": "MSTORE"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6759": {
      "op": "ADD"
    },
    "6760": {
      "op": "PUSH2",
      "value": "0x1A54"
    },
    "6763": {
      "op": "JUMP"
    },
    "6764": {
      "op": "JUMPDEST"
    },
    "6765": {
      "op": "DUP4"
    },
    "6766": {
      "op": "DUP2"
    },
    "6767": {
      "op": "GT"
    },
    "6768": {
      "op": "ISZERO"
    },
    "6769": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "6772": {
      "op": "JUMPI"
    },
    "6773": {
      "op": "POP"
    },
    "6774": {
      "op": "POP"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6777": {
      "op": "SWAP2"
    },
    "6778": {
      "op": "ADD"
    },
    "6779": {
      "op": "MSTORE"
    },
    "6780": {
      "jump": "o",
      "op": "JUMP"
    },
    "6781": {
      "op": "JUMPDEST"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6784": {
      "op": "DUP3"
    },
    "6785": {
      "op": "MLOAD"
    },
    "6786": {
      "op": "PUSH2",
      "value": "0x1A8F"
    },
    "6789": {
      "op": "DUP2"
    },
    "6790": {
      "op": "DUP5"
    },
    "6791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6793": {
      "op": "DUP8"
    },
    "6794": {
      "op": "ADD"
    },
    "6795": {
      "op": "PUSH2",
      "value": "0x1A51"
    },
    "6798": {
      "jump": "i",
      "op": "JUMP"
    },
    "6799": {
      "op": "JUMPDEST"
    },
    "6800": {
      "op": "SWAP2"
    },
    "6801": {
      "op": "SWAP1"
    },
    "6802": {
      "op": "SWAP2"
    },
    "6803": {
      "op": "ADD"
    },
    "6804": {
      "op": "SWAP3"
    },
    "6805": {
      "op": "SWAP2"
    },
    "6806": {
      "op": "POP"
    },
    "6807": {
      "op": "POP"
    },
    "6808": {
      "jump": "o",
      "op": "JUMP"
    },
    "6809": {
      "op": "JUMPDEST"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6812": {
      "op": "DUP2"
    },
    "6813": {
      "op": "MSTORE"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6816": {
      "op": "DUP3"
    },
    "6817": {
      "op": "MLOAD"
    },
    "6818": {
      "op": "DUP1"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6821": {
      "op": "DUP5"
    },
    "6822": {
      "op": "ADD"
    },
    "6823": {
      "op": "MSTORE"
    },
    "6824": {
      "op": "PUSH2",
      "value": "0x1AB8"
    },
    "6827": {
      "op": "DUP2"
    },
    "6828": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6830": {
      "op": "DUP6"
    },
    "6831": {
      "op": "ADD"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6834": {
      "op": "DUP8"
    },
    "6835": {
      "op": "ADD"
    },
    "6836": {
      "op": "PUSH2",
      "value": "0x1A51"
    },
    "6839": {
      "jump": "i",
      "op": "JUMP"
    },
    "6840": {
      "op": "JUMPDEST"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6843": {
      "op": "ADD"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6846": {
      "op": "NOT"
    },
    "6847": {
      "op": "AND"
    },
    "6848": {
      "op": "SWAP2"
    },
    "6849": {
      "op": "SWAP1"
    },
    "6850": {
      "op": "SWAP2"
    },
    "6851": {
      "op": "ADD"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6854": {
      "op": "ADD"
    },
    "6855": {
      "op": "SWAP3"
    },
    "6856": {
      "op": "SWAP2"
    },
    "6857": {
      "op": "POP"
    },
    "6858": {
      "op": "POP"
    },
    "6859": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "64b6320d0907ff793508d8ab6e730c8115061de6",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity >=0.6.5;\n\n//BSC Address: 0xF43A7d04DcD76601dE0B0d03D761B09fBF095502\n//openzeppelin\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n//bitcrush\nimport \"./BankStaking.sol\";\nimport \"./LiveWallet.sol\";\n\ncontract BitcrushBankroll is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for ERC20Burnable;\n    uint256 public totalBankroll;\n    bool public poolDepleted;\n    uint256 public negativeBankroll;\n    //address of the crush token\n    ERC20Burnable public immutable crush;\n    BitcrushStaking public immutable stakingPool;\n\n    address public reserve;\n    address public lottery;\n\n    uint256 public constant DIVISOR = 10000;\n    uint256 public constant BURN_RATE = 100;\n    uint256 public profitThreshold;\n\n    //consistent 1% burn\n    uint256 public profitShare;\n    uint256 public houseBankrollShare;\n    uint256 public lotteryShare;\n    uint256 public reserveShare;\n\n    //profit tracking\n    uint256 public brSinceCompound;\n    uint256 public negativeBrSinceCompound;\n\n    //tracking historical winnings and profits\n    uint256 public totalWinnings;\n    uint256 public totalProfit;\n\n    address admin;\n    // MODIFIERS\n    modifier adminOnly() {\n        require(\n            msg.sender == address(admin),\n            \"Access restricted to admin only\"\n        );\n        _;\n    }\n\n    //authorized addresses\n    mapping(address => bool) public authorizedAddresses;\n    event SharesUpdated(\n        uint256 _houseBankrollShare,\n        uint256 _profitShare,\n        uint256 _lotteryShare,\n        uint256 _reserveShare\n    );\n\n    constructor(\n        ERC20Burnable _crush,\n        BitcrushStaking _stakingPool,\n        address _reserve,\n        address _lottery,\n        uint256 _profitShare,\n        uint256 _houseBankrollShare,\n        uint256 _lotteryShare,\n        uint256 _reserveShare,\n        address _admin\n    ) {\n        crush = _crush;\n        stakingPool = _stakingPool;\n        reserve = _reserve;\n        lottery = _lottery;\n        profitShare = _profitShare;\n        houseBankrollShare = _houseBankrollShare;\n        lotteryShare = _lotteryShare;\n        reserveShare = _reserveShare;\n        admin = _admin;\n    }\n\n    /// authorize address to register wins and losses\n    /// @param _address the address to be authorized\n    /// @dev updates the authorizedAddresses mapping to true for given address\n    function authorizeAddress(address _address) public onlyOwner {\n        authorizedAddresses[_address] = true;\n    }\n\n    /// remove authorization of an address from register wins and losses\n    /// @param _address the address to be removed\n    /// @dev updates the authorizedAddresses mapping by deleting entry for given address\n    function removeAuthorization(address _address) public onlyOwner {\n        delete authorizedAddresses[_address];\n    }\n\n    /// Add funds to the bankroll\n    /// @param _amount the amount to add\n    /// @dev adds funds to the bankroll\n    function addToBankroll(uint256 _amount) public adminOnly {\n        if (poolDepleted == true) {\n            if (_amount >= negativeBankroll) {\n                uint256 remainder = _amount.sub(negativeBankroll);\n                crush.safeTransferFrom(\n                    msg.sender,\n                    address(stakingPool),\n                    negativeBankroll\n                );\n                stakingPool.unfreezeStaking(negativeBankroll);\n                negativeBankroll = 0;\n                poolDepleted = false;\n                crush.safeTransferFrom(msg.sender, address(this), remainder);\n                totalBankroll = totalBankroll.add(remainder);\n            } else {\n                crush.safeTransferFrom(\n                    msg.sender,\n                    address(stakingPool),\n                    _amount\n                );\n                stakingPool.unfreezeStaking(_amount);\n                negativeBankroll = negativeBankroll.sub(_amount);\n            }\n        } else {\n            crush.safeTransferFrom(msg.sender, address(this), _amount);\n            totalBankroll = totalBankroll.add(_amount);\n        }\n    }\n\n    /// Add users loss to the bankroll\n    /// @param _amount the amount to add\n    /// @dev adds funds to the bankroll if bankroll is in positive, otherwise its transfered to the staking pool to recover frozen funds\n    function addUserLoss(uint256 _amount) public {\n        require(\n            authorizedAddresses[msg.sender] == true,\n            \"Caller must be authorized\"\n        );\n        //make game specific\n        //check if bankroll is in negative\n        //uint is unsigned, keep a bool to track\n        //if negative send to staking to replenish\n        //otherwise add to bankroll and check for profit\n        if (poolDepleted == true) {\n            if (_amount >= negativeBankroll) {\n                uint256 remainder = _amount.sub(negativeBankroll);\n                crush.safeTransferFrom(\n                    msg.sender,\n                    address(stakingPool),\n                    negativeBankroll\n                );\n                stakingPool.unfreezeStaking(negativeBankroll);\n                negativeBankroll = 0;\n                poolDepleted = false;\n                crush.safeTransferFrom(msg.sender, address(this), remainder);\n                totalBankroll = totalBankroll.add(remainder);\n            } else {\n                crush.safeTransferFrom(\n                    msg.sender,\n                    address(stakingPool),\n                    _amount\n                );\n                stakingPool.unfreezeStaking(_amount);\n                negativeBankroll = negativeBankroll.sub(_amount);\n            }\n        } else {\n            crush.safeTransferFrom(msg.sender, address(this), _amount);\n            totalBankroll = totalBankroll.add(_amount);\n        }\n        addToBrSinceCompound(_amount);\n    }\n\n    function recoverBankroll(uint256 _amount) public {\n        require(\n            msg.sender == address(stakingPool),\n            \"Caller must be staking pool\"\n        );\n        if (_amount >= negativeBankroll) {\n            uint256 remainder = _amount.sub(negativeBankroll);\n            negativeBankroll = 0;\n            poolDepleted = false;\n            crush.safeTransferFrom(msg.sender, address(this), remainder);\n            totalBankroll = totalBankroll.add(remainder);\n        } else {\n            negativeBankroll = negativeBankroll.sub(_amount);\n        }\n    }\n\n    /// Deduct users win from the bankroll\n    /// @param _amount the amount to deduct\n    /// @dev deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative\n    function payOutUserWinning(uint256 _amount, address _winner) public {\n        require(\n            authorizedAddresses[msg.sender] == true,\n            \"Caller must be authorized\"\n        );\n\n        //check if bankroll has funds available\n        //if not dip into staking pool for any remainder\n        // update bankroll accordingly\n        if (_amount > totalBankroll) {\n            uint256 remainder = _amount.sub(totalBankroll);\n            poolDepleted = true;\n            stakingPool.freezeStaking(remainder, _winner, msg.sender);\n            negativeBankroll = negativeBankroll.add(remainder);\n            transferWinnings(totalBankroll, _winner, msg.sender);\n\n            totalBankroll = 0;\n        } else {\n            totalBankroll = totalBankroll.sub(_amount);\n            transferWinnings(_amount, _winner, msg.sender);\n        }\n        removeFromBrSinceCompound(_amount);\n        totalWinnings = totalWinnings.add(_amount);\n    }\n\n    /// transfer winnings from bankroll contract to live wallet\n    /// @param _amount the amount to tranfer\n    /// @param _winner the winners address\n    /// @dev transfers funds from the bankroll to the live wallet as users winnings\n    function transferWinnings(\n        uint256 _amount,\n        address _winner,\n        address _lwAddress\n    ) internal {\n        crush.safeTransfer(_lwAddress, _amount);\n        BitcrushLiveWallet currentLw = BitcrushLiveWallet(_lwAddress);\n        currentLw.addToUserWinnings(_amount, _winner);\n    }\n\n    /// track funds added since last compound and profit transfer\n    /// @param _amount the amount to add\n    /// @dev add funds to the variable brSinceCompound\n    function addToBrSinceCompound(uint256 _amount) internal {\n        if (negativeBrSinceCompound > 0) {\n            if (_amount > negativeBrSinceCompound) {\n                uint256 difference = _amount.sub(negativeBrSinceCompound);\n                negativeBrSinceCompound = 0;\n                brSinceCompound = brSinceCompound.add(difference);\n            } else {\n                negativeBrSinceCompound = negativeBrSinceCompound.sub(_amount);\n            }\n        } else {\n            brSinceCompound = brSinceCompound.add(_amount);\n        }\n    }\n\n    /// track funds remvoed since last compound and profit transfer\n    /// @param _amount the amount to remove\n    /// @dev deduct funds to the variable brSinceCompound\n    function removeFromBrSinceCompound(uint256 _amount) internal {\n        if (negativeBrSinceCompound > 0) {\n            negativeBrSinceCompound = negativeBrSinceCompound.add(_amount);\n        } else {\n            if (_amount > brSinceCompound) {\n                uint256 difference = _amount.sub(brSinceCompound);\n                brSinceCompound = 0;\n                negativeBrSinceCompound = negativeBrSinceCompound.add(\n                    difference\n                );\n            } else {\n                brSinceCompound = brSinceCompound.sub(_amount);\n            }\n        }\n    }\n\n    /// transfer profits to staking pool to be ditributed to stakers.\n    /// @dev transfer profits since last compound to the staking pool while taking out necessary fees.\n    function transferProfit() public returns (uint256) {\n        require(\n            msg.sender == address(stakingPool),\n            \"Caller must be staking pool\"\n        );\n        if (brSinceCompound >= profitThreshold) {\n            //-----\n            uint256 profit = 0;\n            if (profitShare > 0) {\n                uint256 stakingBankrollProfit = brSinceCompound\n                    .mul(profitShare)\n                    .div(DIVISOR);\n                profit = profit.add(stakingBankrollProfit);\n            }\n            if (reserveShare > 0) {\n                uint256 reserveCrush = brSinceCompound.mul(reserveShare).div(\n                    DIVISOR\n                );\n                crush.safeTransfer(reserve, reserveCrush);\n            }\n            if (lotteryShare > 0) {\n                uint256 lotteryCrush = brSinceCompound.mul(lotteryShare).div(\n                    DIVISOR\n                );\n                crush.safeTransfer(lottery, lotteryCrush);\n            }\n\n            uint256 burn = brSinceCompound.mul(BURN_RATE).div(DIVISOR);\n            crush.burn(burn);\n\n            if (houseBankrollShare > 0) {\n                uint256 bankrollShare = brSinceCompound\n                    .mul(houseBankrollShare)\n                    .div(DIVISOR);\n                brSinceCompound = brSinceCompound.sub(bankrollShare);\n            }\n\n            totalBankroll = totalBankroll.sub(brSinceCompound);\n            //-----\n            crush.safeTransfer(address(stakingPool), profit);\n            totalProfit = totalProfit.add(profit);\n            brSinceCompound = 0;\n            return profit;\n        } else {\n            return 0;\n        }\n    }\n\n    /// Store `_threshold`.\n    /// @param _threshold the new value to store\n    /// @dev stores the _threshold address in the state variable `profitThreshold`\n    function setProfitThreshold(uint256 _threshold) public adminOnly {\n        require(\n            _threshold < 100000000000000000000000,\n            \"Max profit threshold cant be greater than 100k Crush\"\n        );\n        profitThreshold = _threshold;\n    }\n\n    /// updates all share percentage values\n    /// @param _houseBankrollShare the new value to store\n    /// @param _profitShare the new value to store\n    /// @param _lotteryShare the new value to store\n    /// @param _reserveShare the new value to store\n    /// @dev stores the _houseBankrollShare address in the state variable `houseBankrollShare`\n    function setShares(\n        uint256 _houseBankrollShare,\n        uint256 _profitShare,\n        uint256 _lotteryShare,\n        uint256 _reserveShare\n    ) public onlyOwner {\n        require(\n            _houseBankrollShare\n                .add(_profitShare)\n                .add(_lotteryShare)\n                .add(_reserveShare)\n                .add(BURN_RATE) == DIVISOR,\n            \"Sum of all shares should add up to 100%\"\n        );\n        houseBankrollShare = _houseBankrollShare;\n        profitShare = _profitShare;\n        lotteryShare = _lotteryShare;\n        reserveShare = _reserveShare;\n        emit SharesUpdated(\n            _houseBankrollShare,\n            _profitShare,\n            _lotteryShare,\n            _reserveShare\n        );\n    }\n\n    ///store new address in reserve address\n    /// @param _reserve the new address to store\n    /// @dev changes the address which recieves reserve fees\n    function setReserveAddress(address _reserve) public onlyOwner {\n        reserve = _reserve;\n    }\n\n    ///store new address in lottery address\n    /// @param _lottery the new address to store\n    /// @dev changes the address which recieves lottery fees\n    function setLotteryAddress(address _lottery) public onlyOwner {\n        lottery = _lottery;\n    }\n\n    ///store new address in admin address\n    /// @param _admin the new address to store\n    /// @dev changes the address which is used by the adminOnly modifier\n    function setAdmin(address _admin) public onlyOwner {\n        admin = _admin;\n    }\n}\n",
  "sourceMap": "449:13501:18:-:0;;;1796:600;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:12;921:18:0;:32::i;:::-;-1:-1:-1;;;;;2097:14:18;;;;;2121:26;;;;;2157:7;:18;;;;;-1:-1:-1;;;;;;2157:18:18;;;;;;2185:7;:18;;;;;;;;;;;;;;;2213:11;:26;;;;2249:18;:40;2299:12;:28;2337:12;:28;2375:5;:14;;;;;;;;;;;449:13501;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:146:33:-;-1:-1:-1;;;;;104:31:33;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:1159::-;354:6;362;370;378;386;394;402;410;418;471:3;459:9;450:7;446:23;442:33;439:53;;;488:1;485;478:12;439:53;520:9;514:16;539:46;579:5;539:46;:::i;:::-;654:2;639:18;;633:25;604:5;;-1:-1:-1;667:48:33;633:25;667:48;:::i;:::-;786:2;771:18;;765:25;734:7;;-1:-1:-1;799:48:33;765:25;799:48;:::i;:::-;918:2;903:18;;897:25;866:7;;-1:-1:-1;931:48:33;897:25;931:48;:::i;:::-;998:7;988:17;;;1045:3;1034:9;1030:19;1024:26;1014:36;;1090:3;1079:9;1075:19;1069:26;1059:36;;1135:3;1124:9;1120:19;1114:26;1104:36;;1180:3;1169:9;1165:19;1159:26;1149:36;;1230:3;1219:9;1215:19;1209:26;1244:48;1284:7;1244:48;:::i;:::-;1311:7;1301:17;;;165:1159;;;;;;;;;;;:::o;:::-;449:13501:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Bankroll.sol",
  "type": "contract"
}