{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract CRUSHToken",
          "name": "_crush",
          "type": "address"
        },
        {
          "internalType": "contract BitcrushBankroll",
          "name": "_bankroll",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reserveAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "DepositWin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_lockPeriod",
          "type": "uint256"
        }
      ],
      "name": "LockPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "addToUserWinnings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addbet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "addbetWithAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bankroll",
      "outputs": [
        {
          "internalType": "contract BitcrushBankroll",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "betAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockTimeStamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blacklistSelf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "blacklistUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklistedUsers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crush",
      "outputs": [
        {
          "internalType": "contract CRUSHToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earlyWithdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_bets",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        }
      ],
      "name": "registerLoss",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_wins",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        }
      ],
      "name": "registerWin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        }
      ],
      "name": "releaseBetLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_earlyWithdrawFee",
          "type": "uint256"
        }
      ],
      "name": "setEarlyWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lockPeriod",
          "type": "uint256"
        }
      ],
      "name": "setLockPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserveAddress",
          "type": "address"
        }
      ],
      "name": "setReserveAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract BitcrushStaking",
          "name": "_stakingPool",
          "type": "address"
        }
      ],
      "name": "setStakingPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract BitcrushStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        }
      ],
      "name": "updateBetLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "whitelistUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawBet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "withdrawBetForUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "12": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "16": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "17": "contracts/BankStaking.sol",
    "18": "contracts/Bankroll.sol",
    "19": "contracts/CrushToken.sol",
    "2": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "22": "contracts/LiveWallet.sol",
    "3": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "5": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "6": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/LiveWallet.sol",
    "exportedSymbols": {
      "Address": [
        12694
      ],
      "BitcrushBankroll": [
        3203
      ],
      "BitcrushLiveWallet": [
        7167
      ],
      "BitcrushStaking": [
        2213
      ],
      "CRUSHToken": [
        3289
      ],
      "Context": [
        12716
      ],
      "ERC20": [
        12296
      ],
      "IERC20": [
        12374
      ],
      "IERC20Metadata": [
        12399
      ],
      "Ownable": [
        11128
      ],
      "SafeERC20": [
        11352
      ],
      "SafeMath": [
        11664
      ]
    },
    "id": 7168,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6408,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:24:22"
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 6409,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7168,
        "sourceUnit": 11665,
        "src": "185:57:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 6410,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7168,
        "sourceUnit": 11353,
        "src": "243:65:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CrushToken.sol",
        "file": "./CrushToken.sol",
        "id": 6411,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7168,
        "sourceUnit": 3290,
        "src": "320:26:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Bankroll.sol",
        "file": "./Bankroll.sol",
        "id": 6412,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7168,
        "sourceUnit": 3204,
        "src": "347:24:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BankStaking.sol",
        "file": "./BankStaking.sol",
        "id": 6413,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7168,
        "sourceUnit": 2214,
        "src": "372:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6414,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11128,
              "src": "432:7:22"
            },
            "id": 6415,
            "nodeType": "InheritanceSpecifier",
            "src": "432:7:22"
          }
        ],
        "canonicalName": "BitcrushLiveWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7167,
        "linearizedBaseContracts": [
          7167,
          11128,
          12716
        ],
        "name": "BitcrushLiveWallet",
        "nameLocation": "410:18:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6418,
            "libraryName": {
              "id": 6416,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11664,
              "src": "452:8:22"
            },
            "nodeType": "UsingForDirective",
            "src": "446:27:22",
            "typeName": {
              "id": 6417,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "465:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 6422,
            "libraryName": {
              "id": 6419,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11352,
              "src": "484:9:22"
            },
            "nodeType": "UsingForDirective",
            "src": "478:31:22",
            "typeName": {
              "id": 6421,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6420,
                "name": "CRUSHToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3289,
                "src": "498:10:22"
              },
              "referencedDeclaration": 3289,
              "src": "498:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                "typeString": "contract CRUSHToken"
              }
            }
          },
          {
            "canonicalName": "BitcrushLiveWallet.wallet",
            "id": 6427,
            "members": [
              {
                "constant": false,
                "id": 6424,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "574:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 6427,
                "src": "566:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6423,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "566:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6426,
                "mutability": "mutable",
                "name": "lockTimeStamp",
                "nameLocation": "599:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 6427,
                "src": "591:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6425,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "wallet",
            "nameLocation": "521:6:22",
            "nodeType": "StructDefinition",
            "scope": 7167,
            "src": "514:105:22",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "22c0aec7",
            "id": 6431,
            "mutability": "mutable",
            "name": "blacklistedUsers",
            "nameLocation": "657:16:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "625:48:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6430,
              "keyType": {
                "id": 6428,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "633:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "625:24:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 6429,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "644:4:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ebcfcf6b",
            "id": 6436,
            "mutability": "mutable",
            "name": "betAmounts",
            "nameLocation": "757:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "723:44:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
              "typeString": "mapping(address => struct BitcrushLiveWallet.wallet)"
            },
            "typeName": {
              "id": 6435,
              "keyType": {
                "id": 6432,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "731:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "723:26:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                "typeString": "mapping(address => struct BitcrushLiveWallet.wallet)"
              },
              "valueType": {
                "id": 6434,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6433,
                  "name": "wallet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6427,
                  "src": "742:6:22"
                },
                "referencedDeclaration": 6427,
                "src": "742:6:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_wallet_$6427_storage_ptr",
                  "typeString": "struct BitcrushLiveWallet.wallet"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b359a9f9",
            "id": 6439,
            "mutability": "immutable",
            "name": "crush",
            "nameLocation": "835:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "807:33:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CRUSHToken_$3289",
              "typeString": "contract CRUSHToken"
            },
            "typeName": {
              "id": 6438,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6437,
                "name": "CRUSHToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3289,
                "src": "807:10:22"
              },
              "referencedDeclaration": 3289,
              "src": "807:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                "typeString": "contract CRUSHToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c657eb0",
            "id": 6442,
            "mutability": "immutable",
            "name": "bankroll",
            "nameLocation": "880:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "846:42:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
              "typeString": "contract BitcrushBankroll"
            },
            "typeName": {
              "id": 6441,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6440,
                "name": "BitcrushBankroll",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3203,
                "src": "846:16:22"
              },
              "referencedDeclaration": 3203,
              "src": "846:16:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                "typeString": "contract BitcrushBankroll"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c56ae3b",
            "id": 6445,
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "917:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "894:34:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
              "typeString": "contract BitcrushStaking"
            },
            "typeName": {
              "id": 6444,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6443,
                "name": "BitcrushStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2213,
                "src": "894:15:22"
              },
              "referencedDeclaration": 2213,
              "src": "894:15:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                "typeString": "contract BitcrushStaking"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3410fe6e",
            "id": 6448,
            "mutability": "constant",
            "name": "DIVISOR",
            "nameLocation": "959:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "935:39:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6446,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "935:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 6447,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "969:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3fd8b02f",
            "id": 6451,
            "mutability": "mutable",
            "name": "lockPeriod",
            "nameLocation": "995:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "980:33:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6449,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "980:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130383030",
              "id": 6450,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1008:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10800_by_1",
                "typeString": "int_const 10800"
              },
              "value": "10800"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f79ed94b",
            "id": 6453,
            "mutability": "mutable",
            "name": "reserveAddress",
            "nameLocation": "1034:14:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "1019:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6452,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1019:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a80a7882",
            "id": 6456,
            "mutability": "mutable",
            "name": "earlyWithdrawFee",
            "nameLocation": "1069:16:22",
            "nodeType": "VariableDeclaration",
            "scope": 7167,
            "src": "1054:36:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6454,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1054:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 6455,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1088:2:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 6462,
            "name": "Withdraw",
            "nameLocation": "1128:8:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6458,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1153:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6462,
                  "src": "1137:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1137:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6460,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1179:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6462,
                  "src": "1163:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1136:51:22"
            },
            "src": "1122:66:22"
          },
          {
            "anonymous": false,
            "id": 6468,
            "name": "Deposit",
            "nameLocation": "1199:7:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6464,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1223:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6468,
                  "src": "1207:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6466,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1249:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6468,
                  "src": "1233:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:51:22"
            },
            "src": "1193:65:22"
          },
          {
            "anonymous": false,
            "id": 6474,
            "name": "DepositWin",
            "nameLocation": "1269:10:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6470,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1296:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6474,
                  "src": "1280:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6472,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1322:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6474,
                  "src": "1306:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1279:51:22"
            },
            "src": "1263:68:22"
          },
          {
            "anonymous": false,
            "id": 6478,
            "name": "LockPeriodUpdated",
            "nameLocation": "1342:17:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6476,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_lockPeriod",
                  "nameLocation": "1376:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6478,
                  "src": "1360:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:29:22"
            },
            "src": "1336:53:22"
          },
          {
            "body": {
              "id": 6501,
              "nodeType": "Block",
              "src": "1509:103:22",
              "statements": [
                {
                  "expression": {
                    "id": 6491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6489,
                      "name": "crush",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6439,
                      "src": "1519:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                        "typeString": "contract CRUSHToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6490,
                      "name": "_crush",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6481,
                      "src": "1527:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                        "typeString": "contract CRUSHToken"
                      }
                    },
                    "src": "1519:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                      "typeString": "contract CRUSHToken"
                    }
                  },
                  "id": 6492,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:14:22"
                },
                {
                  "expression": {
                    "id": 6495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6493,
                      "name": "bankroll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6442,
                      "src": "1543:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                        "typeString": "contract BitcrushBankroll"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6494,
                      "name": "_bankroll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6484,
                      "src": "1554:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                        "typeString": "contract BitcrushBankroll"
                      }
                    },
                    "src": "1543:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                      "typeString": "contract BitcrushBankroll"
                    }
                  },
                  "id": 6496,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:20:22"
                },
                {
                  "expression": {
                    "id": 6499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6497,
                      "name": "reserveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6453,
                      "src": "1573:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6498,
                      "name": "_reserveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6486,
                      "src": "1590:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1573:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6500,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:32:22"
                }
              ]
            },
            "id": 6502,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6481,
                  "mutability": "mutable",
                  "name": "_crush",
                  "nameLocation": "1427:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6502,
                  "src": "1416:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                    "typeString": "contract CRUSHToken"
                  },
                  "typeName": {
                    "id": 6480,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6479,
                      "name": "CRUSHToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3289,
                      "src": "1416:10:22"
                    },
                    "referencedDeclaration": 3289,
                    "src": "1416:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                      "typeString": "contract CRUSHToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6484,
                  "mutability": "mutable",
                  "name": "_bankroll",
                  "nameLocation": "1460:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6502,
                  "src": "1443:26:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                    "typeString": "contract BitcrushBankroll"
                  },
                  "typeName": {
                    "id": 6483,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6482,
                      "name": "BitcrushBankroll",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3203,
                      "src": "1443:16:22"
                    },
                    "referencedDeclaration": 3203,
                    "src": "1443:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                      "typeString": "contract BitcrushBankroll"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6486,
                  "mutability": "mutable",
                  "name": "_reserveAddress",
                  "nameLocation": "1487:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6502,
                  "src": "1479:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:102:22"
            },
            "returnParameters": {
              "id": 6488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:22"
            },
            "scope": 7167,
            "src": "1395:217:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6567,
              "nodeType": "Block",
              "src": "1761:439:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6509,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6505,
                          "src": "1779:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1789:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1779:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657420616d6f756e742073686f756c642062652067726561746572207468616e2030",
                        "id": 6512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1792:37:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa0231d60795d3e5ac544cdade6c7768a091269be559918fb8fd4328964ab93b",
                          "typeString": "literal_string \"Bet amount should be greater than 0\""
                        },
                        "value": "Bet amount should be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa0231d60795d3e5ac544cdade6c7768a091269be559918fb8fd4328964ab93b",
                          "typeString": "literal_string \"Bet amount should be greater than 0\""
                        }
                      ],
                      "id": 6508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1771:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:59:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6514,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:59:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 6516,
                            "name": "blacklistedUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6431,
                            "src": "1848:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 6519,
                          "indexExpression": {
                            "expression": {
                              "id": 6517,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1865:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1865:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1848:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 6520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1880:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1848:37:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220697320626c61636b204c6973746564",
                        "id": 6522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1887:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33e3edda4014554f432c615068dfc3df4e01e293fd5ee453c9e861b1944e1baa",
                          "typeString": "literal_string \"User is black Listed\""
                        },
                        "value": "User is black Listed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33e3edda4014554f432c615068dfc3df4e01e293fd5ee453c9e861b1944e1baa",
                          "typeString": "literal_string \"User is black Listed\""
                        }
                      ],
                      "id": 6515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1840:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:70:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6524,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:70:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6528,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1943:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1943:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6532,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1963:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                              "typeString": "contract BitcrushLiveWallet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                              "typeString": "contract BitcrushLiveWallet"
                            }
                          ],
                          "id": 6531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1955:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1955:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1955:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6534,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6505,
                        "src": "1970:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6525,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6439,
                        "src": "1920:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 6527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11185,
                      "src": "1920:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 6535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1920:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6536,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:58:22"
                },
                {
                  "expression": {
                    "id": 6550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6537,
                          "name": "betAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6436,
                          "src": "1988:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                          }
                        },
                        "id": 6540,
                        "indexExpression": {
                          "expression": {
                            "id": 6538,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1999:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1999:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1988:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                        }
                      },
                      "id": 6541,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6424,
                      "src": "1988:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6548,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6505,
                          "src": "2069:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6542,
                              "name": "betAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "2021:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                              }
                            },
                            "id": 6545,
                            "indexExpression": {
                              "expression": {
                                "id": 6543,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2032:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2032:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2021:22:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_wallet_$6427_storage",
                              "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                            }
                          },
                          "id": 6546,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6424,
                          "src": "2021:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "2021:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2021:65:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1988:98:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6551,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:98:22"
                },
                {
                  "expression": {
                    "id": 6559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6552,
                          "name": "betAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6436,
                          "src": "2096:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                          }
                        },
                        "id": 6555,
                        "indexExpression": {
                          "expression": {
                            "id": 6553,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2107:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2107:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2096:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                        }
                      },
                      "id": 6556,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lockTimeStamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6426,
                      "src": "2096:36:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6557,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2135:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2135:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2096:54:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6560,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:54:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6562,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2173:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2173:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6564,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6505,
                        "src": "2185:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6561,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "2165:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2165:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6566,
                  "nodeType": "EmitStatement",
                  "src": "2160:33:22"
                }
              ]
            },
            "documentation": {
              "id": 6503,
              "nodeType": "StructuredDocumentation",
              "src": "1618:98:22",
              "text": "add funds to the senders live wallet\n @dev adds funds to the sender user's live wallets"
            },
            "functionSelector": "6145b22c",
            "id": 6568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addbet",
            "nameLocation": "1730:6:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6505,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1745:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6568,
                  "src": "1737:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1737:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1736:17:22"
            },
            "returnParameters": {
              "id": 6507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:0:22"
            },
            "scope": 7167,
            "src": "1721:479:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6630,
              "nodeType": "Block",
              "src": "2384:395:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6577,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6571,
                          "src": "2402:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2412:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2402:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657420616d6f756e742073686f756c642062652067726561746572207468616e2030",
                        "id": 6580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2415:37:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa0231d60795d3e5ac544cdade6c7768a091269be559918fb8fd4328964ab93b",
                          "typeString": "literal_string \"Bet amount should be greater than 0\""
                        },
                        "value": "Bet amount should be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa0231d60795d3e5ac544cdade6c7768a091269be559918fb8fd4328964ab93b",
                          "typeString": "literal_string \"Bet amount should be greater than 0\""
                        }
                      ],
                      "id": 6576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2394:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2394:59:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6582,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:59:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 6584,
                            "name": "blacklistedUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6431,
                            "src": "2471:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 6586,
                          "indexExpression": {
                            "id": 6585,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6573,
                            "src": "2488:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2471:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 6587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2498:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2471:32:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220697320626c61636b204c6973746564",
                        "id": 6589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2505:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33e3edda4014554f432c615068dfc3df4e01e293fd5ee453c9e861b1944e1baa",
                          "typeString": "literal_string \"User is black Listed\""
                        },
                        "value": "User is black Listed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33e3edda4014554f432c615068dfc3df4e01e293fd5ee453c9e861b1944e1baa",
                          "typeString": "literal_string \"User is black Listed\""
                        }
                      ],
                      "id": 6583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2463:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:65:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6591,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:65:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6595,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2561:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2561:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6599,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2581:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                              "typeString": "contract BitcrushLiveWallet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                              "typeString": "contract BitcrushLiveWallet"
                            }
                          ],
                          "id": 6598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2573:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6597,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2573:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2573:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6601,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6571,
                        "src": "2588:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6592,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6439,
                        "src": "2538:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 6594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11185,
                      "src": "2538:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 6602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6603,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:58:22"
                },
                {
                  "expression": {
                    "id": 6615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6604,
                          "name": "betAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6436,
                          "src": "2606:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                          }
                        },
                        "id": 6606,
                        "indexExpression": {
                          "id": 6605,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6573,
                          "src": "2617:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2606:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                        }
                      },
                      "id": 6607,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6424,
                      "src": "2606:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6613,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6571,
                          "src": "2664:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6608,
                              "name": "betAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "2634:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                              }
                            },
                            "id": 6610,
                            "indexExpression": {
                              "id": 6609,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6573,
                              "src": "2645:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2634:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_wallet_$6427_storage",
                              "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                            }
                          },
                          "id": 6611,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6424,
                          "src": "2634:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "2634:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2634:38:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2606:66:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6616,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:66:22"
                },
                {
                  "expression": {
                    "id": 6623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6617,
                          "name": "betAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6436,
                          "src": "2682:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                          }
                        },
                        "id": 6619,
                        "indexExpression": {
                          "id": 6618,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6573,
                          "src": "2693:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2682:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                        }
                      },
                      "id": 6620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lockTimeStamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6426,
                      "src": "2682:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6621,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2716:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2716:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2682:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6624,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:49:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6626,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6573,
                        "src": "2757:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6627,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6571,
                        "src": "2764:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6625,
                      "name": "DepositWin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6474,
                      "src": "2746:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2746:26:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6629,
                  "nodeType": "EmitStatement",
                  "src": "2741:31:22"
                }
              ]
            },
            "documentation": {
              "id": 6569,
              "nodeType": "StructuredDocumentation",
              "src": "2206:107:22",
              "text": "add funds to the provided users live wallet\n @dev adds funds to the specified users live wallets"
            },
            "functionSelector": "7efd3813",
            "id": 6631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addbetWithAddress",
            "nameLocation": "2327:17:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6571,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2353:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6631,
                  "src": "2345:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6573,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2370:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6631,
                  "src": "2362:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2362:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2344:32:22"
            },
            "returnParameters": {
              "id": 6575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2384:0:22"
            },
            "scope": 7167,
            "src": "2318:461:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6644,
              "nodeType": "Block",
              "src": "2994:49:22",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 6639,
                        "name": "betAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6436,
                        "src": "3011:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                          "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                        }
                      },
                      "id": 6641,
                      "indexExpression": {
                        "id": 6640,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6634,
                        "src": "3022:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3011:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_wallet_$6427_storage",
                        "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                      }
                    },
                    "id": 6642,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6424,
                    "src": "3011:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6638,
                  "id": 6643,
                  "nodeType": "Return",
                  "src": "3004:32:22"
                }
              ]
            },
            "documentation": {
              "id": 6632,
              "nodeType": "StructuredDocumentation",
              "src": "2785:140:22",
              "text": "return the current balance of user in the live wallet\n @dev return current the balance of provided user addrss in the live wallet"
            },
            "functionSelector": "70a08231",
            "id": 6645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2939:9:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6634,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2957:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6645,
                  "src": "2949:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2948:15:22"
            },
            "returnParameters": {
              "id": 6638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6637,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6645,
                  "src": "2985:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2984:9:22"
            },
            "scope": 7167,
            "src": "2930:113:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6690,
              "nodeType": "Block",
              "src": "3322:251:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6658,
                            "name": "_wins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6649,
                            "src": "3353:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 6659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3353:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6660,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6652,
                            "src": "3369:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 6661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3369:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3353:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d65746572206c656e677468732073686f756c6420626520657175616c",
                        "id": 6663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3396:35:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31c0df67f15ee6eded034dc898c556eef0365958ebcc796330f8bc43d5590631",
                          "typeString": "literal_string \"Parameter lengths should be equal\""
                        },
                        "value": "Parameter lengths should be equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31c0df67f15ee6eded034dc898c556eef0365958ebcc796330f8bc43d5590631",
                          "typeString": "literal_string \"Parameter lengths should be equal\""
                        }
                      ],
                      "id": 6657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3332:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3332:109:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6665,
                  "nodeType": "ExpressionStatement",
                  "src": "3332:109:22"
                },
                {
                  "body": {
                    "id": 6688,
                    "nodeType": "Block",
                    "src": "3495:72:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 6680,
                                "name": "_wins",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6649,
                                "src": "3536:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 6682,
                              "indexExpression": {
                                "id": 6681,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6667,
                                "src": "3542:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3536:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 6683,
                                "name": "_users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6652,
                                "src": "3546:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 6685,
                              "indexExpression": {
                                "id": 6684,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6667,
                                "src": "3553:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3546:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 6677,
                              "name": "bankroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6442,
                              "src": "3509:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                "typeString": "contract BitcrushBankroll"
                              }
                            },
                            "id": 6679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payOutUserWinning",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2788,
                            "src": "3509:26:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 6686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3509:47:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6687,
                        "nodeType": "ExpressionStatement",
                        "src": "3509:47:22"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6670,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6667,
                      "src": "3471:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 6671,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6652,
                        "src": "3475:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 6672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3475:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3471:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6689,
                  "initializationExpression": {
                    "assignments": [
                      6667
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6667,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3464:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 6689,
                        "src": "3456:9:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3456:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6669,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3468:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3456:13:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3490:3:22",
                      "subExpression": {
                        "id": 6674,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6667,
                        "src": "3490:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6676,
                    "nodeType": "ExpressionStatement",
                    "src": "3490:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "3451:116:22"
                }
              ]
            },
            "documentation": {
              "id": 6646,
              "nodeType": "StructuredDocumentation",
              "src": "3049:161:22",
              "text": "register wins for users in game with amounts\n @dev register wins for users during gameplay. wins are reported in aggregated form from the game server."
            },
            "functionSelector": "f2150bbb",
            "id": 6691,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6654,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "3308:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "3308:9:22"
              }
            ],
            "name": "registerWin",
            "nameLocation": "3224:11:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6649,
                  "mutability": "mutable",
                  "name": "_wins",
                  "nameLocation": "3253:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6691,
                  "src": "3236:22:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6647,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3236:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6648,
                    "nodeType": "ArrayTypeName",
                    "src": "3236:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6652,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "3277:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6691,
                  "src": "3260:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6650,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3260:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6651,
                    "nodeType": "ArrayTypeName",
                    "src": "3260:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3235:49:22"
            },
            "returnParameters": {
              "id": 6656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3322:0:22"
            },
            "scope": 7167,
            "src": "3215:358:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6771,
              "nodeType": "Block",
              "src": "3852:596:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6704,
                            "name": "_bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6695,
                            "src": "3883:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 6705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3883:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6706,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6698,
                            "src": "3899:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 6707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3899:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3883:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d65746572206c656e677468732073686f756c6420626520657175616c",
                        "id": 6709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3926:35:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31c0df67f15ee6eded034dc898c556eef0365958ebcc796330f8bc43d5590631",
                          "typeString": "literal_string \"Parameter lengths should be equal\""
                        },
                        "value": "Parameter lengths should be equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31c0df67f15ee6eded034dc898c556eef0365958ebcc796330f8bc43d5590631",
                          "typeString": "literal_string \"Parameter lengths should be equal\""
                        }
                      ],
                      "id": 6703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3862:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:109:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6711,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:109:22"
                },
                {
                  "body": {
                    "id": 6769,
                    "nodeType": "Block",
                    "src": "4025:417:22",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 6723,
                              "name": "_bets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6695,
                              "src": "4043:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 6725,
                            "indexExpression": {
                              "id": 6724,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6713,
                              "src": "4049:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4043:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4054:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4043:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6768,
                        "nodeType": "IfStatement",
                        "src": "4039:393:22",
                        "trueBody": {
                          "id": 6767,
                          "nodeType": "Block",
                          "src": "4057:375:22",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 6738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6729,
                                          "name": "betAmounts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6436,
                                          "src": "4104:10:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                                          }
                                        },
                                        "id": 6733,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 6730,
                                            "name": "_users",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6698,
                                            "src": "4115:6:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 6732,
                                          "indexExpression": {
                                            "id": 6731,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6713,
                                            "src": "4122:1:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4115:9:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4104:21:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                                        }
                                      },
                                      "id": 6734,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balance",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6424,
                                      "src": "4104:29:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 6735,
                                        "name": "_bets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6695,
                                        "src": "4137:5:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 6737,
                                      "indexExpression": {
                                        "id": 6736,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6713,
                                        "src": "4143:1:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4137:8:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4104:41:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4c6f73732062657420616d6f756e742069732067726561746572207468616e20617661696c61626c652062616c616e6365",
                                    "id": 6739,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4167:51:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_30f73d3b991b45c2b3908163a391b808779d89f015292b2302f7498a25602932",
                                      "typeString": "literal_string \"Loss bet amount is greater than available balance\""
                                    },
                                    "value": "Loss bet amount is greater than available balance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_30f73d3b991b45c2b3908163a391b808779d89f015292b2302f7498a25602932",
                                      "typeString": "literal_string \"Loss bet amount is greater than available balance\""
                                    }
                                  ],
                                  "id": 6728,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4075:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 6740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4075:161:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 6741,
                              "nodeType": "ExpressionStatement",
                              "src": "4075:161:22"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 6743,
                                      "name": "_bets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6695,
                                      "src": "4273:5:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 6745,
                                    "indexExpression": {
                                      "id": 6744,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6713,
                                      "src": "4279:1:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4273:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 6742,
                                  "name": "transferToBankroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6795,
                                  "src": "4254:18:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 6746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4254:28:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 6747,
                              "nodeType": "ExpressionStatement",
                              "src": "4254:28:22"
                            },
                            {
                              "expression": {
                                "id": 6765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 6748,
                                      "name": "betAmounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6436,
                                      "src": "4300:10:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                        "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                                      }
                                    },
                                    "id": 6752,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 6749,
                                        "name": "_users",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6698,
                                        "src": "4311:6:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 6751,
                                      "indexExpression": {
                                        "id": 6750,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6713,
                                        "src": "4318:1:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4311:9:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4300:21:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_wallet_$6427_storage",
                                      "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                                    }
                                  },
                                  "id": 6753,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6424,
                                  "src": "4300:29:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 6761,
                                        "name": "_bets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6695,
                                        "src": "4408:5:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 6763,
                                      "indexExpression": {
                                        "id": 6762,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6713,
                                        "src": "4414:1:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4408:8:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6754,
                                          "name": "betAmounts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6436,
                                          "src": "4332:10:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                                          }
                                        },
                                        "id": 6758,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 6755,
                                            "name": "_users",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6698,
                                            "src": "4343:6:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 6757,
                                          "indexExpression": {
                                            "id": 6756,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6713,
                                            "src": "4350:1:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4343:9:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4332:21:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                                        }
                                      },
                                      "id": 6759,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balance",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6424,
                                      "src": "4332:50:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 6760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "4332:75:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 6764,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4332:85:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4300:117:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6766,
                              "nodeType": "ExpressionStatement",
                              "src": "4300:117:22"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6716,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6713,
                      "src": "4001:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 6717,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6698,
                        "src": "4005:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 6718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4005:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4001:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6770,
                  "initializationExpression": {
                    "assignments": [
                      6713
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6713,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3994:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 6770,
                        "src": "3986:9:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6712,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3986:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6715,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3998:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3986:13:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4020:3:22",
                      "subExpression": {
                        "id": 6720,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6713,
                        "src": "4020:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6722,
                    "nodeType": "ExpressionStatement",
                    "src": "4020:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "3981:461:22"
                }
              ]
            },
            "documentation": {
              "id": 6692,
              "nodeType": "StructuredDocumentation",
              "src": "3579:160:22",
              "text": "register loss for users in game with amounts\n @dev register loss for users during gameplay. loss is reported in aggregated form from the game server."
            },
            "functionSelector": "a4ae1c56",
            "id": 6772,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6701,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6700,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "3838:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "3838:9:22"
              }
            ],
            "name": "registerLoss",
            "nameLocation": "3753:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6695,
                  "mutability": "mutable",
                  "name": "_bets",
                  "nameLocation": "3783:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6772,
                  "src": "3766:22:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6693,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3766:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6694,
                    "nodeType": "ArrayTypeName",
                    "src": "3766:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6698,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "3807:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6772,
                  "src": "3790:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6696,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3790:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6697,
                    "nodeType": "ArrayTypeName",
                    "src": "3790:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3765:49:22"
            },
            "returnParameters": {
              "id": 6702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3852:0:22"
            },
            "scope": 7167,
            "src": "3744:704:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6794,
              "nodeType": "Block",
              "src": "4654:97:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6783,
                            "name": "bankroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6442,
                            "src": "4686:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                              "typeString": "contract BitcrushBankroll"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                              "typeString": "contract BitcrushBankroll"
                            }
                          ],
                          "id": 6782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4678:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4678:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4678:17:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6785,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6775,
                        "src": "4697:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6778,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6439,
                        "src": "4664:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 6780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11875,
                      "src": "4664:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4664:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6787,
                  "nodeType": "ExpressionStatement",
                  "src": "4664:41:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6791,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6775,
                        "src": "4736:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6788,
                        "name": "bankroll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6442,
                        "src": "4715:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                          "typeString": "contract BitcrushBankroll"
                        }
                      },
                      "id": 6790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addUserLoss",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2636,
                      "src": "4715:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 6792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4715:29:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6793,
                  "nodeType": "ExpressionStatement",
                  "src": "4715:29:22"
                }
              ]
            },
            "documentation": {
              "id": 6773,
              "nodeType": "StructuredDocumentation",
              "src": "4454:141:22",
              "text": "transfer funds from live wallet to the bankroll on user loss\n @dev transfer funds to the bankroll contract when users lose in game"
            },
            "id": 6795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferToBankroll",
            "nameLocation": "4609:18:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6775,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4636:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6795,
                  "src": "4628:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4627:17:22"
            },
            "returnParameters": {
              "id": 6777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4654:0:22"
            },
            "scope": 7167,
            "src": "4600:151:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6864,
              "nodeType": "Block",
              "src": "4936:580:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6802,
                              "name": "betAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "4967:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                              }
                            },
                            "id": 6805,
                            "indexExpression": {
                              "expression": {
                                "id": 6803,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4978:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4978:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4967:22:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_wallet_$6427_storage",
                              "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                            }
                          },
                          "id": 6806,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6424,
                          "src": "4967:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 6807,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6798,
                          "src": "5001:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4967:41:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626574206c657373207468616e20616d6f756e74207769746864726177",
                        "id": 6809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5022:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8557004d7f4eae0d1be8054bf08b2a80c436e4b9ab15c7e6c0c4f371a51886f4",
                          "typeString": "literal_string \"bet less than amount withdraw\""
                        },
                        "value": "bet less than amount withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8557004d7f4eae0d1be8054bf08b2a80c436e4b9ab15c7e6c0c4f371a51886f4",
                          "typeString": "literal_string \"bet less than amount withdraw\""
                        }
                      ],
                      "id": 6801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4946:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4946:117:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6811,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:117:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 6813,
                                "name": "betAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6436,
                                "src": "5094:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                  "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                                }
                              },
                              "id": 6816,
                              "indexExpression": {
                                "expression": {
                                  "id": 6814,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5105:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 6815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5105:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5094:22:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_wallet_$6427_storage",
                                "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                              }
                            },
                            "id": 6817,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockTimeStamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6426,
                            "src": "5094:36:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5134:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5094:41:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 6826,
                                "name": "lockPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6451,
                                "src": "5196:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 6820,
                                    "name": "betAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6436,
                                    "src": "5155:10:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                      "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                                    }
                                  },
                                  "id": 6823,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 6821,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5166:3:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 6822,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5166:10:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5155:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_wallet_$6427_storage",
                                    "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                                  }
                                },
                                "id": 6824,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockTimeStamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6426,
                                "src": "5155:36:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "5155:40:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5155:52:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 6828,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5226:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 6829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5226:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5155:86:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5094:147:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657420416d6f756e74206c6f636b65642c20706c656173652074727920616761696e206c61746572",
                        "id": 6832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5255:43:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1be5c47ec5b43853cfd6944dead2377210ae003d374454de23195ef2747318a0",
                          "typeString": "literal_string \"Bet Amount locked, please try again later\""
                        },
                        "value": "Bet Amount locked, please try again later"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1be5c47ec5b43853cfd6944dead2377210ae003d374454de23195ef2747318a0",
                          "typeString": "literal_string \"Bet Amount locked, please try again later\""
                        }
                      ],
                      "id": 6812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5073:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5073:235:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6834,
                  "nodeType": "ExpressionStatement",
                  "src": "5073:235:22"
                },
                {
                  "expression": {
                    "id": 6848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6835,
                          "name": "betAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6436,
                          "src": "5318:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                          }
                        },
                        "id": 6838,
                        "indexExpression": {
                          "expression": {
                            "id": 6836,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5329:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5329:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5318:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                        }
                      },
                      "id": 6839,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6424,
                      "src": "5318:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6846,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6798,
                          "src": "5399:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6840,
                              "name": "betAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "5351:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                              }
                            },
                            "id": 6843,
                            "indexExpression": {
                              "expression": {
                                "id": 6841,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5362:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5362:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5351:22:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_wallet_$6427_storage",
                              "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                            }
                          },
                          "id": 6844,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6424,
                          "src": "5351:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "5351:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5351:65:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5318:98:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6849,
                  "nodeType": "ExpressionStatement",
                  "src": "5318:98:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6853,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5445:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5445:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6855,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6798,
                        "src": "5457:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6850,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6439,
                        "src": "5426:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 6852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "5426:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5426:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6857,
                  "nodeType": "ExpressionStatement",
                  "src": "5426:39:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6859,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5489:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5489:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6861,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6798,
                        "src": "5501:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6858,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "5480:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5480:29:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6863,
                  "nodeType": "EmitStatement",
                  "src": "5475:34:22"
                }
              ]
            },
            "documentation": {
              "id": 6796,
              "nodeType": "StructuredDocumentation",
              "src": "4757:129:22",
              "text": "withdraw funds from live wallet of the senders address\n @dev withdraw amount from users wallet if betlock isnt enabled"
            },
            "functionSelector": "a2b1a2cc",
            "id": 6865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawBet",
            "nameLocation": "4900:11:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6798,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4920:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6865,
                  "src": "4912:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4912:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4911:17:22"
            },
            "returnParameters": {
              "id": 6800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4936:0:22"
            },
            "scope": 7167,
            "src": "4891:625:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6934,
              "nodeType": "Block",
              "src": "5805:469:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6876,
                              "name": "betAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "5836:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                              }
                            },
                            "id": 6878,
                            "indexExpression": {
                              "id": 6877,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6870,
                              "src": "5847:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5836:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_wallet_$6427_storage",
                              "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                            }
                          },
                          "id": 6879,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6424,
                          "src": "5836:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 6880,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6868,
                          "src": "5865:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5836:36:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626574206c657373207468616e20616d6f756e74207769746864726177",
                        "id": 6882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5886:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8557004d7f4eae0d1be8054bf08b2a80c436e4b9ab15c7e6c0c4f371a51886f4",
                          "typeString": "literal_string \"bet less than amount withdraw\""
                        },
                        "value": "bet less than amount withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8557004d7f4eae0d1be8054bf08b2a80c436e4b9ab15c7e6c0c4f371a51886f4",
                          "typeString": "literal_string \"bet less than amount withdraw\""
                        }
                      ],
                      "id": 6875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5815:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5815:112:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6884,
                  "nodeType": "ExpressionStatement",
                  "src": "5815:112:22"
                },
                {
                  "expression": {
                    "id": 6896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6885,
                          "name": "betAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6436,
                          "src": "5937:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                          }
                        },
                        "id": 6887,
                        "indexExpression": {
                          "id": 6886,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6870,
                          "src": "5948:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5937:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                        }
                      },
                      "id": 6888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6424,
                      "src": "5937:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6894,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6868,
                          "src": "5995:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6889,
                              "name": "betAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "5965:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                              }
                            },
                            "id": 6891,
                            "indexExpression": {
                              "id": 6890,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6870,
                              "src": "5976:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5965:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_wallet_$6427_storage",
                              "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                            }
                          },
                          "id": 6892,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6424,
                          "src": "5965:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "5965:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5965:38:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5937:66:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6897,
                  "nodeType": "ExpressionStatement",
                  "src": "5937:66:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6899,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6870,
                        "src": "6027:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6900,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6868,
                        "src": "6034:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6898,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "6018:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6018:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6902,
                  "nodeType": "EmitStatement",
                  "src": "6013:29:22"
                },
                {
                  "assignments": [
                    6904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6904,
                      "mutability": "mutable",
                      "name": "withdrawalFee",
                      "nameLocation": "6060:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6934,
                      "src": "6052:21:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6903,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6052:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6912,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6910,
                        "name": "DIVISOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6448,
                        "src": "6110:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6907,
                            "name": "earlyWithdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6456,
                            "src": "6088:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 6905,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6868,
                            "src": "6076:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11558,
                          "src": "6076:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6076:29:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11573,
                      "src": "6076:33:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6076:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6052:66:22"
                },
                {
                  "expression": {
                    "id": 6918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6913,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6868,
                      "src": "6128:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6916,
                          "name": "withdrawalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6904,
                          "src": "6150:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6914,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6868,
                          "src": "6138:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "6138:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6138:26:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6128:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6919,
                  "nodeType": "ExpressionStatement",
                  "src": "6128:36:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6923,
                        "name": "reserveAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6453,
                        "src": "6193:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6924,
                        "name": "withdrawalFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6904,
                        "src": "6209:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6920,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6439,
                        "src": "6174:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 6922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "6174:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6174:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6926,
                  "nodeType": "ExpressionStatement",
                  "src": "6174:49:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6930,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6870,
                        "src": "6252:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6931,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6868,
                        "src": "6259:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6927,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6439,
                        "src": "6233:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 6929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "6233:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6233:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6933,
                  "nodeType": "ExpressionStatement",
                  "src": "6233:34:22"
                }
              ]
            },
            "documentation": {
              "id": 6866,
              "nodeType": "StructuredDocumentation",
              "src": "5522:181:22",
              "text": "owner only function to override timelock and withdraw funds on behalf of user\n @dev withdraw preapproved amount from users wallet sidestepping the timelock on withdrawals"
            },
            "functionSelector": "d4b9661c",
            "id": 6935,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6873,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6872,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "5791:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5791:9:22"
              }
            ],
            "name": "withdrawBetForUser",
            "nameLocation": "5717:18:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6868,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5744:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6935,
                  "src": "5736:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5736:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6870,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5761:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6935,
                  "src": "5753:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5753:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5735:32:22"
            },
            "returnParameters": {
              "id": 6874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5805:0:22"
            },
            "scope": 7167,
            "src": "5708:566:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6975,
              "nodeType": "Block",
              "src": "6500:264:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6944,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6531:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6531:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 6948,
                                "name": "bankroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6442,
                                "src": "6553:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                  "typeString": "contract BitcrushBankroll"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                  "typeString": "contract BitcrushBankroll"
                                }
                              ],
                              "id": 6947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6545:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6946,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6545:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6545:17:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6531:31:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6951,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6582:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6582:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 6955,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6445,
                                "src": "6604:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                  "typeString": "contract BitcrushStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                  "typeString": "contract BitcrushStaking"
                                }
                              ],
                              "id": 6954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6596:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6953,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6596:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6596:20:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6582:34:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6531:85:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652062616e6b726f6c6c206f72207374616b696e6720706f6f6c",
                        "id": 6959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6630:41:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e691763fe9770fead6cda3f74a4938845c3e2d34ab903f68c33b3387d6ae3d6b",
                          "typeString": "literal_string \"Caller must be bankroll or staking pool\""
                        },
                        "value": "Caller must be bankroll or staking pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e691763fe9770fead6cda3f74a4938845c3e2d34ab903f68c33b3387d6ae3d6b",
                          "typeString": "literal_string \"Caller must be bankroll or staking pool\""
                        }
                      ],
                      "id": 6943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6510:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6510:171:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6961,
                  "nodeType": "ExpressionStatement",
                  "src": "6510:171:22"
                },
                {
                  "expression": {
                    "id": 6973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6962,
                          "name": "betAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6436,
                          "src": "6691:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                            "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                          }
                        },
                        "id": 6964,
                        "indexExpression": {
                          "id": 6963,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6940,
                          "src": "6702:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6691:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_wallet_$6427_storage",
                          "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                        }
                      },
                      "id": 6965,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6424,
                      "src": "6691:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6971,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6938,
                          "src": "6749:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6966,
                              "name": "betAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "6719:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                              }
                            },
                            "id": 6968,
                            "indexExpression": {
                              "id": 6967,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6940,
                              "src": "6730:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6719:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_wallet_$6427_storage",
                              "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                            }
                          },
                          "id": 6969,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6424,
                          "src": "6719:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "6719:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6719:38:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6691:66:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6974,
                  "nodeType": "ExpressionStatement",
                  "src": "6691:66:22"
                }
              ]
            },
            "documentation": {
              "id": 6936,
              "nodeType": "StructuredDocumentation",
              "src": "6280:149:22",
              "text": "add funds to the users live wallet on wins by either the bankroll or the staking pool\n @dev add funds to the users live wallet as winnings"
            },
            "functionSelector": "f62cf8d0",
            "id": 6976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addToUserWinnings",
            "nameLocation": "6443:17:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6938,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6469:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6976,
                  "src": "6461:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6461:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6940,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6486:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6976,
                  "src": "6478:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6478:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6460:32:22"
            },
            "returnParameters": {
              "id": 6942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6500:0:22"
            },
            "scope": 7167,
            "src": "6434:330:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7008,
              "nodeType": "Block",
              "src": "6994:138:22",
              "statements": [
                {
                  "body": {
                    "id": 7006,
                    "nodeType": "Block",
                    "src": "7048:78:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 7004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 6996,
                                "name": "betAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6436,
                                "src": "7062:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                  "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                                }
                              },
                              "id": 7000,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 6997,
                                  "name": "_users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6980,
                                  "src": "7073:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 6999,
                                "indexExpression": {
                                  "id": 6998,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6986,
                                  "src": "7080:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7073:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7062:21:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_wallet_$6427_storage",
                                "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                              }
                            },
                            "id": 7001,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockTimeStamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6426,
                            "src": "7062:35:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 7002,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7100:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 7003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7100:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7062:53:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7005,
                        "nodeType": "ExpressionStatement",
                        "src": "7062:53:22"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6989,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6986,
                      "src": "7024:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 6990,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6980,
                        "src": "7028:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 6991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7028:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7024:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7007,
                  "initializationExpression": {
                    "assignments": [
                      6986
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6986,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7017:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 7007,
                        "src": "7009:9:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6985,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7009:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6988,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7021:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7009:13:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7043:3:22",
                      "subExpression": {
                        "id": 6993,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6986,
                        "src": "7043:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6995,
                    "nodeType": "ExpressionStatement",
                    "src": "7043:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "7004:122:22"
                }
              ]
            },
            "documentation": {
              "id": 6977,
              "nodeType": "StructuredDocumentation",
              "src": "6770:154:22",
              "text": "update the lockTimeStamp of provided users to current timestamp to prevent withdraws\n @dev update bet lock to prevent withdraws during gameplay"
            },
            "functionSelector": "afb62d70",
            "id": 7009,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6983,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6982,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "6984:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "6984:9:22"
              }
            ],
            "name": "updateBetLock",
            "nameLocation": "6938:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6980,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "6969:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7009,
                  "src": "6952:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6978,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6952:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6979,
                    "nodeType": "ArrayTypeName",
                    "src": "6952:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6951:25:22"
            },
            "returnParameters": {
              "id": 6984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6994:0:22"
            },
            "scope": 7167,
            "src": "6929:203:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7040,
              "nodeType": "Block",
              "src": "7342:124:22",
              "statements": [
                {
                  "body": {
                    "id": 7038,
                    "nodeType": "Block",
                    "src": "7396:64:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 7036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 7029,
                                "name": "betAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6436,
                                "src": "7410:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6427_storage_$",
                                  "typeString": "mapping(address => struct BitcrushLiveWallet.wallet storage ref)"
                                }
                              },
                              "id": 7033,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 7030,
                                  "name": "_users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7013,
                                  "src": "7421:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 7032,
                                "indexExpression": {
                                  "id": 7031,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7019,
                                  "src": "7428:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7421:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7410:21:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_wallet_$6427_storage",
                                "typeString": "struct BitcrushLiveWallet.wallet storage ref"
                              }
                            },
                            "id": 7034,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockTimeStamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6426,
                            "src": "7410:35:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 7035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7448:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7410:39:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7037,
                        "nodeType": "ExpressionStatement",
                        "src": "7410:39:22"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7022,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7019,
                      "src": "7372:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 7023,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7013,
                        "src": "7376:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 7024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7376:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7372:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7039,
                  "initializationExpression": {
                    "assignments": [
                      7019
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7019,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7365:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 7039,
                        "src": "7357:9:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7018,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7357:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7021,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 7020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7369:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7357:13:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7391:3:22",
                      "subExpression": {
                        "id": 7026,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7019,
                        "src": "7391:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7028,
                    "nodeType": "ExpressionStatement",
                    "src": "7391:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "7352:108:22"
                }
              ]
            },
            "documentation": {
              "id": 7010,
              "nodeType": "StructuredDocumentation",
              "src": "7138:133:22",
              "text": "update the lockTimeStamp of provided users to 0 to allow withdraws\n @dev update bet lock to allow withdraws after gameplay"
            },
            "functionSelector": "815b7386",
            "id": 7041,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7016,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7015,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "7332:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7332:9:22"
              }
            ],
            "name": "releaseBetLock",
            "nameLocation": "7285:14:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7013,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "7317:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7041,
                  "src": "7300:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7011,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7300:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7012,
                    "nodeType": "ArrayTypeName",
                    "src": "7300:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7299:25:22"
            },
            "returnParameters": {
              "id": 7017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7342:0:22"
            },
            "scope": 7167,
            "src": "7276:190:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7055,
              "nodeType": "Block",
              "src": "7677:50:22",
              "statements": [
                {
                  "expression": {
                    "id": 7053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7049,
                        "name": "blacklistedUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6431,
                        "src": "7687:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7051,
                      "indexExpression": {
                        "id": 7050,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7044,
                        "src": "7704:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7687:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7716:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7687:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7054,
                  "nodeType": "ExpressionStatement",
                  "src": "7687:33:22"
                }
              ]
            },
            "documentation": {
              "id": 7042,
              "nodeType": "StructuredDocumentation",
              "src": "7472:142:22",
              "text": "blacklist specified address from adding more funds to the pool\n @dev prevent specified address from adding funds to the live wallet"
            },
            "functionSelector": "fcbca456",
            "id": 7056,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7047,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7046,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "7667:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7667:9:22"
              }
            ],
            "name": "blacklistUser",
            "nameLocation": "7628:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7044,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "7650:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7056,
                  "src": "7642:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7642:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7641:18:22"
            },
            "returnParameters": {
              "id": 7048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7677:0:22"
            },
            "scope": 7167,
            "src": "7619:108:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7069,
              "nodeType": "Block",
              "src": "7948:50:22",
              "statements": [
                {
                  "expression": {
                    "id": 7067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7958:33:22",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7064,
                        "name": "blacklistedUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6431,
                        "src": "7965:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7066,
                      "indexExpression": {
                        "id": 7065,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7059,
                        "src": "7982:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7965:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7068,
                  "nodeType": "ExpressionStatement",
                  "src": "7958:33:22"
                }
              ]
            },
            "documentation": {
              "id": 7057,
              "nodeType": "StructuredDocumentation",
              "src": "7733:152:22",
              "text": "whitelist sender address from adding more funds to the pool\n @dev allow previously blacklisted sender address to add funds to the live wallet"
            },
            "functionSelector": "4a4c560d",
            "id": 7070,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7062,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7061,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "7938:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7938:9:22"
              }
            ],
            "name": "whitelistUser",
            "nameLocation": "7899:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7059,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "7921:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7070,
                  "src": "7913:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7913:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7912:18:22"
            },
            "returnParameters": {
              "id": 7063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7948:0:22"
            },
            "scope": 7167,
            "src": "7890:108:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7081,
              "nodeType": "Block",
              "src": "8177:52:22",
              "statements": [
                {
                  "expression": {
                    "id": 7079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7074,
                        "name": "blacklistedUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6431,
                        "src": "8187:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7077,
                      "indexExpression": {
                        "expression": {
                          "id": 7075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8204:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8204:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8187:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8218:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8187:35:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7080,
                  "nodeType": "ExpressionStatement",
                  "src": "8187:35:22"
                }
              ]
            },
            "documentation": {
              "id": 7071,
              "nodeType": "StructuredDocumentation",
              "src": "8004:136:22",
              "text": "blacklist sender address from adding more funds to the pool\n @dev prevent sender address from adding funds to the live wallet"
            },
            "functionSelector": "723ea115",
            "id": 7082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "blacklistSelf",
            "nameLocation": "8154:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8167:2:22"
            },
            "returnParameters": {
              "id": 7073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8177:0:22"
            },
            "scope": 7167,
            "src": "8145:84:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7105,
              "nodeType": "Block",
              "src": "8446:204:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7091,
                          "name": "_lockPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7085,
                          "src": "8477:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "363034383030",
                          "id": 7092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8492:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "value": "604800"
                        },
                        "src": "8477:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b20706572696f642063616e6e6f742062652067726561746572207468616e2031207765656b",
                        "id": 7094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8512:43:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7369060aeeb5a0eac45ce579d5eb692ce46880b495bde9f10703b005a6951cff",
                          "typeString": "literal_string \"Lock period cannot be greater than 1 week\""
                        },
                        "value": "Lock period cannot be greater than 1 week"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7369060aeeb5a0eac45ce579d5eb692ce46880b495bde9f10703b005a6951cff",
                          "typeString": "literal_string \"Lock period cannot be greater than 1 week\""
                        }
                      ],
                      "id": 7090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8456:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8456:109:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7096,
                  "nodeType": "ExpressionStatement",
                  "src": "8456:109:22"
                },
                {
                  "expression": {
                    "id": 7099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7097,
                      "name": "lockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6451,
                      "src": "8575:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7098,
                      "name": "_lockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7085,
                      "src": "8588:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8575:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7100,
                  "nodeType": "ExpressionStatement",
                  "src": "8575:24:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7102,
                        "name": "lockPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6451,
                        "src": "8632:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7101,
                      "name": "LockPeriodUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6478,
                      "src": "8614:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8614:29:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7104,
                  "nodeType": "EmitStatement",
                  "src": "8609:34:22"
                }
              ]
            },
            "documentation": {
              "id": 7083,
              "nodeType": "StructuredDocumentation",
              "src": "8235:145:22",
              "text": "Store `_lockPeriod`.\n @param _lockPeriod the new value to store\n @dev stores the _lockPeriod in the state variable `lockPeriod`"
            },
            "functionSelector": "779972da",
            "id": 7106,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7088,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7087,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "8436:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "8436:9:22"
              }
            ],
            "name": "setLockPeriod",
            "nameLocation": "8394:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7085,
                  "mutability": "mutable",
                  "name": "_lockPeriod",
                  "nameLocation": "8416:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7106,
                  "src": "8408:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8408:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8407:21:22"
            },
            "returnParameters": {
              "id": 7089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8446:0:22"
            },
            "scope": 7167,
            "src": "8385:265:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7118,
              "nodeType": "Block",
              "src": "8891:49:22",
              "statements": [
                {
                  "expression": {
                    "id": 7116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7114,
                      "name": "reserveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6453,
                      "src": "8901:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7115,
                      "name": "_reserveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "8918:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8901:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7117,
                  "nodeType": "ExpressionStatement",
                  "src": "8901:32:22"
                }
              ]
            },
            "documentation": {
              "id": 7107,
              "nodeType": "StructuredDocumentation",
              "src": "8656:161:22",
              "text": "Store `_reserveAddress`.\n @param _reserveAddress the new value to store\n @dev stores the _reserveAddress in the state variable `reserveAddress`"
            },
            "functionSelector": "14673d31",
            "id": 7119,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7112,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7111,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "8881:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "8881:9:22"
              }
            ],
            "name": "setReserveAddress",
            "nameLocation": "8831:17:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7109,
                  "mutability": "mutable",
                  "name": "_reserveAddress",
                  "nameLocation": "8857:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7119,
                  "src": "8849:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8849:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8848:25:22"
            },
            "returnParameters": {
              "id": 7113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8891:0:22"
            },
            "scope": 7167,
            "src": "8822:118:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7138,
              "nodeType": "Block",
              "src": "9193:174:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7128,
                          "name": "_earlyWithdrawFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7122,
                          "src": "9224:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "34303030",
                          "id": 7129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9244:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4000_by_1",
                            "typeString": "int_const 4000"
                          },
                          "value": "4000"
                        },
                        "src": "9224:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4561726c7920776974686472617720666565206d757374206265206c657373207468616e20343025",
                        "id": 7131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9262:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb312c277dd421041c950b1a3072705c0546073b8a615ffea5c2e8a477d1e216",
                          "typeString": "literal_string \"Early withdraw fee must be less than 40%\""
                        },
                        "value": "Early withdraw fee must be less than 40%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb312c277dd421041c950b1a3072705c0546073b8a615ffea5c2e8a477d1e216",
                          "typeString": "literal_string \"Early withdraw fee must be less than 40%\""
                        }
                      ],
                      "id": 7127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9203:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9203:111:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7133,
                  "nodeType": "ExpressionStatement",
                  "src": "9203:111:22"
                },
                {
                  "expression": {
                    "id": 7136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7134,
                      "name": "earlyWithdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6456,
                      "src": "9324:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7135,
                      "name": "_earlyWithdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7122,
                      "src": "9343:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9324:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7137,
                  "nodeType": "ExpressionStatement",
                  "src": "9324:36:22"
                }
              ]
            },
            "documentation": {
              "id": 7120,
              "nodeType": "StructuredDocumentation",
              "src": "8946:169:22",
              "text": "Store `_earlyWithdrawFee`.\n @param _earlyWithdrawFee the new value to store\n @dev stores the _earlyWithdrawFee in the state variable `earlyWithdrawFee`"
            },
            "functionSelector": "c22982f4",
            "id": 7139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7124,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "9183:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "9183:9:22"
              }
            ],
            "name": "setEarlyWithdrawFee",
            "nameLocation": "9129:19:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7122,
                  "mutability": "mutable",
                  "name": "_earlyWithdrawFee",
                  "nameLocation": "9157:17:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7139,
                  "src": "9149:25:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9149:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9148:27:22"
            },
            "returnParameters": {
              "id": 7126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9193:0:22"
            },
            "scope": 7167,
            "src": "9120:247:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7165,
              "nodeType": "Block",
              "src": "9606:166:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7151,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6445,
                              "src": "9645:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                "typeString": "contract BitcrushStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                                "typeString": "contract BitcrushStaking"
                              }
                            ],
                            "id": 7150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9637:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7149,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9637:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9637:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9669:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9661:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7153,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9661:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9661:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9637:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374616b696e6720706f6f6c206164647265737320616c726561647920736574",
                        "id": 7158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9685:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1c623447c8d740cd77f89af55d89575bcf9b3896f79ee3d332130c8bc01b72",
                          "typeString": "literal_string \"staking pool address already set\""
                        },
                        "value": "staking pool address already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1c623447c8d740cd77f89af55d89575bcf9b3896f79ee3d332130c8bc01b72",
                          "typeString": "literal_string \"staking pool address already set\""
                        }
                      ],
                      "id": 7148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9616:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9616:113:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7160,
                  "nodeType": "ExpressionStatement",
                  "src": "9616:113:22"
                },
                {
                  "expression": {
                    "id": 7163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7161,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6445,
                      "src": "9739:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                        "typeString": "contract BitcrushStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7162,
                      "name": "_stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7143,
                      "src": "9753:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                        "typeString": "contract BitcrushStaking"
                      }
                    },
                    "src": "9739:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                      "typeString": "contract BitcrushStaking"
                    }
                  },
                  "id": 7164,
                  "nodeType": "ExpressionStatement",
                  "src": "9739:26:22"
                }
              ]
            },
            "documentation": {
              "id": 7140,
              "nodeType": "StructuredDocumentation",
              "src": "9373:157:22",
              "text": "Store `_stakingPool`.\n @param _stakingPool the new value to store\n @dev stores the _stakingPool address in the state variable `stakingPool`"
            },
            "functionSelector": "3028f63a",
            "id": 7166,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7145,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "9596:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "9596:9:22"
              }
            ],
            "name": "setStakingPool",
            "nameLocation": "9544:14:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7143,
                  "mutability": "mutable",
                  "name": "_stakingPool",
                  "nameLocation": "9575:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7166,
                  "src": "9559:28:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                    "typeString": "contract BitcrushStaking"
                  },
                  "typeName": {
                    "id": 7142,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7141,
                      "name": "BitcrushStaking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2213,
                      "src": "9559:15:22"
                    },
                    "referencedDeclaration": 2213,
                    "src": "9559:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                      "typeString": "contract BitcrushStaking"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9558:30:22"
            },
            "returnParameters": {
              "id": 7147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9606:0:22"
            },
            "scope": 7167,
            "src": "9535:237:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7168,
        "src": "401:9373:22",
        "usedErrors": []
      }
    ],
    "src": "31:9744:22"
  },
  "bytecode": "60c0604052612a3060045560326006553480156200001c57600080fd5b5060405162001dce38038062001dce8339810160408190526200003f91620000e2565b6200004a3362000079565b6001600160a01b0392831660805290821660a052600580546001600160a01b0319169190921617905562000136565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000df57600080fd5b50565b600080600060608486031215620000f857600080fd5b83516200010581620000c9565b60208501519093506200011881620000c9565b60408501519092506200012b81620000c9565b809150509250925092565b60805160a051611c2c620001a26000396000818161020901528181611057015281816111d20152818161141c01526114cf0152600081816103b00152818161065c0152818161086a01528181610ac801528181610fa101528181610fd7015261144b0152611c2c6000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063815b738611610104578063c22982f4116100a2578063f2fde38b11610071578063f2fde38b14610447578063f62cf8d01461045a578063f79ed94b1461046d578063fcbca4561461048057600080fd5b8063c22982f4146103d2578063d4b9661c146103e5578063ebcfcf6b146103f8578063f2150bbb1461043457600080fd5b8063a4ae1c56116100de578063a4ae1c561461037c578063a80a78821461038f578063afb62d7014610398578063b359a9f9146103ab57600080fd5b8063815b7386146103455780638da5cb5b14610358578063a2b1a2cc1461036957600080fd5b80634a4c560d11610171578063715018a61161014b578063715018a6146102f5578063723ea115146102fd578063779972da1461031f5780637efd38131461033257600080fd5b80634a4c560d146102a65780636145b22c146102b957806370a08231146102cc57600080fd5b806322c0aec7116101ad57806322c0aec7146102405780633028f63a146102735780633410fe6e146102865780633fd8b02f1461029d57600080fd5b80630c56ae3b146101d45780630c657eb01461020457806314673d311461022b575b600080fd5b6003546101e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b61023e6102393660046117b6565b610493565b005b61026361024e3660046117b6565b60016020526000908152604090205460ff1681565b60405190151581526020016101fb565b61023e6102813660046117b6565b6104e8565b61028f61271081565b6040519081526020016101fb565b61028f60045481565b61023e6102b43660046117b6565b61058d565b61023e6102c73660046117d3565b6105d8565b61028f6102da3660046117b6565b6001600160a01b031660009081526002602052604090205490565b61023e6106e5565b61023e336000908152600160208190526040909120805460ff19169091179055565b61023e61032d3660046117d3565b61071b565b61023e6103403660046117ec565b6107dd565b61023e6103533660046118fb565b610906565b6000546001600160a01b03166101e7565b61023e6103773660046117d3565b61099a565b61023e61038a366004611930565b610b27565b61028f60065481565b61023e6103a63660046118fb565b610d45565b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b61023e6103e03660046117d3565b610dd4565b61023e6103f33660046117ec565b610e65565b61041f6104063660046117b6565b6002602052600090815260409020805460019091015482565b604080519283526020830191909152016101fb565b61023e610442366004611930565b610ffe565b61023e6104553660046117b6565b61112c565b61023e6104683660046117ec565b6111c7565b6005546101e7906001600160a01b031681565b61023e61048e3660046117b6565b6112a4565b6000546001600160a01b031633146104c65760405162461bcd60e51b81526004016104bd906119e9565b60405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105125760405162461bcd60e51b81526004016104bd906119e9565b6003546001600160a01b03161561056b5760405162461bcd60e51b815260206004820181905260248201527f7374616b696e6720706f6f6c206164647265737320616c72656164792073657460448201526064016104bd565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105b75760405162461bcd60e51b81526004016104bd906119e9565b6001600160a01b03166000908152600160205260409020805460ff19169055565b600081116105f85760405162461bcd60e51b81526004016104bd90611a1e565b3360009081526001602052604090205460ff161561064f5760405162461bcd60e51b8152602060048201526014602482015273155cd95c881a5cc8189b1858dac8131a5cdd195960621b60448201526064016104bd565b6106846001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846112f5565b3360009081526002602052604090205461069e9082611366565b3360008181526002602052604080822093845542600190940193909355915183927fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c91a350565b6000546001600160a01b0316331461070f5760405162461bcd60e51b81526004016104bd906119e9565b6107196000611379565b565b6000546001600160a01b031633146107455760405162461bcd60e51b81526004016104bd906119e9565b62093a808111156107aa5760405162461bcd60e51b815260206004820152602960248201527f4c6f636b20706572696f642063616e6e6f742062652067726561746572207468604482015268616e2031207765656b60b81b60648201526084016104bd565b600481905560405181907f8249ec545e68f6f1e1230133ca48c704d831a7f8e635ded80f3dd9e99b09bb2f90600090a250565b600082116107fd5760405162461bcd60e51b81526004016104bd90611a1e565b6001600160a01b03811660009081526001602052604090205460ff161561085d5760405162461bcd60e51b8152602060048201526014602482015273155cd95c881a5cc8189b1858dac8131a5cdd195960621b60448201526064016104bd565b6108926001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330856112f5565b6001600160a01b0381166000908152600260205260409020546108b59083611366565b6001600160a01b03821660008181526002602052604080822093845542600190940193909355915184927f40a0b865ae77859153eafc5cde95d936f135cc12158b807a1ec5f644bea4111e91a35050565b6000546001600160a01b031633146109305760405162461bcd60e51b81526004016104bd906119e9565b60005b81518110156109965760006002600084848151811061095457610954611a61565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060010181905550808061098e90611a8d565b915050610933565b5050565b336000908152600260205260409020548111156109f95760405162461bcd60e51b815260206004820152601d60248201527f626574206c657373207468616e20616d6f756e7420776974686472617700000060448201526064016104bd565b336000908152600260205260409020600101541580610a375750600454336000908152600260205260409020600101544291610a359190611366565b105b610a955760405162461bcd60e51b815260206004820152602960248201527f42657420416d6f756e74206c6f636b65642c20706c656173652074727920616760448201526830b4b7103630ba32b960b91b60648201526084016104bd565b33600090815260026020526040902054610aaf90826113c9565b33600081815260026020526040902091909155610af7907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690836113d5565b604051819033907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490600090a350565b6000546001600160a01b03163314610b515760405162461bcd60e51b81526004016104bd906119e9565b8051825114610b725760405162461bcd60e51b81526004016104bd90611aa8565b60005b8151811015610d40576000838281518110610b9257610b92611a61565b60200260200101511115610d2e57828181518110610bb257610bb2611a61565b602002602001015160026000848481518110610bd057610bd0611a61565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600001541015610c645760405162461bcd60e51b815260206004820152603160248201527f4c6f73732062657420616d6f756e742069732067726561746572207468616e20604482015270617661696c61626c652062616c616e636560781b60648201526084016104bd565b610c86838281518110610c7957610c79611a61565b6020026020010151611405565b610cf3838281518110610c9b57610c9b611a61565b602002602001015160026000858581518110610cb957610cb9611a61565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600001546113c990919063ffffffff16565b60026000848481518110610d0957610d09611a61565b6020908102919091018101516001600160a01b03168252810191909152604001600020555b80610d3881611a8d565b915050610b75565b505050565b6000546001600160a01b03163314610d6f5760405162461bcd60e51b81526004016104bd906119e9565b60005b8151811015610996574260026000848481518110610d9257610d92611a61565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600101819055508080610dcc90611a8d565b915050610d72565b6000546001600160a01b03163314610dfe5760405162461bcd60e51b81526004016104bd906119e9565b610fa08110610e605760405162461bcd60e51b815260206004820152602860248201527f4561726c7920776974686472617720666565206d757374206265206c657373206044820152677468616e2034302560c01b60648201526084016104bd565b600655565b6000546001600160a01b03163314610e8f5760405162461bcd60e51b81526004016104bd906119e9565b6001600160a01b038116600090815260026020526040902054821115610ef75760405162461bcd60e51b815260206004820152601d60248201527f626574206c657373207468616e20616d6f756e7420776974686472617700000060448201526064016104bd565b6001600160a01b038116600090815260026020526040902054610f1a90836113c9565b6001600160a01b03821660008181526002602052604080822093909355915184927f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491a36000610f81612710610f7b6006548661153690919063ffffffff16565b90611542565b9050610f8d83826113c9565b600554909350610fca906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836113d5565b610d406001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683856113d5565b6000546001600160a01b031633146110285760405162461bcd60e51b81526004016104bd906119e9565b80518251146110495760405162461bcd60e51b81526004016104bd90611aa8565b60005b8151811015610d40577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166361433d8884838151811061109657611096611a61565b60200260200101518484815181106110b0576110b0611a61565b60200260200101516040518363ffffffff1660e01b81526004016110e79291909182526001600160a01b0316602082015260400190565b600060405180830381600087803b15801561110157600080fd5b505af1158015611115573d6000803e3d6000fd5b50505050808061112490611a8d565b91505061104c565b6000546001600160a01b031633146111565760405162461bcd60e51b81526004016104bd906119e9565b6001600160a01b0381166111bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bd565b6111c481611379565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061120857506003546001600160a01b031633145b6112645760405162461bcd60e51b815260206004820152602760248201527f43616c6c6572206d7573742062652062616e6b726f6c6c206f72207374616b696044820152661b99c81c1bdbdb60ca1b60648201526084016104bd565b6001600160a01b0381166000908152600260205260409020546112879083611366565b6001600160a01b0390911660009081526002602052604090205550565b6000546001600160a01b031633146112ce5760405162461bcd60e51b81526004016104bd906119e9565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6040516001600160a01b03808516602483015283166044820152606481018290526113609085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261154e565b50505050565b60006113728284611ae9565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006113728284611b01565b6040516001600160a01b038316602482015260448101829052610d4090849063a9059cbb60e01b90606401611329565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015611494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b89190611b18565b50604051636172858b60e11b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c2e50b1690602401600060405180830381600087803b15801561151b57600080fd5b505af115801561152f573d6000803e3d6000fd5b5050505050565b60006113728284611b3a565b60006113728284611b59565b60006115a3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116209092919063ffffffff16565b805190915015610d4057808060200190518101906115c19190611b18565b610d405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104bd565b606061162f8484600085611637565b949350505050565b6060824710156116985760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104bd565b6001600160a01b0385163b6116ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104bd565b600080866001600160a01b0316858760405161170b9190611ba7565b60006040518083038185875af1925050503d8060008114611748576040519150601f19603f3d011682016040523d82523d6000602084013e61174d565b606091505b509150915061175d828286611768565b979650505050505050565b60608315611777575081611372565b8251156117875782518084602001fd5b8160405162461bcd60e51b81526004016104bd9190611bc3565b6001600160a01b03811681146111c457600080fd5b6000602082840312156117c857600080fd5b8135611372816117a1565b6000602082840312156117e557600080fd5b5035919050565b600080604083850312156117ff57600080fd5b823591506020830135611811816117a1565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561185b5761185b61181c565b604052919050565b600067ffffffffffffffff82111561187d5761187d61181c565b5060051b60200190565b600082601f83011261189857600080fd5b813560206118ad6118a883611863565b611832565b82815260059290921b840181019181810190868411156118cc57600080fd5b8286015b848110156118f05780356118e3816117a1565b83529183019183016118d0565b509695505050505050565b60006020828403121561190d57600080fd5b813567ffffffffffffffff81111561192457600080fd5b61162f84828501611887565b6000806040838503121561194357600080fd5b823567ffffffffffffffff8082111561195b57600080fd5b818501915085601f83011261196f57600080fd5b8135602061197f6118a883611863565b82815260059290921b8401810191818101908984111561199e57600080fd5b948201945b838610156119bc578535825294820194908201906119a3565b965050860135925050808211156119d257600080fd5b506119df85828601611887565b9150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526023908201527f42657420616d6f756e742073686f756c6420626520677265617465722074686160408201526206e20360ec1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611aa157611aa1611a77565b5060010190565b60208082526021908201527f506172616d65746572206c656e677468732073686f756c6420626520657175616040820152601b60fa1b606082015260800190565b60008219821115611afc57611afc611a77565b500190565b600082821015611b1357611b13611a77565b500390565b600060208284031215611b2a57600080fd5b8151801515811461137257600080fd5b6000816000190483118215151615611b5457611b54611a77565b500290565b600082611b7657634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015611b96578181015183820152602001611b7e565b838111156113605750506000910152565b60008251611bb9818460208701611b7b565b9190910192915050565b6020815260008251806020840152611be2816040850160208701611b7b565b601f01601f1916919091016040019291505056fea2646970667358221220e5c8b6264c1a8b11c3681fc368ed0d0d9da4d164c54eae1ab76c628e0893cbc264736f6c634300080c0033",
  "bytecodeSha1": "e3ba8a5a06768f47877ff2a6a197799d8aa1c8cb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "BitcrushLiveWallet",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "92": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {
        "Address.functionCallWithValue": {
          "89": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "90": [
            7735,
            7742,
            false
          ],
          "91": [
            7876,
            7897,
            false
          ]
        }
      },
      "12": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "22": {
        "BitcrushLiveWallet.addToUserWinnings": {
          "87": [
            6531,
            6562,
            true
          ],
          "88": [
            6582,
            6616,
            true
          ]
        },
        "BitcrushLiveWallet.addbet": {
          "73": [
            1779,
            1790,
            true
          ],
          "74": [
            1848,
            1885,
            true
          ]
        },
        "BitcrushLiveWallet.addbetWithAddress": {
          "76": [
            2402,
            2413,
            true
          ],
          "77": [
            2471,
            2503,
            true
          ]
        },
        "BitcrushLiveWallet.registerLoss": {
          "81": [
            3883,
            3912,
            true
          ],
          "82": [
            4043,
            4055,
            false
          ],
          "83": [
            4104,
            4145,
            true
          ]
        },
        "BitcrushLiveWallet.registerWin": {
          "86": [
            3353,
            3382,
            true
          ]
        },
        "BitcrushLiveWallet.setEarlyWithdrawFee": {
          "84": [
            9224,
            9248,
            true
          ]
        },
        "BitcrushLiveWallet.setLockPeriod": {
          "75": [
            8477,
            8498,
            true
          ]
        },
        "BitcrushLiveWallet.setStakingPool": {
          "72": [
            9637,
            9671,
            true
          ]
        },
        "BitcrushLiveWallet.withdrawBet": {
          "78": [
            4967,
            5008,
            true
          ],
          "79": [
            5094,
            5135,
            true
          ],
          "80": [
            5155,
            5241,
            true
          ]
        },
        "BitcrushLiveWallet.withdrawBetForUser": {
          "85": [
            5836,
            5872,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "93": [
            3735,
            3756,
            false
          ],
          "94": [
            3819,
            3849,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "56": [
            2378,
            2395
          ],
          "57": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "49": [
            1998,
            2071
          ],
          "50": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Address.functionCall": {
          "65": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "66": [
            5137,
            5218
          ],
          "68": [
            5228,
            5288
          ],
          "69": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "67": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "70": [
            7758,
            7775
          ],
          "71": [
            8202,
            8222
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "3": [
            712,
            729
          ]
        }
      },
      "16": {
        "SafeMath.add": {
          "55": [
            2818,
            2830
          ]
        },
        "SafeMath.div": {
          "63": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "62": [
            3528,
            3540
          ]
        },
        "SafeMath.sub": {
          "58": [
            3185,
            3197
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "22": {
        "BitcrushLiveWallet.addToUserWinnings": {
          "51": [
            6510,
            6681
          ],
          "52": [
            6691,
            6757
          ]
        },
        "BitcrushLiveWallet.addbet": {
          "8": [
            1771,
            1830
          ],
          "9": [
            1840,
            1910
          ],
          "10": [
            1920,
            1978
          ],
          "11": [
            1988,
            2086
          ],
          "12": [
            2096,
            2150
          ],
          "13": [
            2160,
            2193
          ]
        },
        "BitcrushLiveWallet.addbetWithAddress": {
          "18": [
            2394,
            2453
          ],
          "19": [
            2463,
            2528
          ],
          "20": [
            2538,
            2596
          ],
          "21": [
            2606,
            2672
          ],
          "22": [
            2682,
            2731
          ],
          "23": [
            2741,
            2772
          ]
        },
        "BitcrushLiveWallet.balanceOf": {
          "0": [
            3004,
            3036
          ]
        },
        "BitcrushLiveWallet.blacklistSelf": {
          "1": [
            8187,
            8222
          ]
        },
        "BitcrushLiveWallet.blacklistUser": {
          "53": [
            7687,
            7720
          ]
        },
        "BitcrushLiveWallet.registerLoss": {
          "31": [
            3862,
            3971
          ],
          "32": [
            4075,
            4236
          ],
          "33": [
            4254,
            4282
          ],
          "34": [
            4300,
            4417
          ],
          "35": [
            4020,
            4023
          ]
        },
        "BitcrushLiveWallet.registerWin": {
          "46": [
            3332,
            3441
          ],
          "47": [
            3509,
            3556
          ],
          "48": [
            3490,
            3493
          ]
        },
        "BitcrushLiveWallet.releaseBetLock": {
          "24": [
            7410,
            7449
          ],
          "25": [
            7391,
            7394
          ]
        },
        "BitcrushLiveWallet.setEarlyWithdrawFee": {
          "38": [
            9203,
            9314
          ],
          "39": [
            9324,
            9360
          ]
        },
        "BitcrushLiveWallet.setLockPeriod": {
          "15": [
            8456,
            8565
          ],
          "16": [
            8575,
            8599
          ],
          "17": [
            8609,
            8643
          ]
        },
        "BitcrushLiveWallet.setReserveAddress": {
          "4": [
            8901,
            8933
          ]
        },
        "BitcrushLiveWallet.setStakingPool": {
          "5": [
            9616,
            9729
          ],
          "6": [
            9739,
            9765
          ]
        },
        "BitcrushLiveWallet.transferToBankroll": {
          "60": [
            4664,
            4705
          ],
          "61": [
            4715,
            4744
          ]
        },
        "BitcrushLiveWallet.updateBetLock": {
          "36": [
            7062,
            7115
          ],
          "37": [
            7043,
            7046
          ]
        },
        "BitcrushLiveWallet.whitelistUser": {
          "7": [
            7958,
            7991
          ]
        },
        "BitcrushLiveWallet.withdrawBet": {
          "26": [
            4946,
            5063
          ],
          "27": [
            5073,
            5308
          ],
          "28": [
            5318,
            5416
          ],
          "29": [
            5426,
            5465
          ],
          "30": [
            5475,
            5509
          ]
        },
        "BitcrushLiveWallet.withdrawBetForUser": {
          "40": [
            5815,
            5927
          ],
          "41": [
            5937,
            6003
          ],
          "42": [
            6013,
            6042
          ],
          "43": [
            6128,
            6164
          ],
          "44": [
            6174,
            6223
          ],
          "45": [
            6233,
            6267
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "64": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "59": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "54": [
            1050,
            1146
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "BitcrushBankroll",
    "BitcrushStaking",
    "CRUSHToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063815b738611610104578063c22982f4116100a2578063f2fde38b11610071578063f2fde38b14610447578063f62cf8d01461045a578063f79ed94b1461046d578063fcbca4561461048057600080fd5b8063c22982f4146103d2578063d4b9661c146103e5578063ebcfcf6b146103f8578063f2150bbb1461043457600080fd5b8063a4ae1c56116100de578063a4ae1c561461037c578063a80a78821461038f578063afb62d7014610398578063b359a9f9146103ab57600080fd5b8063815b7386146103455780638da5cb5b14610358578063a2b1a2cc1461036957600080fd5b80634a4c560d11610171578063715018a61161014b578063715018a6146102f5578063723ea115146102fd578063779972da1461031f5780637efd38131461033257600080fd5b80634a4c560d146102a65780636145b22c146102b957806370a08231146102cc57600080fd5b806322c0aec7116101ad57806322c0aec7146102405780633028f63a146102735780633410fe6e146102865780633fd8b02f1461029d57600080fd5b80630c56ae3b146101d45780630c657eb01461020457806314673d311461022b575b600080fd5b6003546101e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b61023e6102393660046117b6565b610493565b005b61026361024e3660046117b6565b60016020526000908152604090205460ff1681565b60405190151581526020016101fb565b61023e6102813660046117b6565b6104e8565b61028f61271081565b6040519081526020016101fb565b61028f60045481565b61023e6102b43660046117b6565b61058d565b61023e6102c73660046117d3565b6105d8565b61028f6102da3660046117b6565b6001600160a01b031660009081526002602052604090205490565b61023e6106e5565b61023e336000908152600160208190526040909120805460ff19169091179055565b61023e61032d3660046117d3565b61071b565b61023e6103403660046117ec565b6107dd565b61023e6103533660046118fb565b610906565b6000546001600160a01b03166101e7565b61023e6103773660046117d3565b61099a565b61023e61038a366004611930565b610b27565b61028f60065481565b61023e6103a63660046118fb565b610d45565b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b61023e6103e03660046117d3565b610dd4565b61023e6103f33660046117ec565b610e65565b61041f6104063660046117b6565b6002602052600090815260409020805460019091015482565b604080519283526020830191909152016101fb565b61023e610442366004611930565b610ffe565b61023e6104553660046117b6565b61112c565b61023e6104683660046117ec565b6111c7565b6005546101e7906001600160a01b031681565b61023e61048e3660046117b6565b6112a4565b6000546001600160a01b031633146104c65760405162461bcd60e51b81526004016104bd906119e9565b60405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105125760405162461bcd60e51b81526004016104bd906119e9565b6003546001600160a01b03161561056b5760405162461bcd60e51b815260206004820181905260248201527f7374616b696e6720706f6f6c206164647265737320616c72656164792073657460448201526064016104bd565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105b75760405162461bcd60e51b81526004016104bd906119e9565b6001600160a01b03166000908152600160205260409020805460ff19169055565b600081116105f85760405162461bcd60e51b81526004016104bd90611a1e565b3360009081526001602052604090205460ff161561064f5760405162461bcd60e51b8152602060048201526014602482015273155cd95c881a5cc8189b1858dac8131a5cdd195960621b60448201526064016104bd565b6106846001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846112f5565b3360009081526002602052604090205461069e9082611366565b3360008181526002602052604080822093845542600190940193909355915183927fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c91a350565b6000546001600160a01b0316331461070f5760405162461bcd60e51b81526004016104bd906119e9565b6107196000611379565b565b6000546001600160a01b031633146107455760405162461bcd60e51b81526004016104bd906119e9565b62093a808111156107aa5760405162461bcd60e51b815260206004820152602960248201527f4c6f636b20706572696f642063616e6e6f742062652067726561746572207468604482015268616e2031207765656b60b81b60648201526084016104bd565b600481905560405181907f8249ec545e68f6f1e1230133ca48c704d831a7f8e635ded80f3dd9e99b09bb2f90600090a250565b600082116107fd5760405162461bcd60e51b81526004016104bd90611a1e565b6001600160a01b03811660009081526001602052604090205460ff161561085d5760405162461bcd60e51b8152602060048201526014602482015273155cd95c881a5cc8189b1858dac8131a5cdd195960621b60448201526064016104bd565b6108926001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330856112f5565b6001600160a01b0381166000908152600260205260409020546108b59083611366565b6001600160a01b03821660008181526002602052604080822093845542600190940193909355915184927f40a0b865ae77859153eafc5cde95d936f135cc12158b807a1ec5f644bea4111e91a35050565b6000546001600160a01b031633146109305760405162461bcd60e51b81526004016104bd906119e9565b60005b81518110156109965760006002600084848151811061095457610954611a61565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060010181905550808061098e90611a8d565b915050610933565b5050565b336000908152600260205260409020548111156109f95760405162461bcd60e51b815260206004820152601d60248201527f626574206c657373207468616e20616d6f756e7420776974686472617700000060448201526064016104bd565b336000908152600260205260409020600101541580610a375750600454336000908152600260205260409020600101544291610a359190611366565b105b610a955760405162461bcd60e51b815260206004820152602960248201527f42657420416d6f756e74206c6f636b65642c20706c656173652074727920616760448201526830b4b7103630ba32b960b91b60648201526084016104bd565b33600090815260026020526040902054610aaf90826113c9565b33600081815260026020526040902091909155610af7907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690836113d5565b604051819033907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490600090a350565b6000546001600160a01b03163314610b515760405162461bcd60e51b81526004016104bd906119e9565b8051825114610b725760405162461bcd60e51b81526004016104bd90611aa8565b60005b8151811015610d40576000838281518110610b9257610b92611a61565b60200260200101511115610d2e57828181518110610bb257610bb2611a61565b602002602001015160026000848481518110610bd057610bd0611a61565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600001541015610c645760405162461bcd60e51b815260206004820152603160248201527f4c6f73732062657420616d6f756e742069732067726561746572207468616e20604482015270617661696c61626c652062616c616e636560781b60648201526084016104bd565b610c86838281518110610c7957610c79611a61565b6020026020010151611405565b610cf3838281518110610c9b57610c9b611a61565b602002602001015160026000858581518110610cb957610cb9611a61565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600001546113c990919063ffffffff16565b60026000848481518110610d0957610d09611a61565b6020908102919091018101516001600160a01b03168252810191909152604001600020555b80610d3881611a8d565b915050610b75565b505050565b6000546001600160a01b03163314610d6f5760405162461bcd60e51b81526004016104bd906119e9565b60005b8151811015610996574260026000848481518110610d9257610d92611a61565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600101819055508080610dcc90611a8d565b915050610d72565b6000546001600160a01b03163314610dfe5760405162461bcd60e51b81526004016104bd906119e9565b610fa08110610e605760405162461bcd60e51b815260206004820152602860248201527f4561726c7920776974686472617720666565206d757374206265206c657373206044820152677468616e2034302560c01b60648201526084016104bd565b600655565b6000546001600160a01b03163314610e8f5760405162461bcd60e51b81526004016104bd906119e9565b6001600160a01b038116600090815260026020526040902054821115610ef75760405162461bcd60e51b815260206004820152601d60248201527f626574206c657373207468616e20616d6f756e7420776974686472617700000060448201526064016104bd565b6001600160a01b038116600090815260026020526040902054610f1a90836113c9565b6001600160a01b03821660008181526002602052604080822093909355915184927f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491a36000610f81612710610f7b6006548661153690919063ffffffff16565b90611542565b9050610f8d83826113c9565b600554909350610fca906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836113d5565b610d406001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683856113d5565b6000546001600160a01b031633146110285760405162461bcd60e51b81526004016104bd906119e9565b80518251146110495760405162461bcd60e51b81526004016104bd90611aa8565b60005b8151811015610d40577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166361433d8884838151811061109657611096611a61565b60200260200101518484815181106110b0576110b0611a61565b60200260200101516040518363ffffffff1660e01b81526004016110e79291909182526001600160a01b0316602082015260400190565b600060405180830381600087803b15801561110157600080fd5b505af1158015611115573d6000803e3d6000fd5b50505050808061112490611a8d565b91505061104c565b6000546001600160a01b031633146111565760405162461bcd60e51b81526004016104bd906119e9565b6001600160a01b0381166111bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bd565b6111c481611379565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061120857506003546001600160a01b031633145b6112645760405162461bcd60e51b815260206004820152602760248201527f43616c6c6572206d7573742062652062616e6b726f6c6c206f72207374616b696044820152661b99c81c1bdbdb60ca1b60648201526084016104bd565b6001600160a01b0381166000908152600260205260409020546112879083611366565b6001600160a01b0390911660009081526002602052604090205550565b6000546001600160a01b031633146112ce5760405162461bcd60e51b81526004016104bd906119e9565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6040516001600160a01b03808516602483015283166044820152606481018290526113609085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261154e565b50505050565b60006113728284611ae9565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006113728284611b01565b6040516001600160a01b038316602482015260448101829052610d4090849063a9059cbb60e01b90606401611329565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015611494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b89190611b18565b50604051636172858b60e11b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c2e50b1690602401600060405180830381600087803b15801561151b57600080fd5b505af115801561152f573d6000803e3d6000fd5b5050505050565b60006113728284611b3a565b60006113728284611b59565b60006115a3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116209092919063ffffffff16565b805190915015610d4057808060200190518101906115c19190611b18565b610d405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104bd565b606061162f8484600085611637565b949350505050565b6060824710156116985760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104bd565b6001600160a01b0385163b6116ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104bd565b600080866001600160a01b0316858760405161170b9190611ba7565b60006040518083038185875af1925050503d8060008114611748576040519150601f19603f3d011682016040523d82523d6000602084013e61174d565b606091505b509150915061175d828286611768565b979650505050505050565b60608315611777575081611372565b8251156117875782518084602001fd5b8160405162461bcd60e51b81526004016104bd9190611bc3565b6001600160a01b03811681146111c457600080fd5b6000602082840312156117c857600080fd5b8135611372816117a1565b6000602082840312156117e557600080fd5b5035919050565b600080604083850312156117ff57600080fd5b823591506020830135611811816117a1565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561185b5761185b61181c565b604052919050565b600067ffffffffffffffff82111561187d5761187d61181c565b5060051b60200190565b600082601f83011261189857600080fd5b813560206118ad6118a883611863565b611832565b82815260059290921b840181019181810190868411156118cc57600080fd5b8286015b848110156118f05780356118e3816117a1565b83529183019183016118d0565b509695505050505050565b60006020828403121561190d57600080fd5b813567ffffffffffffffff81111561192457600080fd5b61162f84828501611887565b6000806040838503121561194357600080fd5b823567ffffffffffffffff8082111561195b57600080fd5b818501915085601f83011261196f57600080fd5b8135602061197f6118a883611863565b82815260059290921b8401810191818101908984111561199e57600080fd5b948201945b838610156119bc578535825294820194908201906119a3565b965050860135925050808211156119d257600080fd5b506119df85828601611887565b9150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526023908201527f42657420616d6f756e742073686f756c6420626520677265617465722074686160408201526206e20360ec1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611aa157611aa1611a77565b5060010190565b60208082526021908201527f506172616d65746572206c656e677468732073686f756c6420626520657175616040820152601b60fa1b606082015260800190565b60008219821115611afc57611afc611a77565b500190565b600082821015611b1357611b13611a77565b500390565b600060208284031215611b2a57600080fd5b8151801515811461137257600080fd5b6000816000190483118215151615611b5457611b54611a77565b500290565b600082611b7657634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015611b96578181015183820152602001611b7e565b838111156113605750506000910152565b60008251611bb9818460208701611b7b565b9190910192915050565b6020815260008251806020840152611be2816040850160208701611b7b565b601f01601f1916919091016040019291505056fea2646970667358221220e5c8b6264c1a8b11c3681fc368ed0d0d9da4d164c54eae1ab76c628e0893cbc264736f6c634300080c0033",
  "deployedSourceMap": "401:9373:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:34;;;;;-1:-1:-1;;;;;894:34:22;;;;;;-1:-1:-1;;;;;202:32:33;;;184:51;;172:2;157:18;894:34:22;;;;;;;;846:42;;;;;8822:118;;;;;;:::i;:::-;;:::i;:::-;;625:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1032:14:33;;1025:22;1007:41;;995:2;980:18;625:48:22;867:187:33;9535:237:22;;;;;;:::i;:::-;;:::i;935:39::-;;969:5;935:39;;;;;1481:25:33;;;1469:2;1454:18;935:39:22;1335:177:33;980:33:22;;;;;;7890:108;;;;;;:::i;:::-;;:::i;1721:479::-;;;;;;:::i;:::-;;:::i;2930:113::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3011:17:22;2985:7;3011:17;;;:10;:17;;;;;:25;;2930:113;1668:101:0;;;:::i;8145:84:22:-;;8204:10;8187:28;;;;8218:4;8187:28;;;;;;;;:35;;-1:-1:-1;;8187:35:22;;;;;;8145:84;8385:265;;;;;;:::i;:::-;;:::i;2318:461::-;;;;;;:::i;:::-;;:::i;7276:190::-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;4891:625:22;;;;;;:::i;:::-;;:::i;3744:704::-;;;;;;:::i;:::-;;:::i;1054:36::-;;;;;;6929:203;;;;;;:::i;:::-;;:::i;807:33::-;;;;;9120:247;;;;;;:::i;:::-;;:::i;5708:566::-;;;;;;:::i;:::-;;:::i;723:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5471:25:33;;;5527:2;5512:18;;5505:34;;;;5444:18;723:44:22;5297:248:33;3215:358:22;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;6434:330:22:-;;;;;;:::i;:::-;;:::i;1019:29::-;;;;;-1:-1:-1;;;;;1019:29:22;;;7619:108;;;;;;:::i;:::-;;:::i;8822:118::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;8901:14:22::1;:32:::0;;-1:-1:-1;;;;;;8901:32:22::1;-1:-1:-1::0;;;;;8901:32:22;;;::::1;::::0;;;::::1;::::0;;8822:118::o;9535:237::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9645:11:22::1;::::0;-1:-1:-1;;;;;9645:11:22::1;9637:34:::0;9616:113:::1;;;::::0;-1:-1:-1;;;9616:113:22;;6113:2:33;9616:113:22::1;::::0;::::1;6095:21:33::0;;;6132:18;;;6125:30;6191:34;6171:18;;;6164:62;6243:18;;9616:113:22::1;5911:356:33::0;9616:113:22::1;9739:11;:26:::0;;-1:-1:-1;;;;;;9739:26:22::1;-1:-1:-1::0;;;;;9739:26:22;;;::::1;::::0;;;::::1;::::0;;9535:237::o;7890:108::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7965:26:22::1;;::::0;;;:16:::1;:26;::::0;;;;7958:33;;-1:-1:-1;;7958:33:22::1;::::0;;7890:108::o;1721:479::-;1789:1;1779:7;:11;1771:59;;;;-1:-1:-1;;;1771:59:22;;;;;;;:::i;:::-;1865:10;1848:28;;;;:16;:28;;;;;;;;:37;1840:70;;;;-1:-1:-1;;;1840:70:22;;6878:2:33;1840:70:22;;;6860:21:33;6917:2;6897:18;;;6890:30;-1:-1:-1;;;6936:18:33;;;6929:50;6996:18;;1840:70:22;6676:344:33;1840:70:22;1920:58;-1:-1:-1;;;;;1920:5:22;:22;1943:10;1963:4;1970:7;1920:22;:58::i;:::-;2032:10;2021:22;;;;:10;:22;;;;;:30;:65;;2069:7;2021:34;:65::i;:::-;1999:10;1988:22;;;;:10;:22;;;;;;:98;;;2135:15;2096:36;;;;:54;;;;2165:28;;2185:7;;2165:28;;;1721:479;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;8385:265:22:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8492:6:22::1;8477:11;:21;;8456:109;;;::::0;-1:-1:-1;;;8456:109:22;;7227:2:33;8456:109:22::1;::::0;::::1;7209:21:33::0;7266:2;7246:18;;;7239:30;7305:34;7285:18;;;7278:62;-1:-1:-1;;;7356:18:33;;;7349:39;7405:19;;8456:109:22::1;7025:405:33::0;8456:109:22::1;8575:10;:24:::0;;;8614:29:::1;::::0;8588:11;;8614:29:::1;::::0;;;::::1;8385:265:::0;:::o;2318:461::-;2412:1;2402:7;:11;2394:59;;;;-1:-1:-1;;;2394:59:22;;;;;;;:::i;:::-;-1:-1:-1;;;;;2471:23:22;;;;;;:16;:23;;;;;;;;:32;2463:65;;;;-1:-1:-1;;;2463:65:22;;6878:2:33;2463:65:22;;;6860:21:33;6917:2;6897:18;;;6890:30;-1:-1:-1;;;6936:18:33;;;6929:50;6996:18;;2463:65:22;6676:344:33;2463:65:22;2538:58;-1:-1:-1;;;;;2538:5:22;:22;2561:10;2581:4;2588:7;2538:22;:58::i;:::-;-1:-1:-1;;;;;2634:17:22;;;;;;:10;:17;;;;;:25;:38;;2664:7;2634:29;:38::i;:::-;-1:-1:-1;;;;;2606:17:22;;;;;;:10;:17;;;;;;:66;;;2716:15;2682:31;;;;:49;;;;2746:26;;2764:7;;2746:26;;;2318:461;;:::o;7276:190::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7357:9:22::1;7352:108;7376:6;:13;7372:1;:17;7352:108;;;7448:1;7410:10;:21;7421:6;7428:1;7421:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;7410:21:22::1;-1:-1:-1::0;;;;;7410:21:22::1;;;;;;;;;;;;:35;;:39;;;;7391:3;;;;;:::i;:::-;;;;7352:108;;;;7276:190:::0;:::o;4891:625::-;4978:10;4967:22;;;;:10;:22;;;;;:30;:41;-1:-1:-1;4967:41:22;4946:117;;;;-1:-1:-1;;;4946:117:22;;8041:2:33;4946:117:22;;;8023:21:33;8080:2;8060:18;;;8053:30;8119:31;8099:18;;;8092:59;8168:18;;4946:117:22;7839:353:33;4946:117:22;5105:10;5094:22;;;;:10;:22;;;;;:36;;;:41;;:147;;-1:-1:-1;5196:10:22;;5166;5155:22;;;;:10;:22;;;;;:36;;;5226:15;;5155:52;;:36;:40;:52::i;:::-;:86;5094:147;5073:235;;;;-1:-1:-1;;;5073:235:22;;8399:2:33;5073:235:22;;;8381:21:33;8438:2;8418:18;;;8411:30;8477:34;8457:18;;;8450:62;-1:-1:-1;;;8528:18:33;;;8521:39;8577:19;;5073:235:22;8197:405:33;5073:235:22;5362:10;5351:22;;;;:10;:22;;;;;:30;:65;;5399:7;5351:34;:65::i;:::-;5329:10;5318:22;;;;:10;:22;;;;;:98;;;;5426:39;;:5;-1:-1:-1;;;;;5426:18:22;;5457:7;5426:18;:39::i;:::-;5480:29;;5501:7;;5489:10;;5480:29;;;;;4891:625;:::o;3744:704::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3899:6:22::1;:13;3883:5;:12;:29;3862:109;;;;-1:-1:-1::0;;;3862:109:22::1;;;;;;;:::i;:::-;3986:9;3981:461;4005:6;:13;4001:1;:17;3981:461;;;4054:1;4043:5;4049:1;4043:8;;;;;;;;:::i;:::-;;;;;;;:12;4039:393;;;4137:5;4143:1;4137:8;;;;;;;;:::i;:::-;;;;;;;4104:10;:21;4115:6;4122:1;4115:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4104:21:22::1;-1:-1:-1::0;;;;;4104:21:22::1;;;;;;;;;;;;:29;;;:41;;4075:161;;;::::0;-1:-1:-1;;;4075:161:22;;9211:2:33;4075:161:22::1;::::0;::::1;9193:21:33::0;9250:2;9230:18;;;9223:30;9289:34;9269:18;;;9262:62;-1:-1:-1;;;9340:18:33;;;9333:47;9397:19;;4075:161:22::1;9009:413:33::0;4075:161:22::1;4254:28;4273:5;4279:1;4273:8;;;;;;;;:::i;:::-;;;;;;;4254:18;:28::i;:::-;4332:85;4408:5;4414:1;4408:8;;;;;;;;:::i;:::-;;;;;;;4332:10;:21;4343:6;4350:1;4343:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4332:21:22::1;-1:-1:-1::0;;;;;4332:21:22::1;;;;;;;;;;;;:50;;;:75;;:85;;;;:::i;:::-;4300:10;:21;4311:6;4318:1;4311:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;4300:21:22::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;4300:21:22;:117;4039:393:::1;4020:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3981:461;;;;3744:704:::0;;:::o;6929:203::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7009:9:22::1;7004:122;7028:6;:13;7024:1;:17;7004:122;;;7100:15;7062:10;:21;7073:6;7080:1;7073:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;7062:21:22::1;-1:-1:-1::0;;;;;7062:21:22::1;;;;;;;;;;;;:35;;:53;;;;7043:3;;;;;:::i;:::-;;;;7004:122;;9120:247:::0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9244:4:22::1;9224:17;:24;9203:111;;;::::0;-1:-1:-1;;;9203:111:22;;9629:2:33;9203:111:22::1;::::0;::::1;9611:21:33::0;9668:2;9648:18;;;9641:30;9707:34;9687:18;;;9680:62;-1:-1:-1;;;9758:18:33;;;9751:38;9806:19;;9203:111:22::1;9427:404:33::0;9203:111:22::1;9324:16;:36:::0;9120:247::o;5708:566::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5836:17:22;::::1;;::::0;;;:10:::1;:17;::::0;;;;:25;:36;-1:-1:-1;5836:36:22::1;5815:112;;;::::0;-1:-1:-1;;;5815:112:22;;8041:2:33;5815:112:22::1;::::0;::::1;8023:21:33::0;8080:2;8060:18;;;8053:30;8119:31;8099:18;;;8092:59;8168:18;;5815:112:22::1;7839:353:33::0;5815:112:22::1;-1:-1:-1::0;;;;;5965:17:22;::::1;;::::0;;;:10:::1;:17;::::0;;;;:25;:38:::1;::::0;5995:7;5965:29:::1;:38::i;:::-;-1:-1:-1::0;;;;;5937:17:22;::::1;;::::0;;;:10:::1;:17;::::0;;;;;:66;;;;6018:24;;6034:7;;6018:24:::1;::::0;::::1;6052:21;6076:42;969:5;6076:29;6088:16;;6076:7;:11;;:29;;;;:::i;:::-;:33:::0;::::1;:42::i;:::-;6052:66:::0;-1:-1:-1;6138:26:22::1;:7:::0;6052:66;6138:11:::1;:26::i;:::-;6193:14;::::0;6128:36;;-1:-1:-1;6174:49:22::1;::::0;-1:-1:-1;;;;;6174:5:22::1;:18:::0;::::1;::::0;6193:14:::1;6209:13:::0;6174:18:::1;:49::i;:::-;6233:34;-1:-1:-1::0;;;;;6233:5:22::1;:18;6252:5:::0;6259:7;6233:18:::1;:34::i;3215:358::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3369:6:22::1;:13;3353:5;:12;:29;3332:109;;;;-1:-1:-1::0;;;3332:109:22::1;;;;;;;:::i;:::-;3456:9;3451:116;3475:6;:13;3471:1;:17;3451:116;;;3509:8;-1:-1:-1::0;;;;;3509:26:22::1;;3536:5;3542:1;3536:8;;;;;;;;:::i;:::-;;;;;;;3546:6;3553:1;3546:9;;;;;;;;:::i;:::-;;;;;;;3509:47;;;;;;;;;;;;;;;10010:25:33::0;;;-1:-1:-1;;;;;10071:32:33;10066:2;10051:18;;10044:60;9998:2;9983:18;;9836:274;3509:47:22::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3490:3;;;;;:::i;:::-;;;;3451:116;;1918:198:0::0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;10317:2:33;1998:73:0::1;::::0;::::1;10299:21:33::0;10356:2;10336:18;;;10329:30;10395:34;10375:18;;;10368:62;-1:-1:-1;;;10446:18:33;;;10439:36;10492:19;;1998:73:0::1;10115:402:33::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6434:330:22:-;6531:10;-1:-1:-1;;;;;6553:8:22;6531:31;;;:85;;-1:-1:-1;6604:11:22;;-1:-1:-1;;;;;6604:11:22;6582:10;:34;6531:85;6510:171;;;;-1:-1:-1;;;6510:171:22;;10724:2:33;6510:171:22;;;10706:21:33;10763:2;10743:18;;;10736:30;10802:34;10782:18;;;10775:62;-1:-1:-1;;;10853:18:33;;;10846:37;10900:19;;6510:171:22;10522:403:33;6510:171:22;-1:-1:-1;;;;;6719:17:22;;;;;;:10;:17;;;;;:25;:38;;6749:7;6719:29;:38::i;:::-;-1:-1:-1;;;;;6691:17:22;;;;;;;:10;:17;;;;;:66;-1:-1:-1;6434:330:22:o;7619:108::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7687:26:22::1;;::::0;;;7716:4:::1;7687:26;::::0;;;;;;;:33;;-1:-1:-1;;7687:33:22::1;::::0;;::::1;::::0;;7619:108::o;912:241:6:-;1077:68;;-1:-1:-1;;;;;11188:15:33;;;1077:68:6;;;11170:34:33;11240:15;;11220:18;;;11213:43;11272:18;;;11265:34;;;1050:96:6;;1070:5;;-1:-1:-1;;;1100:27:6;11105:18:33;;1077:68:6;;;;-1:-1:-1;;1077:68:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:6;-1:-1:-1;;;;;;1077:68:6;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;2741:96:16:-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:16:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3108:96:16:-;3166:7;3192:5;3196:1;3192;:5;:::i;701:205:6:-;840:58;;-1:-1:-1;;;;;11765:32:33;;840:58:6;;;11747:51:33;11814:18;;;11807:34;;;813:86:6;;833:5;;-1:-1:-1;;;863:23:6;11720:18:33;;840:58:6;11573:274:33;4600:151:22;4664:41;;-1:-1:-1;;;4664:41:22;;-1:-1:-1;;;;;4686:8:22;11765:32:33;;4664:41:22;;;11747:51:33;11814:18;;;11807:34;;;4664:5:22;:13;;;;11720:18:33;;4664:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4715:29:22;;-1:-1:-1;;;4715:29:22;;;;;1481:25:33;;;4715:8:22;-1:-1:-1;;;;;4715:20:22;;;;1454:18:33;;4715:29:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4600:151;:::o;3451:96:16:-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;3207:706:6:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:6;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:6;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:6;;12731:2:33;3811:85:6;;;12713:21:33;12770:2;12750:18;;;12743:30;12809:34;12789:18;;;12782:62;-1:-1:-1;;;12860:18:33;;;12853:40;12910:19;;3811:85:6;12529:406:33;3861:223:11;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:11:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:11;;13142:2:33;5137:81:11;;;13124:21:33;13181:2;13161:18;;;13154:30;13220:34;13200:18;;;13193:62;-1:-1:-1;;;13271:18:33;;;13264:36;13317:19;;5137:81:11;12940:402:33;5137:81:11;-1:-1:-1;;;;;1465:19:11;;;5228:60;;;;-1:-1:-1;;;5228:60:11;;13549:2:33;5228:60:11;;;13531:21:33;13588:2;13568:18;;;13561:30;13627:31;13607:18;;;13600:59;13676:18;;5228:60:11;13347:353:33;5228:60:11;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:11;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:11:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:11;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:11;;;;;;;;:::i;479:131:33:-;-1:-1:-1;;;;;554:31:33;;544:42;;534:70;;600:1;597;590:12;615:247;674:6;727:2;715:9;706:7;702:23;698:32;695:52;;;743:1;740;733:12;695:52;782:9;769:23;801:31;826:5;801:31;:::i;1517:180::-;1576:6;1629:2;1617:9;1608:7;1604:23;1600:32;1597:52;;;1645:1;1642;1635:12;1597:52;-1:-1:-1;1668:23:33;;1517:180;-1:-1:-1;1517:180:33:o;1702:315::-;1770:6;1778;1831:2;1819:9;1810:7;1806:23;1802:32;1799:52;;;1847:1;1844;1837:12;1799:52;1883:9;1870:23;1860:33;;1943:2;1932:9;1928:18;1915:32;1956:31;1981:5;1956:31;:::i;:::-;2006:5;1996:15;;;1702:315;;;;;:::o;2022:127::-;2083:10;2078:3;2074:20;2071:1;2064:31;2114:4;2111:1;2104:15;2138:4;2135:1;2128:15;2154:275;2225:2;2219:9;2290:2;2271:13;;-1:-1:-1;;2267:27:33;2255:40;;2325:18;2310:34;;2346:22;;;2307:62;2304:88;;;2372:18;;:::i;:::-;2408:2;2401:22;2154:275;;-1:-1:-1;2154:275:33:o;2434:183::-;2494:4;2527:18;2519:6;2516:30;2513:56;;;2549:18;;:::i;:::-;-1:-1:-1;2594:1:33;2590:14;2606:4;2586:25;;2434:183::o;2622:737::-;2676:5;2729:3;2722:4;2714:6;2710:17;2706:27;2696:55;;2747:1;2744;2737:12;2696:55;2783:6;2770:20;2809:4;2833:60;2849:43;2889:2;2849:43;:::i;:::-;2833:60;:::i;:::-;2927:15;;;3013:1;3009:10;;;;2997:23;;2993:32;;;2958:12;;;;3037:15;;;3034:35;;;3065:1;3062;3055:12;3034:35;3101:2;3093:6;3089:15;3113:217;3129:6;3124:3;3121:15;3113:217;;;3209:3;3196:17;3226:31;3251:5;3226:31;:::i;:::-;3270:18;;3308:12;;;;3146;;3113:217;;;-1:-1:-1;3348:5:33;2622:737;-1:-1:-1;;;;;;2622:737:33:o;3364:348::-;3448:6;3501:2;3489:9;3480:7;3476:23;3472:32;3469:52;;;3517:1;3514;3507:12;3469:52;3557:9;3544:23;3590:18;3582:6;3579:30;3576:50;;;3622:1;3619;3612:12;3576:50;3645:61;3698:7;3689:6;3678:9;3674:22;3645:61;:::i;3925:1140::-;4043:6;4051;4104:2;4092:9;4083:7;4079:23;4075:32;4072:52;;;4120:1;4117;4110:12;4072:52;4160:9;4147:23;4189:18;4230:2;4222:6;4219:14;4216:34;;;4246:1;4243;4236:12;4216:34;4284:6;4273:9;4269:22;4259:32;;4329:7;4322:4;4318:2;4314:13;4310:27;4300:55;;4351:1;4348;4341:12;4300:55;4387:2;4374:16;4409:4;4433:60;4449:43;4489:2;4449:43;:::i;4433:60::-;4527:15;;;4609:1;4605:10;;;;4597:19;;4593:28;;;4558:12;;;;4633:19;;;4630:39;;;4665:1;4662;4655:12;4630:39;4689:11;;;;4709:142;4725:6;4720:3;4717:15;4709:142;;;4791:17;;4779:30;;4742:12;;;;4829;;;;4709:142;;;4870:5;-1:-1:-1;;4913:18:33;;4900:32;;-1:-1:-1;;4944:16:33;;;4941:36;;;4973:1;4970;4963:12;4941:36;;4996:63;5051:7;5040:8;5029:9;5025:24;4996:63;:::i;:::-;4986:73;;;3925:1140;;;;;:::o;5550:356::-;5752:2;5734:21;;;5771:18;;;5764:30;5830:34;5825:2;5810:18;;5803:62;5897:2;5882:18;;5550:356::o;6272:399::-;6474:2;6456:21;;;6513:2;6493:18;;;6486:30;6552:34;6547:2;6532:18;;6525:62;-1:-1:-1;;;6618:2:33;6603:18;;6596:33;6661:3;6646:19;;6272:399::o;7435:127::-;7496:10;7491:3;7487:20;7484:1;7477:31;7527:4;7524:1;7517:15;7551:4;7548:1;7541:15;7567:127;7628:10;7623:3;7619:20;7616:1;7609:31;7659:4;7656:1;7649:15;7683:4;7680:1;7673:15;7699:135;7738:3;-1:-1:-1;;7759:17:33;;7756:43;;;7779:18;;:::i;:::-;-1:-1:-1;7826:1:33;7815:13;;7699:135::o;8607:397::-;8809:2;8791:21;;;8848:2;8828:18;;;8821:30;8887:34;8882:2;8867:18;;8860:62;-1:-1:-1;;;8953:2:33;8938:18;;8931:31;8994:3;8979:19;;8607:397::o;11310:128::-;11350:3;11381:1;11377:6;11374:1;11371:13;11368:39;;;11387:18;;:::i;:::-;-1:-1:-1;11423:9:33;;11310:128::o;11443:125::-;11483:4;11511:1;11508;11505:8;11502:34;;;11516:18;;:::i;:::-;-1:-1:-1;11553:9:33;;11443:125::o;11852:277::-;11919:6;11972:2;11960:9;11951:7;11947:23;11943:32;11940:52;;;11988:1;11985;11978:12;11940:52;12020:9;12014:16;12073:5;12066:13;12059:21;12052:5;12049:32;12039:60;;12095:1;12092;12085:12;12134:168;12174:7;12240:1;12236;12232:6;12228:14;12225:1;12222:21;12217:1;12210:9;12203:17;12199:45;12196:71;;;12247:18;;:::i;:::-;-1:-1:-1;12287:9:33;;12134:168::o;12307:217::-;12347:1;12373;12363:132;;12417:10;12412:3;12408:20;12405:1;12398:31;12452:4;12449:1;12442:15;12480:4;12477:1;12470:15;12363:132;-1:-1:-1;12509:9:33;;12307:217::o;13705:258::-;13777:1;13787:113;13801:6;13798:1;13795:13;13787:113;;;13877:11;;;13871:18;13858:11;;;13851:39;13823:2;13816:10;13787:113;;;13918:6;13915:1;13912:13;13909:48;;;-1:-1:-1;;13953:1:33;13935:16;;13928:27;13705:258::o;13968:274::-;14097:3;14135:6;14129:13;14151:53;14197:6;14192:3;14185:4;14177:6;14173:17;14151:53;:::i;:::-;14220:16;;;;;13968:274;-1:-1:-1;;13968:274:33:o;14247:383::-;14396:2;14385:9;14378:21;14359:4;14428:6;14422:13;14471:6;14466:2;14455:9;14451:18;14444:34;14487:66;14546:6;14541:2;14530:9;14526:18;14521:2;14513:6;14509:15;14487:66;:::i;:::-;14614:2;14593:15;-1:-1:-1;;14589:29:33;14574:45;;;;14621:2;14570:54;;14247:383;-1:-1:-1;;14247:383:33:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addToUserWinnings(uint256,address)": {
        "details": "add funds to the users live wallet as winnings",
        "notice": "add funds to the users live wallet on wins by either the bankroll or the staking pool"
      },
      "addbet(uint256)": {
        "details": "adds funds to the sender user's live wallets",
        "notice": "add funds to the senders live wallet"
      },
      "addbetWithAddress(uint256,address)": {
        "details": "adds funds to the specified users live wallets",
        "notice": "add funds to the provided users live wallet"
      },
      "balanceOf(address)": {
        "details": "return current the balance of provided user addrss in the live wallet",
        "notice": "return the current balance of user in the live wallet"
      },
      "blacklistSelf()": {
        "details": "prevent sender address from adding funds to the live wallet",
        "notice": "blacklist sender address from adding more funds to the pool"
      },
      "blacklistUser(address)": {
        "details": "prevent specified address from adding funds to the live wallet",
        "notice": "blacklist specified address from adding more funds to the pool"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerLoss(uint256[],address[])": {
        "details": "register loss for users during gameplay. loss is reported in aggregated form from the game server.",
        "notice": "register loss for users in game with amounts"
      },
      "registerWin(uint256[],address[])": {
        "details": "register wins for users during gameplay. wins are reported in aggregated form from the game server.",
        "notice": "register wins for users in game with amounts"
      },
      "releaseBetLock(address[])": {
        "details": "update bet lock to allow withdraws after gameplay",
        "notice": "update the lockTimeStamp of provided users to 0 to allow withdraws"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setEarlyWithdrawFee(uint256)": {
        "details": "stores the _earlyWithdrawFee in the state variable `earlyWithdrawFee`",
        "notice": "Store `_earlyWithdrawFee`.",
        "params": {
          "_earlyWithdrawFee": "the new value to store"
        }
      },
      "setLockPeriod(uint256)": {
        "details": "stores the _lockPeriod in the state variable `lockPeriod`",
        "notice": "Store `_lockPeriod`.",
        "params": {
          "_lockPeriod": "the new value to store"
        }
      },
      "setReserveAddress(address)": {
        "details": "stores the _reserveAddress in the state variable `reserveAddress`",
        "notice": "Store `_reserveAddress`.",
        "params": {
          "_reserveAddress": "the new value to store"
        }
      },
      "setStakingPool(address)": {
        "details": "stores the _stakingPool address in the state variable `stakingPool`",
        "notice": "Store `_stakingPool`.",
        "params": {
          "_stakingPool": "the new value to store"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBetLock(address[])": {
        "details": "update bet lock to prevent withdraws during gameplay",
        "notice": "update the lockTimeStamp of provided users to current timestamp to prevent withdraws"
      },
      "whitelistUser(address)": {
        "details": "allow previously blacklisted sender address to add funds to the live wallet",
        "notice": "whitelist sender address from adding more funds to the pool"
      },
      "withdrawBet(uint256)": {
        "details": "withdraw amount from users wallet if betlock isnt enabled",
        "notice": "withdraw funds from live wallet of the senders address"
      },
      "withdrawBetForUser(uint256,address)": {
        "details": "withdraw preapproved amount from users wallet sidestepping the timelock on withdrawals",
        "notice": "owner only function to override timelock and withdraw funds on behalf of user"
      }
    },
    "version": 1
  },
  "offset": [
    401,
    9774
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x815B7386 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xC22982F4 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xF62CF8D0 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xF79ED94B EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0xFCBCA456 EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC22982F4 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xD4B9661C EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xEBCFCF6B EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF2150BBB EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4AE1C56 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA4AE1C56 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xA80A7882 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xAFB62D70 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xB359A9F9 EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x815B7386 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xA2B1A2CC EQ PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A4C560D GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x723EA115 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x779972DA EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x7EFD3813 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A4C560D EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x6145B22C EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22C0AEC7 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x22C0AEC7 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x3028F63A EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x3410FE6E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC56AE3B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xC657EB0 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x14673D31 EQ PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1E7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x23E PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x28F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0x23E PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x23E CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x23E PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH2 0x23E PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x23E PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH2 0x23E PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x28F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x1E7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x41F PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x23E PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x23E PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x112C JUMP JUMPDEST PUSH2 0x23E PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1E7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B696E6720706F6F6C206164647265737320616C726561647920736574 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1A1E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x155CD95C881A5CC8189B1858DAC8131A5CDD1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x684 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x12F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x69E SWAP1 DUP3 PUSH2 0x1366 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 DUP5 SSTORE TIMESTAMP PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD DUP4 SWAP3 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x719 PUSH1 0x0 PUSH2 0x1379 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH3 0x93A80 DUP2 GT ISZERO PUSH2 0x7AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B20706572696F642063616E6E6F742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616E2031207765656B PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8249EC545E68F6F1E1230133CA48C704D831A7F8E635DED80F3DD9E99B09BB2F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x155CD95C881A5CC8189B1858DAC8131A5CDD1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x892 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8B5 SWAP1 DUP4 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 DUP5 SSTORE TIMESTAMP PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD DUP5 SWAP3 PUSH32 0x40A0B865AE77859153EAFC5CDE95D936F135CC12158B807A1EC5F644BEA4111E SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x996 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x954 JUMPI PUSH2 0x954 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x98E SWAP1 PUSH2 0x1A8D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x933 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206C657373207468616E20616D6F756E74207769746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO DUP1 PUSH2 0xA37 JUMPI POP PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP SWAP2 PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST LT JUMPDEST PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420416D6F756E74206C6F636B65642C20706C6561736520747279206167 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x30B4B7103630BA32B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAAF SWAP1 DUP3 PUSH2 0x13C9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xAF7 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB92 JUMPI PUSH2 0xB92 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xD2E JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xBB2 JUMPI PUSH2 0xBB2 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH2 0xBD0 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F73732062657420616D6F756E742069732067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x617661696C61626C652062616C616E6365 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xC86 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC79 JUMPI PUSH2 0xC79 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1405 JUMP JUMPDEST PUSH2 0xCF3 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC9B JUMPI PUSH2 0xC9B PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xCB9 JUMPI PUSH2 0xCB9 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x13C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD09 JUMPI PUSH2 0xD09 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE JUMPDEST DUP1 PUSH2 0xD38 DUP2 PUSH2 0x1A8D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x996 JUMPI TIMESTAMP PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD92 JUMPI PUSH2 0xD92 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xDCC SWAP1 PUSH2 0x1A8D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0xFA0 DUP2 LT PUSH2 0xE60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4561726C7920776974686472617720666565206D757374206265206C65737320 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x7468616E20343025 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206C657373207468616E20616D6F756E74207769746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 DUP4 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD DUP5 SWAP3 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 LOG3 PUSH1 0x0 PUSH2 0xF81 PUSH2 0x2710 PUSH2 0xF7B PUSH1 0x6 SLOAD DUP7 PUSH2 0x1536 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP PUSH2 0xF8D DUP4 DUP3 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP4 POP PUSH2 0xFCA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0xD40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP6 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1049 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD40 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x61433D88 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1096 JUMPI PUSH2 0x1096 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10B0 JUMPI PUSH2 0x10B0 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E7 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1115 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1124 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x104C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1156 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x11C4 DUP2 PUSH2 0x1379 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1208 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1264 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652062616E6B726F6C6C206F72207374616B69 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1B99C81C1BDBDB PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1287 SWAP1 DUP4 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1360 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x154E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1372 DUP3 DUP5 PUSH2 0x1AE9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1372 DUP3 DUP5 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD40 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B8 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x6172858B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC2E50B16 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x152F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1372 DUP3 DUP5 PUSH2 0x1B3A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1372 DUP3 DUP5 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1620 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD40 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x162F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1637 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x16EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x170B SWAP2 SWAP1 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1748 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x174D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x175D DUP3 DUP3 DUP7 PUSH2 0x1768 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1777 JUMPI POP DUP2 PUSH2 0x1372 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1787 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1372 DUP2 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1811 DUP2 PUSH2 0x17A1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x185B JUMPI PUSH2 0x185B PUSH2 0x181C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x187D JUMPI PUSH2 0x187D PUSH2 0x181C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x18AD PUSH2 0x18A8 DUP4 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x1832 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x18F0 JUMPI DUP1 CALLDATALOAD PUSH2 0x18E3 DUP2 PUSH2 0x17A1 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x18D0 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x162F DUP5 DUP3 DUP6 ADD PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x195B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x196F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x197F PUSH2 0x18A8 DUP4 PUSH2 0x1863 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x199E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x19BC JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x19A3 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19DF DUP6 DUP3 DUP7 ADD PUSH2 0x1887 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E742073686F756C64206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1AA1 JUMPI PUSH2 0x1AA1 PUSH2 0x1A77 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x506172616D65746572206C656E677468732073686F756C642062652065717561 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AFC JUMPI PUSH2 0x1AFC PUSH2 0x1A77 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B13 JUMPI PUSH2 0x1B13 PUSH2 0x1A77 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B54 PUSH2 0x1A77 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B96 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B7E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1360 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1BB9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B7B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1BE2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xC8 0xB6 0x26 0x4C BYTE DUP12 GT 0xC3 PUSH9 0x1FC368ED0D0D9DA4D1 PUSH5 0xC54EAE1AB7 PUSH13 0x628E0893CBC264736F6C634300 ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CF"
    },
    "25": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x815B7386"
    },
    "38": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x104"
    },
    "42": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC22982F4"
    },
    "49": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "GT",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA2"
    },
    "53": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2FDE38B"
    },
    "60": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "GT",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x447"
    },
    "75": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF62CF8D0"
    },
    "82": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x45A"
    },
    "86": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF79ED94B"
    },
    "93": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x46D"
    },
    "97": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFCBCA456"
    },
    "104": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x480"
    },
    "108": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "112": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "113": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "114": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "115": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC22982F4"
    },
    "120": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "121": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3D2"
    },
    "124": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD4B9661C"
    },
    "131": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E5"
    },
    "135": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "137": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xEBCFCF6B"
    },
    "142": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F8"
    },
    "146": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "147": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2150BBB"
    },
    "153": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x434"
    },
    "157": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "161": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "162": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "163": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "164": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA4AE1C56"
    },
    "169": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "GT",
      "path": "22"
    },
    "170": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "174": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "175": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA4AE1C56"
    },
    "180": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "181": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x37C"
    },
    "184": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "185": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "186": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA80A7882"
    },
    "191": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "192": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x38F"
    },
    "195": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "196": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "197": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xAFB62D70"
    },
    "202": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "203": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x398"
    },
    "206": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "207": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "208": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xB359A9F9"
    },
    "213": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "214": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3AB"
    },
    "217": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "218": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "221": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "222": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "223": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "224": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x815B7386"
    },
    "229": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "230": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x345"
    },
    "233": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "234": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "235": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8DA5CB5B"
    },
    "240": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "241": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x358"
    },
    "244": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "245": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "246": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA2B1A2CC"
    },
    "251": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "252": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x369"
    },
    "255": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "256": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "259": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "260": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "261": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "262": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4A4C560D"
    },
    "267": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "GT",
      "path": "22"
    },
    "268": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "272": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "273": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x715018A6"
    },
    "278": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "GT",
      "path": "22"
    },
    "279": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "283": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "284": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x715018A6"
    },
    "289": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "290": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F5"
    },
    "293": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "294": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "295": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x723EA115"
    },
    "300": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "301": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FD"
    },
    "304": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "305": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "306": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x779972DA"
    },
    "311": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "312": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31F"
    },
    "315": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "316": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "317": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7EFD3813"
    },
    "322": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "323": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x332"
    },
    "326": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "327": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "330": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "331": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "332": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "333": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4A4C560D"
    },
    "338": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "339": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A6"
    },
    "342": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "343": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "344": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6145B22C"
    },
    "349": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "350": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B9"
    },
    "353": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "354": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "355": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "360": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "361": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2CC"
    },
    "364": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "365": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "368": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "369": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "370": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "371": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x22C0AEC7"
    },
    "376": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "GT",
      "path": "22"
    },
    "377": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AD"
    },
    "380": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "381": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "382": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x22C0AEC7"
    },
    "387": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "388": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x240"
    },
    "391": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "392": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "393": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3028F63A"
    },
    "398": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "399": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x273"
    },
    "402": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "403": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "404": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3410FE6E"
    },
    "409": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "410": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x286"
    },
    "413": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "414": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "415": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3FD8B02F"
    },
    "420": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "421": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29D"
    },
    "424": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "425": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "427": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "428": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "429": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "430": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "431": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC56AE3B"
    },
    "436": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "437": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D4"
    },
    "440": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "441": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "442": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC657EB0"
    },
    "447": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "448": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x204"
    },
    "451": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "452": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "453": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x14673D31"
    },
    "458": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "EQ",
      "path": "22"
    },
    "459": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x22B"
    },
    "462": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "463": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "464": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "466": {
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "DUP1",
      "path": "22"
    },
    "467": {
      "first_revert": true,
      "fn": null,
      "offset": [
        401,
        9774
      ],
      "op": "REVERT",
      "path": "22"
    },
    "468": {
      "offset": [
        894,
        928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "469": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "471": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "472": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E7"
    },
    "475": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "op": "SUB"
    },
    "484": {
      "offset": [
        894,
        928
      ],
      "op": "AND",
      "path": "22"
    },
    "485": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "DUP2",
      "path": "22"
    },
    "486": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "JUMP",
      "path": "22"
    },
    "487": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "488": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "490": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "497": {
      "op": "SHL"
    },
    "498": {
      "op": "SUB"
    },
    "499": {
      "op": "SWAP1"
    },
    "500": {
      "op": "SWAP2"
    },
    "501": {
      "op": "AND"
    },
    "502": {
      "op": "DUP2"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "offset": [
        894,
        928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "508": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "510": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "511": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "512": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "513": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "SUB",
      "path": "22"
    },
    "514": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "515": {
      "fn": null,
      "offset": [
        894,
        928
      ],
      "op": "RETURN",
      "path": "22"
    },
    "516": {
      "offset": [
        846,
        888
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "517": {
      "fn": null,
      "offset": [
        846,
        888
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E7"
    },
    "520": {
      "fn": null,
      "offset": [
        846,
        888
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "553": {
      "fn": null,
      "offset": [
        846,
        888
      ],
      "op": "DUP2",
      "path": "22"
    },
    "554": {
      "fn": null,
      "offset": [
        846,
        888
      ],
      "op": "JUMP",
      "path": "22"
    },
    "555": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "556": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "559": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x239"
    },
    "562": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "563": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "565": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B6"
    },
    "568": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "jump": "i",
      "offset": [
        8822,
        8940
      ],
      "op": "JUMP",
      "path": "22"
    },
    "569": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "570": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x493"
    },
    "573": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "jump": "i",
      "offset": [
        8822,
        8940
      ],
      "op": "JUMP",
      "path": "22"
    },
    "574": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "575": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "STOP",
      "path": "22"
    },
    "576": {
      "offset": [
        625,
        673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "577": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x263"
    },
    "580": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24E"
    },
    "583": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "584": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "586": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B6"
    },
    "589": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "jump": "i",
      "offset": [
        625,
        673
      ],
      "op": "JUMP",
      "path": "22"
    },
    "590": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "591": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "593": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "595": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "596": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "598": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "599": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "DUP2",
      "path": "22"
    },
    "600": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "601": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "603": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "604": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "605": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "606": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "608": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "AND",
      "path": "22"
    },
    "609": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "DUP2",
      "path": "22"
    },
    "610": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "JUMP",
      "path": "22"
    },
    "611": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "612": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "614": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        625,
        673
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "615": {
      "op": "SWAP1"
    },
    "616": {
      "op": "ISZERO"
    },
    "617": {
      "op": "ISZERO"
    },
    "618": {
      "op": "DUP2"
    },
    "619": {
      "op": "MSTORE"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "622": {
      "op": "ADD"
    },
    "623": {
      "offset": [
        625,
        673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FB"
    },
    "626": {
      "op": "JUMP"
    },
    "627": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "628": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "631": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x281"
    },
    "634": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "635": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "637": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B6"
    },
    "640": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "jump": "i",
      "offset": [
        9535,
        9772
      ],
      "op": "JUMP",
      "path": "22"
    },
    "641": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "642": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4E8"
    },
    "645": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "jump": "i",
      "offset": [
        9535,
        9772
      ],
      "op": "JUMP",
      "path": "22"
    },
    "646": {
      "offset": [
        935,
        974
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "647": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        935,
        974
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28F"
    },
    "650": {
      "offset": [
        969,
        974
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "653": {
      "offset": [
        935,
        974
      ],
      "op": "DUP2",
      "path": "22"
    },
    "654": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        935,
        974
      ],
      "op": "JUMP",
      "path": "22"
    },
    "655": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        935,
        974
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "656": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        935,
        974
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "658": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        935,
        974
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "659": {
      "op": "SWAP1"
    },
    "660": {
      "op": "DUP2"
    },
    "661": {
      "op": "MSTORE"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "offset": [
        935,
        974
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FB"
    },
    "668": {
      "op": "JUMP"
    },
    "669": {
      "offset": [
        980,
        1013
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "670": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        980,
        1013
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28F"
    },
    "673": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        980,
        1013
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "675": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        980,
        1013
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "676": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        980,
        1013
      ],
      "op": "DUP2",
      "path": "22"
    },
    "677": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        980,
        1013
      ],
      "op": "JUMP",
      "path": "22"
    },
    "678": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "679": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "682": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B4"
    },
    "685": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "686": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "688": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B6"
    },
    "691": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "jump": "i",
      "offset": [
        7890,
        7998
      ],
      "op": "JUMP",
      "path": "22"
    },
    "692": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "693": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x58D"
    },
    "696": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "jump": "i",
      "offset": [
        7890,
        7998
      ],
      "op": "JUMP",
      "path": "22"
    },
    "697": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "698": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "701": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C7"
    },
    "704": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "705": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "707": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17D3"
    },
    "710": {
      "fn": "BitcrushLiveWallet.addbet",
      "jump": "i",
      "offset": [
        1721,
        2200
      ],
      "op": "JUMP",
      "path": "22"
    },
    "711": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "712": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5D8"
    },
    "715": {
      "fn": "BitcrushLiveWallet.addbet",
      "jump": "i",
      "offset": [
        1721,
        2200
      ],
      "op": "JUMP",
      "path": "22"
    },
    "716": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2930,
        3043
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "717": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2930,
        3043
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28F"
    },
    "720": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2930,
        3043
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2DA"
    },
    "723": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2930,
        3043
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "724": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2930,
        3043
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "726": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2930,
        3043
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B6"
    },
    "729": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "jump": "i",
      "offset": [
        2930,
        3043
      ],
      "op": "JUMP",
      "path": "22"
    },
    "730": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2930,
        3043
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "op": "SUB"
    },
    "739": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "AND",
      "path": "22",
      "statement": 0
    },
    "740": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2985,
        2992
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "742": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "743": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "DUP2",
      "path": "22"
    },
    "744": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "745": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3021
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "747": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "749": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "750": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "752": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "753": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3028
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "754": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3036
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "755": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        3011,
        3036
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "756": {
      "fn": "BitcrushLiveWallet.balanceOf",
      "offset": [
        2930,
        3043
      ],
      "op": "JUMP",
      "path": "22"
    },
    "757": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "758": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E"
    },
    "761": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E5"
    },
    "764": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "765": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8145,
        8229
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "766": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8145,
        8229
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "769": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8204,
        8214
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 1
    },
    "770": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "772": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "773": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "DUP2",
      "path": "22"
    },
    "774": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "775": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8218,
        8222
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "777": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "779": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "DUP2",
      "path": "22"
    },
    "780": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "781": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "782": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "784": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "785": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "786": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8215
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "787": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8222
      ],
      "op": "DUP1",
      "path": "22"
    },
    "788": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8222
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "789": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "791": {
      "op": "NOT"
    },
    "792": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8222
      ],
      "op": "AND",
      "path": "22"
    },
    "793": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8222
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "794": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8222
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "795": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8222
      ],
      "op": "OR",
      "path": "22"
    },
    "796": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8222
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "797": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8187,
        8222
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "798": {
      "fn": "BitcrushLiveWallet.blacklistSelf",
      "offset": [
        8145,
        8229
      ],
      "op": "JUMP",
      "path": "22"
    },
    "799": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "800": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "803": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x32D"
    },
    "806": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "807": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "809": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17D3"
    },
    "812": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "jump": "i",
      "offset": [
        8385,
        8650
      ],
      "op": "JUMP",
      "path": "22"
    },
    "813": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "814": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71B"
    },
    "817": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "jump": "i",
      "offset": [
        8385,
        8650
      ],
      "op": "JUMP",
      "path": "22"
    },
    "818": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "819": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "822": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x340"
    },
    "825": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "826": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "828": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17EC"
    },
    "831": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "jump": "i",
      "offset": [
        2318,
        2779
      ],
      "op": "JUMP",
      "path": "22"
    },
    "832": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "833": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7DD"
    },
    "836": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "jump": "i",
      "offset": [
        2318,
        2779
      ],
      "op": "JUMP",
      "path": "22"
    },
    "837": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "838": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "841": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x353"
    },
    "844": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "845": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "847": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x18FB"
    },
    "850": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "jump": "i",
      "offset": [
        7276,
        7466
      ],
      "op": "JUMP",
      "path": "22"
    },
    "851": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "852": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x906"
    },
    "855": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "jump": "i",
      "offset": [
        7276,
        7466
      ],
      "op": "JUMP",
      "path": "22"
    },
    "856": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "859": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "op": "SUB"
    },
    "868": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "869": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "872": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "873": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "874": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "877": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x377"
    },
    "880": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "881": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "883": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17D3"
    },
    "886": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "jump": "i",
      "offset": [
        4891,
        5516
      ],
      "op": "JUMP",
      "path": "22"
    },
    "887": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "888": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x99A"
    },
    "891": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "jump": "i",
      "offset": [
        4891,
        5516
      ],
      "op": "JUMP",
      "path": "22"
    },
    "892": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "893": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "896": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x38A"
    },
    "899": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "900": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "902": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1930"
    },
    "905": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        3744,
        4448
      ],
      "op": "JUMP",
      "path": "22"
    },
    "906": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "907": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB27"
    },
    "910": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        3744,
        4448
      ],
      "op": "JUMP",
      "path": "22"
    },
    "911": {
      "offset": [
        1054,
        1090
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "912": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        1054,
        1090
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28F"
    },
    "915": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        1054,
        1090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "917": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        1054,
        1090
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "918": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        1054,
        1090
      ],
      "op": "DUP2",
      "path": "22"
    },
    "919": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        1054,
        1090
      ],
      "op": "JUMP",
      "path": "22"
    },
    "920": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "921": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "924": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A6"
    },
    "927": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "928": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "930": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x18FB"
    },
    "933": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "jump": "i",
      "offset": [
        6929,
        7132
      ],
      "op": "JUMP",
      "path": "22"
    },
    "934": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "935": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD45"
    },
    "938": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "jump": "i",
      "offset": [
        6929,
        7132
      ],
      "op": "JUMP",
      "path": "22"
    },
    "939": {
      "offset": [
        807,
        840
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "940": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        807,
        840
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E7"
    },
    "943": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        807,
        840
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "976": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        807,
        840
      ],
      "op": "DUP2",
      "path": "22"
    },
    "977": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        807,
        840
      ],
      "op": "JUMP",
      "path": "22"
    },
    "978": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "979": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "982": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E0"
    },
    "985": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "986": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "988": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17D3"
    },
    "991": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        9120,
        9367
      ],
      "op": "JUMP",
      "path": "22"
    },
    "992": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "993": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDD4"
    },
    "996": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        9120,
        9367
      ],
      "op": "JUMP",
      "path": "22"
    },
    "997": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "998": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "1001": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F3"
    },
    "1004": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1005": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1007": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17EC"
    },
    "1010": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        5708,
        6274
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1011": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1012": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE65"
    },
    "1015": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        5708,
        6274
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1016": {
      "offset": [
        723,
        767
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1017": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x41F"
    },
    "1020": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x406"
    },
    "1023": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1024": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1026": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B6"
    },
    "1029": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        723,
        767
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1030": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1031": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1033": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1035": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1036": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1038": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1039": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1040": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1041": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1043": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1044": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1045": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1046": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1047": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1049": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1050": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1051": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "ADD",
      "path": "22"
    },
    "1052": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1053": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1054": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1055": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1056": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1058": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1059": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        723,
        767
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1060": {
      "op": "SWAP3"
    },
    "1061": {
      "op": "DUP4"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1065": {
      "op": "DUP4"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "op": "SWAP2"
    },
    "1068": {
      "op": "SWAP1"
    },
    "1069": {
      "op": "SWAP2"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "offset": [
        723,
        767
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FB"
    },
    "1075": {
      "op": "JUMP"
    },
    "1076": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1077": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "1080": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x442"
    },
    "1083": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1084": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1086": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1930"
    },
    "1089": {
      "fn": "BitcrushLiveWallet.registerWin",
      "jump": "i",
      "offset": [
        3215,
        3573
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1090": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1091": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFE"
    },
    "1094": {
      "fn": "BitcrushLiveWallet.registerWin",
      "jump": "i",
      "offset": [
        3215,
        3573
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E"
    },
    "1099": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455"
    },
    "1102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B6"
    },
    "1108": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1110": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112C"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1114": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1115": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "1118": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x468"
    },
    "1121": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1122": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1124": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17EC"
    },
    "1127": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "jump": "i",
      "offset": [
        6434,
        6764
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1128": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1129": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11C7"
    },
    "1132": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "jump": "i",
      "offset": [
        6434,
        6764
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1133": {
      "offset": [
        1019,
        1048
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1134": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        1019,
        1048
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1136": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        1019,
        1048
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1137": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        1019,
        1048
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E7"
    },
    "1140": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        1019,
        1048
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "op": "SUB"
    },
    "1149": {
      "offset": [
        1019,
        1048
      ],
      "op": "AND",
      "path": "22"
    },
    "1150": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        1019,
        1048
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1151": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        1019,
        1048
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1152": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1153": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "1156": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x48E"
    },
    "1159": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1160": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1162": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B6"
    },
    "1165": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "jump": "i",
      "offset": [
        7619,
        7727
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1166": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1167": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12A4"
    },
    "1170": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "jump": "i",
      "offset": [
        7619,
        7727
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1171": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8822,
        8940
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1172": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1174": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "SUB"
    },
    "1183": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1184": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 3
    },
    "1185": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1186": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C6"
    },
    "1189": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1190": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1192": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1201": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1202": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1204": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1205": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1208": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1209": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "1212": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1213": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1217": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1218": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1219": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1220": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1221": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1222": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1223": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8915
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 4,
      "value": "0x5"
    },
    "1225": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1226": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1233": {
      "op": "SHL"
    },
    "1234": {
      "op": "SUB"
    },
    "1235": {
      "op": "NOT"
    },
    "1236": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "AND",
      "path": "22"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1243": {
      "op": "SHL"
    },
    "1244": {
      "op": "SUB"
    },
    "1245": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1246": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1247": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1248": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "AND",
      "path": "22"
    },
    "1249": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1250": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1251": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1252": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "OR",
      "path": "22"
    },
    "1253": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1254": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "offset": [
        8901,
        8933
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1255": {
      "fn": "BitcrushLiveWallet.setReserveAddress",
      "jump": "o",
      "offset": [
        8822,
        8940
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1256": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9535,
        9772
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1257": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1259": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1266": {
      "op": "SHL"
    },
    "1267": {
      "op": "SUB"
    },
    "1268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1269": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1270": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1271": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x512"
    },
    "1274": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1284": {
      "op": "SHL"
    },
    "1285": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1286": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1287": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1290": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "1297": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1298": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1299": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9645,
        9656
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 5,
      "value": "0x3"
    },
    "1301": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9645,
        9656
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1308": {
      "op": "SHL"
    },
    "1309": {
      "op": "SUB"
    },
    "1310": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9645,
        9656
      ],
      "op": "AND",
      "path": "22"
    },
    "1311": {
      "branch": 72,
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9637,
        9671
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1312": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x56B"
    },
    "1315": {
      "branch": 72,
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1316": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1318": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1319": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1327": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1330": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1332": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1333": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "ADD",
      "path": "22"
    },
    "1334": {
      "op": "DUP2"
    },
    "1335": {
      "op": "SWAP1"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1339": {
      "op": "DUP3"
    },
    "1340": {
      "op": "ADD"
    },
    "1341": {
      "op": "MSTORE"
    },
    "1342": {
      "op": "PUSH32",
      "value": "0x7374616B696E6720706F6F6C206164647265737320616C726561647920736574"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1377": {
      "op": "DUP3"
    },
    "1378": {
      "op": "ADD"
    },
    "1379": {
      "op": "MSTORE"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1382": {
      "op": "ADD"
    },
    "1383": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "1386": {
      "op": "JUMP"
    },
    "1387": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9616,
        9729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1388": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9750
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 6,
      "value": "0x3"
    },
    "1390": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1391": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1398": {
      "op": "SHL"
    },
    "1399": {
      "op": "SUB"
    },
    "1400": {
      "op": "NOT"
    },
    "1401": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "AND",
      "path": "22"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "op": "SUB"
    },
    "1410": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1411": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1412": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1413": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "AND",
      "path": "22"
    },
    "1414": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1415": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1416": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1417": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "OR",
      "path": "22"
    },
    "1418": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1419": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "offset": [
        9739,
        9765
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1420": {
      "fn": "BitcrushLiveWallet.setStakingPool",
      "jump": "o",
      "offset": [
        9535,
        9772
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1421": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7890,
        7998
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1422": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1424": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1431": {
      "op": "SHL"
    },
    "1432": {
      "op": "SUB"
    },
    "1433": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1434": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1435": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1436": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B7"
    },
    "1439": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1440": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1442": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1449": {
      "op": "SHL"
    },
    "1450": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1451": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1452": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1454": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1455": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1458": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1459": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "1462": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1463": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1470": {
      "op": "SHL"
    },
    "1471": {
      "op": "SUB"
    },
    "1472": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "AND",
      "path": "22",
      "statement": 7
    },
    "1473": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1475": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1476": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1477": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1478": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7981
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1480": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1482": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1483": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1485": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1486": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7965,
        7991
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1487": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7958,
        7991
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1488": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7958,
        7991
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1491": {
      "op": "NOT"
    },
    "1492": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7958,
        7991
      ],
      "op": "AND",
      "path": "22"
    },
    "1493": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7958,
        7991
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1494": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "offset": [
        7958,
        7991
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1495": {
      "fn": "BitcrushLiveWallet.whitelistUser",
      "jump": "o",
      "offset": [
        7890,
        7998
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1496": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1497": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1789,
        1790
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 8,
      "value": "0x0"
    },
    "1499": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1779,
        1786
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1500": {
      "branch": 73,
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1779,
        1790
      ],
      "op": "GT",
      "path": "22"
    },
    "1501": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5F8"
    },
    "1504": {
      "branch": 73,
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1505": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1507": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1514": {
      "op": "SHL"
    },
    "1515": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1516": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1517": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1519": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "ADD",
      "path": "22"
    },
    "1520": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "1523": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1524": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A1E"
    },
    "1527": {
      "fn": "BitcrushLiveWallet.addbet",
      "jump": "i",
      "offset": [
        1771,
        1830
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1528": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1771,
        1830
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1529": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1865,
        1875
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 9
    },
    "1530": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1532": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1533": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1534": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1535": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1864
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1537": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1539": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1540": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1542": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1543": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1544": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1545": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1547": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1876
      ],
      "op": "AND",
      "path": "22"
    },
    "1548": {
      "branch": 74,
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1848,
        1885
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1549": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x64F"
    },
    "1552": {
      "branch": 74,
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1553": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1555": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1556": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1562": {
      "op": "SHL"
    },
    "1563": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1564": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1567": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1569": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1570": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "ADD",
      "path": "22"
    },
    "1571": {
      "op": "MSTORE"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1576": {
      "op": "DUP3"
    },
    "1577": {
      "op": "ADD"
    },
    "1578": {
      "op": "MSTORE"
    },
    "1579": {
      "op": "PUSH20",
      "value": "0x155CD95C881A5CC8189B1858DAC8131A5CDD1959"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1602": {
      "op": "SHL"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1605": {
      "op": "DUP3"
    },
    "1606": {
      "op": "ADD"
    },
    "1607": {
      "op": "MSTORE"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1610": {
      "op": "ADD"
    },
    "1611": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "1614": {
      "op": "JUMP"
    },
    "1615": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1840,
        1910
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1616": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1920,
        1978
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 10,
      "value": "0x684"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "op": "SUB"
    },
    "1627": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1920,
        1925
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "1660": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1920,
        1942
      ],
      "op": "AND",
      "path": "22"
    },
    "1661": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1943,
        1953
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1662": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1963,
        1967
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "1663": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1970,
        1977
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1664": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1920,
        1942
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12F5"
    },
    "1667": {
      "fn": "BitcrushLiveWallet.addbet",
      "jump": "i",
      "offset": [
        1920,
        1978
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1668": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1920,
        1978
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1669": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2032,
        2042
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 11
    },
    "1670": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1672": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1673": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1674": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1675": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2031
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1677": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1679": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1680": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1682": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1683": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2043
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1684": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2051
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1685": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2086
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x69E"
    },
    "1688": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2086
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1689": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2069,
        2076
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1690": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2055
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1366"
    },
    "1693": {
      "fn": "BitcrushLiveWallet.addbet",
      "jump": "i",
      "offset": [
        2021,
        2086
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1694": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2021,
        2086
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1695": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1999,
        2009
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1696": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1698": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1699": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1700": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1701": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        1998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1703": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1705": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1706": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1708": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1709": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1710": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2010
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1711": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2086
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1712": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2086
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1713": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1988,
        2086
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1714": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2135,
        2150
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 12
    },
    "1715": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2096,
        2132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1717": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2096,
        2132
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1718": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2096,
        2132
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1719": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2096,
        2132
      ],
      "op": "ADD",
      "path": "22"
    },
    "1720": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2096,
        2150
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1721": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2096,
        2150
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1722": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2096,
        2150
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1723": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2096,
        2150
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1724": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2165,
        2193
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 13
    },
    "1725": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2165,
        2193
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1726": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2185,
        2192
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1727": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2185,
        2192
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1728": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2165,
        2193
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
    },
    "1761": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2165,
        2193
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1762": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        2165,
        2193
      ],
      "op": "LOG3",
      "path": "22"
    },
    "1763": {
      "fn": "BitcrushLiveWallet.addbet",
      "offset": [
        1721,
        2200
      ],
      "op": "POP",
      "path": "22"
    },
    "1764": {
      "fn": "BitcrushLiveWallet.addbet",
      "jump": "o",
      "offset": [
        1721,
        2200
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1765": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1766": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1768": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1775": {
      "op": "SHL"
    },
    "1776": {
      "op": "SUB"
    },
    "1777": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1778": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1779": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1780": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70F"
    },
    "1783": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1784": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1786": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1793": {
      "op": "SHL"
    },
    "1794": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1795": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1798": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1799": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "1806": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x719"
    },
    "1811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1813": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1379"
    },
    "1816": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1817": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1818": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1819": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1820": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1822": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1829": {
      "op": "SHL"
    },
    "1830": {
      "op": "SUB"
    },
    "1831": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1832": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1833": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1834": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x745"
    },
    "1837": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1838": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1840": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1847": {
      "op": "SHL"
    },
    "1848": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1849": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1850": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1852": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1853": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "1860": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1862": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8492,
        8498
      ],
      "op": "PUSH3",
      "path": "22",
      "statement": 15,
      "value": "0x93A80"
    },
    "1866": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8477,
        8488
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1867": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8477,
        8498
      ],
      "op": "GT",
      "path": "22"
    },
    "1868": {
      "branch": 75,
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8477,
        8498
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1869": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7AA"
    },
    "1872": {
      "branch": 75,
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1873": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1875": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1876": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1884": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1887": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1889": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1890": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "ADD",
      "path": "22"
    },
    "1891": {
      "op": "MSTORE"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1896": {
      "op": "DUP3"
    },
    "1897": {
      "op": "ADD"
    },
    "1898": {
      "op": "MSTORE"
    },
    "1899": {
      "op": "PUSH32",
      "value": "0x4C6F636B20706572696F642063616E6E6F742062652067726561746572207468"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1934": {
      "op": "DUP3"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "PUSH9",
      "value": "0x616E2031207765656B"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1952": {
      "op": "DUP3"
    },
    "1953": {
      "op": "ADD"
    },
    "1954": {
      "op": "MSTORE"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1957": {
      "op": "ADD"
    },
    "1958": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "1961": {
      "op": "JUMP"
    },
    "1962": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8456,
        8565
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1963": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8575,
        8585
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 16,
      "value": "0x4"
    },
    "1965": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8575,
        8599
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1966": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8575,
        8599
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1967": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8575,
        8599
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1968": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8614,
        8643
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 17,
      "value": "0x40"
    },
    "1970": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8614,
        8643
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1971": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8588,
        8599
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1972": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8588,
        8599
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1973": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8614,
        8643
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x8249EC545E68F6F1E1230133CA48C704D831A7F8E635DED80F3DD9E99B09BB2F"
    },
    "2006": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8614,
        8643
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2007": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8614,
        8643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2009": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8614,
        8643
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2010": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8614,
        8643
      ],
      "op": "LOG2",
      "path": "22"
    },
    "2011": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "offset": [
        8385,
        8650
      ],
      "op": "POP",
      "path": "22"
    },
    "2012": {
      "fn": "BitcrushLiveWallet.setLockPeriod",
      "jump": "o",
      "offset": [
        8385,
        8650
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2013": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2014": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2412,
        2413
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0x0"
    },
    "2016": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2402,
        2409
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2017": {
      "branch": 76,
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2402,
        2413
      ],
      "op": "GT",
      "path": "22"
    },
    "2018": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7FD"
    },
    "2021": {
      "branch": 76,
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2022": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2024": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2025": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2031": {
      "op": "SHL"
    },
    "2032": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2033": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2034": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2036": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "ADD",
      "path": "22"
    },
    "2037": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "2040": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2041": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A1E"
    },
    "2044": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "jump": "i",
      "offset": [
        2394,
        2453
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2045": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2394,
        2453
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2052": {
      "op": "SHL"
    },
    "2053": {
      "op": "SUB"
    },
    "2054": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 19
    },
    "2055": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "AND",
      "path": "22"
    },
    "2056": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2058": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2059": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2060": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2061": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2487
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2063": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2065": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2066": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2068": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2069": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2070": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2071": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "2073": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2494
      ],
      "op": "AND",
      "path": "22"
    },
    "2074": {
      "branch": 77,
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2471,
        2503
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2075": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x85D"
    },
    "2078": {
      "branch": 77,
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2079": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2081": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2088": {
      "op": "SHL"
    },
    "2089": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2090": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2093": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2095": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2096": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "ADD",
      "path": "22"
    },
    "2097": {
      "op": "MSTORE"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2102": {
      "op": "DUP3"
    },
    "2103": {
      "op": "ADD"
    },
    "2104": {
      "op": "MSTORE"
    },
    "2105": {
      "op": "PUSH20",
      "value": "0x155CD95C881A5CC8189B1858DAC8131A5CDD1959"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "2128": {
      "op": "SHL"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2131": {
      "op": "DUP3"
    },
    "2132": {
      "op": "ADD"
    },
    "2133": {
      "op": "MSTORE"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2136": {
      "op": "ADD"
    },
    "2137": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "2140": {
      "op": "JUMP"
    },
    "2141": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2463,
        2528
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2142": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2538,
        2596
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 20,
      "value": "0x892"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2151": {
      "op": "SHL"
    },
    "2152": {
      "op": "SUB"
    },
    "2153": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2538,
        2543
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "2186": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2538,
        2560
      ],
      "op": "AND",
      "path": "22"
    },
    "2187": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2561,
        2571
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2188": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2581,
        2585
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "2189": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2588,
        2595
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2190": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2538,
        2560
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12F5"
    },
    "2193": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "jump": "i",
      "offset": [
        2538,
        2596
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2194": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2538,
        2596
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2201": {
      "op": "SHL"
    },
    "2202": {
      "op": "SUB"
    },
    "2203": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 21
    },
    "2204": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "AND",
      "path": "22"
    },
    "2205": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2207": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2208": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2209": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2210": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2644
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2212": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2214": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2215": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2217": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2218": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2651
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2219": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2659
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2220": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2672
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8B5"
    },
    "2223": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2672
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2224": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2664,
        2671
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2225": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2663
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1366"
    },
    "2228": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "jump": "i",
      "offset": [
        2634,
        2672
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2229": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2634,
        2672
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2239": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "AND",
      "path": "22"
    },
    "2240": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2242": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2243": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2244": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2245": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2616
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2247": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2249": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2250": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2252": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2253": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2254": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2623
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2255": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2672
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2256": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2672
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2257": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2606,
        2672
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2258": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2716,
        2731
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 22
    },
    "2259": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2682,
        2713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2261": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2682,
        2713
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2262": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2682,
        2713
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2263": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2682,
        2713
      ],
      "op": "ADD",
      "path": "22"
    },
    "2264": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2682,
        2731
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2265": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2682,
        2731
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2266": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2682,
        2731
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2267": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2682,
        2731
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2268": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2746,
        2772
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 23
    },
    "2269": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2746,
        2772
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2270": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2764,
        2771
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2271": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2764,
        2771
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2272": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2746,
        2772
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x40A0B865AE77859153EAFC5CDE95D936F135CC12158B807A1EC5F644BEA4111E"
    },
    "2305": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2746,
        2772
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2306": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2746,
        2772
      ],
      "op": "LOG3",
      "path": "22"
    },
    "2307": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "POP",
      "path": "22"
    },
    "2308": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "offset": [
        2318,
        2779
      ],
      "op": "POP",
      "path": "22"
    },
    "2309": {
      "fn": "BitcrushLiveWallet.addbetWithAddress",
      "jump": "o",
      "offset": [
        2318,
        2779
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2310": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2311": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2313": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "SUB"
    },
    "2322": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2323": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2324": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2325": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x930"
    },
    "2328": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2329": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2331": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2340": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2341": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2343": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2344": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "2347": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2348": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "2351": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2352": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2353": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7357,
        7366
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2355": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7352,
        7460
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2356": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7376,
        7382
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2357": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7376,
        7389
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2358": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7372,
        7373
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2359": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7372,
        7389
      ],
      "op": "LT",
      "path": "22"
    },
    "2360": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7352,
        7460
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2361": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7352,
        7460
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x996"
    },
    "2364": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7352,
        7460
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2365": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7448,
        7449
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 24,
      "value": "0x0"
    },
    "2367": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7420
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2369": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2371": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7427
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2372": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7428,
        7429
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2373": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2374": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2375": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2376": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "LT",
      "path": "22"
    },
    "2377": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x954"
    },
    "2380": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2381": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x954"
    },
    "2384": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "2387": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "jump": "i",
      "offset": [
        7421,
        7430
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2388": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2389": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2391": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "MUL",
      "path": "22"
    },
    "2392": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2394": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "ADD",
      "path": "22"
    },
    "2395": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "ADD",
      "path": "22"
    },
    "2396": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7421,
        7430
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2403": {
      "op": "SHL"
    },
    "2404": {
      "op": "SUB"
    },
    "2405": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "AND",
      "path": "22"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2412": {
      "op": "SHL"
    },
    "2413": {
      "op": "SUB"
    },
    "2414": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "AND",
      "path": "22"
    },
    "2415": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2416": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2417": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2419": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "ADD",
      "path": "22"
    },
    "2420": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2421": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2422": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2423": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2425": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "ADD",
      "path": "22"
    },
    "2426": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2428": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7431
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2429": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7445
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2431": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7445
      ],
      "op": "ADD",
      "path": "22"
    },
    "2432": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7449
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2433": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7449
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2434": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7449
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2435": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7410,
        7449
      ],
      "op": "POP",
      "path": "22"
    },
    "2436": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 25
    },
    "2437": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2438": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x98E"
    },
    "2441": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2442": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A8D"
    },
    "2445": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "jump": "i",
      "offset": [
        7391,
        7394
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2446": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2447": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2448": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "POP",
      "path": "22"
    },
    "2449": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7391,
        7394
      ],
      "op": "POP",
      "path": "22"
    },
    "2450": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7352,
        7460
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x933"
    },
    "2453": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7352,
        7460
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2454": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7352,
        7460
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2455": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7352,
        7460
      ],
      "op": "POP",
      "path": "22"
    },
    "2456": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "offset": [
        7276,
        7466
      ],
      "op": "POP",
      "path": "22"
    },
    "2457": {
      "fn": "BitcrushLiveWallet.releaseBetLock",
      "jump": "o",
      "offset": [
        7276,
        7466
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2458": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2459": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4978,
        4988
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 26
    },
    "2460": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2462": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2463": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2464": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2465": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4977
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2467": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2469": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2470": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2472": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2473": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4989
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2474": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        4997
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2475": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        5008
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2476": {
      "op": "GT"
    },
    "2477": {
      "branch": 78,
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4967,
        5008
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2478": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9F9"
    },
    "2481": {
      "branch": 78,
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2482": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2484": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2491": {
      "op": "SHL"
    },
    "2492": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2493": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2496": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2498": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2499": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "ADD",
      "path": "22"
    },
    "2500": {
      "op": "MSTORE"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2505": {
      "op": "DUP3"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "op": "MSTORE"
    },
    "2508": {
      "op": "PUSH32",
      "value": "0x626574206C657373207468616E20616D6F756E74207769746864726177000000"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2543": {
      "op": "DUP3"
    },
    "2544": {
      "op": "ADD"
    },
    "2545": {
      "op": "MSTORE"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2548": {
      "op": "ADD"
    },
    "2549": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "2552": {
      "op": "JUMP"
    },
    "2553": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4946,
        5063
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2554": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5105,
        5115
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 27
    },
    "2555": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2557": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2558": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2559": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2560": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5104
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2562": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2564": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2565": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2567": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2568": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5116
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2569": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5130
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2571": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5130
      ],
      "op": "ADD",
      "path": "22"
    },
    "2572": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5130
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2573": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5135
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2574": {
      "branch": 79,
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5135
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2575": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5241
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA37"
    },
    "2578": {
      "branch": 79,
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5241
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2579": {
      "op": "POP"
    },
    "2580": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5196,
        5206
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2582": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5196,
        5206
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2583": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5166,
        5176
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2584": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2586": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2587": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2588": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2589": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5165
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2591": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2593": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2594": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2596": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2597": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5177
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2598": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5191
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2600": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5191
      ],
      "op": "ADD",
      "path": "22"
    },
    "2601": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5191
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2602": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5226,
        5241
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "2603": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5226,
        5241
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2604": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5207
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA35"
    },
    "2607": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5207
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2608": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5191
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2609": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5195
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1366"
    },
    "2612": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "jump": "i",
      "offset": [
        5155,
        5207
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2613": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5207
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2614": {
      "branch": 80,
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5155,
        5241
      ],
      "op": "LT",
      "path": "22"
    },
    "2615": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5094,
        5241
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2616": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA95"
    },
    "2619": {
      "branch": 80,
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2620": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2622": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2623": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2629": {
      "op": "SHL"
    },
    "2630": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2631": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2634": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2636": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2637": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "ADD",
      "path": "22"
    },
    "2638": {
      "op": "MSTORE"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2643": {
      "op": "DUP3"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH32",
      "value": "0x42657420416D6F756E74206C6F636B65642C20706C6561736520747279206167"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH9",
      "value": "0x30B4B7103630BA32B9"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2696": {
      "op": "SHL"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2699": {
      "op": "DUP3"
    },
    "2700": {
      "op": "ADD"
    },
    "2701": {
      "op": "MSTORE"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2704": {
      "op": "ADD"
    },
    "2705": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "2708": {
      "op": "JUMP"
    },
    "2709": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5073,
        5308
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2710": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5362,
        5372
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 28
    },
    "2711": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2713": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2714": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2715": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2716": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5361
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2718": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2720": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2721": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2723": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2724": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5373
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2725": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5381
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2726": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5416
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAAF"
    },
    "2729": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5416
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2730": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5399,
        5406
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2731": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5385
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13C9"
    },
    "2734": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "jump": "i",
      "offset": [
        5351,
        5416
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2735": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5351,
        5416
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2736": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5329,
        5339
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2737": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2739": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2740": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2741": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2742": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5328
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2744": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2746": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2747": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2749": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2750": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5340
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2751": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5416
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2752": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5416
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2753": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5416
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2754": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5318,
        5416
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2755": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5426,
        5465
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 29,
      "value": "0xAF7"
    },
    "2758": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5426,
        5465
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2759": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5426,
        5431
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2798": {
      "op": "SHL"
    },
    "2799": {
      "op": "SUB"
    },
    "2800": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5426,
        5444
      ],
      "op": "AND",
      "path": "22"
    },
    "2801": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5426,
        5444
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2802": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5457,
        5464
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2803": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5426,
        5444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D5"
    },
    "2806": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "jump": "i",
      "offset": [
        5426,
        5465
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2807": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5426,
        5465
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2808": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5480,
        5509
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 30,
      "value": "0x40"
    },
    "2810": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5480,
        5509
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2811": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5501,
        5508
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2812": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5501,
        5508
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2813": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5489,
        5499
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2814": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5489,
        5499
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2815": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5480,
        5509
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "2848": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5480,
        5509
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2849": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5480,
        5509
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2851": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5480,
        5509
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2852": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        5480,
        5509
      ],
      "op": "LOG3",
      "path": "22"
    },
    "2853": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "offset": [
        4891,
        5516
      ],
      "op": "POP",
      "path": "22"
    },
    "2854": {
      "fn": "BitcrushLiveWallet.withdrawBet",
      "jump": "o",
      "offset": [
        4891,
        5516
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2855": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2856": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2858": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2865": {
      "op": "SHL"
    },
    "2866": {
      "op": "SUB"
    },
    "2867": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2868": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2869": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2870": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB51"
    },
    "2873": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2874": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2876": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2883": {
      "op": "SHL"
    },
    "2884": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2886": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2888": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "2892": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2893": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "2896": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2898": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3899,
        3905
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 31
    },
    "2899": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3899,
        3912
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2900": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3883,
        3888
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2901": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3883,
        3895
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2902": {
      "branch": 81,
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3883,
        3912
      ],
      "op": "EQ",
      "path": "22"
    },
    "2903": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB72"
    },
    "2906": {
      "branch": 81,
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2907": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2909": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2910": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2918": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2919": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2921": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "ADD",
      "path": "22"
    },
    "2922": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "2925": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2926": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AA8"
    },
    "2929": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        3862,
        3971
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2930": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3862,
        3971
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2931": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3986,
        3995
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2933": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3981,
        4442
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2934": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4005,
        4011
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2935": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4005,
        4018
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2936": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4001,
        4002
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2937": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4001,
        4018
      ],
      "op": "LT",
      "path": "22"
    },
    "2938": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3981,
        4442
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2939": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3981,
        4442
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD40"
    },
    "2942": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3981,
        4442
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2943": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4054,
        4055
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2945": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4048
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2946": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4049,
        4050
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2947": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2948": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2949": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2950": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "LT",
      "path": "22"
    },
    "2951": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB92"
    },
    "2954": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2955": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB92"
    },
    "2958": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "2961": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4043,
        4051
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2962": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2963": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2965": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "MUL",
      "path": "22"
    },
    "2966": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2968": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "ADD",
      "path": "22"
    },
    "2969": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "ADD",
      "path": "22"
    },
    "2970": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4051
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2971": {
      "branch": 82,
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4043,
        4055
      ],
      "op": "GT",
      "path": "22"
    },
    "2972": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4039,
        4432
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2973": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4039,
        4432
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD2E"
    },
    "2976": {
      "branch": 82,
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4039,
        4432
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2977": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4142
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 32
    },
    "2978": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4143,
        4144
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2979": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2980": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2981": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2982": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "LT",
      "path": "22"
    },
    "2983": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBB2"
    },
    "2986": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2987": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBB2"
    },
    "2990": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "2993": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4137,
        4145
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2994": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2995": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2997": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "MUL",
      "path": "22"
    },
    "2998": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3000": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "ADD",
      "path": "22"
    },
    "3001": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "ADD",
      "path": "22"
    },
    "3002": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4137,
        4145
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3003": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4114
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3005": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3007": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4121
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3008": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4122,
        4123
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3009": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3010": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3011": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3012": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "LT",
      "path": "22"
    },
    "3013": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBD0"
    },
    "3016": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3017": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBD0"
    },
    "3020": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "3023": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4115,
        4124
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3024": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3025": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3027": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "MUL",
      "path": "22"
    },
    "3028": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3030": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "ADD",
      "path": "22"
    },
    "3031": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "ADD",
      "path": "22"
    },
    "3032": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4115,
        4124
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "op": "SUB"
    },
    "3041": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "AND",
      "path": "22"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3048": {
      "op": "SHL"
    },
    "3049": {
      "op": "SUB"
    },
    "3050": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "AND",
      "path": "22"
    },
    "3051": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3052": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3053": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3055": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "ADD",
      "path": "22"
    },
    "3056": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3057": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3058": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3059": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3061": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "ADD",
      "path": "22"
    },
    "3062": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3064": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4125
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3065": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4133
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3067": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4133
      ],
      "op": "ADD",
      "path": "22"
    },
    "3068": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4133
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3069": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4145
      ],
      "op": "LT",
      "path": "22"
    },
    "3070": {
      "branch": 83,
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4104,
        4145
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3071": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC64"
    },
    "3074": {
      "branch": 83,
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3075": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3077": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3086": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3089": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3091": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3092": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "ADD",
      "path": "22"
    },
    "3093": {
      "op": "MSTORE"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3098": {
      "op": "DUP3"
    },
    "3099": {
      "op": "ADD"
    },
    "3100": {
      "op": "MSTORE"
    },
    "3101": {
      "op": "PUSH32",
      "value": "0x4C6F73732062657420616D6F756E742069732067726561746572207468616E20"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3136": {
      "op": "DUP3"
    },
    "3137": {
      "op": "ADD"
    },
    "3138": {
      "op": "MSTORE"
    },
    "3139": {
      "op": "PUSH17",
      "value": "0x617661696C61626C652062616C616E6365"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3162": {
      "op": "DUP3"
    },
    "3163": {
      "op": "ADD"
    },
    "3164": {
      "op": "MSTORE"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "3171": {
      "op": "JUMP"
    },
    "3172": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4075,
        4236
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3173": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4254,
        4282
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 33,
      "value": "0xC86"
    },
    "3176": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4278
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3177": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4279,
        4280
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3178": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3179": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3180": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3181": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "LT",
      "path": "22"
    },
    "3182": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC79"
    },
    "3185": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3186": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC79"
    },
    "3189": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "3192": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4273,
        4281
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3193": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3194": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3196": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "MUL",
      "path": "22"
    },
    "3197": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3199": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "ADD",
      "path": "22"
    },
    "3200": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "ADD",
      "path": "22"
    },
    "3201": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4273,
        4281
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3202": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4254,
        4272
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1405"
    },
    "3205": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4254,
        4282
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3206": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4254,
        4282
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3207": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4417
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 34,
      "value": "0xCF3"
    },
    "3210": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4413
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3211": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4414,
        4415
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3212": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3213": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3214": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3215": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "LT",
      "path": "22"
    },
    "3216": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC9B"
    },
    "3219": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3220": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC9B"
    },
    "3223": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "3226": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4408,
        4416
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3227": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3228": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3230": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "MUL",
      "path": "22"
    },
    "3231": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3233": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "ADD",
      "path": "22"
    },
    "3234": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "ADD",
      "path": "22"
    },
    "3235": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4408,
        4416
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3236": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4342
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3238": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3240": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4349
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3241": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4350,
        4351
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3242": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3243": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3244": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3245": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "LT",
      "path": "22"
    },
    "3246": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCB9"
    },
    "3249": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3250": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCB9"
    },
    "3253": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "3256": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4343,
        4352
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3257": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3258": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3260": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "MUL",
      "path": "22"
    },
    "3261": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3263": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "ADD",
      "path": "22"
    },
    "3264": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "ADD",
      "path": "22"
    },
    "3265": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4343,
        4352
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "op": "SUB"
    },
    "3274": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "AND",
      "path": "22"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3281": {
      "op": "SHL"
    },
    "3282": {
      "op": "SUB"
    },
    "3283": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "AND",
      "path": "22"
    },
    "3284": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3285": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3286": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3288": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "ADD",
      "path": "22"
    },
    "3289": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3290": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3291": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3292": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3294": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "ADD",
      "path": "22"
    },
    "3295": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3297": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4353
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3298": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4382
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3300": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4382
      ],
      "op": "ADD",
      "path": "22"
    },
    "3301": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4382
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3302": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4407
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13C9"
    },
    "3305": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4407
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3306": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4417
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3307": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3308": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4417
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3313": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4417
      ],
      "op": "AND",
      "path": "22"
    },
    "3314": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4332,
        4417
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3315": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4332,
        4417
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3316": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4310
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3318": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3320": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4317
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3321": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4318,
        4319
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3322": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3323": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3324": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3325": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "LT",
      "path": "22"
    },
    "3326": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD09"
    },
    "3329": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3330": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD09"
    },
    "3333": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "3336": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4311,
        4320
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3337": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3338": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3340": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3341": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3342": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "MUL",
      "path": "22"
    },
    "3343": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3344": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3345": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3346": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "ADD",
      "path": "22"
    },
    "3347": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3348": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "ADD",
      "path": "22"
    },
    "3349": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4311,
        4320
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "op": "SUB"
    },
    "3358": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "AND",
      "path": "22"
    },
    "3359": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3360": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3361": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3362": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "ADD",
      "path": "22"
    },
    "3363": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3364": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3365": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3366": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3367": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3369": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "ADD",
      "path": "22"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3372": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4321
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3373": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4300,
        4417
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3374": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4039,
        4432
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3375": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4020,
        4023
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 35
    },
    "3376": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4020,
        4023
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD38"
    },
    "3379": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4020,
        4023
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3380": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4020,
        4023
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A8D"
    },
    "3383": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "i",
      "offset": [
        4020,
        4023
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3384": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4020,
        4023
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3385": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4020,
        4023
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3386": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4020,
        4023
      ],
      "op": "POP",
      "path": "22"
    },
    "3387": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        4020,
        4023
      ],
      "op": "POP",
      "path": "22"
    },
    "3388": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3981,
        4442
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB75"
    },
    "3391": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3981,
        4442
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3392": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3981,
        4442
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3393": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3981,
        4442
      ],
      "op": "POP",
      "path": "22"
    },
    "3394": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "POP",
      "path": "22"
    },
    "3395": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "offset": [
        3744,
        4448
      ],
      "op": "POP",
      "path": "22"
    },
    "3396": {
      "fn": "BitcrushLiveWallet.registerLoss",
      "jump": "o",
      "offset": [
        3744,
        4448
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3397": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        6929,
        7132
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3398": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3400": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "op": "SUB"
    },
    "3409": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3410": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3411": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3412": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6F"
    },
    "3415": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3416": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3418": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3428": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3431": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "3434": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3435": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "3438": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3439": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3440": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7009,
        7018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3442": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7004,
        7126
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3443": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7028,
        7034
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3444": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7028,
        7041
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3445": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7024,
        7025
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3446": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7024,
        7041
      ],
      "op": "LT",
      "path": "22"
    },
    "3447": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7004,
        7126
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3448": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7004,
        7126
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x996"
    },
    "3451": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7004,
        7126
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3452": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7100,
        7115
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 36
    },
    "3453": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7072
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3455": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3457": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7079
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3458": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7080,
        7081
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3459": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3460": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3461": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3462": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "LT",
      "path": "22"
    },
    "3463": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD92"
    },
    "3466": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3467": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD92"
    },
    "3470": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "3473": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "jump": "i",
      "offset": [
        7073,
        7082
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3474": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3475": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3477": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "MUL",
      "path": "22"
    },
    "3478": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3480": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "ADD",
      "path": "22"
    },
    "3481": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "ADD",
      "path": "22"
    },
    "3482": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7073,
        7082
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3489": {
      "op": "SHL"
    },
    "3490": {
      "op": "SUB"
    },
    "3491": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "AND",
      "path": "22"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3498": {
      "op": "SHL"
    },
    "3499": {
      "op": "SUB"
    },
    "3500": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "AND",
      "path": "22"
    },
    "3501": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3502": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3503": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3505": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "ADD",
      "path": "22"
    },
    "3506": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3507": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3508": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3509": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3511": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "ADD",
      "path": "22"
    },
    "3512": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3514": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7083
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3515": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7097
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3517": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7097
      ],
      "op": "ADD",
      "path": "22"
    },
    "3518": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7115
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3519": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3520": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7115
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3521": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7062,
        7115
      ],
      "op": "POP",
      "path": "22"
    },
    "3522": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 37
    },
    "3523": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3524": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDCC"
    },
    "3527": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3528": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A8D"
    },
    "3531": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "jump": "i",
      "offset": [
        7043,
        7046
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3532": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3533": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3534": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "POP",
      "path": "22"
    },
    "3535": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7043,
        7046
      ],
      "op": "POP",
      "path": "22"
    },
    "3536": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7004,
        7126
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD72"
    },
    "3539": {
      "fn": "BitcrushLiveWallet.updateBetLock",
      "offset": [
        7004,
        7126
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3540": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9120,
        9367
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3541": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3543": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3550": {
      "op": "SHL"
    },
    "3551": {
      "op": "SUB"
    },
    "3552": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3553": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3554": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3555": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFE"
    },
    "3558": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3559": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3561": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3568": {
      "op": "SHL"
    },
    "3569": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3570": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3571": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3573": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3574": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "3577": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3578": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "3581": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3582": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3583": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9244,
        9248
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 38,
      "value": "0xFA0"
    },
    "3586": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9224,
        9241
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3587": {
      "branch": 84,
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9224,
        9248
      ],
      "op": "LT",
      "path": "22"
    },
    "3588": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE60"
    },
    "3591": {
      "branch": 84,
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3592": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3594": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3601": {
      "op": "SHL"
    },
    "3602": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3603": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3606": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3608": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3609": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "ADD",
      "path": "22"
    },
    "3610": {
      "op": "MSTORE"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3615": {
      "op": "DUP3"
    },
    "3616": {
      "op": "ADD"
    },
    "3617": {
      "op": "MSTORE"
    },
    "3618": {
      "op": "PUSH32",
      "value": "0x4561726C7920776974686472617720666565206D757374206265206C65737320"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3653": {
      "op": "DUP3"
    },
    "3654": {
      "op": "ADD"
    },
    "3655": {
      "op": "MSTORE"
    },
    "3656": {
      "op": "PUSH8",
      "value": "0x7468616E20343025"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3667": {
      "op": "SHL"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3670": {
      "op": "DUP3"
    },
    "3671": {
      "op": "ADD"
    },
    "3672": {
      "op": "MSTORE"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "3679": {
      "op": "JUMP"
    },
    "3680": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9203,
        9314
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3681": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9324,
        9340
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 39,
      "value": "0x6"
    },
    "3683": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "offset": [
        9324,
        9360
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3684": {
      "fn": "BitcrushLiveWallet.setEarlyWithdrawFee",
      "jump": "o",
      "offset": [
        9120,
        9367
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3685": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5708,
        6274
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3686": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3688": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3695": {
      "op": "SHL"
    },
    "3696": {
      "op": "SUB"
    },
    "3697": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3698": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3699": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3700": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8F"
    },
    "3703": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3704": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3715": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3716": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3718": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3719": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "3722": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3723": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "3726": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3727": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "SUB"
    },
    "3736": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 40
    },
    "3737": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "AND",
      "path": "22"
    },
    "3738": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3740": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3741": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3742": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3743": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5846
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3745": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3747": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3748": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3750": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3751": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5853
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3752": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5861
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3753": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3754": {
      "op": "GT"
    },
    "3755": {
      "branch": 85,
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5836,
        5872
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3756": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEF7"
    },
    "3759": {
      "branch": 85,
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3760": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3762": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3769": {
      "op": "SHL"
    },
    "3770": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3771": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3774": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3776": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3777": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "ADD",
      "path": "22"
    },
    "3778": {
      "op": "MSTORE"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3783": {
      "op": "DUP3"
    },
    "3784": {
      "op": "ADD"
    },
    "3785": {
      "op": "MSTORE"
    },
    "3786": {
      "op": "PUSH32",
      "value": "0x626574206C657373207468616E20616D6F756E74207769746864726177000000"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3821": {
      "op": "DUP3"
    },
    "3822": {
      "op": "ADD"
    },
    "3823": {
      "op": "MSTORE"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3826": {
      "op": "ADD"
    },
    "3827": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "3830": {
      "op": "JUMP"
    },
    "3831": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5815,
        5927
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3838": {
      "op": "SHL"
    },
    "3839": {
      "op": "SUB"
    },
    "3840": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 41
    },
    "3841": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "AND",
      "path": "22"
    },
    "3842": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3844": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3845": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3846": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3847": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5975
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3849": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3851": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3852": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3854": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3855": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5982
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3856": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5990
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3857": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        6003
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF1A"
    },
    "3860": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        6003
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3861": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5995,
        6002
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3862": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        5994
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13C9"
    },
    "3865": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        5965,
        6003
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3866": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5965,
        6003
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3873": {
      "op": "SHL"
    },
    "3874": {
      "op": "SUB"
    },
    "3875": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3876": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "AND",
      "path": "22"
    },
    "3877": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3879": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3880": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3881": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3882": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5947
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3884": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3886": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3887": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3889": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3890": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3891": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        5954
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3892": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        6003
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "3893": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        6003
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3894": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        6003
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "3895": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        5937,
        6003
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3896": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6018,
        6042
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 42
    },
    "3897": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6018,
        6042
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3898": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6034,
        6041
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3899": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6034,
        6041
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3900": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6018,
        6042
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "3933": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6018,
        6042
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3934": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6018,
        6042
      ],
      "op": "LOG3",
      "path": "22"
    },
    "3935": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6052,
        6073
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3937": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6118
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF81"
    },
    "3940": {
      "offset": [
        969,
        974
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "3943": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6105
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF7B"
    },
    "3946": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6088,
        6104
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "3948": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6088,
        6104
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3949": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6083
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3950": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6087
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1536"
    },
    "3953": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6087
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3954": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6105
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3955": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6105
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3956": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6105
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3961": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6105
      ],
      "op": "AND",
      "path": "22"
    },
    "3962": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        6076,
        6105
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3963": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6105
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3964": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6109
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3965": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6109
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1542"
    },
    "3968": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        6076,
        6118
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3969": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6076,
        6118
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3970": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6052,
        6118
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3971": {
      "op": "POP"
    },
    "3972": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6138,
        6164
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 43,
      "value": "0xF8D"
    },
    "3975": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6138,
        6145
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3976": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6052,
        6118
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3977": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6138,
        6149
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13C9"
    },
    "3980": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        6138,
        6164
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3981": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6138,
        6164
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3982": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6193,
        6207
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 44,
      "value": "0x5"
    },
    "3984": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6193,
        6207
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3985": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6128,
        6164
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3986": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6128,
        6164
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "3987": {
      "op": "POP"
    },
    "3988": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6174,
        6223
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFCA"
    },
    "3991": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6174,
        6223
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3998": {
      "op": "SHL"
    },
    "3999": {
      "op": "SUB"
    },
    "4000": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6174,
        6179
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "4033": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6174,
        6192
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4034": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6174,
        6192
      ],
      "op": "AND",
      "path": "22"
    },
    "4035": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6174,
        6192
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4036": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6193,
        6207
      ],
      "op": "AND",
      "path": "22"
    },
    "4037": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6209,
        6222
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4038": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6174,
        6192
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D5"
    },
    "4041": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        6174,
        6223
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4042": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6174,
        6223
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4043": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6233,
        6267
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 45,
      "value": "0xD40"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4052": {
      "op": "SHL"
    },
    "4053": {
      "op": "SUB"
    },
    "4054": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6233,
        6238
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "4087": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6233,
        6251
      ],
      "op": "AND",
      "path": "22"
    },
    "4088": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6252,
        6257
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4089": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6259,
        6266
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4090": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "offset": [
        6233,
        6251
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D5"
    },
    "4093": {
      "fn": "BitcrushLiveWallet.withdrawBetForUser",
      "jump": "i",
      "offset": [
        6233,
        6267
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4094": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3215,
        3573
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4095": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4097": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4104": {
      "op": "SHL"
    },
    "4105": {
      "op": "SUB"
    },
    "4106": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4107": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4108": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4109": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1028"
    },
    "4112": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4113": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4115": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4122": {
      "op": "SHL"
    },
    "4123": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4124": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4125": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4127": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4128": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "4131": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4132": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "4135": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4136": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4137": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3369,
        3375
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 46
    },
    "4138": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3369,
        3382
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4139": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3353,
        3358
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4140": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3353,
        3365
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4141": {
      "branch": 86,
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3353,
        3382
      ],
      "op": "EQ",
      "path": "22"
    },
    "4142": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1049"
    },
    "4145": {
      "branch": 86,
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4146": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4148": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4149": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4155": {
      "op": "SHL"
    },
    "4156": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4157": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4158": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4160": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "ADD",
      "path": "22"
    },
    "4161": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "4164": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4165": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AA8"
    },
    "4168": {
      "fn": "BitcrushLiveWallet.registerWin",
      "jump": "i",
      "offset": [
        3332,
        3441
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4169": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3332,
        3441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4170": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3456,
        3465
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4172": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3451,
        3567
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4173": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3475,
        3481
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4174": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3475,
        3488
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4175": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3471,
        3472
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4176": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3471,
        3488
      ],
      "op": "LT",
      "path": "22"
    },
    "4177": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3451,
        3567
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4178": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3451,
        3567
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD40"
    },
    "4181": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3451,
        3567
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4182": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3517
      ],
      "op": "PUSH32",
      "path": "22",
      "statement": 47,
      "value": "0x0"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4221": {
      "op": "SHL"
    },
    "4222": {
      "op": "SUB"
    },
    "4223": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3535
      ],
      "op": "AND",
      "path": "22"
    },
    "4224": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3535
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x61433D88"
    },
    "4229": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3541
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4230": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3542,
        3543
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4231": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4232": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4233": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4234": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "LT",
      "path": "22"
    },
    "4235": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1096"
    },
    "4238": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4239": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1096"
    },
    "4242": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "4245": {
      "fn": "BitcrushLiveWallet.registerWin",
      "jump": "i",
      "offset": [
        3536,
        3544
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4246": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4247": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4249": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "MUL",
      "path": "22"
    },
    "4250": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4252": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "ADD",
      "path": "22"
    },
    "4253": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "ADD",
      "path": "22"
    },
    "4254": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3536,
        3544
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4255": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3552
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4256": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3553,
        3554
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4257": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4258": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4259": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4260": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "LT",
      "path": "22"
    },
    "4261": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10B0"
    },
    "4264": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4265": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10B0"
    },
    "4268": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A61"
    },
    "4271": {
      "fn": "BitcrushLiveWallet.registerWin",
      "jump": "i",
      "offset": [
        3546,
        3555
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4272": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4273": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4275": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "MUL",
      "path": "22"
    },
    "4276": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4278": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "ADD",
      "path": "22"
    },
    "4279": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "ADD",
      "path": "22"
    },
    "4280": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3546,
        3555
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4281": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4283": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4284": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4285": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "4290": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "AND",
      "path": "22"
    },
    "4291": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "4293": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "SHL",
      "path": "22"
    },
    "4294": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4295": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4296": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4298": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "ADD",
      "path": "22"
    },
    "4299": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10E7"
    },
    "4302": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4303": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4304": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4305": {
      "op": "SWAP2"
    },
    "4306": {
      "op": "DUP3"
    },
    "4307": {
      "op": "MSTORE"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4314": {
      "op": "SHL"
    },
    "4315": {
      "op": "SUB"
    },
    "4316": {
      "op": "AND"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4319": {
      "op": "DUP3"
    },
    "4320": {
      "op": "ADD"
    },
    "4321": {
      "op": "MSTORE"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "SWAP1"
    },
    "4326": {
      "op": "JUMP"
    },
    "4327": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4328": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4330": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4332": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4333": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4334": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4335": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "SUB",
      "path": "22"
    },
    "4336": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4337": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4339": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP8",
      "path": "22"
    },
    "4340": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4341": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "4342": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4343": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4344": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4345": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1101"
    },
    "4348": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4349": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4351": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4352": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4353": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4354": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "POP",
      "path": "22"
    },
    "4355": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "GAS",
      "path": "22"
    },
    "4356": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "CALL",
      "path": "22"
    },
    "4357": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4358": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4359": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4360": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1115"
    },
    "4363": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4364": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4365": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4367": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4368": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "4369": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4370": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4372": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4373": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4374": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "POP",
      "path": "22"
    },
    "4375": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "POP",
      "path": "22"
    },
    "4376": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "POP",
      "path": "22"
    },
    "4377": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3509,
        3556
      ],
      "op": "POP",
      "path": "22"
    },
    "4378": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 48
    },
    "4379": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4380": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1124"
    },
    "4383": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4384": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A8D"
    },
    "4387": {
      "fn": "BitcrushLiveWallet.registerWin",
      "jump": "i",
      "offset": [
        3490,
        3493
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4388": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4389": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4390": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "POP",
      "path": "22"
    },
    "4391": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3490,
        3493
      ],
      "op": "POP",
      "path": "22"
    },
    "4392": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3451,
        3567
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x104C"
    },
    "4395": {
      "fn": "BitcrushLiveWallet.registerWin",
      "offset": [
        3451,
        3567
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4396": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4397": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4399": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4406": {
      "op": "SHL"
    },
    "4407": {
      "op": "SUB"
    },
    "4408": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4409": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4410": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4411": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1156"
    },
    "4414": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4415": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4424": {
      "op": "SHL"
    },
    "4425": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "4433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4434": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "4437": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4438": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4445": {
      "op": "SHL"
    },
    "4446": {
      "op": "SUB"
    },
    "4447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 49
    },
    "4448": {
      "branch": 92,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "4449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11BB"
    },
    "4452": {
      "branch": 92,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4455": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4456": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4462": {
      "op": "SHL"
    },
    "4463": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4464": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4467": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "4471": {
      "op": "MSTORE"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4476": {
      "op": "DUP3"
    },
    "4477": {
      "op": "ADD"
    },
    "4478": {
      "op": "MSTORE"
    },
    "4479": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4514": {
      "op": "DUP3"
    },
    "4515": {
      "op": "ADD"
    },
    "4516": {
      "op": "MSTORE"
    },
    "4517": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4526": {
      "op": "SHL"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4529": {
      "op": "DUP3"
    },
    "4530": {
      "op": "ADD"
    },
    "4531": {
      "op": "MSTORE"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4534": {
      "op": "ADD"
    },
    "4535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "4538": {
      "op": "JUMP"
    },
    "4539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 50,
      "value": "0x11C4"
    },
    "4543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1379"
    },
    "4547": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "4550": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4551": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6434,
        6764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4552": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6531,
        6541
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 51
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4559": {
      "op": "SHL"
    },
    "4560": {
      "op": "SUB"
    },
    "4561": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6553,
        6561
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "4594": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6531,
        6562
      ],
      "op": "AND",
      "path": "22"
    },
    "4595": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6531,
        6562
      ],
      "op": "EQ",
      "path": "22"
    },
    "4596": {
      "branch": 87,
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6531,
        6562
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4597": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6531,
        6616
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1208"
    },
    "4600": {
      "branch": 87,
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6531,
        6616
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6604,
        6615
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4604": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6604,
        6615
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4611": {
      "op": "SHL"
    },
    "4612": {
      "op": "SUB"
    },
    "4613": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6604,
        6615
      ],
      "op": "AND",
      "path": "22"
    },
    "4614": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6582,
        6592
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4615": {
      "branch": 88,
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6582,
        6616
      ],
      "op": "EQ",
      "path": "22"
    },
    "4616": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6531,
        6616
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4617": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1264"
    },
    "4620": {
      "branch": 88,
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4621": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4623": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4630": {
      "op": "SHL"
    },
    "4631": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4632": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4635": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4637": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4638": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "ADD",
      "path": "22"
    },
    "4639": {
      "op": "MSTORE"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4644": {
      "op": "DUP3"
    },
    "4645": {
      "op": "ADD"
    },
    "4646": {
      "op": "MSTORE"
    },
    "4647": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652062616E6B726F6C6C206F72207374616B69"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4682": {
      "op": "DUP3"
    },
    "4683": {
      "op": "ADD"
    },
    "4684": {
      "op": "MSTORE"
    },
    "4685": {
      "op": "PUSH7",
      "value": "0x1B99C81C1BDBDB"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "4695": {
      "op": "SHL"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4698": {
      "op": "DUP3"
    },
    "4699": {
      "op": "ADD"
    },
    "4700": {
      "op": "MSTORE"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4703": {
      "op": "ADD"
    },
    "4704": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "4707": {
      "op": "JUMP"
    },
    "4708": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6510,
        6681
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4715": {
      "op": "SHL"
    },
    "4716": {
      "op": "SUB"
    },
    "4717": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 52
    },
    "4718": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "AND",
      "path": "22"
    },
    "4719": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4721": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4722": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4723": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4724": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4726": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4728": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4729": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4731": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4732": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6736
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4733": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6744
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4734": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6757
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1287"
    },
    "4737": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4738": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6749,
        6756
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4739": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6748
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1366"
    },
    "4742": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "jump": "i",
      "offset": [
        6719,
        6757
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4743": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6719,
        6757
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "op": "SUB"
    },
    "4752": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4753": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4754": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "AND",
      "path": "22"
    },
    "4755": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4757": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4758": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4759": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4760": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6701
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4762": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4764": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4765": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4767": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4768": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6708
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4769": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "offset": [
        6691,
        6757
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4770": {
      "op": "POP"
    },
    "4771": {
      "fn": "BitcrushLiveWallet.addToUserWinnings",
      "jump": "o",
      "offset": [
        6434,
        6764
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4772": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7619,
        7727
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4773": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4775": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4785": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4786": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4787": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "4790": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4793": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4800": {
      "op": "SHL"
    },
    "4801": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4805": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4806": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "4809": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4810": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E9"
    },
    "4813": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4814": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4821": {
      "op": "SHL"
    },
    "4822": {
      "op": "SUB"
    },
    "4823": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "AND",
      "path": "22",
      "statement": 53
    },
    "4824": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4826": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4827": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4828": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4829": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7716,
        7720
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4831": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4833": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4834": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4835": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4836": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4838": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4839": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4840": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7713
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4841": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7720
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4842": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7720
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4845": {
      "op": "NOT"
    },
    "4846": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7720
      ],
      "op": "AND",
      "path": "22"
    },
    "4847": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7720
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4848": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7720
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4849": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7720
      ],
      "op": "OR",
      "path": "22"
    },
    "4850": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7720
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4851": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "offset": [
        7687,
        7720
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4852": {
      "fn": "BitcrushLiveWallet.blacklistUser",
      "jump": "o",
      "offset": [
        7619,
        7727
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4853": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4854": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 54,
      "value": "0x40"
    },
    "4856": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4863": {
      "op": "SHL"
    },
    "4864": {
      "op": "SUB"
    },
    "4865": {
      "op": "DUP1"
    },
    "4866": {
      "op": "DUP6"
    },
    "4867": {
      "op": "AND"
    },
    "4868": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4870": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4871": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "4872": {
      "op": "MSTORE"
    },
    "4873": {
      "op": "DUP4"
    },
    "4874": {
      "op": "AND"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4877": {
      "op": "DUP3"
    },
    "4878": {
      "op": "ADD"
    },
    "4879": {
      "op": "MSTORE"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4882": {
      "op": "DUP2"
    },
    "4883": {
      "op": "ADD"
    },
    "4884": {
      "op": "DUP3"
    },
    "4885": {
      "op": "SWAP1"
    },
    "4886": {
      "op": "MSTORE"
    },
    "4887": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1360"
    },
    "4890": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4891": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4892": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4893": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4900": {
      "op": "SHL"
    },
    "4901": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4904": {
      "op": "ADD"
    },
    "4905": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4906": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4908": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4909": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4912": {
      "op": "NOT"
    },
    "4913": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4914": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4915": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "6"
    },
    "4916": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "4917": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4918": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4919": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4920": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4921": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4922": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4924": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4925": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "4926": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4927": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "op": "SUB"
    },
    "4936": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "6"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4943": {
      "op": "SHL"
    },
    "4944": {
      "op": "SUB"
    },
    "4945": {
      "op": "NOT"
    },
    "4946": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4947": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4948": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "6"
    },
    "4949": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4950": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4951": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4952": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "6"
    },
    "4953": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4954": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4955": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4956": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x154E"
    },
    "4959": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4960": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4961": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "4962": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "4963": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "4964": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "6"
    },
    "4965": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        912,
        1153
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4966": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4967": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4969": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 55,
      "value": "0x1372"
    },
    "4972": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4973": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4974": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AE9"
    },
    "4977": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4978": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4979": {
      "fn": "SafeMath.add",
      "offset": [
        2818,
        2830
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4980": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4981": {
      "op": "POP"
    },
    "4982": {
      "op": "POP"
    },
    "4983": {
      "op": "POP"
    },
    "4984": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4985": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4986": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4989": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4996": {
      "op": "SHL"
    },
    "4997": {
      "op": "SUB"
    },
    "4998": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 56
    },
    "4999": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5000": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5007": {
      "op": "SHL"
    },
    "5008": {
      "op": "SUB"
    },
    "5009": {
      "op": "NOT"
    },
    "5010": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5011": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "5012": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5013": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "5014": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5015": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5016": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 57,
      "value": "0x40"
    },
    "5018": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5019": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5020": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5021": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5022": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "5023": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5024": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5025": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5026": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5059": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5060": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5061": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5062": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "5063": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "5064": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5065": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5066": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5068": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 58,
      "value": "0x1372"
    },
    "5071": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5072": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5073": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B01"
    },
    "5076": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5077": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5078": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 59,
      "value": "0x40"
    },
    "5080": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5087": {
      "op": "SHL"
    },
    "5088": {
      "op": "SUB"
    },
    "5089": {
      "op": "DUP4"
    },
    "5090": {
      "op": "AND"
    },
    "5091": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "5093": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5094": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "6"
    },
    "5095": {
      "op": "MSTORE"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5098": {
      "op": "DUP2"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "op": "DUP3"
    },
    "5101": {
      "op": "SWAP1"
    },
    "5102": {
      "op": "MSTORE"
    },
    "5103": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD40"
    },
    "5106": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5107": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5108": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5109": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5116": {
      "op": "SHL"
    },
    "5117": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5120": {
      "op": "ADD"
    },
    "5121": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1329"
    },
    "5124": {
      "op": "JUMP"
    },
    "5125": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4600,
        4751
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5126": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 60,
      "value": "0x40"
    },
    "5128": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5129": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5136": {
      "op": "SHL"
    },
    "5137": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5138": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5145": {
      "op": "SHL"
    },
    "5146": {
      "op": "SUB"
    },
    "5147": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4686,
        4694
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "5180": {
      "op": "DUP2"
    },
    "5181": {
      "op": "AND"
    },
    "5182": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5184": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5185": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "ADD",
      "path": "22"
    },
    "5186": {
      "op": "MSTORE"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5189": {
      "op": "DUP3"
    },
    "5190": {
      "op": "ADD"
    },
    "5191": {
      "op": "DUP4"
    },
    "5192": {
      "op": "SWAP1"
    },
    "5193": {
      "op": "MSTORE"
    },
    "5194": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4669
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "5227": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4677
      ],
      "op": "AND",
      "path": "22"
    },
    "5228": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4677
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5229": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4677
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "5234": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4677
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5240": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5242": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5243": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5244": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5245": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "SUB",
      "path": "22"
    },
    "5246": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5247": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5249": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5250": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "GAS",
      "path": "22"
    },
    "5251": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "CALL",
      "path": "22"
    },
    "5252": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5253": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5254": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5255": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1494"
    },
    "5258": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5259": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5260": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5262": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5263": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "5264": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5265": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5267": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5268": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5269": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "POP",
      "path": "22"
    },
    "5270": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "POP",
      "path": "22"
    },
    "5271": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "POP",
      "path": "22"
    },
    "5272": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "POP",
      "path": "22"
    },
    "5273": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5275": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5276": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5277": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "5279": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "NOT",
      "path": "22"
    },
    "5280": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "5282": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5283": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "ADD",
      "path": "22"
    },
    "5284": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "AND",
      "path": "22"
    },
    "5285": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5286": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "ADD",
      "path": "22"
    },
    "5287": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5288": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5290": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5291": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "POP",
      "path": "22"
    },
    "5292": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5293": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "ADD",
      "path": "22"
    },
    "5294": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5295": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14B8"
    },
    "5298": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5299": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5300": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B18"
    },
    "5303": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "jump": "i",
      "offset": [
        4664,
        4705
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5304": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4664,
        4705
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5305": {
      "op": "POP"
    },
    "5306": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 61,
      "value": "0x40"
    },
    "5308": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5309": {
      "op": "PUSH4",
      "value": "0x6172858B"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5316": {
      "op": "SHL"
    },
    "5317": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5318": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5319": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5321": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5322": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "ADD",
      "path": "22"
    },
    "5323": {
      "op": "DUP3"
    },
    "5324": {
      "op": "SWAP1"
    },
    "5325": {
      "op": "MSTORE"
    },
    "5326": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4723
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5365": {
      "op": "SHL"
    },
    "5366": {
      "op": "SUB"
    },
    "5367": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4735
      ],
      "op": "AND",
      "path": "22"
    },
    "5368": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4735
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5369": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4735
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC2E50B16"
    },
    "5374": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4735
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5380": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5382": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5383": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5384": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5385": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "SUB",
      "path": "22"
    },
    "5386": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5387": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5389": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5390": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5391": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "5392": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5393": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5394": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5395": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x151B"
    },
    "5398": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5399": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5401": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5402": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5403": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5404": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "POP",
      "path": "22"
    },
    "5405": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "GAS",
      "path": "22"
    },
    "5406": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "CALL",
      "path": "22"
    },
    "5407": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5408": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5409": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5410": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x152F"
    },
    "5413": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5414": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5415": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5417": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5418": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "5419": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5420": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5422": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5423": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5424": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "POP",
      "path": "22"
    },
    "5425": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "POP",
      "path": "22"
    },
    "5426": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "POP",
      "path": "22"
    },
    "5427": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4715,
        4744
      ],
      "op": "POP",
      "path": "22"
    },
    "5428": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "offset": [
        4600,
        4751
      ],
      "op": "POP",
      "path": "22"
    },
    "5429": {
      "fn": "BitcrushLiveWallet.transferToBankroll",
      "jump": "o",
      "offset": [
        4600,
        4751
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5430": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5431": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5433": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 62,
      "value": "0x1372"
    },
    "5436": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5437": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5438": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B3A"
    },
    "5441": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5442": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5443": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5445": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 63,
      "value": "0x1372"
    },
    "5448": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5449": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5450": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B59"
    },
    "5453": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5454": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5455": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5457": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A3"
    },
    "5460": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5461": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5463": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5464": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5467": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "5468": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5471": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5472": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5474": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5475": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5478": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "5479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5513": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5514": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "6"
    },
    "5515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5522": {
      "op": "SHL"
    },
    "5523": {
      "op": "SUB"
    },
    "5524": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "6"
    },
    "5525": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1620"
    },
    "5528": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5529": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5530": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5531": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5532": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "5537": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "6"
    },
    "5538": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5539": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5540": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5541": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5542": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5543": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5544": {
      "op": "POP"
    },
    "5545": {
      "branch": 93,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5546": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD40"
    },
    "5549": {
      "branch": 93,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 64
    },
    "5551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5552": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5554": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "5555": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5557": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5558": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "5559": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15C1"
    },
    "5563": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5564": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B18"
    },
    "5568": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5569": {
      "branch": 94,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD40"
    },
    "5573": {
      "branch": 94,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5583": {
      "op": "SHL"
    },
    "5584": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5585": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5588": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5590": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "6"
    },
    "5592": {
      "op": "MSTORE"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5597": {
      "op": "DUP3"
    },
    "5598": {
      "op": "ADD"
    },
    "5599": {
      "op": "MSTORE"
    },
    "5600": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5635": {
      "op": "DUP3"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "MSTORE"
    },
    "5638": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "5651": {
      "op": "SHL"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5654": {
      "op": "DUP3"
    },
    "5655": {
      "op": "ADD"
    },
    "5656": {
      "op": "MSTORE"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BD"
    },
    "5663": {
      "op": "JUMP"
    },
    "5664": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5665": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5667": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 65,
      "value": "0x162F"
    },
    "5670": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5671": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5672": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5674": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5675": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1637"
    },
    "5678": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5679": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5680": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "5681": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "op": "POP"
    },
    "5684": {
      "op": "POP"
    },
    "5685": {
      "op": "POP"
    },
    "5686": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 66
    },
    "5691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "5692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "11"
    },
    "5693": {
      "branch": 89,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5694": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1698"
    },
    "5697": {
      "branch": 89,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5700": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5701": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5707": {
      "op": "SHL"
    },
    "5708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5712": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5715": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "11"
    },
    "5716": {
      "op": "MSTORE"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5721": {
      "op": "DUP3"
    },
    "5722": {
      "op": "ADD"
    },
    "5723": {
      "op": "MSTORE"
    },
    "5724": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5759": {
      "op": "DUP3"
    },
    "5760": {
      "op": "ADD"
    },
    "5761": {
      "op": "MSTORE"
    },
    "5762": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5771": {
      "op": "SHL"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5774": {
      "op": "DUP3"
    },
    "5775": {
      "op": "ADD"
    },
    "5776": {
      "op": "MSTORE"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5779": {
      "op": "ADD"
    },
    "5780": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4BD"
    },
    "5783": {
      "op": "JUMP"
    },
    "5784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5791": {
      "op": "SHL"
    },
    "5792": {
      "op": "SUB"
    },
    "5793": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "11",
      "statement": 67
    },
    "5794": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "11"
    },
    "5795": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "5796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 68,
      "value": "0x16EF"
    },
    "5799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5809": {
      "op": "SHL"
    },
    "5810": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5811": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5814": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5817": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "11"
    },
    "5818": {
      "op": "MSTORE"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5823": {
      "op": "DUP3"
    },
    "5824": {
      "op": "ADD"
    },
    "5825": {
      "op": "MSTORE"
    },
    "5826": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5861": {
      "op": "DUP3"
    },
    "5862": {
      "op": "ADD"
    },
    "5863": {
      "op": "MSTORE"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5866": {
      "op": "ADD"
    },
    "5867": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4BD"
    },
    "5870": {
      "op": "JUMP"
    },
    "5871": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5872": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5882": {
      "op": "SHL"
    },
    "5883": {
      "op": "SUB"
    },
    "5884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "11"
    },
    "5885": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5887": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5889": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x170B"
    },
    "5893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BA7"
    },
    "5898": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "11"
    },
    "5908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "11"
    },
    "5912": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "11"
    },
    "5913": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "5915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "5916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "5917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5921": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "11"
    },
    "5923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1748"
    },
    "5926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "5932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "11"
    },
    "5935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "5937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "5939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "11"
    },
    "5940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "5942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "5955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x174D"
    },
    "5959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "5965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "5967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "5969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "5971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 69,
      "value": "0x175D"
    },
    "5974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1768"
    },
    "5980": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5981": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "5983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "5984": {
      "op": "POP"
    },
    "5985": {
      "op": "POP"
    },
    "5986": {
      "op": "POP"
    },
    "5987": {
      "op": "POP"
    },
    "5988": {
      "op": "POP"
    },
    "5989": {
      "op": "POP"
    },
    "5990": {
      "op": "POP"
    },
    "5991": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5992": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5993": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5995": {
      "branch": 90,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5996": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5997": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1777"
    },
    "6000": {
      "branch": 90,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6001": {
      "op": "POP"
    },
    "6002": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 70
    },
    "6003": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1372"
    },
    "6006": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6007": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6008": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6009": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6010": {
      "branch": 91,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6011": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1787"
    },
    "6014": {
      "branch": 91,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6015": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6016": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6017": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6018": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6019": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6021": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "11"
    },
    "6022": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6023": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6024": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 71
    },
    "6025": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6027": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6034": {
      "op": "SHL"
    },
    "6035": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6036": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6037": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6039": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "11"
    },
    "6040": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4BD"
    },
    "6043": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6044": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6045": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BC3"
    },
    "6048": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6049": {
      "op": "JUMPDEST"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6056": {
      "op": "SHL"
    },
    "6057": {
      "op": "SUB"
    },
    "6058": {
      "op": "DUP2"
    },
    "6059": {
      "op": "AND"
    },
    "6060": {
      "op": "DUP2"
    },
    "6061": {
      "op": "EQ"
    },
    "6062": {
      "op": "PUSH2",
      "value": "0x11C4"
    },
    "6065": {
      "op": "JUMPI"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6068": {
      "op": "DUP1"
    },
    "6069": {
      "op": "REVERT"
    },
    "6070": {
      "op": "JUMPDEST"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6075": {
      "op": "DUP3"
    },
    "6076": {
      "op": "DUP5"
    },
    "6077": {
      "op": "SUB"
    },
    "6078": {
      "op": "SLT"
    },
    "6079": {
      "op": "ISZERO"
    },
    "6080": {
      "op": "PUSH2",
      "value": "0x17C8"
    },
    "6083": {
      "op": "JUMPI"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6086": {
      "op": "DUP1"
    },
    "6087": {
      "op": "REVERT"
    },
    "6088": {
      "op": "JUMPDEST"
    },
    "6089": {
      "op": "DUP2"
    },
    "6090": {
      "op": "CALLDATALOAD"
    },
    "6091": {
      "op": "PUSH2",
      "value": "0x1372"
    },
    "6094": {
      "op": "DUP2"
    },
    "6095": {
      "op": "PUSH2",
      "value": "0x17A1"
    },
    "6098": {
      "jump": "i",
      "op": "JUMP"
    },
    "6099": {
      "op": "JUMPDEST"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6104": {
      "op": "DUP3"
    },
    "6105": {
      "op": "DUP5"
    },
    "6106": {
      "op": "SUB"
    },
    "6107": {
      "op": "SLT"
    },
    "6108": {
      "op": "ISZERO"
    },
    "6109": {
      "op": "PUSH2",
      "value": "0x17E5"
    },
    "6112": {
      "op": "JUMPI"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6115": {
      "op": "DUP1"
    },
    "6116": {
      "op": "REVERT"
    },
    "6117": {
      "op": "JUMPDEST"
    },
    "6118": {
      "op": "POP"
    },
    "6119": {
      "op": "CALLDATALOAD"
    },
    "6120": {
      "op": "SWAP2"
    },
    "6121": {
      "op": "SWAP1"
    },
    "6122": {
      "op": "POP"
    },
    "6123": {
      "jump": "o",
      "op": "JUMP"
    },
    "6124": {
      "op": "JUMPDEST"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6127": {
      "op": "DUP1"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6130": {
      "op": "DUP4"
    },
    "6131": {
      "op": "DUP6"
    },
    "6132": {
      "op": "SUB"
    },
    "6133": {
      "op": "SLT"
    },
    "6134": {
      "op": "ISZERO"
    },
    "6135": {
      "op": "PUSH2",
      "value": "0x17FF"
    },
    "6138": {
      "op": "JUMPI"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6141": {
      "op": "DUP1"
    },
    "6142": {
      "op": "REVERT"
    },
    "6143": {
      "op": "JUMPDEST"
    },
    "6144": {
      "op": "DUP3"
    },
    "6145": {
      "op": "CALLDATALOAD"
    },
    "6146": {
      "op": "SWAP2"
    },
    "6147": {
      "op": "POP"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6150": {
      "op": "DUP4"
    },
    "6151": {
      "op": "ADD"
    },
    "6152": {
      "op": "CALLDATALOAD"
    },
    "6153": {
      "op": "PUSH2",
      "value": "0x1811"
    },
    "6156": {
      "op": "DUP2"
    },
    "6157": {
      "op": "PUSH2",
      "value": "0x17A1"
    },
    "6160": {
      "jump": "i",
      "op": "JUMP"
    },
    "6161": {
      "op": "JUMPDEST"
    },
    "6162": {
      "op": "DUP1"
    },
    "6163": {
      "op": "SWAP2"
    },
    "6164": {
      "op": "POP"
    },
    "6165": {
      "op": "POP"
    },
    "6166": {
      "op": "SWAP3"
    },
    "6167": {
      "op": "POP"
    },
    "6168": {
      "op": "SWAP3"
    },
    "6169": {
      "op": "SWAP1"
    },
    "6170": {
      "op": "POP"
    },
    "6171": {
      "jump": "o",
      "op": "JUMP"
    },
    "6172": {
      "op": "JUMPDEST"
    },
    "6173": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6180": {
      "op": "SHL"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6183": {
      "op": "MSTORE"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6188": {
      "op": "MSTORE"
    },
    "6189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6193": {
      "op": "REVERT"
    },
    "6194": {
      "op": "JUMPDEST"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6197": {
      "op": "MLOAD"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6200": {
      "op": "DUP3"
    },
    "6201": {
      "op": "ADD"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6204": {
      "op": "NOT"
    },
    "6205": {
      "op": "AND"
    },
    "6206": {
      "op": "DUP2"
    },
    "6207": {
      "op": "ADD"
    },
    "6208": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6217": {
      "op": "DUP2"
    },
    "6218": {
      "op": "GT"
    },
    "6219": {
      "op": "DUP3"
    },
    "6220": {
      "op": "DUP3"
    },
    "6221": {
      "op": "LT"
    },
    "6222": {
      "op": "OR"
    },
    "6223": {
      "op": "ISZERO"
    },
    "6224": {
      "op": "PUSH2",
      "value": "0x185B"
    },
    "6227": {
      "op": "JUMPI"
    },
    "6228": {
      "op": "PUSH2",
      "value": "0x185B"
    },
    "6231": {
      "op": "PUSH2",
      "value": "0x181C"
    },
    "6234": {
      "jump": "i",
      "op": "JUMP"
    },
    "6235": {
      "op": "JUMPDEST"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6238": {
      "op": "MSTORE"
    },
    "6239": {
      "op": "SWAP2"
    },
    "6240": {
      "op": "SWAP1"
    },
    "6241": {
      "op": "POP"
    },
    "6242": {
      "jump": "o",
      "op": "JUMP"
    },
    "6243": {
      "op": "JUMPDEST"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6246": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6255": {
      "op": "DUP3"
    },
    "6256": {
      "op": "GT"
    },
    "6257": {
      "op": "ISZERO"
    },
    "6258": {
      "op": "PUSH2",
      "value": "0x187D"
    },
    "6261": {
      "op": "JUMPI"
    },
    "6262": {
      "op": "PUSH2",
      "value": "0x187D"
    },
    "6265": {
      "op": "PUSH2",
      "value": "0x181C"
    },
    "6268": {
      "jump": "i",
      "op": "JUMP"
    },
    "6269": {
      "op": "JUMPDEST"
    },
    "6270": {
      "op": "POP"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6276": {
      "op": "ADD"
    },
    "6277": {
      "op": "SWAP1"
    },
    "6278": {
      "jump": "o",
      "op": "JUMP"
    },
    "6279": {
      "op": "JUMPDEST"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6282": {
      "op": "DUP3"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6285": {
      "op": "DUP4"
    },
    "6286": {
      "op": "ADD"
    },
    "6287": {
      "op": "SLT"
    },
    "6288": {
      "op": "PUSH2",
      "value": "0x1898"
    },
    "6291": {
      "op": "JUMPI"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6294": {
      "op": "DUP1"
    },
    "6295": {
      "op": "REVERT"
    },
    "6296": {
      "op": "JUMPDEST"
    },
    "6297": {
      "op": "DUP2"
    },
    "6298": {
      "op": "CALLDATALOAD"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6301": {
      "op": "PUSH2",
      "value": "0x18AD"
    },
    "6304": {
      "op": "PUSH2",
      "value": "0x18A8"
    },
    "6307": {
      "op": "DUP4"
    },
    "6308": {
      "op": "PUSH2",
      "value": "0x1863"
    },
    "6311": {
      "jump": "i",
      "op": "JUMP"
    },
    "6312": {
      "op": "JUMPDEST"
    },
    "6313": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6316": {
      "jump": "i",
      "op": "JUMP"
    },
    "6317": {
      "op": "JUMPDEST"
    },
    "6318": {
      "op": "DUP3"
    },
    "6319": {
      "op": "DUP2"
    },
    "6320": {
      "op": "MSTORE"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6323": {
      "op": "SWAP3"
    },
    "6324": {
      "op": "SWAP1"
    },
    "6325": {
      "op": "SWAP3"
    },
    "6326": {
      "op": "SHL"
    },
    "6327": {
      "op": "DUP5"
    },
    "6328": {
      "op": "ADD"
    },
    "6329": {
      "op": "DUP2"
    },
    "6330": {
      "op": "ADD"
    },
    "6331": {
      "op": "SWAP2"
    },
    "6332": {
      "op": "DUP2"
    },
    "6333": {
      "op": "DUP2"
    },
    "6334": {
      "op": "ADD"
    },
    "6335": {
      "op": "SWAP1"
    },
    "6336": {
      "op": "DUP7"
    },
    "6337": {
      "op": "DUP5"
    },
    "6338": {
      "op": "GT"
    },
    "6339": {
      "op": "ISZERO"
    },
    "6340": {
      "op": "PUSH2",
      "value": "0x18CC"
    },
    "6343": {
      "op": "JUMPI"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6346": {
      "op": "DUP1"
    },
    "6347": {
      "op": "REVERT"
    },
    "6348": {
      "op": "JUMPDEST"
    },
    "6349": {
      "op": "DUP3"
    },
    "6350": {
      "op": "DUP7"
    },
    "6351": {
      "op": "ADD"
    },
    "6352": {
      "op": "JUMPDEST"
    },
    "6353": {
      "op": "DUP5"
    },
    "6354": {
      "op": "DUP2"
    },
    "6355": {
      "op": "LT"
    },
    "6356": {
      "op": "ISZERO"
    },
    "6357": {
      "op": "PUSH2",
      "value": "0x18F0"
    },
    "6360": {
      "op": "JUMPI"
    },
    "6361": {
      "op": "DUP1"
    },
    "6362": {
      "op": "CALLDATALOAD"
    },
    "6363": {
      "op": "PUSH2",
      "value": "0x18E3"
    },
    "6366": {
      "op": "DUP2"
    },
    "6367": {
      "op": "PUSH2",
      "value": "0x17A1"
    },
    "6370": {
      "jump": "i",
      "op": "JUMP"
    },
    "6371": {
      "op": "JUMPDEST"
    },
    "6372": {
      "op": "DUP4"
    },
    "6373": {
      "op": "MSTORE"
    },
    "6374": {
      "op": "SWAP2"
    },
    "6375": {
      "op": "DUP4"
    },
    "6376": {
      "op": "ADD"
    },
    "6377": {
      "op": "SWAP2"
    },
    "6378": {
      "op": "DUP4"
    },
    "6379": {
      "op": "ADD"
    },
    "6380": {
      "op": "PUSH2",
      "value": "0x18D0"
    },
    "6383": {
      "op": "JUMP"
    },
    "6384": {
      "op": "JUMPDEST"
    },
    "6385": {
      "op": "POP"
    },
    "6386": {
      "op": "SWAP7"
    },
    "6387": {
      "op": "SWAP6"
    },
    "6388": {
      "op": "POP"
    },
    "6389": {
      "op": "POP"
    },
    "6390": {
      "op": "POP"
    },
    "6391": {
      "op": "POP"
    },
    "6392": {
      "op": "POP"
    },
    "6393": {
      "op": "POP"
    },
    "6394": {
      "jump": "o",
      "op": "JUMP"
    },
    "6395": {
      "op": "JUMPDEST"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6400": {
      "op": "DUP3"
    },
    "6401": {
      "op": "DUP5"
    },
    "6402": {
      "op": "SUB"
    },
    "6403": {
      "op": "SLT"
    },
    "6404": {
      "op": "ISZERO"
    },
    "6405": {
      "op": "PUSH2",
      "value": "0x190D"
    },
    "6408": {
      "op": "JUMPI"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6411": {
      "op": "DUP1"
    },
    "6412": {
      "op": "REVERT"
    },
    "6413": {
      "op": "JUMPDEST"
    },
    "6414": {
      "op": "DUP2"
    },
    "6415": {
      "op": "CALLDATALOAD"
    },
    "6416": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6425": {
      "op": "DUP2"
    },
    "6426": {
      "op": "GT"
    },
    "6427": {
      "op": "ISZERO"
    },
    "6428": {
      "op": "PUSH2",
      "value": "0x1924"
    },
    "6431": {
      "op": "JUMPI"
    },
    "6432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6434": {
      "op": "DUP1"
    },
    "6435": {
      "op": "REVERT"
    },
    "6436": {
      "op": "JUMPDEST"
    },
    "6437": {
      "op": "PUSH2",
      "value": "0x162F"
    },
    "6440": {
      "op": "DUP5"
    },
    "6441": {
      "op": "DUP3"
    },
    "6442": {
      "op": "DUP6"
    },
    "6443": {
      "op": "ADD"
    },
    "6444": {
      "op": "PUSH2",
      "value": "0x1887"
    },
    "6447": {
      "jump": "i",
      "op": "JUMP"
    },
    "6448": {
      "op": "JUMPDEST"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6451": {
      "op": "DUP1"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6454": {
      "op": "DUP4"
    },
    "6455": {
      "op": "DUP6"
    },
    "6456": {
      "op": "SUB"
    },
    "6457": {
      "op": "SLT"
    },
    "6458": {
      "op": "ISZERO"
    },
    "6459": {
      "op": "PUSH2",
      "value": "0x1943"
    },
    "6462": {
      "op": "JUMPI"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6465": {
      "op": "DUP1"
    },
    "6466": {
      "op": "REVERT"
    },
    "6467": {
      "op": "JUMPDEST"
    },
    "6468": {
      "op": "DUP3"
    },
    "6469": {
      "op": "CALLDATALOAD"
    },
    "6470": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6479": {
      "op": "DUP1"
    },
    "6480": {
      "op": "DUP3"
    },
    "6481": {
      "op": "GT"
    },
    "6482": {
      "op": "ISZERO"
    },
    "6483": {
      "op": "PUSH2",
      "value": "0x195B"
    },
    "6486": {
      "op": "JUMPI"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6489": {
      "op": "DUP1"
    },
    "6490": {
      "op": "REVERT"
    },
    "6491": {
      "op": "JUMPDEST"
    },
    "6492": {
      "op": "DUP2"
    },
    "6493": {
      "op": "DUP6"
    },
    "6494": {
      "op": "ADD"
    },
    "6495": {
      "op": "SWAP2"
    },
    "6496": {
      "op": "POP"
    },
    "6497": {
      "op": "DUP6"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6500": {
      "op": "DUP4"
    },
    "6501": {
      "op": "ADD"
    },
    "6502": {
      "op": "SLT"
    },
    "6503": {
      "op": "PUSH2",
      "value": "0x196F"
    },
    "6506": {
      "op": "JUMPI"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6509": {
      "op": "DUP1"
    },
    "6510": {
      "op": "REVERT"
    },
    "6511": {
      "op": "JUMPDEST"
    },
    "6512": {
      "op": "DUP2"
    },
    "6513": {
      "op": "CALLDATALOAD"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6516": {
      "op": "PUSH2",
      "value": "0x197F"
    },
    "6519": {
      "op": "PUSH2",
      "value": "0x18A8"
    },
    "6522": {
      "op": "DUP4"
    },
    "6523": {
      "op": "PUSH2",
      "value": "0x1863"
    },
    "6526": {
      "jump": "i",
      "op": "JUMP"
    },
    "6527": {
      "op": "JUMPDEST"
    },
    "6528": {
      "op": "DUP3"
    },
    "6529": {
      "op": "DUP2"
    },
    "6530": {
      "op": "MSTORE"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6533": {
      "op": "SWAP3"
    },
    "6534": {
      "op": "SWAP1"
    },
    "6535": {
      "op": "SWAP3"
    },
    "6536": {
      "op": "SHL"
    },
    "6537": {
      "op": "DUP5"
    },
    "6538": {
      "op": "ADD"
    },
    "6539": {
      "op": "DUP2"
    },
    "6540": {
      "op": "ADD"
    },
    "6541": {
      "op": "SWAP2"
    },
    "6542": {
      "op": "DUP2"
    },
    "6543": {
      "op": "DUP2"
    },
    "6544": {
      "op": "ADD"
    },
    "6545": {
      "op": "SWAP1"
    },
    "6546": {
      "op": "DUP10"
    },
    "6547": {
      "op": "DUP5"
    },
    "6548": {
      "op": "GT"
    },
    "6549": {
      "op": "ISZERO"
    },
    "6550": {
      "op": "PUSH2",
      "value": "0x199E"
    },
    "6553": {
      "op": "JUMPI"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6556": {
      "op": "DUP1"
    },
    "6557": {
      "op": "REVERT"
    },
    "6558": {
      "op": "JUMPDEST"
    },
    "6559": {
      "op": "SWAP5"
    },
    "6560": {
      "op": "DUP3"
    },
    "6561": {
      "op": "ADD"
    },
    "6562": {
      "op": "SWAP5"
    },
    "6563": {
      "op": "JUMPDEST"
    },
    "6564": {
      "op": "DUP4"
    },
    "6565": {
      "op": "DUP7"
    },
    "6566": {
      "op": "LT"
    },
    "6567": {
      "op": "ISZERO"
    },
    "6568": {
      "op": "PUSH2",
      "value": "0x19BC"
    },
    "6571": {
      "op": "JUMPI"
    },
    "6572": {
      "op": "DUP6"
    },
    "6573": {
      "op": "CALLDATALOAD"
    },
    "6574": {
      "op": "DUP3"
    },
    "6575": {
      "op": "MSTORE"
    },
    "6576": {
      "op": "SWAP5"
    },
    "6577": {
      "op": "DUP3"
    },
    "6578": {
      "op": "ADD"
    },
    "6579": {
      "op": "SWAP5"
    },
    "6580": {
      "op": "SWAP1"
    },
    "6581": {
      "op": "DUP3"
    },
    "6582": {
      "op": "ADD"
    },
    "6583": {
      "op": "SWAP1"
    },
    "6584": {
      "op": "PUSH2",
      "value": "0x19A3"
    },
    "6587": {
      "op": "JUMP"
    },
    "6588": {
      "op": "JUMPDEST"
    },
    "6589": {
      "op": "SWAP7"
    },
    "6590": {
      "op": "POP"
    },
    "6591": {
      "op": "POP"
    },
    "6592": {
      "op": "DUP7"
    },
    "6593": {
      "op": "ADD"
    },
    "6594": {
      "op": "CALLDATALOAD"
    },
    "6595": {
      "op": "SWAP3"
    },
    "6596": {
      "op": "POP"
    },
    "6597": {
      "op": "POP"
    },
    "6598": {
      "op": "DUP1"
    },
    "6599": {
      "op": "DUP3"
    },
    "6600": {
      "op": "GT"
    },
    "6601": {
      "op": "ISZERO"
    },
    "6602": {
      "op": "PUSH2",
      "value": "0x19D2"
    },
    "6605": {
      "op": "JUMPI"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6608": {
      "op": "DUP1"
    },
    "6609": {
      "op": "REVERT"
    },
    "6610": {
      "op": "JUMPDEST"
    },
    "6611": {
      "op": "POP"
    },
    "6612": {
      "op": "PUSH2",
      "value": "0x19DF"
    },
    "6615": {
      "op": "DUP6"
    },
    "6616": {
      "op": "DUP3"
    },
    "6617": {
      "op": "DUP7"
    },
    "6618": {
      "op": "ADD"
    },
    "6619": {
      "op": "PUSH2",
      "value": "0x1887"
    },
    "6622": {
      "jump": "i",
      "op": "JUMP"
    },
    "6623": {
      "op": "JUMPDEST"
    },
    "6624": {
      "op": "SWAP2"
    },
    "6625": {
      "op": "POP"
    },
    "6626": {
      "op": "POP"
    },
    "6627": {
      "op": "SWAP3"
    },
    "6628": {
      "op": "POP"
    },
    "6629": {
      "op": "SWAP3"
    },
    "6630": {
      "op": "SWAP1"
    },
    "6631": {
      "op": "POP"
    },
    "6632": {
      "jump": "o",
      "op": "JUMP"
    },
    "6633": {
      "op": "JUMPDEST"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6636": {
      "op": "DUP1"
    },
    "6637": {
      "op": "DUP3"
    },
    "6638": {
      "op": "MSTORE"
    },
    "6639": {
      "op": "DUP2"
    },
    "6640": {
      "op": "DUP2"
    },
    "6641": {
      "op": "ADD"
    },
    "6642": {
      "op": "MSTORE"
    },
    "6643": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6678": {
      "op": "DUP3"
    },
    "6679": {
      "op": "ADD"
    },
    "6680": {
      "op": "MSTORE"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6683": {
      "op": "ADD"
    },
    "6684": {
      "op": "SWAP1"
    },
    "6685": {
      "jump": "o",
      "op": "JUMP"
    },
    "6686": {
      "op": "JUMPDEST"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6689": {
      "op": "DUP1"
    },
    "6690": {
      "op": "DUP3"
    },
    "6691": {
      "op": "MSTORE"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6694": {
      "op": "SWAP1"
    },
    "6695": {
      "op": "DUP3"
    },
    "6696": {
      "op": "ADD"
    },
    "6697": {
      "op": "MSTORE"
    },
    "6698": {
      "op": "PUSH32",
      "value": "0x42657420616D6F756E742073686F756C64206265206772656174657220746861"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6733": {
      "op": "DUP3"
    },
    "6734": {
      "op": "ADD"
    },
    "6735": {
      "op": "MSTORE"
    },
    "6736": {
      "op": "PUSH3",
      "value": "0x6E203"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "6742": {
      "op": "SHL"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6745": {
      "op": "DUP3"
    },
    "6746": {
      "op": "ADD"
    },
    "6747": {
      "op": "MSTORE"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6750": {
      "op": "ADD"
    },
    "6751": {
      "op": "SWAP1"
    },
    "6752": {
      "jump": "o",
      "op": "JUMP"
    },
    "6753": {
      "op": "JUMPDEST"
    },
    "6754": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6761": {
      "op": "SHL"
    },
    "6762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6764": {
      "op": "MSTORE"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6769": {
      "op": "MSTORE"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6774": {
      "op": "REVERT"
    },
    "6775": {
      "op": "JUMPDEST"
    },
    "6776": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6783": {
      "op": "SHL"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6786": {
      "op": "MSTORE"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6789": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6791": {
      "op": "MSTORE"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6796": {
      "op": "REVERT"
    },
    "6797": {
      "op": "JUMPDEST"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6802": {
      "op": "NOT"
    },
    "6803": {
      "op": "DUP3"
    },
    "6804": {
      "op": "EQ"
    },
    "6805": {
      "op": "ISZERO"
    },
    "6806": {
      "op": "PUSH2",
      "value": "0x1AA1"
    },
    "6809": {
      "op": "JUMPI"
    },
    "6810": {
      "op": "PUSH2",
      "value": "0x1AA1"
    },
    "6813": {
      "op": "PUSH2",
      "value": "0x1A77"
    },
    "6816": {
      "jump": "i",
      "op": "JUMP"
    },
    "6817": {
      "op": "JUMPDEST"
    },
    "6818": {
      "op": "POP"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6821": {
      "op": "ADD"
    },
    "6822": {
      "op": "SWAP1"
    },
    "6823": {
      "jump": "o",
      "op": "JUMP"
    },
    "6824": {
      "op": "JUMPDEST"
    },
    "6825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6827": {
      "op": "DUP1"
    },
    "6828": {
      "op": "DUP3"
    },
    "6829": {
      "op": "MSTORE"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6832": {
      "op": "SWAP1"
    },
    "6833": {
      "op": "DUP3"
    },
    "6834": {
      "op": "ADD"
    },
    "6835": {
      "op": "MSTORE"
    },
    "6836": {
      "op": "PUSH32",
      "value": "0x506172616D65746572206C656E677468732073686F756C642062652065717561"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6871": {
      "op": "DUP3"
    },
    "6872": {
      "op": "ADD"
    },
    "6873": {
      "op": "MSTORE"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "6878": {
      "op": "SHL"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6881": {
      "op": "DUP3"
    },
    "6882": {
      "op": "ADD"
    },
    "6883": {
      "op": "MSTORE"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6886": {
      "op": "ADD"
    },
    "6887": {
      "op": "SWAP1"
    },
    "6888": {
      "jump": "o",
      "op": "JUMP"
    },
    "6889": {
      "op": "JUMPDEST"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6892": {
      "op": "DUP3"
    },
    "6893": {
      "op": "NOT"
    },
    "6894": {
      "op": "DUP3"
    },
    "6895": {
      "op": "GT"
    },
    "6896": {
      "op": "ISZERO"
    },
    "6897": {
      "op": "PUSH2",
      "value": "0x1AFC"
    },
    "6900": {
      "op": "JUMPI"
    },
    "6901": {
      "op": "PUSH2",
      "value": "0x1AFC"
    },
    "6904": {
      "op": "PUSH2",
      "value": "0x1A77"
    },
    "6907": {
      "jump": "i",
      "op": "JUMP"
    },
    "6908": {
      "op": "JUMPDEST"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "op": "ADD"
    },
    "6911": {
      "op": "SWAP1"
    },
    "6912": {
      "jump": "o",
      "op": "JUMP"
    },
    "6913": {
      "op": "JUMPDEST"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6916": {
      "op": "DUP3"
    },
    "6917": {
      "op": "DUP3"
    },
    "6918": {
      "op": "LT"
    },
    "6919": {
      "op": "ISZERO"
    },
    "6920": {
      "op": "PUSH2",
      "value": "0x1B13"
    },
    "6923": {
      "op": "JUMPI"
    },
    "6924": {
      "op": "PUSH2",
      "value": "0x1B13"
    },
    "6927": {
      "op": "PUSH2",
      "value": "0x1A77"
    },
    "6930": {
      "jump": "i",
      "op": "JUMP"
    },
    "6931": {
      "op": "JUMPDEST"
    },
    "6932": {
      "op": "POP"
    },
    "6933": {
      "op": "SUB"
    },
    "6934": {
      "op": "SWAP1"
    },
    "6935": {
      "jump": "o",
      "op": "JUMP"
    },
    "6936": {
      "op": "JUMPDEST"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6941": {
      "op": "DUP3"
    },
    "6942": {
      "op": "DUP5"
    },
    "6943": {
      "op": "SUB"
    },
    "6944": {
      "op": "SLT"
    },
    "6945": {
      "op": "ISZERO"
    },
    "6946": {
      "op": "PUSH2",
      "value": "0x1B2A"
    },
    "6949": {
      "op": "JUMPI"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6952": {
      "op": "DUP1"
    },
    "6953": {
      "op": "REVERT"
    },
    "6954": {
      "op": "JUMPDEST"
    },
    "6955": {
      "op": "DUP2"
    },
    "6956": {
      "op": "MLOAD"
    },
    "6957": {
      "op": "DUP1"
    },
    "6958": {
      "op": "ISZERO"
    },
    "6959": {
      "op": "ISZERO"
    },
    "6960": {
      "op": "DUP2"
    },
    "6961": {
      "op": "EQ"
    },
    "6962": {
      "op": "PUSH2",
      "value": "0x1372"
    },
    "6965": {
      "op": "JUMPI"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6968": {
      "op": "DUP1"
    },
    "6969": {
      "op": "REVERT"
    },
    "6970": {
      "op": "JUMPDEST"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6973": {
      "op": "DUP2"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6976": {
      "op": "NOT"
    },
    "6977": {
      "op": "DIV"
    },
    "6978": {
      "op": "DUP4"
    },
    "6979": {
      "op": "GT"
    },
    "6980": {
      "op": "DUP3"
    },
    "6981": {
      "op": "ISZERO"
    },
    "6982": {
      "op": "ISZERO"
    },
    "6983": {
      "op": "AND"
    },
    "6984": {
      "op": "ISZERO"
    },
    "6985": {
      "op": "PUSH2",
      "value": "0x1B54"
    },
    "6988": {
      "op": "JUMPI"
    },
    "6989": {
      "op": "PUSH2",
      "value": "0x1B54"
    },
    "6992": {
      "op": "PUSH2",
      "value": "0x1A77"
    },
    "6995": {
      "jump": "i",
      "op": "JUMP"
    },
    "6996": {
      "op": "JUMPDEST"
    },
    "6997": {
      "op": "POP"
    },
    "6998": {
      "op": "MUL"
    },
    "6999": {
      "op": "SWAP1"
    },
    "7000": {
      "jump": "o",
      "op": "JUMP"
    },
    "7001": {
      "op": "JUMPDEST"
    },
    "7002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7004": {
      "op": "DUP3"
    },
    "7005": {
      "op": "PUSH2",
      "value": "0x1B76"
    },
    "7008": {
      "op": "JUMPI"
    },
    "7009": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7016": {
      "op": "SHL"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7019": {
      "op": "MSTORE"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7024": {
      "op": "MSTORE"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7029": {
      "op": "REVERT"
    },
    "7030": {
      "op": "JUMPDEST"
    },
    "7031": {
      "op": "POP"
    },
    "7032": {
      "op": "DIV"
    },
    "7033": {
      "op": "SWAP1"
    },
    "7034": {
      "jump": "o",
      "op": "JUMP"
    },
    "7035": {
      "op": "JUMPDEST"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7038": {
      "op": "JUMPDEST"
    },
    "7039": {
      "op": "DUP4"
    },
    "7040": {
      "op": "DUP2"
    },
    "7041": {
      "op": "LT"
    },
    "7042": {
      "op": "ISZERO"
    },
    "7043": {
      "op": "PUSH2",
      "value": "0x1B96"
    },
    "7046": {
      "op": "JUMPI"
    },
    "7047": {
      "op": "DUP2"
    },
    "7048": {
      "op": "DUP2"
    },
    "7049": {
      "op": "ADD"
    },
    "7050": {
      "op": "MLOAD"
    },
    "7051": {
      "op": "DUP4"
    },
    "7052": {
      "op": "DUP3"
    },
    "7053": {
      "op": "ADD"
    },
    "7054": {
      "op": "MSTORE"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7057": {
      "op": "ADD"
    },
    "7058": {
      "op": "PUSH2",
      "value": "0x1B7E"
    },
    "7061": {
      "op": "JUMP"
    },
    "7062": {
      "op": "JUMPDEST"
    },
    "7063": {
      "op": "DUP4"
    },
    "7064": {
      "op": "DUP2"
    },
    "7065": {
      "op": "GT"
    },
    "7066": {
      "op": "ISZERO"
    },
    "7067": {
      "op": "PUSH2",
      "value": "0x1360"
    },
    "7070": {
      "op": "JUMPI"
    },
    "7071": {
      "op": "POP"
    },
    "7072": {
      "op": "POP"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7075": {
      "op": "SWAP2"
    },
    "7076": {
      "op": "ADD"
    },
    "7077": {
      "op": "MSTORE"
    },
    "7078": {
      "jump": "o",
      "op": "JUMP"
    },
    "7079": {
      "op": "JUMPDEST"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7082": {
      "op": "DUP3"
    },
    "7083": {
      "op": "MLOAD"
    },
    "7084": {
      "op": "PUSH2",
      "value": "0x1BB9"
    },
    "7087": {
      "op": "DUP2"
    },
    "7088": {
      "op": "DUP5"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7091": {
      "op": "DUP8"
    },
    "7092": {
      "op": "ADD"
    },
    "7093": {
      "op": "PUSH2",
      "value": "0x1B7B"
    },
    "7096": {
      "jump": "i",
      "op": "JUMP"
    },
    "7097": {
      "op": "JUMPDEST"
    },
    "7098": {
      "op": "SWAP2"
    },
    "7099": {
      "op": "SWAP1"
    },
    "7100": {
      "op": "SWAP2"
    },
    "7101": {
      "op": "ADD"
    },
    "7102": {
      "op": "SWAP3"
    },
    "7103": {
      "op": "SWAP2"
    },
    "7104": {
      "op": "POP"
    },
    "7105": {
      "op": "POP"
    },
    "7106": {
      "jump": "o",
      "op": "JUMP"
    },
    "7107": {
      "op": "JUMPDEST"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7110": {
      "op": "DUP2"
    },
    "7111": {
      "op": "MSTORE"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7114": {
      "op": "DUP3"
    },
    "7115": {
      "op": "MLOAD"
    },
    "7116": {
      "op": "DUP1"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7119": {
      "op": "DUP5"
    },
    "7120": {
      "op": "ADD"
    },
    "7121": {
      "op": "MSTORE"
    },
    "7122": {
      "op": "PUSH2",
      "value": "0x1BE2"
    },
    "7125": {
      "op": "DUP2"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7128": {
      "op": "DUP6"
    },
    "7129": {
      "op": "ADD"
    },
    "7130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7132": {
      "op": "DUP8"
    },
    "7133": {
      "op": "ADD"
    },
    "7134": {
      "op": "PUSH2",
      "value": "0x1B7B"
    },
    "7137": {
      "jump": "i",
      "op": "JUMP"
    },
    "7138": {
      "op": "JUMPDEST"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7141": {
      "op": "ADD"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7144": {
      "op": "NOT"
    },
    "7145": {
      "op": "AND"
    },
    "7146": {
      "op": "SWAP2"
    },
    "7147": {
      "op": "SWAP1"
    },
    "7148": {
      "op": "SWAP2"
    },
    "7149": {
      "op": "ADD"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7152": {
      "op": "ADD"
    },
    "7153": {
      "op": "SWAP3"
    },
    "7154": {
      "op": "SWAP2"
    },
    "7155": {
      "op": "POP"
    },
    "7156": {
      "op": "POP"
    },
    "7157": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7fd73e519c75a19bfb5d20818fde79f5a84d4872",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity >=0.6.5;\n\n//BSC address: 0x5326C45a31DEEBa15EDC68055bF69b2682c9B215\n//openzeppelin\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n//bitcrush\nimport \"./CrushToken.sol\";\nimport \"./Bankroll.sol\";\nimport \"./BankStaking.sol\";\n\ncontract BitcrushLiveWallet is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for CRUSHToken;\n    struct wallet {\n        //rename to balance\n        uint256 balance;\n        uint256 lockTimeStamp;\n    }\n\n    mapping(address => bool) public blacklistedUsers;\n    //mapping users address with bet amount\n    mapping(address => wallet) public betAmounts;\n\n    //address of the crush token\n    CRUSHToken public immutable crush;\n    BitcrushBankroll public immutable bankroll;\n    BitcrushStaking public stakingPool;\n\n    uint256 public constant DIVISOR = 10000;\n    uint256 public lockPeriod = 10800;\n    address public reserveAddress;\n    uint256 public earlyWithdrawFee = 50; // 50/10000 * 100 = 0.5%\n\n    event Withdraw(address indexed _address, uint256 indexed _amount);\n    event Deposit(address indexed _address, uint256 indexed _amount);\n    event DepositWin(address indexed _address, uint256 indexed _amount);\n    event LockPeriodUpdated(uint256 indexed _lockPeriod);\n\n    constructor(\n        CRUSHToken _crush,\n        BitcrushBankroll _bankroll,\n        address _reserveAddress\n    ) {\n        crush = _crush;\n        bankroll = _bankroll;\n        reserveAddress = _reserveAddress;\n    }\n\n    /// add funds to the senders live wallet\n    /// @dev adds funds to the sender user's live wallets\n    function addbet(uint256 _amount) public {\n        require(_amount > 0, \"Bet amount should be greater than 0\");\n        require(blacklistedUsers[msg.sender] == false, \"User is black Listed\");\n        crush.safeTransferFrom(msg.sender, address(this), _amount);\n        betAmounts[msg.sender].balance = betAmounts[msg.sender].balance.add(\n            _amount\n        );\n        betAmounts[msg.sender].lockTimeStamp = block.timestamp;\n        emit Deposit(msg.sender, _amount);\n    }\n\n    /// add funds to the provided users live wallet\n    /// @dev adds funds to the specified users live wallets\n    function addbetWithAddress(uint256 _amount, address _user) public {\n        require(_amount > 0, \"Bet amount should be greater than 0\");\n        require(blacklistedUsers[_user] == false, \"User is black Listed\");\n        crush.safeTransferFrom(msg.sender, address(this), _amount);\n        betAmounts[_user].balance = betAmounts[_user].balance.add(_amount);\n        betAmounts[_user].lockTimeStamp = block.timestamp;\n        emit DepositWin(_user, _amount);\n    }\n\n    /// return the current balance of user in the live wallet\n    /// @dev return current the balance of provided user addrss in the live wallet\n    function balanceOf(address _user) public view returns (uint256) {\n        return betAmounts[_user].balance;\n    }\n\n    /// register wins for users in game with amounts\n    /// @dev register wins for users during gameplay. wins are reported in aggregated form from the game server.\n    function registerWin(uint256[] memory _wins, address[] memory _users)\n        public\n        onlyOwner\n    {\n        require(\n            _wins.length == _users.length,\n            \"Parameter lengths should be equal\"\n        );\n        for (uint256 i = 0; i < _users.length; i++) {\n            bankroll.payOutUserWinning(_wins[i], _users[i]);\n        }\n    }\n\n    /// register loss for users in game with amounts\n    /// @dev register loss for users during gameplay. loss is reported in aggregated form from the game server.\n    function registerLoss(uint256[] memory _bets, address[] memory _users)\n        public\n        onlyOwner\n    {\n        require(\n            _bets.length == _users.length,\n            \"Parameter lengths should be equal\"\n        );\n        for (uint256 i = 0; i < _users.length; i++) {\n            if (_bets[i] > 0) {\n                require(\n                    betAmounts[_users[i]].balance >= _bets[i],\n                    \"Loss bet amount is greater than available balance\"\n                );\n                transferToBankroll(_bets[i]);\n                betAmounts[_users[i]].balance = betAmounts[_users[i]]\n                    .balance\n                    .sub(_bets[i]);\n            }\n        }\n    }\n\n    /// transfer funds from live wallet to the bankroll on user loss\n    /// @dev transfer funds to the bankroll contract when users lose in game\n    function transferToBankroll(uint256 _amount) internal {\n        crush.approve(address(bankroll), _amount);\n        bankroll.addUserLoss(_amount);\n    }\n\n    /// withdraw funds from live wallet of the senders address\n    /// @dev withdraw amount from users wallet if betlock isnt enabled\n    function withdrawBet(uint256 _amount) public {\n        require(\n            betAmounts[msg.sender].balance >= _amount,\n            \"bet less than amount withdraw\"\n        );\n        require(\n            betAmounts[msg.sender].lockTimeStamp == 0 ||\n                betAmounts[msg.sender].lockTimeStamp.add(lockPeriod) <\n                block.timestamp,\n            \"Bet Amount locked, please try again later\"\n        );\n        betAmounts[msg.sender].balance = betAmounts[msg.sender].balance.sub(\n            _amount\n        );\n        crush.safeTransfer(msg.sender, _amount);\n        emit Withdraw(msg.sender, _amount);\n    }\n\n    /// owner only function to override timelock and withdraw funds on behalf of user\n    /// @dev withdraw preapproved amount from users wallet sidestepping the timelock on withdrawals\n    function withdrawBetForUser(uint256 _amount, address _user)\n        public\n        onlyOwner\n    {\n        require(\n            betAmounts[_user].balance >= _amount,\n            \"bet less than amount withdraw\"\n        );\n        betAmounts[_user].balance = betAmounts[_user].balance.sub(_amount);\n        emit Withdraw(_user, _amount);\n        uint256 withdrawalFee = _amount.mul(earlyWithdrawFee).div(DIVISOR);\n        _amount = _amount.sub(withdrawalFee);\n        crush.safeTransfer(reserveAddress, withdrawalFee);\n        crush.safeTransfer(_user, _amount);\n    }\n\n    /// add funds to the users live wallet on wins by either the bankroll or the staking pool\n    /// @dev add funds to the users live wallet as winnings\n    function addToUserWinnings(uint256 _amount, address _user) public {\n        require(\n            msg.sender == address(bankroll) ||\n                msg.sender == address(stakingPool),\n            \"Caller must be bankroll or staking pool\"\n        );\n        betAmounts[_user].balance = betAmounts[_user].balance.add(_amount);\n    }\n\n    /// update the lockTimeStamp of provided users to current timestamp to prevent withdraws\n    /// @dev update bet lock to prevent withdraws during gameplay\n    function updateBetLock(address[] memory _users) public onlyOwner {\n        for (uint256 i = 0; i < _users.length; i++) {\n            betAmounts[_users[i]].lockTimeStamp = block.timestamp;\n        }\n    }\n\n    /// update the lockTimeStamp of provided users to 0 to allow withdraws\n    /// @dev update bet lock to allow withdraws after gameplay\n    function releaseBetLock(address[] memory _users) public onlyOwner {\n        for (uint256 i = 0; i < _users.length; i++) {\n            betAmounts[_users[i]].lockTimeStamp = 0;\n        }\n    }\n\n    /// blacklist specified address from adding more funds to the pool\n    /// @dev prevent specified address from adding funds to the live wallet\n    function blacklistUser(address _address) public onlyOwner {\n        blacklistedUsers[_address] = true;\n    }\n\n    /// whitelist sender address from adding more funds to the pool\n    /// @dev allow previously blacklisted sender address to add funds to the live wallet\n    function whitelistUser(address _address) public onlyOwner {\n        delete blacklistedUsers[_address];\n    }\n\n    /// blacklist sender address from adding more funds to the pool\n    /// @dev prevent sender address from adding funds to the live wallet\n    function blacklistSelf() public {\n        blacklistedUsers[msg.sender] = true;\n    }\n\n    /// Store `_lockPeriod`.\n    /// @param _lockPeriod the new value to store\n    /// @dev stores the _lockPeriod in the state variable `lockPeriod`\n    function setLockPeriod(uint256 _lockPeriod) public onlyOwner {\n        require(\n            _lockPeriod <= 604800,\n            \"Lock period cannot be greater than 1 week\"\n        );\n        lockPeriod = _lockPeriod;\n        emit LockPeriodUpdated(lockPeriod);\n    }\n\n    /// Store `_reserveAddress`.\n    /// @param _reserveAddress the new value to store\n    /// @dev stores the _reserveAddress in the state variable `reserveAddress`\n    function setReserveAddress(address _reserveAddress) public onlyOwner {\n        reserveAddress = _reserveAddress;\n    }\n\n    /// Store `_earlyWithdrawFee`.\n    /// @param _earlyWithdrawFee the new value to store\n    /// @dev stores the _earlyWithdrawFee in the state variable `earlyWithdrawFee`\n    function setEarlyWithdrawFee(uint256 _earlyWithdrawFee) public onlyOwner {\n        require(\n            _earlyWithdrawFee < 4000,\n            \"Early withdraw fee must be less than 40%\"\n        );\n        earlyWithdrawFee = _earlyWithdrawFee;\n    }\n\n    /// Store `_stakingPool`.\n    /// @param _stakingPool the new value to store\n    /// @dev stores the _stakingPool address in the state variable `stakingPool`\n    function setStakingPool(BitcrushStaking _stakingPool) public onlyOwner {\n        require(\n            address(stakingPool) == address(0),\n            \"staking pool address already set\"\n        );\n        stakingPool = _stakingPool;\n    }\n}\n",
  "sourceMap": "401:9373:22:-:0;;;1008:5;980:33;;1088:2;1054:36;;1395:217;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:12;921:18:0;:32::i;:::-;-1:-1:-1;;;;;1519:14:22;;;;;1543:20;;;;;1573:14;:32;;-1:-1:-1;;;;;;1573:32:22;;;;;;;;401:9373;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:143:33:-;-1:-1:-1;;;;;101:31:33;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:599::-;294:6;302;310;363:2;351:9;342:7;338:23;334:32;331:52;;;379:1;376;369:12;331:52;411:9;405:16;430:43;467:5;430:43;:::i;:::-;542:2;527:18;;521:25;492:5;;-1:-1:-1;555:45:33;521:25;555:45;:::i;:::-;671:2;656:18;;650:25;619:7;;-1:-1:-1;684:45:33;650:25;684:45;:::i;:::-;748:7;738:17;;;162:599;;;;;:::o;:::-;401:9373:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/LiveWallet.sol",
  "type": "contract"
}