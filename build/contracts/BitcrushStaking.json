{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract CRUSHToken",
          "name": "_crush",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_crushPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_reserveAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_totalPool",
          "type": "uint256"
        }
      ],
      "name": "RewardPoolUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipeint",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "StakeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_CRUSH_PER_BLOCK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accProfitPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accRewardPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addRewardToPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressIndexes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "apyBoost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "autoCompoundLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bankroll",
      "outputs": [
        {
          "internalType": "contract BitcrushBankroll",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batchStartingIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compoundAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crush",
      "outputs": [
        {
          "internalType": "contract CRUSHToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crushPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deploymentTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "divisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earlyWithdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earlyWithdrawFeeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "enterStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lwAddress",
          "type": "address"
        }
      ],
      "name": "freezeStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frozenEarlyWithdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frozenEarlyWithdrawFeeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_addressesLength",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastAutoCompoundBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRewardBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_liveWallet",
          "type": "bool"
        }
      ],
      "name": "leaveStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liveWallet",
      "outputs": [
        {
          "internalType": "contract BitcrushLiveWallet",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "pendingProfits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "pendingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFeeBurn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFeeCompounder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFeeReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "setAutoCompoundLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract BitcrushBankroll",
          "name": "_bankroll",
          "type": "address"
        }
      ],
      "name": "setBankroll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setCrushPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setEarlyWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "setEarlyWithdrawFeeTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract BitcrushLiveWallet",
          "name": "_liveWallet",
          "type": "address"
        }
      ],
      "name": "setLiveWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFeeBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFeeCompounder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFeeReserve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastBlockCompounded",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastBlockStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastFrozenWithdraw",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "apyBaseline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profitBaseline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFrozen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalProfitDistributed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalProfitsClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unfreezeStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateProfits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "12": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "16": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "17": "contracts/BankStaking.sol",
    "18": "contracts/Bankroll.sol",
    "19": "contracts/CrushToken.sol",
    "2": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "22": "contracts/LiveWallet.sol",
    "3": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "5": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "6": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/BankStaking.sol",
    "exportedSymbols": {
      "Address": [
        12694
      ],
      "BitcrushBankroll": [
        3203
      ],
      "BitcrushLiveWallet": [
        7167
      ],
      "BitcrushStaking": [
        2213
      ],
      "CRUSHToken": [
        3289
      ],
      "Context": [
        12716
      ],
      "ERC20": [
        12296
      ],
      "ERC20Burnable": [
        11708
      ],
      "IERC20": [
        12374
      ],
      "IERC20Metadata": [
        12399
      ],
      "Ownable": [
        11128
      ],
      "SafeERC20": [
        11352
      ],
      "SafeMath": [
        11664
      ]
    },
    "id": 2214,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:24:17"
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2214,
        "sourceUnit": 11129,
        "src": "130:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2214,
        "sourceUnit": 11665,
        "src": "183:57:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2214,
        "sourceUnit": 11353,
        "src": "241:65:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CrushToken.sol",
        "file": "./CrushToken.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2214,
        "sourceUnit": 3290,
        "src": "319:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Bankroll.sol",
        "file": "./Bankroll.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2214,
        "sourceUnit": 3204,
        "src": "346:24:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11128,
              "src": "430:7:17"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "430:7:17"
          }
        ],
        "canonicalName": "BitcrushStaking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2213,
        "linearizedBaseContracts": [
          2213,
          11128,
          12716
        ],
        "name": "BitcrushStaking",
        "nameLocation": "411:15:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "id": 9,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11664,
              "src": "450:8:17"
            },
            "nodeType": "UsingForDirective",
            "src": "444:27:17",
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15,
            "libraryName": {
              "id": 12,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11352,
              "src": "482:9:17"
            },
            "nodeType": "UsingForDirective",
            "src": "476:31:17",
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "CRUSHToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3289,
                "src": "496:10:17"
              },
              "referencedDeclaration": 3289,
              "src": "496:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                "typeString": "contract CRUSHToken"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "fa2b8a5d",
            "id": 18,
            "mutability": "constant",
            "name": "MAX_CRUSH_PER_BLOCK",
            "nameLocation": "536:19:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "512:66:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "512:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030303030303030303030303030303030",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "558:20:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000"
              },
              "value": "10000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "bc063e1a",
            "id": 21,
            "mutability": "constant",
            "name": "MAX_FEE",
            "nameLocation": "608:7:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "584:38:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "584:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "618:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bca5503d",
            "id": 24,
            "mutability": "mutable",
            "name": "performanceFeeCompounder",
            "nameLocation": "669:24:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "654:44:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "696:2:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e74d2e2",
            "id": 27,
            "mutability": "mutable",
            "name": "performanceFeeBurn",
            "nameLocation": "744:18:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "729:39:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "765:3:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1f2dc5ef",
            "id": 30,
            "mutability": "constant",
            "name": "divisor",
            "nameLocation": "822:7:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "798:39:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "798:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "832:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a80a7882",
            "id": 33,
            "mutability": "mutable",
            "name": "earlyWithdrawFee",
            "nameLocation": "859:16:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "844:36:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "844:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "878:2:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e0ae2f2",
            "id": 36,
            "mutability": "mutable",
            "name": "frozenEarlyWithdrawFee",
            "nameLocation": "926:22:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "911:44:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "911:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31353030",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "951:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1500_by_1",
                "typeString": "int_const 1500"
              },
              "value": "1500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a3960bc",
            "id": 39,
            "mutability": "mutable",
            "name": "performanceFeeReserve",
            "nameLocation": "1002:21:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "987:42:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "987:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313930",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1026:3:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_190_by_1",
                "typeString": "int_const 190"
              },
              "value": "190"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6874d620",
            "id": 42,
            "mutability": "mutable",
            "name": "frozenEarlyWithdrawFeeTime",
            "nameLocation": "1077:26:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1062:49:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1062:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130383030",
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1106:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10800_by_1",
                "typeString": "int_const 10800"
              },
              "value": "10800"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4b37f006",
            "id": 45,
            "mutability": "mutable",
            "name": "blockPerSecond",
            "nameLocation": "1133:14:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1118:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1118:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1150:1:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6903d0b6",
            "id": 55,
            "mutability": "mutable",
            "name": "earlyWithdrawFeeTime",
            "nameLocation": "1172:20:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1157:69:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1157:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_rational_259200_by_1",
                      "typeString": "int_const 259200"
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_4320_by_1",
                        "typeString": "int_const 4320"
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3732",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1196:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_72_by_1",
                          "typeString": "int_const 72"
                        },
                        "value": "72"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1201:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "1196:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4320_by_1",
                        "typeString": "int_const 4320"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "3630",
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1206:2:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "60"
                    },
                    "src": "1196:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_259200_by_1",
                      "typeString": "int_const 259200"
                    }
                  }
                ],
                "id": 52,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1195:14:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_259200_by_1",
                  "typeString": "int_const 259200"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "id": 53,
                "name": "blockPerSecond",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 45,
                "src": "1212:14:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1195:31:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "49535ef5",
            "id": 58,
            "mutability": "mutable",
            "name": "apyBoost",
            "nameLocation": "1247:8:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1232:30:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1232:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32353030",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1258:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2500_by_1",
                "typeString": "int_const 2500"
              },
              "value": "2500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a98ef39",
            "id": 60,
            "mutability": "mutable",
            "name": "totalShares",
            "nameLocation": "1308:11:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1293:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1293:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b359a9f9",
            "id": 63,
            "mutability": "immutable",
            "name": "crush",
            "nameLocation": "1388:5:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1360:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CRUSHToken_$3289",
              "typeString": "contract CRUSHToken"
            },
            "typeName": {
              "id": 62,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61,
                "name": "CRUSHToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3289,
                "src": "1360:10:17"
              },
              "referencedDeclaration": 3289,
              "src": "1360:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                "typeString": "contract CRUSHToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c657eb0",
            "id": 66,
            "mutability": "mutable",
            "name": "bankroll",
            "nameLocation": "1423:8:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1399:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
              "typeString": "contract BitcrushBankroll"
            },
            "typeName": {
              "id": 65,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64,
                "name": "BitcrushBankroll",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3203,
                "src": "1399:16:17"
              },
              "referencedDeclaration": 3203,
              "src": "1399:16:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                "typeString": "contract BitcrushBankroll"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e3aeeb46",
            "id": 69,
            "mutability": "mutable",
            "name": "liveWallet",
            "nameLocation": "1463:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1437:36:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
              "typeString": "contract BitcrushLiveWallet"
            },
            "typeName": {
              "id": 68,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 67,
                "name": "BitcrushLiveWallet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7167,
                "src": "1437:18:17"
              },
              "referencedDeclaration": 7167,
              "src": "1437:18:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                "typeString": "contract BitcrushLiveWallet"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f79ed94b",
            "id": 71,
            "mutability": "mutable",
            "name": "reserveAddress",
            "nameLocation": "1532:14:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1517:29:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 70,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1517:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BitcrushStaking.UserStaking",
            "id": 90,
            "members": [
              {
                "constant": false,
                "id": 73,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "1590:6:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1582:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 72,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1582:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "stakedAmount",
                "nameLocation": "1614:12:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1606:20:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 74,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1606:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "claimedAmount",
                "nameLocation": "1644:13:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1636:21:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79,
                "mutability": "mutable",
                "name": "lastBlockCompounded",
                "nameLocation": "1675:19:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1667:27:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1667:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 81,
                "mutability": "mutable",
                "name": "lastBlockStaked",
                "nameLocation": "1712:15:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1704:23:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1704:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 83,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "1745:5:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1737:13:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 82,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1737:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "lastFrozenWithdraw",
                "nameLocation": "1768:18:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1760:26:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 84,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1760:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "apyBaseline",
                "nameLocation": "1804:11:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1796:19:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1796:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "profitBaseline",
                "nameLocation": "1833:14:17",
                "nodeType": "VariableDeclaration",
                "scope": 90,
                "src": "1825:22:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 88,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1825:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserStaking",
            "nameLocation": "1560:11:17",
            "nodeType": "StructDefinition",
            "scope": 2213,
            "src": "1553:301:17",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc6e13e1",
            "id": 95,
            "mutability": "mutable",
            "name": "stakings",
            "nameLocation": "1898:8:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1859:47:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
              "typeString": "mapping(address => struct BitcrushStaking.UserStaking)"
            },
            "typeName": {
              "id": 94,
              "keyType": {
                "id": 91,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1867:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1859:31:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                "typeString": "mapping(address => struct BitcrushStaking.UserStaking)"
              },
              "valueType": {
                "id": 93,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 92,
                  "name": "UserStaking",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 90,
                  "src": "1878:11:17"
                },
                "referencedDeclaration": 90,
                "src": "1878:11:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                  "typeString": "struct BitcrushStaking.UserStaking"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5832d571",
            "id": 98,
            "mutability": "mutable",
            "name": "addressIndexes",
            "nameLocation": "1929:14:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1912:31:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 96,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1912:7:17",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 97,
              "nodeType": "ArrayTypeName",
              "src": "1912:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4bf211b8",
            "id": 100,
            "mutability": "mutable",
            "name": "lastAutoCompoundBlock",
            "nameLocation": "1965:21:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1950:36:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 99,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1950:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38ed019a",
            "id": 102,
            "mutability": "mutable",
            "name": "batchStartingIndex",
            "nameLocation": "2008:18:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "1993:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 101,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1993:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c61f1c0b",
            "id": 105,
            "mutability": "mutable",
            "name": "crushPerBlock",
            "nameLocation": "2047:13:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2032:50:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 103,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2032:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35353030303030303030303030303030303030",
              "id": 104,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2063:19:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5500000000000000000_by_1",
                "typeString": "int_const 5500000000000000000"
              },
              "value": "5500000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "939d6237",
            "id": 107,
            "mutability": "mutable",
            "name": "accRewardPerShare",
            "nameLocation": "2150:17:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2135:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 106,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2135:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9f8d181",
            "id": 109,
            "mutability": "mutable",
            "name": "lastRewardBlock",
            "nameLocation": "2188:15:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2173:30:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2173:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b249e88e",
            "id": 111,
            "mutability": "mutable",
            "name": "accProfitPerShare",
            "nameLocation": "2267:17:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2252:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 110,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2252:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecfb49a3",
            "id": 113,
            "mutability": "mutable",
            "name": "totalPool",
            "nameLocation": "2328:9:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2313:24:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 112,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2313:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "817b1cd2",
            "id": 115,
            "mutability": "mutable",
            "name": "totalStaked",
            "nameLocation": "2380:11:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2365:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2365:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d54ad2a1",
            "id": 117,
            "mutability": "mutable",
            "name": "totalClaimed",
            "nameLocation": "2412:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2397:27:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 116,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2397:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e7f87bc",
            "id": 119,
            "mutability": "mutable",
            "name": "totalFrozen",
            "nameLocation": "2473:11:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2458:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 118,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2458:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "64a9c480",
            "id": 121,
            "mutability": "mutable",
            "name": "totalProfitsClaimed",
            "nameLocation": "2505:19:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2490:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 120,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2490:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2533830a",
            "id": 123,
            "mutability": "mutable",
            "name": "totalProfitDistributed",
            "nameLocation": "2545:22:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2530:37:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 122,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2530:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb1c924",
            "id": 126,
            "mutability": "mutable",
            "name": "autoCompoundLimit",
            "nameLocation": "2617:17:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2602:37:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 124,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2602:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 125,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2637:2:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "668579c9",
            "id": 128,
            "mutability": "mutable",
            "name": "deploymentTimeStamp",
            "nameLocation": "2679:19:17",
            "nodeType": "VariableDeclaration",
            "scope": 2213,
            "src": "2664:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 127,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2664:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 132,
            "name": "RewardPoolUpdated",
            "nameLocation": "2711:17:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_totalPool",
                  "nameLocation": "2745:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2729:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2728:28:17"
            },
            "src": "2705:52:17"
          },
          {
            "anonymous": false,
            "id": 138,
            "name": "StakeUpdated",
            "nameLocation": "2768:12:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipeint",
                  "nameLocation": "2797:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2781:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2824:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2808:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2808:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:52:17"
            },
            "src": "2762:71:17"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2949:267:17",
              "statements": [
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "crush",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2959:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                        "typeString": "contract CRUSHToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_crush",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2967:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                        "typeString": "contract CRUSHToken"
                      }
                    },
                    "src": "2959:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                      "typeString": "contract CRUSHToken"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:14:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 152,
                      "name": "_crushPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "2987:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 153,
                      "name": "MAX_CRUSH_PER_BLOCK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3005:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2987:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 160,
                  "nodeType": "IfStatement",
                  "src": "2983:98:17",
                  "trueBody": {
                    "id": 159,
                    "nodeType": "Block",
                    "src": "3026:55:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 155,
                            "name": "crushPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "3040:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 156,
                            "name": "_crushPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "3056:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3040:30:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 158,
                        "nodeType": "ExpressionStatement",
                        "src": "3040:30:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 161,
                      "name": "reserveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "3090:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 162,
                      "name": "_reserveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3107:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3090:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "3090:32:17"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 165,
                      "name": "deploymentTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "3132:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 166,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3154:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3154:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3132:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "3132:37:17"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "lastRewardBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "3179:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 171,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3197:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3197:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3179:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "3179:30:17"
                }
              ]
            },
            "id": 176,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_crush",
                  "nameLocation": "2871:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2860:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                    "typeString": "contract CRUSHToken"
                  },
                  "typeName": {
                    "id": 140,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 139,
                      "name": "CRUSHToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3289,
                      "src": "2860:10:17"
                    },
                    "referencedDeclaration": 3289,
                    "src": "2860:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                      "typeString": "contract CRUSHToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_crushPerBlock",
                  "nameLocation": "2895:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2887:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_reserveAddress",
                  "nameLocation": "2927:15:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2919:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2919:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2850:98:17"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2949:0:17"
            },
            "scope": 2213,
            "src": "2839:377:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "3438:153:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 188,
                              "name": "bankroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "3477:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                "typeString": "contract BitcrushBankroll"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                "typeString": "contract BitcrushBankroll"
                              }
                            ],
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3469:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3469:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3469:17:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3498:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3490:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 190,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3490:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3490:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3469:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616e6b726f6c6c206164647265737320616c726561647920736574",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3514:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a8173d8a1973b115026084bde4c6d5b89ada6ac52f18a386ae47ae2b2c42465",
                          "typeString": "literal_string \"Bankroll address already set\""
                        },
                        "value": "Bankroll address already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a8173d8a1973b115026084bde4c6d5b89ada6ac52f18a386ae47ae2b2c42465",
                          "typeString": "literal_string \"Bankroll address already set\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3448:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3448:106:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3448:106:17"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 198,
                      "name": "bankroll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "3564:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                        "typeString": "contract BitcrushBankroll"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 199,
                      "name": "_bankroll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "3575:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                        "typeString": "contract BitcrushBankroll"
                      }
                    },
                    "src": "3564:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                      "typeString": "contract BitcrushBankroll"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3564:20:17"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "3222:145:17",
              "text": "Store `_bankroll`.\n @param _bankroll the new value to store\n @dev stores the _bankroll address in the state variable `bankroll`"
            },
            "functionSelector": "bde8a93e",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "3428:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3428:9:17"
              }
            ],
            "name": "setBankroll",
            "nameLocation": "3381:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_bankroll",
                  "nameLocation": "3410:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "3393:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                    "typeString": "contract BitcrushBankroll"
                  },
                  "typeName": {
                    "id": 179,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 178,
                      "name": "BitcrushBankroll",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3203,
                      "src": "3393:16:17"
                    },
                    "referencedDeclaration": 3203,
                    "src": "3393:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                      "typeString": "contract BitcrushBankroll"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3392:28:17"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3438:0:17"
            },
            "scope": 2213,
            "src": "3372:219:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "3827:162:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 215,
                              "name": "liveWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "3866:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                                "typeString": "contract BitcrushLiveWallet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                                "typeString": "contract BitcrushLiveWallet"
                              }
                            ],
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3858:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 213,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3858:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3858:19:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3889:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3881:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 217,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3881:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3881:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3858:33:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6976652057616c6c6574206164647265737320616c726561647920736574",
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3905:33:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_443f0db76796dba734279483c1ff725b54c75a5a9be6ed177475b33b9277e14c",
                          "typeString": "literal_string \"Live Wallet address already set\""
                        },
                        "value": "Live Wallet address already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_443f0db76796dba734279483c1ff725b54c75a5a9be6ed177475b33b9277e14c",
                          "typeString": "literal_string \"Live Wallet address already set\""
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3837:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3837:111:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "3837:111:17"
                },
                {
                  "expression": {
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 225,
                      "name": "liveWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "3958:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                        "typeString": "contract BitcrushLiveWallet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 226,
                      "name": "_liveWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "3971:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                        "typeString": "contract BitcrushLiveWallet"
                      }
                    },
                    "src": "3958:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                      "typeString": "contract BitcrushLiveWallet"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "3958:24:17"
                }
              ]
            },
            "documentation": {
              "id": 204,
              "nodeType": "StructuredDocumentation",
              "src": "3597:153:17",
              "text": "Store `_liveWallet`.\n @param _liveWallet the new value to store\n @dev stores the _liveWallet address in the state variable `liveWallet`"
            },
            "functionSelector": "9e13900c",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 210,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 209,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "3817:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3817:9:17"
              }
            ],
            "name": "setLiveWallet",
            "nameLocation": "3764:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_liveWallet",
                  "nameLocation": "3797:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "3778:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                    "typeString": "contract BitcrushLiveWallet"
                  },
                  "typeName": {
                    "id": 206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 205,
                      "name": "BitcrushLiveWallet",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7167,
                      "src": "3778:18:17"
                    },
                    "referencedDeclaration": 7167,
                    "src": "3778:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                      "typeString": "contract BitcrushLiveWallet"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3777:32:17"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3827:0:17"
            },
            "scope": 2213,
            "src": "3755:234:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "4203:295:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 239,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4250:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4250:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 237,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "4234:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                "typeString": "contract CRUSHToken"
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11807,
                            "src": "4234:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4234:27:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 242,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "4265:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4234:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420437275736820746f6b656e7320666f72207472616e73666572",
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4286:40:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dba957fe7961d53de5591eabb916530a6b1c456987a2f043f7793ac0f98c0279",
                          "typeString": "literal_string \"Insufficient Crush tokens for transfer\""
                        },
                        "value": "Insufficient Crush tokens for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dba957fe7961d53de5591eabb916530a6b1c456987a2f043f7793ac0f98c0279",
                          "typeString": "literal_string \"Insufficient Crush tokens for transfer\""
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4213:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4213:123:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "4213:123:17"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "4346:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 250,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "4372:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 248,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "4358:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "4358:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4358:22:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4346:34:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "4346:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4413:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4413:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 261,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4433:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                              "typeString": "contract BitcrushStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                              "typeString": "contract BitcrushStaking"
                            }
                          ],
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4425:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4425:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4425:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 263,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "4440:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 254,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "4390:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11185,
                      "src": "4390:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4390:58:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4390:58:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "4481:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 266,
                      "name": "RewardPoolUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "4463:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4463:28:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "4458:33:17"
                }
              ]
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "3995:154:17",
              "text": "Adds the provided amount to the totalPool\n @param _amount the amount to add\n @dev adds the provided amount to `totalPool` state variable"
            },
            "functionSelector": "3a53ed49",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addRewardToPool",
            "nameLocation": "4163:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4187:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "4179:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4179:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4178:17:17"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4203:0:17"
            },
            "scope": 2213,
            "src": "4154:344:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "4798:699:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 275,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4812:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4812:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 277,
                      "name": "lastRewardBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "4828:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4812:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 280,
                  "nodeType": "IfStatement",
                  "src": "4808:44:17",
                  "trueBody": {
                    "functionReturnParameters": 274,
                    "id": 279,
                    "nodeType": "Return",
                    "src": "4845:7:17"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 281,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "4865:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4880:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4865:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 291,
                  "nodeType": "IfStatement",
                  "src": "4861:97:17",
                  "trueBody": {
                    "id": 290,
                    "nodeType": "Block",
                    "src": "4883:75:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 284,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4897:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 285,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4915:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "4915:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4897:30:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 288,
                        "nodeType": "ExpressionStatement",
                        "src": "4897:30:17"
                      },
                      {
                        "functionReturnParameters": 274,
                        "id": 289,
                        "nodeType": "Return",
                        "src": "4941:7:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 293,
                      "mutability": "mutable",
                      "name": "rewardPerBlock",
                      "nameLocation": "4975:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4967:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4967:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "id": 294,
                    "name": "crushPerBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 105,
                    "src": "4992:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4967:38:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 296,
                      "name": "totalFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "5019:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5033:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5019:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 312,
                  "nodeType": "IfStatement",
                  "src": "5015:140:17",
                  "trueBody": {
                    "expression": {
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 299,
                        "name": "rewardPerBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "5048:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 307,
                                "name": "divisor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "5133:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 304,
                                    "name": "apyBoost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58,
                                    "src": "5119:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 302,
                                    "name": "crushPerBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 105,
                                    "src": "5101:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 303,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11558,
                                  "src": "5101:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5101:27:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11573,
                              "src": "5101:31:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5101:40:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 300,
                            "name": "rewardPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "5065:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11528,
                          "src": "5065:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5065:90:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5048:107:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 311,
                    "nodeType": "ExpressionStatement",
                    "src": "5048:107:17"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 313,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "5169:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5182:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5169:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 320,
                  "nodeType": "IfStatement",
                  "src": "5165:38:17",
                  "trueBody": {
                    "expression": {
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 316,
                        "name": "rewardPerBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "5185:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5202:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5185:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 319,
                    "nodeType": "ExpressionStatement",
                    "src": "5185:18:17"
                  }
                },
                {
                  "assignments": [
                    322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 322,
                      "mutability": "mutable",
                      "name": "blocksSinceCalc",
                      "nameLocation": "5221:15:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "5213:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 321,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5213:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 328,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 326,
                        "name": "lastRewardBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "5256:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 323,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5239:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "5239:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "5239:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5239:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5213:59:17"
                },
                {
                  "assignments": [
                    330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 330,
                      "mutability": "mutable",
                      "name": "rewardCalc",
                      "nameLocation": "5290:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "5282:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 329,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5282:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 339,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "5366:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5343:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 333,
                                "name": "rewardPerBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 293,
                                "src": "5323:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 331,
                                "name": "blocksSinceCalc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 322,
                                "src": "5303:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11558,
                              "src": "5303:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5303:35:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11558,
                          "src": "5303:39:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5303:45:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11573,
                      "src": "5303:49:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5303:84:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5282:105:17"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 342,
                      "name": "accRewardPerShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "5397:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 345,
                          "name": "rewardCalc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "5439:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 343,
                          "name": "accRewardPerShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "5417:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "5417:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5417:33:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5397:53:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "5397:53:17"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 349,
                      "name": "lastRewardBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "5460:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 350,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5478:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "5478:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5460:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "5460:30:17"
                }
              ]
            },
            "documentation": {
              "id": 272,
              "nodeType": "StructuredDocumentation",
              "src": "4504:252:17",
              "text": "@notice updates accRewardPerShare based on the last block calculated and totalShares\n @dev accRewardPerShare is accumulative, meaning it always holds the total historic\n rewardPerShare making apyBaseline necessary to keep rewards fair"
            },
            "functionSelector": "aa8badc1",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateDistribution",
            "nameLocation": "4770:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4788:2:17"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4798:0:17"
            },
            "scope": 2213,
            "src": "4761:736:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "5723:366:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 359,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "5737:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5752:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5737:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 363,
                  "nodeType": "IfStatement",
                  "src": "5733:29:17",
                  "trueBody": {
                    "functionReturnParameters": 358,
                    "id": 362,
                    "nodeType": "Return",
                    "src": "5755:7:17"
                  }
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "requestedProfits",
                      "nameLocation": "5779:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "5771:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5771:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 366,
                        "name": "bankroll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5798:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                          "typeString": "contract BitcrushBankroll"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferProfit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3086,
                      "src": "5798:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5798:25:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5771:52:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 370,
                      "name": "requestedProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "5837:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5857:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5837:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 374,
                  "nodeType": "IfStatement",
                  "src": "5833:34:17",
                  "trueBody": {
                    "functionReturnParameters": 358,
                    "id": 373,
                    "nodeType": "Return",
                    "src": "5860:7:17"
                  }
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 375,
                      "name": "totalProfitDistributed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "5876:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 378,
                          "name": "requestedProfits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "5928:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 376,
                          "name": "totalProfitDistributed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "5901:22:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "5901:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5901:44:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5876:69:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "5876:69:17"
                },
                {
                  "assignments": [
                    383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 383,
                      "mutability": "mutable",
                      "name": "profitCalc",
                      "nameLocation": "5963:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "5955:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 382,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5955:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 389,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "6007:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5997:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "id": 384,
                            "name": "requestedProfits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "5976:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11558,
                          "src": "5976:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5976:26:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11573,
                      "src": "5976:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5976:43:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5955:64:17"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 392,
                      "name": "accProfitPerShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "6029:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 395,
                          "name": "profitCalc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 383,
                          "src": "6071:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 393,
                          "name": "accProfitPerShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "6049:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "6049:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6049:33:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6029:53:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "6029:53:17"
                }
              ]
            },
            "documentation": {
              "id": 356,
              "nodeType": "StructuredDocumentation",
              "src": "5503:183:17",
              "text": "@notice updates accProfitPerShare based on current Profit available and totalShares\n @dev this allows for consistent profit reporting and no change on profits to distribute"
            },
            "functionSelector": "51496bbd",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProfits",
            "nameLocation": "5700:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5713:2:17"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5723:0:17"
            },
            "scope": 2213,
            "src": "5691:398:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "6155:236:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 408,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "6173:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6184:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6173:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727573682070657220426c6f636b2063616e206e6f74206265206e65676174697665",
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6187:37:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b94e3f2460bc538d41f2b76f2dd99b96d67526c8ff902160c0d7f0d26eb93a9b",
                          "typeString": "literal_string \"Crush per Block can not be negative\""
                        },
                        "value": "Crush per Block can not be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b94e3f2460bc538d41f2b76f2dd99b96d67526c8ff902160c0d7f0d26eb93a9b",
                          "typeString": "literal_string \"Crush per Block can not be negative\""
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6165:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6165:60:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "6165:60:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 415,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "6256:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 416,
                          "name": "MAX_CRUSH_PER_BLOCK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "6267:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6256:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727573682050657220426c6f636b2063616e206e6f74206265206d6f7265207468616e203130",
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6300:41:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a24545bd00480f82ed4348616350c1b4aef87020a24f6890e4f1050bbe84251",
                          "typeString": "literal_string \"Crush Per Block can not be more than 10\""
                        },
                        "value": "Crush Per Block can not be more than 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a24545bd00480f82ed4348616350c1b4aef87020a24f6890e4f1050bbe84251",
                          "typeString": "literal_string \"Crush Per Block can not be more than 10\""
                        }
                      ],
                      "id": 414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6235:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6235:116:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "6235:116:17"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 421,
                      "name": "crushPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "6361:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 422,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "6377:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6361:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "6361:23:17"
                }
              ]
            },
            "functionSelector": "a775573a",
            "id": 426,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 404,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "6145:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "6145:9:17"
              }
            ],
            "name": "setCrushPerBlock",
            "nameLocation": "6104:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6129:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "6121:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6121:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6120:17:17"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6155:0:17"
            },
            "scope": 2213,
            "src": "6095:296:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 707,
              "nodeType": "Block",
              "src": "6560:2133:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 435,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6607:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6607:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 433,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "6591:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                "typeString": "contract CRUSHToken"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11807,
                            "src": "6591:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6591:27:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 438,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "6622:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6591:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420437275736820746f6b656e7320666f72207472616e73666572",
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6643:40:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dba957fe7961d53de5591eabb916530a6b1c456987a2f043f7793ac0f98c0279",
                          "typeString": "literal_string \"Insufficient Crush tokens for transfer\""
                        },
                        "value": "Insufficient Crush tokens for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dba957fe7961d53de5591eabb916530a6b1c456987a2f043f7793ac0f98c0279",
                          "typeString": "literal_string \"Insufficient Crush tokens for transfer\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6570:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6570:123:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "6570:123:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 444,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "6711:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6721:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6711:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b696e6720616d6f756e74",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6724:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9c0d5dd5e8a872974c962153c7432ff09de4bfca383982e4c351f8032354b74",
                          "typeString": "literal_string \"Invalid staking amount\""
                        },
                        "value": "Invalid staking amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9c0d5dd5e8a872974c962153c7432ff09de4bfca383982e4c351f8032354b74",
                          "typeString": "literal_string \"Invalid staking amount\""
                        }
                      ],
                      "id": 443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6703:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6703:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "6703:46:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 450,
                      "name": "updateDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "6760:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6760:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "6760:20:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 453,
                      "name": "updateProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "6790:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6790:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "6790:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 459,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6838:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6838:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 463,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6858:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                              "typeString": "contract BitcrushStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BitcrushStaking_$2213",
                              "typeString": "contract BitcrushStaking"
                            }
                          ],
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6850:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6850:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6850:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 465,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "6865:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 456,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "6815:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11185,
                      "src": "6815:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6815:58:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "6815:58:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 468,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "6887:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6902:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6887:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 477,
                  "nodeType": "IfStatement",
                  "src": "6883:83:17",
                  "trueBody": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "6905:61:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 471,
                            "name": "lastAutoCompoundBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "6919:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 472,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6943:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "6943:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6919:36:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "6919:36:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 480,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "6995:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "6975:24:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                        "typeString": "struct BitcrushStaking.UserStaking"
                      },
                      "typeName": {
                        "id": 479,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 478,
                          "name": "UserStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 90,
                          "src": "6975:11:17"
                        },
                        "referencedDeclaration": 90,
                        "src": "6975:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 485,
                  "initialValue": {
                    "baseExpression": {
                      "id": 481,
                      "name": "stakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "7002:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                        "typeString": "mapping(address => struct BitcrushStaking.UserStaking storage ref)"
                      }
                    },
                    "id": 484,
                    "indexExpression": {
                      "expression": {
                        "id": 482,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7011:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7011:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7002:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStaking_$90_storage",
                      "typeString": "struct BitcrushStaking.UserStaking storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6975:47:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 486,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "7037:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "7037:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7058:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7037:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 603,
                    "nodeType": "Block",
                    "src": "7228:778:17",
                    "statements": [
                      {
                        "assignments": [
                          515
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 515,
                            "mutability": "mutable",
                            "name": "pending",
                            "nameLocation": "7250:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 603,
                            "src": "7242:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 514,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7242:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 528,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 525,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "7326:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 526,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "apyBaseline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87,
                              "src": "7326:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7299:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 519,
                                      "name": "accRewardPerShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "7276:17:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 516,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "7260:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 517,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "shares",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 73,
                                      "src": "7260:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 518,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11558,
                                    "src": "7260:15:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 520,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7260:34:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11573,
                                "src": "7260:38:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7260:44:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11543,
                            "src": "7260:48:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7260:96:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7242:114:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 529,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 515,
                            "src": "7374:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 530,
                            "name": "totalPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "7384:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7374:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 536,
                        "nodeType": "IfStatement",
                        "src": "7370:44:17",
                        "trueBody": {
                          "expression": {
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 532,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "7395:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 533,
                              "name": "totalPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "7405:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7395:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 535,
                          "nodeType": "ExpressionStatement",
                          "src": "7395:19:17"
                        }
                      },
                      {
                        "expression": {
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 537,
                            "name": "totalPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "7428:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 540,
                                "name": "pending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 515,
                                "src": "7454:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 538,
                                "name": "totalPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "7440:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "7440:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7440:22:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7428:34:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 543,
                        "nodeType": "ExpressionStatement",
                        "src": "7428:34:17"
                      },
                      {
                        "assignments": [
                          545
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 545,
                            "mutability": "mutable",
                            "name": "profitPending",
                            "nameLocation": "7484:13:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 603,
                            "src": "7476:21:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 544,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7476:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 558,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 555,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "7617:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 556,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "profitBaseline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 89,
                              "src": "7617:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 552,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7590:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 549,
                                      "name": "accProfitPerShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 111,
                                      "src": "7550:17:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 546,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "7500:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 547,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "shares",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 73,
                                      "src": "7500:28:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 548,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11558,
                                    "src": "7500:49:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7500:68:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11573,
                                "src": "7500:89:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7500:95:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11543,
                            "src": "7500:116:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7500:137:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7476:161:17"
                      },
                      {
                        "expression": {
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 559,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 515,
                            "src": "7651:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 562,
                                "name": "profitPending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 545,
                                "src": "7673:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 560,
                                "name": "pending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 515,
                                "src": "7661:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "7661:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7661:26:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7651:36:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "7651:36:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 566,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 515,
                            "src": "7705:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7715:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7705:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 602,
                        "nodeType": "IfStatement",
                        "src": "7701:295:17",
                        "trueBody": {
                          "id": 601,
                          "nodeType": "Block",
                          "src": "7718:278:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 572,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7755:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7755:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 574,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 515,
                                    "src": "7767:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 569,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63,
                                    "src": "7736:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                      "typeString": "contract CRUSHToken"
                                    }
                                  },
                                  "id": 571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11159,
                                  "src": "7736:18:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7736:39:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 576,
                              "nodeType": "ExpressionStatement",
                              "src": "7736:39:17"
                            },
                            {
                              "expression": {
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 577,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "7793:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                      "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                    }
                                  },
                                  "id": 579,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "claimedAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 77,
                                  "src": "7793:18:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 583,
                                      "name": "pending",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 515,
                                      "src": "7837:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 580,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "7814:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 581,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "claimedAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 77,
                                      "src": "7814:18:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "7814:22:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7814:31:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7793:52:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 586,
                              "nodeType": "ExpressionStatement",
                              "src": "7793:52:17"
                            },
                            {
                              "expression": {
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 587,
                                  "name": "totalClaimed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "7863:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 590,
                                      "name": "pending",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 515,
                                      "src": "7895:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 588,
                                      "name": "totalClaimed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 117,
                                      "src": "7878:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 589,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "7878:16:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7878:25:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7863:40:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 593,
                              "nodeType": "ExpressionStatement",
                              "src": "7863:40:17"
                            },
                            {
                              "expression": {
                                "id": 599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 594,
                                  "name": "totalProfitsClaimed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "7921:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 597,
                                      "name": "profitPending",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 545,
                                      "src": "7967:13:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 595,
                                      "name": "totalProfitsClaimed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 121,
                                      "src": "7943:19:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "7943:23:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7943:38:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7921:60:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 600,
                              "nodeType": "ExpressionStatement",
                              "src": "7921:60:17"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 604,
                  "nodeType": "IfStatement",
                  "src": "7033:973:17",
                  "trueBody": {
                    "id": 513,
                    "nodeType": "Block",
                    "src": "7061:161:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 490,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "7075:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastBlockCompounded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79,
                            "src": "7075:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 493,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7102:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "7102:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7075:39:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "7075:39:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 500,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7148:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7148:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 497,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "7128:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7128:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7128:31:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "7128:31:17"
                      },
                      {
                        "expression": {
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 504,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "7173:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "7173:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 507,
                                "name": "addressIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "7186:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7186:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7210:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7186:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7173:38:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 512,
                        "nodeType": "ExpressionStatement",
                        "src": "7173:38:17"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    606
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 606,
                      "mutability": "mutable",
                      "name": "currentShares",
                      "nameLocation": "8024:13:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "8016:21:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 605,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8016:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8040:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8016:25:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 609,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "8055:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8070:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8055:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 622,
                        "name": "currentShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "8157:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 623,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "8173:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8157:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 625,
                    "nodeType": "ExpressionStatement",
                    "src": "8157:23:17"
                  },
                  "id": 626,
                  "nodeType": "IfStatement",
                  "src": "8051:129:17",
                  "trueBody": {
                    "expression": {
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 612,
                        "name": "currentShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "8085:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 618,
                            "name": "totalStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "8130:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 615,
                                "name": "totalShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "8113:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 613,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 429,
                                "src": "8101:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11558,
                              "src": "8101:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8101:24:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11573,
                          "src": "8101:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8101:41:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8085:57:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 621,
                    "nodeType": "ExpressionStatement",
                    "src": "8085:57:17"
                  }
                },
                {
                  "expression": {
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 627,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "8191:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 630,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "8221:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 628,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "8205:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "8205:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8205:24:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8191:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "8191:38:17"
                },
                {
                  "expression": {
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 634,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "8239:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 637,
                          "name": "currentShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "8269:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 635,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "8253:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "8253:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8253:30:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8239:44:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "8239:44:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 641,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "8297:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "8297:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8312:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8297:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 653,
                  "nodeType": "IfStatement",
                  "src": "8293:86:17",
                  "trueBody": {
                    "id": 652,
                    "nodeType": "Block",
                    "src": "8315:64:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 645,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "8329:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastBlockCompounded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79,
                            "src": "8329:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 648,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8356:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "8356:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8329:39:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 651,
                        "nodeType": "ExpressionStatement",
                        "src": "8329:39:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 654,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "8388:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "8388:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 660,
                          "name": "currentShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "8418:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 657,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "8402:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                              "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                            }
                          },
                          "id": 658,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "shares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73,
                          "src": "8402:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "8402:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8402:30:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8388:44:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "8388:44:17"
                },
                {
                  "expression": {
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 664,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "8442:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "profitBaseline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "8442:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653132",
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8503:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 669,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "8486:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 670,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "8486:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 667,
                              "name": "accProfitPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "8464:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11558,
                            "src": "8464:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8464:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11573,
                        "src": "8464:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8464:44:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8442:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "8442:66:17"
                },
                {
                  "expression": {
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 677,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "8518:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "apyBaseline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "8518:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653132",
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8576:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 682,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "8559:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "8559:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 680,
                              "name": "accRewardPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "8537:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11558,
                            "src": "8537:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8537:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11573,
                        "src": "8537:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8537:44:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8518:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "8518:63:17"
                },
                {
                  "expression": {
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 690,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "8591:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "8591:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 696,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "8633:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 693,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "8611:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                              "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "8611:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "8611:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8611:30:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8591:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "8591:50:17"
                },
                {
                  "expression": {
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 700,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "8651:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 81,
                      "src": "8651:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 703,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8674:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "8674:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8651:35:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "8651:35:17"
                }
              ]
            },
            "documentation": {
              "id": 427,
              "nodeType": "StructuredDocumentation",
              "src": "6397:112:17",
              "text": "Stake the provided amount\n @param _amount the amount to stake\n @dev stakes the provided amount"
            },
            "functionSelector": "41441d3b",
            "id": 708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterStaking",
            "nameLocation": "6523:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6544:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "6536:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6536:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6535:17:17"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6560:0:17"
            },
            "scope": 2213,
            "src": "6514:2179:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "9075:3700:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 716,
                      "name": "updateDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "9085:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9085:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "9085:20:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 719,
                      "name": "updateProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "9115:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9115:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "9115:15:17"
                },
                {
                  "assignments": [
                    724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "9160:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1140,
                      "src": "9140:24:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                        "typeString": "struct BitcrushStaking.UserStaking"
                      },
                      "typeName": {
                        "id": 723,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 722,
                          "name": "UserStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 90,
                          "src": "9140:11:17"
                        },
                        "referencedDeclaration": 90,
                        "src": "9140:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 729,
                  "initialValue": {
                    "baseExpression": {
                      "id": 725,
                      "name": "stakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "9167:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                        "typeString": "mapping(address => struct BitcrushStaking.UserStaking storage ref)"
                      }
                    },
                    "id": 728,
                    "indexExpression": {
                      "expression": {
                        "id": 726,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9176:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9176:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9167:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStaking_$90_storage",
                      "typeString": "struct BitcrushStaking.UserStaking storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9140:47:17"
                },
                {
                  "assignments": [
                    731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 731,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "9205:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1140,
                      "src": "9197:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9197:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 744,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 741,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "9276:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "apyBaseline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87,
                        "src": "9276:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9253:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 735,
                                "name": "accRewardPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "9230:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 732,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 724,
                                  "src": "9214:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                    "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                  }
                                },
                                "id": 733,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "shares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73,
                                "src": "9214:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11558,
                              "src": "9214:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9214:34:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11573,
                          "src": "9214:38:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9214:44:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "9214:48:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9214:88:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9197:105:17"
                },
                {
                  "assignments": [
                    746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 746,
                      "mutability": "mutable",
                      "name": "profitShare",
                      "nameLocation": "9320:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1140,
                      "src": "9312:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9312:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 759,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 756,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "9396:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                          }
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "profitBaseline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89,
                        "src": "9396:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9373:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 750,
                                "name": "accProfitPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "9350:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 747,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 724,
                                  "src": "9334:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                    "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "shares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73,
                                "src": "9334:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11558,
                              "src": "9334:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9334:34:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11573,
                          "src": "9334:38:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9334:44:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "9334:48:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9334:91:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9312:113:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 760,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "9439:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 761,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "9448:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9439:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 767,
                  "nodeType": "IfStatement",
                  "src": "9435:42:17",
                  "trueBody": {
                    "expression": {
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 763,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "9459:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 764,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "9468:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9459:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 766,
                    "nodeType": "ExpressionStatement",
                    "src": "9459:18:17"
                  }
                },
                {
                  "expression": {
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 768,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "9487:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 771,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "9513:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 769,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "9499:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "9499:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9499:21:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9487:33:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "9487:33:17"
                },
                {
                  "expression": {
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 775,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "9530:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 778,
                          "name": "profitShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "9550:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 776,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "9539:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "9539:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9539:23:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9530:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "9530:32:17"
                },
                {
                  "expression": {
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 782,
                      "name": "totalProfitsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "9572:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 785,
                          "name": "profitShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "9618:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 783,
                          "name": "totalProfitsClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "9594:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "9594:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9594:36:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9572:58:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "9572:58:17"
                },
                {
                  "expression": {
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 789,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "9640:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79,
                      "src": "9640:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 792,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9667:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "9667:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9640:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "9640:39:17"
                },
                {
                  "assignments": [
                    797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 797,
                      "mutability": "mutable",
                      "name": "availableStaked",
                      "nameLocation": "9698:15:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1140,
                      "src": "9690:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 796,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9690:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 800,
                  "initialValue": {
                    "expression": {
                      "id": 798,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "9716:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                        "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakedAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 75,
                    "src": "9716:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9690:43:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 801,
                      "name": "totalFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "9747:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9761:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9747:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 826,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "10072:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastFrozenWithdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85,
                        "src": "10072:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10098:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10072:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 837,
                    "nodeType": "IfStatement",
                    "src": "10068:85:17",
                    "trueBody": {
                      "id": 836,
                      "nodeType": "Block",
                      "src": "10101:52:17",
                      "statements": [
                        {
                          "expression": {
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 830,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "10115:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 832,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "lastFrozenWithdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 85,
                              "src": "10115:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10141:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10115:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 835,
                          "nodeType": "ExpressionStatement",
                          "src": "10115:27:17"
                        }
                      ]
                    }
                  },
                  "id": 838,
                  "nodeType": "IfStatement",
                  "src": "9743:410:17",
                  "trueBody": {
                    "id": 825,
                    "nodeType": "Block",
                    "src": "9764:298:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 804,
                            "name": "availableStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "9778:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 813,
                                    "name": "totalStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 115,
                                    "src": "9872:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 809,
                                          "name": "user",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 724,
                                          "src": "9849:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                          }
                                        },
                                        "id": 810,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "stakedAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 75,
                                        "src": "9849:17:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 807,
                                        "name": "totalFrozen",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 119,
                                        "src": "9833:11:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "9833:15:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 811,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9833:34:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "9833:38:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9833:51:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 805,
                                "name": "availableStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 797,
                                "src": "9796:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "9796:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9796:102:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9778:120:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 817,
                        "nodeType": "ExpressionStatement",
                        "src": "9778:120:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 819,
                                "name": "availableStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 797,
                                "src": "9937:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 820,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 711,
                                "src": "9956:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9937:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46726f7a656e2046756e64733a2043616e2774207769746864726177206d6f7265207468616e20417661696c61626c652066756e6473",
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9981:56:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c87840e334f486966e244c99c06d21fe0a92731fdc958a2b9e4a0514267a67f",
                                "typeString": "literal_string \"Frozen Funds: Can't withdraw more than Available funds\""
                              },
                              "value": "Frozen Funds: Can't withdraw more than Available funds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5c87840e334f486966e244c99c06d21fe0a92731fdc958a2b9e4a0514267a67f",
                                "typeString": "literal_string \"Frozen Funds: Can't withdraw more than Available funds\""
                              }
                            ],
                            "id": 818,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9912:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9912:139:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 824,
                        "nodeType": "ExpressionStatement",
                        "src": "9912:139:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 840,
                          "name": "availableStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 797,
                          "src": "10183:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 841,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "10202:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10183:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e742063616e206e6f742062652067726561746572207468616e20617661696c61626c65207374616b656420616d6f756e74",
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10223:65:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ecd69912cbf30f5872f0f3f4341c469d0fbac8bc1d318afb066794134a22ff4",
                          "typeString": "literal_string \"Withdraw amount can not be greater than available staked amount\""
                        },
                        "value": "Withdraw amount can not be greater than available staked amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ecd69912cbf30f5872f0f3f4341c469d0fbac8bc1d318afb066794134a22ff4",
                          "typeString": "literal_string \"Withdraw amount can not be greater than available staked amount\""
                        }
                      ],
                      "id": 839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10162:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10162:136:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "10162:136:17"
                },
                {
                  "expression": {
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 846,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "10308:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 849,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "10338:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 847,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "10322:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "10322:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10322:24:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10308:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "10308:38:17"
                },
                {
                  "assignments": [
                    854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 854,
                      "mutability": "mutable",
                      "name": "shareReduction",
                      "nameLocation": "10365:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1140,
                      "src": "10357:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 853,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10357:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 864,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 861,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "10424:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                          }
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75,
                        "src": "10424:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 857,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "10394:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73,
                            "src": "10394:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 855,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 711,
                            "src": "10382:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11558,
                          "src": "10382:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10382:24:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11573,
                      "src": "10382:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10382:69:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10357:94:17"
                },
                {
                  "expression": {
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 865,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "10461:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "10461:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 871,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "10503:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 868,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "10481:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                              "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "10481:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "10481:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10481:30:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10461:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "10461:50:17"
                },
                {
                  "expression": {
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 875,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "10521:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 877,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "10521:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 881,
                          "name": "shareReduction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "10551:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 878,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "10535:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                              "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                            }
                          },
                          "id": 879,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "shares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73,
                          "src": "10535:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "10535:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10535:31:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10521:45:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "10521:45:17"
                },
                {
                  "expression": {
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 885,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "10576:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 888,
                          "name": "shareReduction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "10606:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 886,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "10590:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "10590:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10590:31:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10576:45:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "10576:45:17"
                },
                {
                  "expression": {
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 892,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "10631:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "apyBaseline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "10631:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653132",
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10689:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 898,
                              "name": "accRewardPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "10666:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 895,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "10650:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "10650:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11558,
                            "src": "10650:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10650:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11573,
                        "src": "10650:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10650:44:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10631:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "10631:63:17"
                },
                {
                  "expression": {
                    "id": 916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 905,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "10704:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "profitBaseline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "10704:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653132",
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10765:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 911,
                              "name": "accProfitPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "10742:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 908,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "10726:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 909,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "10726:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11558,
                            "src": "10726:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10726:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11573,
                        "src": "10726:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10726:44:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10704:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 917,
                  "nodeType": "ExpressionStatement",
                  "src": "10704:66:17"
                },
                {
                  "expression": {
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 918,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 711,
                      "src": "10780:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 921,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "10802:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 919,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "10790:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "10790:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10790:19:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10780:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "10780:29:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 925,
                      "name": "totalFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "10823:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10837:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10823:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1009,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11707:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "11707:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1014,
                            "name": "earlyWithdrawFeeTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "11747:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 1011,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "11722:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lastBlockStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81,
                            "src": "11722:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11528,
                          "src": "11722:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11722:46:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11707:61:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1042,
                    "nodeType": "IfStatement",
                    "src": "11690:317:17",
                    "trueBody": {
                      "id": 1041,
                      "nodeType": "Block",
                      "src": "11779:228:17",
                      "statements": [
                        {
                          "assignments": [
                            1018
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1018,
                              "mutability": "mutable",
                              "name": "withdrawalFee",
                              "nameLocation": "11825:13:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 1041,
                              "src": "11817:21:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1017,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11817:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1026,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 1024,
                                "name": "divisor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "11875:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1021,
                                    "name": "earlyWithdrawFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33,
                                    "src": "11853:16:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1019,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 711,
                                    "src": "11841:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11558,
                                  "src": "11841:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11841:29:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11573,
                              "src": "11841:33:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11841:42:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11817:66:17"
                        },
                        {
                          "expression": {
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1027,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "11897:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1030,
                                  "name": "withdrawalFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1018,
                                  "src": "11919:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1028,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "11907:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11543,
                                "src": "11907:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11907:26:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11897:36:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1033,
                          "nodeType": "ExpressionStatement",
                          "src": "11897:36:17"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1037,
                                "name": "reserveAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "11966:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1038,
                                "name": "withdrawalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1018,
                                "src": "11982:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1034,
                                "name": "crush",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "11947:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                  "typeString": "contract CRUSHToken"
                                }
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeTransfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11159,
                              "src": "11947:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                "typeString": "function (contract IERC20,address,uint256)"
                              }
                            },
                            "id": 1039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11947:49:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1040,
                          "nodeType": "ExpressionStatement",
                          "src": "11947:49:17"
                        }
                      ]
                    }
                  },
                  "id": 1043,
                  "nodeType": "IfStatement",
                  "src": "10819:1188:17",
                  "trueBody": {
                    "id": 1008,
                    "nodeType": "Block",
                    "src": "10840:844:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 928,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "10858:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lastFrozenWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85,
                            "src": "10858:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10884:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10858:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 944,
                        "nodeType": "IfStatement",
                        "src": "10854:268:17",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 933,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10932:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10932:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 938,
                                      "name": "frozenEarlyWithdrawFeeTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42,
                                      "src": "11002:26:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 935,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 724,
                                        "src": "10974:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 936,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lastFrozenWithdraw",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 85,
                                      "src": "10974:23:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 937,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "10974:27:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10974:55:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10932:97:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4f6e6c79204f6e6520576974686472617720616c6c6f77656420706572203320686f75727320647572696e6720667265657a65",
                                "id": 941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11051:53:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d4c524e52190e528f441990393d4688894fe386de412d0b8ceeb98ae80fa76dc",
                                  "typeString": "literal_string \"Only One Withdraw allowed per 3 hours during freeze\""
                                },
                                "value": "Only One Withdraw allowed per 3 hours during freeze"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d4c524e52190e528f441990393d4688894fe386de412d0b8ceeb98ae80fa76dc",
                                  "typeString": "literal_string \"Only One Withdraw allowed per 3 hours during freeze\""
                                }
                              ],
                              "id": 932,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "10903:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10903:219:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 943,
                          "nodeType": "ExpressionStatement",
                          "src": "10903:219:17"
                        }
                      },
                      {
                        "assignments": [
                          946
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 946,
                            "mutability": "mutable",
                            "name": "withdrawalFee",
                            "nameLocation": "11145:13:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1008,
                            "src": "11137:21:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 945,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11137:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 954,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 952,
                              "name": "divisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "11218:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 949,
                                  "name": "frozenEarlyWithdrawFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "11173:22:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 947,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "11161:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "11161:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11161:35:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "11161:39:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11161:78:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11137:102:17"
                      },
                      {
                        "expression": {
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 955,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "11253:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 957,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastFrozenWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85,
                            "src": "11253:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 958,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11279:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11279:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11253:41:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 961,
                        "nodeType": "ExpressionStatement",
                        "src": "11253:41:17"
                      },
                      {
                        "expression": {
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 962,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 711,
                            "src": "11308:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 965,
                                "name": "withdrawalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "11330:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 963,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 711,
                                "src": "11318:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "11318:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11318:26:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11308:36:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 968,
                        "nodeType": "ExpressionStatement",
                        "src": "11308:36:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 969,
                            "name": "withdrawalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "11363:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 970,
                            "name": "totalFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "11379:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11363:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 994,
                              "name": "totalFrozen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "11575:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 997,
                                  "name": "withdrawalFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "11605:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 995,
                                  "name": "totalFrozen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 119,
                                  "src": "11589:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11543,
                                "src": "11589:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11589:30:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11575:44:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1000,
                          "nodeType": "ExpressionStatement",
                          "src": "11575:44:17"
                        },
                        "id": 1001,
                        "nodeType": "IfStatement",
                        "src": "11359:260:17",
                        "trueBody": {
                          "id": 993,
                          "nodeType": "Block",
                          "src": "11392:177:17",
                          "statements": [
                            {
                              "assignments": [
                                973
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 973,
                                  "mutability": "mutable",
                                  "name": "remainder",
                                  "nameLocation": "11418:9:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 993,
                                  "src": "11410:17:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 972,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11410:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 978,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 976,
                                    "name": "totalFrozen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 119,
                                    "src": "11448:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 974,
                                    "name": "withdrawalFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 946,
                                    "src": "11430:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 975,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11543,
                                  "src": "11430:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 977,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11430:30:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11410:50:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 984,
                                        "name": "bankroll",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66,
                                        "src": "11500:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                          "typeString": "contract BitcrushBankroll"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                          "typeString": "contract BitcrushBankroll"
                                        }
                                      ],
                                      "id": 983,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11492:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 982,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11492:7:17",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 985,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11492:17:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 986,
                                    "name": "remainder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 973,
                                    "src": "11511:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 979,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63,
                                    "src": "11478:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                      "typeString": "contract CRUSHToken"
                                    }
                                  },
                                  "id": 981,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11875,
                                  "src": "11478:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11478:43:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 988,
                              "nodeType": "ExpressionStatement",
                              "src": "11478:43:17"
                            },
                            {
                              "expression": {
                                "id": 991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 989,
                                  "name": "totalFrozen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 119,
                                  "src": "11539:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11553:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11539:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 992,
                              "nodeType": "ExpressionStatement",
                              "src": "11539:15:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1005,
                              "name": "withdrawalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "11659:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1002,
                              "name": "bankroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "11634:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                "typeString": "contract BitcrushBankroll"
                              }
                            },
                            "id": 1004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recoverBankroll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2700,
                            "src": "11634:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11634:39:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1007,
                        "nodeType": "ExpressionStatement",
                        "src": "11634:39:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1044,
                      "name": "_liveWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "12021:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 1045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12036:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12021:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1073,
                    "nodeType": "Block",
                    "src": "12097:131:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1060,
                                  "name": "liveWallet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69,
                                  "src": "12133:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                                    "typeString": "contract BitcrushLiveWallet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                                    "typeString": "contract BitcrushLiveWallet"
                                  }
                                ],
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12125:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1058,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12125:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12125:19:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1062,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "12146:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1055,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "12111:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                "typeString": "contract CRUSHToken"
                              }
                            },
                            "id": 1057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11875,
                            "src": "12111:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12111:43:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1064,
                        "nodeType": "ExpressionStatement",
                        "src": "12111:43:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1068,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "12197:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1069,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12206:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12206:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1065,
                              "name": "liveWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "12168:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                                "typeString": "contract BitcrushLiveWallet"
                              }
                            },
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addbetWithAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6631,
                            "src": "12168:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12168:49:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1072,
                        "nodeType": "ExpressionStatement",
                        "src": "12168:49:17"
                      }
                    ]
                  },
                  "id": 1074,
                  "nodeType": "IfStatement",
                  "src": "12017:211:17",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1050,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12062:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12062:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1052,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "12074:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1047,
                          "name": "crush",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "12043:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                            "typeString": "contract CRUSHToken"
                          }
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11159,
                        "src": "12043:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12043:39:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1054,
                    "nodeType": "ExpressionStatement",
                    "src": "12043:39:17"
                  }
                },
                {
                  "expression": {
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1075,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "12237:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "12237:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1081,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "12281:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1078,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "12258:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                              "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                            }
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 77,
                          "src": "12258:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "12258:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12258:30:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12237:51:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "12237:51:17"
                },
                {
                  "expression": {
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1085,
                      "name": "totalClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "12298:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1088,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "12330:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1086,
                          "name": "totalClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "12313:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "12313:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12313:24:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12298:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "12298:39:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1092,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "12387:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 1093,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "12387:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12408:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12387:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1135,
                  "nodeType": "IfStatement",
                  "src": "12383:343:17",
                  "trueBody": {
                    "id": 1134,
                    "nodeType": "Block",
                    "src": "12411:315:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1096,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "12429:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 1097,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "12429:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1098,
                                "name": "addressIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "12443:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12443:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12467:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12443:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12429:39:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1128,
                        "nodeType": "IfStatement",
                        "src": "12425:257:17",
                        "trueBody": {
                          "id": 1127,
                          "nodeType": "Block",
                          "src": "12470:212:17",
                          "statements": [
                            {
                              "assignments": [
                                1104
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1104,
                                  "mutability": "mutable",
                                  "name": "lastAddress",
                                  "nameLocation": "12496:11:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1127,
                                  "src": "12488:19:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1103,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12488:7:17",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1111,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1105,
                                  "name": "addressIndexes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98,
                                  "src": "12510:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1110,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1106,
                                      "name": "addressIndexes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98,
                                      "src": "12525:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1107,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "12525:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12549:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "12525:25:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12510:41:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12488:63:17"
                            },
                            {
                              "expression": {
                                "id": 1117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1112,
                                    "name": "addressIndexes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "12569:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1115,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1113,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 724,
                                      "src": "12584:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                        "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                      }
                                    },
                                    "id": 1114,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "index",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83,
                                    "src": "12584:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12569:26:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1116,
                                  "name": "lastAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1104,
                                  "src": "12598:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "12569:40:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1118,
                              "nodeType": "ExpressionStatement",
                              "src": "12569:40:17"
                            },
                            {
                              "expression": {
                                "id": 1125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1119,
                                      "name": "stakings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "12627:8:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                                        "typeString": "mapping(address => struct BitcrushStaking.UserStaking storage ref)"
                                      }
                                    },
                                    "id": 1121,
                                    "indexExpression": {
                                      "id": 1120,
                                      "name": "lastAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1104,
                                      "src": "12636:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12627:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStaking_$90_storage",
                                      "typeString": "struct BitcrushStaking.UserStaking storage ref"
                                    }
                                  },
                                  "id": 1122,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83,
                                  "src": "12627:27:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1123,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 724,
                                    "src": "12657:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                      "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                    }
                                  },
                                  "id": 1124,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83,
                                  "src": "12657:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12627:40:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1126,
                              "nodeType": "ExpressionStatement",
                              "src": "12627:40:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1129,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "12695:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "12695:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12695:20:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1133,
                        "nodeType": "ExpressionStatement",
                        "src": "12695:20:17"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1137,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "12758:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1136,
                      "name": "RewardPoolUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "12740:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12740:28:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "EmitStatement",
                  "src": "12735:33:17"
                }
              ]
            },
            "documentation": {
              "id": 709,
              "nodeType": "StructuredDocumentation",
              "src": "8699:305:17",
              "text": "Leaves staking for a user by the specified amount and transfering staked amount and reward to users address\n @param _amount the amount to unstake\n @dev leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime"
            },
            "functionSelector": "445e7688",
            "id": 1141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "leaveStaking",
            "nameLocation": "9018:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9039:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "9031:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9031:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "_liveWallet",
                  "nameLocation": "9053:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "9048:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9048:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9030:35:17"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9075:0:17"
            },
            "scope": 2213,
            "src": "9009:3766:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "13054:867:17",
              "statements": [
                {
                  "assignments": [
                    1151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1151,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "13084:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "13064:24:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                        "typeString": "struct BitcrushStaking.UserStaking"
                      },
                      "typeName": {
                        "id": 1150,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1149,
                          "name": "UserStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 90,
                          "src": "13064:11:17"
                        },
                        "referencedDeclaration": 90,
                        "src": "13064:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1155,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1152,
                      "name": "stakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "13091:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                        "typeString": "mapping(address => struct BitcrushStaking.UserStaking storage ref)"
                      }
                    },
                    "id": 1154,
                    "indexExpression": {
                      "id": 1153,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "13100:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13091:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStaking_$90_storage",
                      "typeString": "struct BitcrushStaking.UserStaking storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13064:45:17"
                },
                {
                  "assignments": [
                    1157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1157,
                      "mutability": "mutable",
                      "name": "rewardPerBlock",
                      "nameLocation": "13127:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "13119:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1156,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13119:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1159,
                  "initialValue": {
                    "id": 1158,
                    "name": "crushPerBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 105,
                    "src": "13144:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13119:38:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1160,
                      "name": "totalFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "13171:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13185:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13171:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1176,
                  "nodeType": "IfStatement",
                  "src": "13167:140:17",
                  "trueBody": {
                    "expression": {
                      "id": 1174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1163,
                        "name": "rewardPerBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "13200:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1171,
                                "name": "divisor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "13285:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1168,
                                    "name": "apyBoost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58,
                                    "src": "13271:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1166,
                                    "name": "crushPerBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 105,
                                    "src": "13253:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11558,
                                  "src": "13253:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13253:27:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11573,
                              "src": "13253:31:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13253:40:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1164,
                            "name": "rewardPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1157,
                            "src": "13217:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11528,
                          "src": "13217:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13217:90:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13200:107:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1175,
                    "nodeType": "ExpressionStatement",
                    "src": "13200:107:17"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1177,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "13321:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13334:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13321:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1184,
                  "nodeType": "IfStatement",
                  "src": "13317:38:17",
                  "trueBody": {
                    "expression": {
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1180,
                        "name": "rewardPerBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "13337:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13354:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13337:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1183,
                    "nodeType": "ExpressionStatement",
                    "src": "13337:18:17"
                  }
                },
                {
                  "assignments": [
                    1186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "localAccRewardPerShare",
                      "nameLocation": "13373:22:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "13365:30:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13365:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1188,
                  "initialValue": {
                    "id": 1187,
                    "name": "accRewardPerShare",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 107,
                    "src": "13398:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13365:50:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1189,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13429:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "13429:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 1191,
                        "name": "lastRewardBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "13444:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13429:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1193,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "13463:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13478:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13463:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13429:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1226,
                  "nodeType": "IfStatement",
                  "src": "13425:360:17",
                  "trueBody": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "13481:304:17",
                    "statements": [
                      {
                        "assignments": [
                          1198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1198,
                            "mutability": "mutable",
                            "name": "blocksSinceCalc",
                            "nameLocation": "13503:15:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1225,
                            "src": "13495:23:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1197,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13495:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1204,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1202,
                              "name": "lastRewardBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "13538:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1199,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "13521:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "13521:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11543,
                            "src": "13521:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13521:33:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13495:59:17"
                      },
                      {
                        "assignments": [
                          1206
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1206,
                            "mutability": "mutable",
                            "name": "rewardCalc",
                            "nameLocation": "13576:10:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1225,
                            "src": "13568:18:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1205,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13568:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1217,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1215,
                              "name": "totalShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "13690:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 1212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13663:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1209,
                                      "name": "rewardPerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1157,
                                      "src": "13626:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1207,
                                      "name": "blocksSinceCalc",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1198,
                                      "src": "13589:15:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1208,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11558,
                                    "src": "13589:36:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13589:52:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "13589:73:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13589:79:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "13589:100:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13589:113:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13568:134:17"
                      },
                      {
                        "expression": {
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1218,
                            "name": "localAccRewardPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1186,
                            "src": "13716:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1221,
                                "name": "rewardCalc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1206,
                                "src": "13763:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1219,
                                "name": "accRewardPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "13741:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "13741:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13741:33:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13716:58:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1224,
                        "nodeType": "ExpressionStatement",
                        "src": "13716:58:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1236,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "13884:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                          }
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "apyBaseline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87,
                        "src": "13884:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 1233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13857:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1230,
                                "name": "localAccRewardPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "13829:22:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 1227,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1151,
                                  "src": "13813:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                    "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                  }
                                },
                                "id": 1228,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "shares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73,
                                "src": "13813:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11558,
                              "src": "13813:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13813:39:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11573,
                          "src": "13813:43:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13813:49:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "13813:53:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13813:101:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1148,
                  "id": 1239,
                  "nodeType": "Return",
                  "src": "13794:120:17"
                }
              ]
            },
            "documentation": {
              "id": 1142,
              "nodeType": "StructuredDocumentation",
              "src": "12781:195:17",
              "text": "Get pending rewards of a user for UI\n @param _address the address to calculate the reward for\n @dev calculates potential reward for the address provided based on crush per block"
            },
            "functionSelector": "f40f0f52",
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingReward",
            "nameLocation": "12990:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "13012:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "13004:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13004:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13003:18:17"
            },
            "returnParameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "13045:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13045:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13044:9:17"
            },
            "scope": 2213,
            "src": "12981:940:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1269,
              "nodeType": "Block",
              "src": "14166:190:17",
              "statements": [
                {
                  "assignments": [
                    1251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1251,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "14196:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1269,
                      "src": "14176:24:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                        "typeString": "struct BitcrushStaking.UserStaking"
                      },
                      "typeName": {
                        "id": 1250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1249,
                          "name": "UserStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 90,
                          "src": "14176:11:17"
                        },
                        "referencedDeclaration": 90,
                        "src": "14176:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1255,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1252,
                      "name": "stakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "14203:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                        "typeString": "mapping(address => struct BitcrushStaking.UserStaking storage ref)"
                      }
                    },
                    "id": 1254,
                    "indexExpression": {
                      "id": 1253,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "14212:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14203:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStaking_$90_storage",
                      "typeString": "struct BitcrushStaking.UserStaking storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14176:45:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1265,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1251,
                          "src": "14316:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                          }
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "profitBaseline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89,
                        "src": "14316:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14289:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1259,
                                "name": "accProfitPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "14266:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 1256,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1251,
                                  "src": "14250:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                    "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                  }
                                },
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "shares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73,
                                "src": "14250:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11558,
                              "src": "14250:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14250:34:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11573,
                          "src": "14250:38:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14250:44:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "14250:48:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14250:99:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1248,
                  "id": 1268,
                  "nodeType": "Return",
                  "src": "14231:118:17"
                }
              ]
            },
            "documentation": {
              "id": 1242,
              "nodeType": "StructuredDocumentation",
              "src": "13927:162:17",
              "text": "Get pending Profits to Claim\n @param _address the user's wallet address to calculate profits\n @return pending Profits to be claimed by this user"
            },
            "functionSelector": "39cc1378",
            "id": 1270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingProfits",
            "nameLocation": "14103:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1244,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "14126:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "14118:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14118:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14117:18:17"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "14157:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14157:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14156:9:17"
            },
            "scope": 2213,
            "src": "14094:262:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1630,
              "nodeType": "Block",
              "src": "14565:3590:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1275,
                          "name": "lastAutoCompoundBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "14596:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1276,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14621:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "14621:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14596:37:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d706f756e6420416c6c206e6f7420796574206170706c696361626c652e",
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14647:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e06d1bbca2601492bfa2f90a28da7d5afcf07d65178a34a12d4bff205d648375",
                          "typeString": "literal_string \"Compound All not yet applicable.\""
                        },
                        "value": "Compound All not yet applicable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e06d1bbca2601492bfa2f90a28da7d5afcf07d65178a34a12d4bff205d648375",
                          "typeString": "literal_string \"Compound All not yet applicable.\""
                        }
                      ],
                      "id": 1274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14575:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14575:116:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "14575:116:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1283,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "14709:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14723:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14709:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f205374616b6564207265776172647320746f20636c61696d",
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14726:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5507c0b35a4ef6bbab36253bd69fe925996dc5a389b70c4b4871fc9fffb68ec1",
                          "typeString": "literal_string \"No Staked rewards to claim\""
                        },
                        "value": "No Staked rewards to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5507c0b35a4ef6bbab36253bd69fe925996dc5a389b70c4b4871fc9fffb68ec1",
                          "typeString": "literal_string \"No Staked rewards to claim\""
                        }
                      ],
                      "id": 1282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14701:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14701:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "14701:54:17"
                },
                {
                  "assignments": [
                    1290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1290,
                      "mutability": "mutable",
                      "name": "crushToBurn",
                      "nameLocation": "14773:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1630,
                      "src": "14765:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14765:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1292,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14787:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14765:23:17"
                },
                {
                  "assignments": [
                    1294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1294,
                      "mutability": "mutable",
                      "name": "performanceFee",
                      "nameLocation": "14806:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1630,
                      "src": "14798:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14798:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1296,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14823:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14798:26:17"
                },
                {
                  "assignments": [
                    1298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1298,
                      "mutability": "mutable",
                      "name": "compounderReward",
                      "nameLocation": "14843:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1630,
                      "src": "14835:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1297,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14835:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1300,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14862:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14835:28:17"
                },
                {
                  "assignments": [
                    1302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1302,
                      "mutability": "mutable",
                      "name": "totalPoolDeducted",
                      "nameLocation": "14881:17:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1630,
                      "src": "14873:25:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1301,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14873:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1304,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14901:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14873:29:17"
                },
                {
                  "assignments": [
                    1306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1306,
                      "mutability": "mutable",
                      "name": "batchStart",
                      "nameLocation": "14921:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1630,
                      "src": "14913:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1305,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14913:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1308,
                  "initialValue": {
                    "id": 1307,
                    "name": "batchStartingIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102,
                    "src": "14934:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14913:39:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1309,
                      "name": "batchStartingIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "14966:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 1310,
                        "name": "addressIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "14988:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14988:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14966:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1317,
                  "nodeType": "IfStatement",
                  "src": "14962:63:17",
                  "trueBody": {
                    "expression": {
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1313,
                        "name": "batchStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "15011:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15024:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "15011:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1316,
                    "nodeType": "ExpressionStatement",
                    "src": "15011:14:17"
                  }
                },
                {
                  "assignments": [
                    1319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1319,
                      "mutability": "mutable",
                      "name": "batchLimit",
                      "nameLocation": "15044:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1630,
                      "src": "15036:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15036:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1322,
                  "initialValue": {
                    "expression": {
                      "id": 1320,
                      "name": "addressIndexes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "15057:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "15057:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15036:42:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1323,
                          "name": "addressIndexes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "15105:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "15105:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 1325,
                        "name": "autoCompoundLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "15130:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15105:42:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1329,
                            "name": "autoCompoundLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "15178:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1327,
                            "name": "batchStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "15163:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11528,
                          "src": "15163:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15163:33:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 1331,
                          "name": "addressIndexes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "15200:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "15200:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15163:58:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15105:116:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1340,
                        "name": "batchLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "15281:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 1343,
                            "name": "autoCompoundLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "15309:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1341,
                            "name": "batchStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "15294:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11528,
                          "src": "15294:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15294:33:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15281:46:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1346,
                    "nodeType": "ExpressionStatement",
                    "src": "15281:46:17"
                  },
                  "id": 1347,
                  "nodeType": "IfStatement",
                  "src": "15088:239:17",
                  "trueBody": {
                    "expression": {
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1335,
                        "name": "batchLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "15232:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "id": 1336,
                          "name": "addressIndexes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "15245:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "15245:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15232:34:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1339,
                    "nodeType": "ExpressionStatement",
                    "src": "15232:34:17"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1348,
                      "name": "updateProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "15338:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15338:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "15338:15:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1351,
                      "name": "updateDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "15363:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15363:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "15363:20:17"
                },
                {
                  "body": {
                    "id": 1581,
                    "nodeType": "Block",
                    "src": "15443:2309:17",
                    "statements": [
                      {
                        "assignments": [
                          1366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1366,
                            "mutability": "mutable",
                            "name": "currentUser",
                            "nameLocation": "15477:11:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1581,
                            "src": "15457:31:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                              "typeString": "struct BitcrushStaking.UserStaking"
                            },
                            "typeName": {
                              "id": 1365,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1364,
                                "name": "UserStaking",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 90,
                                "src": "15457:11:17"
                              },
                              "referencedDeclaration": 90,
                              "src": "15457:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1372,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1367,
                            "name": "stakings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "15491:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                              "typeString": "mapping(address => struct BitcrushStaking.UserStaking storage ref)"
                            }
                          },
                          "id": 1371,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 1368,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "15500:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1370,
                            "indexExpression": {
                              "id": 1369,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1355,
                              "src": "15515:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15500:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15491:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage",
                            "typeString": "struct BitcrushStaking.UserStaking storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15457:61:17"
                      },
                      {
                        "assignments": [
                          1374
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1374,
                            "mutability": "mutable",
                            "name": "stakerReward",
                            "nameLocation": "15540:12:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1581,
                            "src": "15532:20:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1373,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15532:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1387,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1384,
                                "name": "currentUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "15679:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "apyBaseline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87,
                              "src": "15679:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 1381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15652:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1378,
                                      "name": "accRewardPerShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "15612:17:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 1375,
                                        "name": "currentUser",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1366,
                                        "src": "15555:11:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 1376,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "shares",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 73,
                                      "src": "15555:35:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11558,
                                    "src": "15555:56:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15555:75:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11573,
                                "src": "15555:96:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15555:102:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11543,
                            "src": "15555:123:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15555:148:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15532:171:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1388,
                            "name": "totalPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "15721:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1391,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "15755:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1389,
                                "name": "totalPoolDeducted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1302,
                                "src": "15733:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "15733:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15733:35:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15721:47:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1402,
                        "nodeType": "IfStatement",
                        "src": "15717:133:17",
                        "trueBody": {
                          "id": 1401,
                          "nodeType": "Block",
                          "src": "15770:80:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 1399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1394,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "15788:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1397,
                                      "name": "totalPoolDeducted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1302,
                                      "src": "15817:17:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1395,
                                      "name": "totalPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 113,
                                      "src": "15803:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "15803:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15803:32:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15788:47:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1400,
                              "nodeType": "ExpressionStatement",
                              "src": "15788:47:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1403,
                              "name": "currentUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1366,
                              "src": "15863:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 1405,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "apyBaseline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87,
                            "src": "15863:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1409,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "15917:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 1406,
                                  "name": "currentUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1366,
                                  "src": "15889:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                    "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                  }
                                },
                                "id": 1407,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "apyBaseline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 87,
                                "src": "15889:23:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "15889:27:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15889:41:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15863:67:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1412,
                        "nodeType": "ExpressionStatement",
                        "src": "15863:67:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1413,
                            "name": "stakerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "15948:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15963:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15948:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1423,
                        "nodeType": "IfStatement",
                        "src": "15944:93:17",
                        "trueBody": {
                          "expression": {
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1416,
                              "name": "totalPoolDeducted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "15982:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1419,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "16024:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1417,
                                  "name": "totalPoolDeducted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1302,
                                  "src": "16002:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11528,
                                "src": "16002:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16002:35:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15982:55:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1422,
                          "nodeType": "ExpressionStatement",
                          "src": "15982:55:17"
                        }
                      },
                      {
                        "assignments": [
                          1425
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1425,
                            "mutability": "mutable",
                            "name": "profitReward",
                            "nameLocation": "16059:12:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1581,
                            "src": "16051:20:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1424,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16051:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1438,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1435,
                                "name": "currentUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "16198:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 1436,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "profitBaseline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 89,
                              "src": "16198:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 1432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16171:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1429,
                                      "name": "accProfitPerShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 111,
                                      "src": "16131:17:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 1426,
                                        "name": "currentUser",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1366,
                                        "src": "16074:11:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 1427,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "shares",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 73,
                                      "src": "16074:35:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11558,
                                    "src": "16074:56:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16074:75:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11573,
                                "src": "16074:96:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16074:102:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11543,
                            "src": "16074:123:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16074:151:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16051:174:17"
                      },
                      {
                        "expression": {
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1439,
                              "name": "currentUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1366,
                              "src": "16239:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 1441,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "profitBaseline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 89,
                            "src": "16239:26:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1445,
                                "name": "profitReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1425,
                                "src": "16316:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 1442,
                                  "name": "currentUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1366,
                                  "src": "16268:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                    "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                  }
                                },
                                "id": 1443,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "profitBaseline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 89,
                                "src": "16268:26:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "16268:30:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16268:74:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16239:103:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1448,
                        "nodeType": "ExpressionStatement",
                        "src": "16239:103:17"
                      },
                      {
                        "expression": {
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1449,
                            "name": "stakerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "16356:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1452,
                                "name": "profitReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1425,
                                "src": "16388:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1450,
                                "name": "stakerReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "16371:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11528,
                              "src": "16371:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16371:30:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16356:45:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1455,
                        "nodeType": "ExpressionStatement",
                        "src": "16356:45:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1456,
                            "name": "stakerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "16419:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16434:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16419:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1573,
                        "nodeType": "IfStatement",
                        "src": "16415:1267:17",
                        "trueBody": {
                          "id": 1572,
                          "nodeType": "Block",
                          "src": "16437:1245:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 1464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1459,
                                  "name": "totalProfitsClaimed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "16455:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1462,
                                      "name": "profitReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1425,
                                      "src": "16501:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1460,
                                      "name": "totalProfitsClaimed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 121,
                                      "src": "16477:19:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "16477:23:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16477:37:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16455:59:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1465,
                              "nodeType": "ExpressionStatement",
                              "src": "16455:59:17"
                            },
                            {
                              "expression": {
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1466,
                                  "name": "totalClaimed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "16532:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1469,
                                      "name": "stakerReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "16564:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1467,
                                      "name": "totalClaimed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 117,
                                      "src": "16547:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "16547:16:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16547:30:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16532:45:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1472,
                              "nodeType": "ExpressionStatement",
                              "src": "16532:45:17"
                            },
                            {
                              "assignments": [
                                1474
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1474,
                                  "mutability": "mutable",
                                  "name": "stakerBurn",
                                  "nameLocation": "16603:10:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1572,
                                  "src": "16595:18:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1473,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16595:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1482,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1480,
                                    "name": "divisor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30,
                                    "src": "16678:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1477,
                                        "name": "performanceFeeBurn",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 27,
                                        "src": "16633:18:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1475,
                                        "name": "stakerReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1374,
                                        "src": "16616:12:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1476,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "16616:16:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16616:36:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "16616:40:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16616:87:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16595:108:17"
                            },
                            {
                              "expression": {
                                "id": 1488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1483,
                                  "name": "crushToBurn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1290,
                                  "src": "16721:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1486,
                                      "name": "stakerBurn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1474,
                                      "src": "16751:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1484,
                                      "name": "crushToBurn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1290,
                                      "src": "16735:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1485,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "16735:15:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16735:27:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16721:41:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1489,
                              "nodeType": "ExpressionStatement",
                              "src": "16721:41:17"
                            },
                            {
                              "assignments": [
                                1491
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1491,
                                  "mutability": "mutable",
                                  "name": "cpAllReward",
                                  "nameLocation": "16789:11:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1572,
                                  "src": "16781:19:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1490,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16781:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1499,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1497,
                                    "name": "divisor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30,
                                    "src": "16892:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1494,
                                        "name": "performanceFeeCompounder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24,
                                        "src": "16841:24:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1492,
                                        "name": "stakerReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1374,
                                        "src": "16803:12:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "16803:37:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16803:63:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "16803:88:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16803:97:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16781:119:17"
                            },
                            {
                              "expression": {
                                "id": 1505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1500,
                                  "name": "compounderReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1298,
                                  "src": "16918:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1503,
                                      "name": "cpAllReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1491,
                                      "src": "16958:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1501,
                                      "name": "compounderReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1298,
                                      "src": "16937:16:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "16937:20:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16937:33:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16918:52:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1506,
                              "nodeType": "ExpressionStatement",
                              "src": "16918:52:17"
                            },
                            {
                              "assignments": [
                                1508
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1508,
                                  "mutability": "mutable",
                                  "name": "feeReserve",
                                  "nameLocation": "16997:10:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1572,
                                  "src": "16989:18:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1507,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16989:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1516,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1514,
                                    "name": "divisor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30,
                                    "src": "17096:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1511,
                                        "name": "performanceFeeReserve",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39,
                                        "src": "17048:21:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1509,
                                        "name": "stakerReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1374,
                                        "src": "17010:12:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1510,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "17010:37:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1512,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17010:60:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1513,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "17010:85:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17010:94:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16989:115:17"
                            },
                            {
                              "expression": {
                                "id": 1522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1517,
                                  "name": "performanceFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1294,
                                  "src": "17122:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1520,
                                      "name": "feeReserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1508,
                                      "src": "17158:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1518,
                                      "name": "performanceFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1294,
                                      "src": "17139:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "17139:18:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17139:30:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17122:47:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1523,
                              "nodeType": "ExpressionStatement",
                              "src": "17122:47:17"
                            },
                            {
                              "expression": {
                                "id": 1529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1524,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "17187:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1527,
                                      "name": "stakerBurn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1474,
                                      "src": "17219:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1525,
                                      "name": "stakerReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "17202:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "17202:16:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17202:28:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17187:43:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1530,
                              "nodeType": "ExpressionStatement",
                              "src": "17187:43:17"
                            },
                            {
                              "expression": {
                                "id": 1536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1531,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "17248:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1534,
                                      "name": "cpAllReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1491,
                                      "src": "17280:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1532,
                                      "name": "stakerReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "17263:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "17263:16:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17263:29:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17248:44:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1537,
                              "nodeType": "ExpressionStatement",
                              "src": "17248:44:17"
                            },
                            {
                              "expression": {
                                "id": 1543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1538,
                                  "name": "stakerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "17310:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1541,
                                      "name": "feeReserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1508,
                                      "src": "17342:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1539,
                                      "name": "stakerReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "17325:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1540,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11543,
                                    "src": "17325:16:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17325:28:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17310:43:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1544,
                              "nodeType": "ExpressionStatement",
                              "src": "17310:43:17"
                            },
                            {
                              "expression": {
                                "id": 1553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1545,
                                    "name": "currentUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1366,
                                    "src": "17371:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                      "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                    }
                                  },
                                  "id": 1547,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "claimedAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 77,
                                  "src": "17371:25:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1551,
                                      "name": "stakerReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "17450:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 1548,
                                        "name": "currentUser",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1366,
                                        "src": "17399:11:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 1549,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "claimedAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 77,
                                      "src": "17399:25:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1550,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "17399:29:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1552,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17399:81:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17371:109:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1554,
                              "nodeType": "ExpressionStatement",
                              "src": "17371:109:17"
                            },
                            {
                              "expression": {
                                "id": 1563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1555,
                                    "name": "currentUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1366,
                                    "src": "17498:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                      "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                    }
                                  },
                                  "id": 1557,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "stakedAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75,
                                  "src": "17498:24:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1561,
                                      "name": "stakerReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "17575:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 1558,
                                        "name": "currentUser",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1366,
                                        "src": "17525:11:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 1559,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stakedAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 75,
                                      "src": "17525:24:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "17525:28:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1562,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17525:80:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17498:107:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1564,
                              "nodeType": "ExpressionStatement",
                              "src": "17498:107:17"
                            },
                            {
                              "expression": {
                                "id": 1570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1565,
                                  "name": "totalStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "17624:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1568,
                                      "name": "stakerReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "17654:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1566,
                                      "name": "totalStaked",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 115,
                                      "src": "17638:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1567,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "17638:15:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17638:29:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17624:43:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1571,
                              "nodeType": "ExpressionStatement",
                              "src": "17624:43:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1574,
                              "name": "currentUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1366,
                              "src": "17695:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 1576,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastBlockCompounded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79,
                            "src": "17695:31:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1577,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "17729:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "17729:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17695:46:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1580,
                        "nodeType": "ExpressionStatement",
                        "src": "17695:46:17"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1358,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1355,
                      "src": "15422:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1359,
                      "name": "batchLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1319,
                      "src": "15426:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15422:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1582,
                  "initializationExpression": {
                    "assignments": [
                      1355
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1355,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15406:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "15398:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1354,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15398:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1357,
                    "initialValue": {
                      "id": 1356,
                      "name": "batchStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1306,
                      "src": "15410:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15398:22:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15438:3:17",
                      "subExpression": {
                        "id": 1361,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "15438:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1363,
                    "nodeType": "ExpressionStatement",
                    "src": "15438:3:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "15393:2359:17"
                },
                {
                  "expression": {
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1583,
                      "name": "batchStartingIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "17761:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1584,
                      "name": "batchLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1319,
                      "src": "17782:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17761:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1586,
                  "nodeType": "ExpressionStatement",
                  "src": "17761:31:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1587,
                      "name": "batchStartingIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "17806:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 1588,
                        "name": "addressIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "17828:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "17828:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17806:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1596,
                  "nodeType": "IfStatement",
                  "src": "17802:96:17",
                  "trueBody": {
                    "id": 1595,
                    "nodeType": "Block",
                    "src": "17851:47:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1591,
                            "name": "batchStartingIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "17865:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17886:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17865:22:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1594,
                        "nodeType": "ExpressionStatement",
                        "src": "17865:22:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1597,
                      "name": "totalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "17907:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1600,
                          "name": "totalPoolDeducted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1302,
                          "src": "17933:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1598,
                          "name": "totalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "17919:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "17919:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17919:32:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17907:44:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1603,
                  "nodeType": "ExpressionStatement",
                  "src": "17907:44:17"
                },
                {
                  "expression": {
                    "id": 1607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1604,
                      "name": "lastAutoCompoundBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "17961:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1605,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "17985:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "17985:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17961:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1608,
                  "nodeType": "ExpressionStatement",
                  "src": "17961:36:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1612,
                        "name": "crushToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1290,
                        "src": "18018:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1609,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "18007:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 1611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3288,
                      "src": "18007:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18007:23:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1614,
                  "nodeType": "ExpressionStatement",
                  "src": "18007:23:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1618,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18059:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18059:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1620,
                        "name": "compounderReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "18071:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1615,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "18040:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "18040:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18040:48:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1622,
                  "nodeType": "ExpressionStatement",
                  "src": "18040:48:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1626,
                        "name": "reserveAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "18117:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1627,
                        "name": "performanceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1294,
                        "src": "18133:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1623,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "18098:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 1625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "18098:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18098:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "18098:50:17"
                }
              ]
            },
            "documentation": {
              "id": 1271,
              "nodeType": "StructuredDocumentation",
              "src": "14362:168:17",
              "text": "compounds the rewards of all users in the pool\n @dev compounds the rewards of all users in the pool add adds it into their staked amount while deducting fees"
            },
            "functionSelector": "9b05ddb3",
            "id": 1631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compoundAll",
            "nameLocation": "14544:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14555:2:17"
            },
            "returnParameters": {
              "id": 1273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14565:0:17"
            },
            "scope": 2213,
            "src": "14535:3620:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1699,
              "nodeType": "Block",
              "src": "18440:621:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1642,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "18458:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "18458:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1646,
                              "name": "bankroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "18480:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                "typeString": "contract BitcrushBankroll"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                "typeString": "contract BitcrushBankroll"
                              }
                            ],
                            "id": 1645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18472:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1644,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18472:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18472:17:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "18458:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6574206d7573742062652062616e6b726f6c6c",
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18491:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dca9ad6a986ff04d3c849b8d10ee12e222a96963e3e809fc02ba384adb02a3cd",
                          "typeString": "literal_string \"Callet must be bankroll\""
                        },
                        "value": "Callet must be bankroll"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dca9ad6a986ff04d3c849b8d10ee12e222a96963e3e809fc02ba384adb02a3cd",
                          "typeString": "literal_string \"Callet must be bankroll\""
                        }
                      ],
                      "id": 1641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18450:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18450:67:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1651,
                  "nodeType": "ExpressionStatement",
                  "src": "18450:67:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1653,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1634,
                          "src": "18638:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1656,
                              "name": "totalFrozen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "18665:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1654,
                              "name": "totalStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "18649:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11543,
                            "src": "18649:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18649:28:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18638:39:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "467265657a6520616d6f756e742073686f756c64206265206c657373207468616e206f7220657175616c20746f20617661696c61626c652066756e6473",
                        "id": 1659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18691:63:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e58e89bb77ab304d8cbdf7fce96b6bb7cb16d3876a29442dbe3c46da9a2a027a",
                          "typeString": "literal_string \"Freeze amount should be less than or equal to available funds\""
                        },
                        "value": "Freeze amount should be less than or equal to available funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e58e89bb77ab304d8cbdf7fce96b6bb7cb16d3876a29442dbe3c46da9a2a027a",
                          "typeString": "literal_string \"Freeze amount should be less than or equal to available funds\""
                        }
                      ],
                      "id": 1652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18617:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18617:147:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1661,
                  "nodeType": "ExpressionStatement",
                  "src": "18617:147:17"
                },
                {
                  "expression": {
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1662,
                      "name": "totalFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "18774:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1665,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1634,
                          "src": "18804:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1663,
                          "name": "totalFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "18788:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11528,
                        "src": "18788:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18788:24:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18774:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1668,
                  "nodeType": "ExpressionStatement",
                  "src": "18774:38:17"
                },
                {
                  "assignments": [
                    1671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1671,
                      "mutability": "mutable",
                      "name": "currentLw",
                      "nameLocation": "18841:9:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1699,
                      "src": "18822:28:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                        "typeString": "contract BitcrushLiveWallet"
                      },
                      "typeName": {
                        "id": 1670,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1669,
                          "name": "BitcrushLiveWallet",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7167,
                          "src": "18822:18:17"
                        },
                        "referencedDeclaration": 7167,
                        "src": "18822:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                          "typeString": "contract BitcrushLiveWallet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1675,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1673,
                        "name": "_lwAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1638,
                        "src": "18872:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1672,
                      "name": "BitcrushLiveWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7167,
                      "src": "18853:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BitcrushLiveWallet_$7167_$",
                        "typeString": "type(contract BitcrushLiveWallet)"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18853:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                      "typeString": "contract BitcrushLiveWallet"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18822:61:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1679,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "18921:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1680,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "18930:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1676,
                        "name": "currentLw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1671,
                        "src": "18893:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BitcrushLiveWallet_$7167",
                          "typeString": "contract BitcrushLiveWallet"
                        }
                      },
                      "id": 1678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToUserWinnings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6976,
                      "src": "18893:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18893:48:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1682,
                  "nodeType": "ExpressionStatement",
                  "src": "18893:48:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1688,
                            "name": "_lwAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1638,
                            "src": "18978:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18970:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1686,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18970:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18970:19:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1690,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "18991:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1683,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "18951:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 1685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "18951:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18951:48:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1692,
                  "nodeType": "ExpressionStatement",
                  "src": "18951:48:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1693,
                      "name": "updateDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "19009:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19009:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1695,
                  "nodeType": "ExpressionStatement",
                  "src": "19009:20:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1696,
                      "name": "updateProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "19039:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19039:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "19039:15:17"
                }
              ]
            },
            "documentation": {
              "id": 1632,
              "nodeType": "StructuredDocumentation",
              "src": "18161:157:17",
              "text": "freeze certain funds in the staking pool and transfer them to the live wallet address\n @dev adds the provided amount to the total frozen variablle"
            },
            "functionSelector": "8f44ebfc",
            "id": 1700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "freezeStaking",
            "nameLocation": "18332:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1634,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "18363:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1700,
                  "src": "18355:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18355:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1636,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "18388:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1700,
                  "src": "18380:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18380:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1638,
                  "mutability": "mutable",
                  "name": "_lwAddress",
                  "nameLocation": "18416:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1700,
                  "src": "18408:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18408:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18345:87:17"
            },
            "returnParameters": {
              "id": 1640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18440:0:17"
            },
            "scope": 2213,
            "src": "18323:738:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1737,
              "nodeType": "Block",
              "src": "19252:326:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1707,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19270:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19270:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1711,
                              "name": "bankroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "19292:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                "typeString": "contract BitcrushBankroll"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                "typeString": "contract BitcrushBankroll"
                              }
                            ],
                            "id": 1710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19284:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1709,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19284:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19284:17:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19270:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652062616e6b726f6c6c",
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19303:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b52b3aa7b9d7ed3e3d6e456a97ac716ab2a6d5ebeb0236201f073e2e2c0ba96e",
                          "typeString": "literal_string \"Caller must be bankroll\""
                        },
                        "value": "Caller must be bankroll"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b52b3aa7b9d7ed3e3d6e456a97ac716ab2a6d5ebeb0236201f073e2e2c0ba96e",
                          "typeString": "literal_string \"Caller must be bankroll\""
                        }
                      ],
                      "id": 1706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19262:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19262:67:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1716,
                  "nodeType": "ExpressionStatement",
                  "src": "19262:67:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1718,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1703,
                          "src": "19360:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1719,
                          "name": "totalFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "19371:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19360:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e667265657a6520616d6f756e742063616e742062652067726561746572207468616e2063757272656e746c792066726f7a656e20616d6f756e74",
                        "id": 1721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19396:62:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a2044ee1baf4f98ca92ac5ba033070f4330326f3d748edda642521c9d635cfd",
                          "typeString": "literal_string \"unfreeze amount cant be greater than currently frozen amount\""
                        },
                        "value": "unfreeze amount cant be greater than currently frozen amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a2044ee1baf4f98ca92ac5ba033070f4330326f3d748edda642521c9d635cfd",
                          "typeString": "literal_string \"unfreeze amount cant be greater than currently frozen amount\""
                        }
                      ],
                      "id": 1717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19339:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19339:129:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1723,
                  "nodeType": "ExpressionStatement",
                  "src": "19339:129:17"
                },
                {
                  "expression": {
                    "id": 1729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1724,
                      "name": "totalFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "19478:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1727,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1703,
                          "src": "19508:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1725,
                          "name": "totalFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "19492:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "19492:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19492:24:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19478:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1730,
                  "nodeType": "ExpressionStatement",
                  "src": "19478:38:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1731,
                      "name": "updateDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "19526:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19526:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1733,
                  "nodeType": "ExpressionStatement",
                  "src": "19526:20:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1734,
                      "name": "updateProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "19556:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19556:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1736,
                  "nodeType": "ExpressionStatement",
                  "src": "19556:15:17"
                }
              ]
            },
            "documentation": {
              "id": 1701,
              "nodeType": "StructuredDocumentation",
              "src": "19067:131:17",
              "text": "unfreeze previously frozen funds from the staking pool\n @dev deducts the provided amount from the total frozen variablle"
            },
            "functionSelector": "e39faaa4",
            "id": 1738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unfreezeStaking",
            "nameLocation": "19212:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1703,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "19236:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "19228:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19228:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19227:17:17"
            },
            "returnParameters": {
              "id": 1705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19252:0:17"
            },
            "scope": 2213,
            "src": "19203:375:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1749,
              "nodeType": "Block",
              "src": "19821:57:17",
              "statements": [
                {
                  "expression": {
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1744,
                      "name": "_addressesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1742,
                      "src": "19831:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1745,
                        "name": "addressIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "19850:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "19850:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19831:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1748,
                  "nodeType": "ExpressionStatement",
                  "src": "19831:40:17"
                }
              ]
            },
            "documentation": {
              "id": 1739,
              "nodeType": "StructuredDocumentation",
              "src": "19584:158:17",
              "text": "returns the total count of users in the staking pool.\n @dev returns the total stakers in the staking pool by reading length of addressIndexes array"
            },
            "functionSelector": "289bac07",
            "id": 1750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "indexesLength",
            "nameLocation": "19756:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19769:2:17"
            },
            "returnParameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "_addressesLength",
                  "nameLocation": "19803:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "19795:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19795:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19794:26:17"
            },
            "scope": 2213,
            "src": "19747:131:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1776,
              "nodeType": "Block",
              "src": "20094:167:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1759,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1753,
                          "src": "20112:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20119:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20112:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d7573742062652067726561746572207468616e2030",
                        "id": 1762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20122:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        },
                        "value": "Fee must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        }
                      ],
                      "id": 1758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20104:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20104:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1764,
                  "nodeType": "ExpressionStatement",
                  "src": "20104:47:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1766,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1753,
                          "src": "20169:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1767,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "20176:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20169:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d757374206265206c657373207468616e20313025",
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20185:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        },
                        "value": "Fee must be less than 10%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        }
                      ],
                      "id": 1765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20161:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20161:52:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1771,
                  "nodeType": "ExpressionStatement",
                  "src": "20161:52:17"
                },
                {
                  "expression": {
                    "id": 1774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1772,
                      "name": "performanceFeeCompounder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "20223:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1773,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "20250:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20223:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1775,
                  "nodeType": "ExpressionStatement",
                  "src": "20223:31:17"
                }
              ]
            },
            "documentation": {
              "id": 1751,
              "nodeType": "StructuredDocumentation",
              "src": "19884:137:17",
              "text": "Store `_fee`.\n @param _fee the new value to store\n @dev stores the fee in the state variable `performanceFeeCompounder`"
            },
            "functionSelector": "26cba336",
            "id": 1777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1756,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1755,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "20084:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "20084:9:17"
              }
            ],
            "name": "setPerformanceFeeCompounder",
            "nameLocation": "20035:27:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "20071:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "20063:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20063:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20062:14:17"
            },
            "returnParameters": {
              "id": 1757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20094:0:17"
            },
            "scope": 2213,
            "src": "20026:235:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1803,
              "nodeType": "Block",
              "src": "20465:161:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1786,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "20483:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20490:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20483:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d7573742062652067726561746572207468616e2030",
                        "id": 1789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20493:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        },
                        "value": "Fee must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        }
                      ],
                      "id": 1785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20475:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20475:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1791,
                  "nodeType": "ExpressionStatement",
                  "src": "20475:47:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1793,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "20540:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1794,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "20547:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20540:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d757374206265206c657373207468616e20313025",
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20556:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        },
                        "value": "Fee must be less than 10%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        }
                      ],
                      "id": 1792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20532:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20532:52:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1798,
                  "nodeType": "ExpressionStatement",
                  "src": "20532:52:17"
                },
                {
                  "expression": {
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1799,
                      "name": "performanceFeeBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "20594:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1800,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1780,
                      "src": "20615:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20594:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1802,
                  "nodeType": "ExpressionStatement",
                  "src": "20594:25:17"
                }
              ]
            },
            "documentation": {
              "id": 1778,
              "nodeType": "StructuredDocumentation",
              "src": "20267:131:17",
              "text": "Store `_fee`.\n @param _fee the new value to store\n @dev stores the fee in the state variable `performanceFeeBurn`"
            },
            "functionSelector": "c53f871f",
            "id": 1804,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1783,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1782,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "20455:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "20455:9:17"
              }
            ],
            "name": "setPerformanceFeeBurn",
            "nameLocation": "20412:21:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1780,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "20442:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "20434:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20434:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20433:14:17"
            },
            "returnParameters": {
              "id": 1784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20465:0:17"
            },
            "scope": 2213,
            "src": "20403:223:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1830,
              "nodeType": "Block",
              "src": "20826:159:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1813,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1807,
                          "src": "20844:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20851:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20844:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d7573742062652067726561746572207468616e2030",
                        "id": 1816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20854:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        },
                        "value": "Fee must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        }
                      ],
                      "id": 1812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20836:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20836:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1818,
                  "nodeType": "ExpressionStatement",
                  "src": "20836:47:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1820,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1807,
                          "src": "20901:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1821,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "20908:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20901:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d757374206265206c657373207468616e20313025",
                        "id": 1823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20917:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        },
                        "value": "Fee must be less than 10%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        }
                      ],
                      "id": 1819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20893:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20893:52:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1825,
                  "nodeType": "ExpressionStatement",
                  "src": "20893:52:17"
                },
                {
                  "expression": {
                    "id": 1828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1826,
                      "name": "earlyWithdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "20955:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1827,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "20974:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20955:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1829,
                  "nodeType": "ExpressionStatement",
                  "src": "20955:23:17"
                }
              ]
            },
            "documentation": {
              "id": 1805,
              "nodeType": "StructuredDocumentation",
              "src": "20632:129:17",
              "text": "Store `_fee`.\n @param _fee the new value to store\n @dev stores the fee in the state variable `earlyWithdrawFee`"
            },
            "functionSelector": "c22982f4",
            "id": 1831,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1810,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1809,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "20816:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "20816:9:17"
              }
            ],
            "name": "setEarlyWithdrawFee",
            "nameLocation": "20775:19:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1807,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "20803:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "20795:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20795:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20794:14:17"
            },
            "returnParameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20826:0:17"
            },
            "scope": 2213,
            "src": "20766:219:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1857,
              "nodeType": "Block",
              "src": "21195:165:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1840,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1834,
                          "src": "21213:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21220:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "21213:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d7573742062652067726561746572207468616e2030",
                        "id": 1843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21223:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        },
                        "value": "Fee must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355e3e1237dd83e0cd55d59558596419e6c0816f1d9486eec0e3921947181494",
                          "typeString": "literal_string \"Fee must be greater than 0\""
                        }
                      ],
                      "id": 1839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21205:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21205:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1845,
                  "nodeType": "ExpressionStatement",
                  "src": "21205:47:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1847,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1834,
                          "src": "21270:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1848,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "21278:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21270:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565206d757374206265206c657373207468616e20313025",
                        "id": 1850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21287:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        },
                        "value": "Fee must be less than 10%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9e03c23ecd8e6460421d7fca7c50870b7c8deb1c11514da6300999d9e697d22",
                          "typeString": "literal_string \"Fee must be less than 10%\""
                        }
                      ],
                      "id": 1846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21262:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21262:53:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1852,
                  "nodeType": "ExpressionStatement",
                  "src": "21262:53:17"
                },
                {
                  "expression": {
                    "id": 1855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1853,
                      "name": "performanceFeeReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "21325:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1854,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1834,
                      "src": "21349:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21325:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1856,
                  "nodeType": "ExpressionStatement",
                  "src": "21325:28:17"
                }
              ]
            },
            "documentation": {
              "id": 1832,
              "nodeType": "StructuredDocumentation",
              "src": "20991:134:17",
              "text": "Store `_fee`.\n @param _fee the new value to store\n @dev stores the fee in the state variable `performanceFeeReserve`"
            },
            "functionSelector": "6535fc66",
            "id": 1858,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1837,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1836,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "21185:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "21185:9:17"
              }
            ],
            "name": "setPerformanceFeeReserve",
            "nameLocation": "21139:24:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1834,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "21172:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1858,
                  "src": "21164:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21164:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21163:14:17"
            },
            "returnParameters": {
              "id": 1838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21195:0:17"
            },
            "scope": 2213,
            "src": "21130:230:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1877,
              "nodeType": "Block",
              "src": "21572:104:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1867,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1861,
                          "src": "21590:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21598:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "21590:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d65206d7573742062652067726561746572207468616e2030",
                        "id": 1870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21601:29:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d60e99613609ecf56412f1469dc7b58c17bd856bcd18630ac40bc26b87e72833",
                          "typeString": "literal_string \"Time must be greater than 0\""
                        },
                        "value": "Time must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d60e99613609ecf56412f1469dc7b58c17bd856bcd18630ac40bc26b87e72833",
                          "typeString": "literal_string \"Time must be greater than 0\""
                        }
                      ],
                      "id": 1866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21582:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21582:49:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1872,
                  "nodeType": "ExpressionStatement",
                  "src": "21582:49:17"
                },
                {
                  "expression": {
                    "id": 1875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1873,
                      "name": "earlyWithdrawFeeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "21641:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1874,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "21664:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21641:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1876,
                  "nodeType": "ExpressionStatement",
                  "src": "21641:28:17"
                }
              ]
            },
            "documentation": {
              "id": 1859,
              "nodeType": "StructuredDocumentation",
              "src": "21366:136:17",
              "text": "Store `_time`.\n @param _time the new value to store\n @dev stores the time in the state variable `earlyWithdrawFeeTime`"
            },
            "functionSelector": "6f90e046",
            "id": 1878,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1864,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1863,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "21562:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "21562:9:17"
              }
            ],
            "name": "setEarlyWithdrawFeeTime",
            "nameLocation": "21516:23:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "21548:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "21540:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21540:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21539:15:17"
            },
            "returnParameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21572:0:17"
            },
            "scope": 2213,
            "src": "21507:169:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1904,
              "nodeType": "Block",
              "src": "21886:171:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1887,
                          "name": "_limit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1881,
                          "src": "21904:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21913:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "21904:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696d69742063616e206e6f742062652030",
                        "id": 1890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21916:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_409cfd6cf61c3214d227c05089a12abda498c5b07d384dea59aeeedb91814a85",
                          "typeString": "literal_string \"Limit can not be 0\""
                        },
                        "value": "Limit can not be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_409cfd6cf61c3214d227c05089a12abda498c5b07d384dea59aeeedb91814a85",
                          "typeString": "literal_string \"Limit can not be 0\""
                        }
                      ],
                      "id": 1886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21896:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21896:41:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1892,
                  "nodeType": "ExpressionStatement",
                  "src": "21896:41:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1894,
                          "name": "_limit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1881,
                          "src": "21955:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21964:2:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "21955:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178206175746f636f6d706f756e64206c696d69742063616e6e6f742062652067726561746572203330",
                        "id": 1897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21968:45:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_304d5c88fb9573e6b43bae132f13f1dec99742dee0e252b393a7a04e2529f3fa",
                          "typeString": "literal_string \"Max autocompound limit cannot be greater 30\""
                        },
                        "value": "Max autocompound limit cannot be greater 30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_304d5c88fb9573e6b43bae132f13f1dec99742dee0e252b393a7a04e2529f3fa",
                          "typeString": "literal_string \"Max autocompound limit cannot be greater 30\""
                        }
                      ],
                      "id": 1893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21947:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21947:67:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1899,
                  "nodeType": "ExpressionStatement",
                  "src": "21947:67:17"
                },
                {
                  "expression": {
                    "id": 1902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1900,
                      "name": "autoCompoundLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "22024:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1901,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1881,
                      "src": "22044:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22024:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1903,
                  "nodeType": "ExpressionStatement",
                  "src": "22024:26:17"
                }
              ]
            },
            "documentation": {
              "id": 1879,
              "nodeType": "StructuredDocumentation",
              "src": "21682:136:17",
              "text": "Store `_limit`.\n @param _limit the new value to store\n @dev stores the limit in the state variable `autoCompoundLimit`"
            },
            "functionSelector": "76e9e6c0",
            "id": 1905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1884,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1883,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11070,
                  "src": "21876:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "21876:9:17"
              }
            ],
            "name": "setAutoCompoundLimit",
            "nameLocation": "21832:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nameLocation": "21861:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1905,
                  "src": "21853:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21853:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21852:16:17"
            },
            "returnParameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21886:0:17"
            },
            "scope": 2213,
            "src": "21823:234:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2211,
              "nodeType": "Block",
              "src": "22208:2741:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1909,
                      "name": "updateDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "22218:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22218:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1911,
                  "nodeType": "ExpressionStatement",
                  "src": "22218:20:17"
                },
                {
                  "assignments": [
                    1914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1914,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "22269:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2211,
                      "src": "22249:24:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                        "typeString": "struct BitcrushStaking.UserStaking"
                      },
                      "typeName": {
                        "id": 1913,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1912,
                          "name": "UserStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 90,
                          "src": "22249:11:17"
                        },
                        "referencedDeclaration": 90,
                        "src": "22249:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1919,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1915,
                      "name": "stakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "22276:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                        "typeString": "mapping(address => struct BitcrushStaking.UserStaking storage ref)"
                      }
                    },
                    "id": 1918,
                    "indexExpression": {
                      "expression": {
                        "id": 1916,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "22285:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "22285:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22276:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserStaking_$90_storage",
                      "typeString": "struct BitcrushStaking.UserStaking storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22249:47:17"
                },
                {
                  "expression": {
                    "id": 1925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1920,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "22306:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 1922,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastBlockCompounded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79,
                      "src": "22306:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1923,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "22333:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "22333:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22306:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1926,
                  "nodeType": "ExpressionStatement",
                  "src": "22306:39:17"
                },
                {
                  "assignments": [
                    1928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1928,
                      "mutability": "mutable",
                      "name": "availableStaked",
                      "nameLocation": "22364:15:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2211,
                      "src": "22356:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22356:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1931,
                  "initialValue": {
                    "expression": {
                      "id": 1929,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "22382:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                        "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                      }
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakedAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 75,
                    "src": "22382:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22356:43:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1932,
                      "name": "totalFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "22413:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22427:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "22413:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1950,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1914,
                          "src": "22585:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                          }
                        },
                        "id": 1951,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastFrozenWithdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85,
                        "src": "22585:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22611:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "22585:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1961,
                    "nodeType": "IfStatement",
                    "src": "22581:85:17",
                    "trueBody": {
                      "id": 1960,
                      "nodeType": "Block",
                      "src": "22614:52:17",
                      "statements": [
                        {
                          "expression": {
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 1954,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1914,
                                "src": "22628:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 1956,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "lastFrozenWithdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 85,
                              "src": "22628:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 1957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22654:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "22628:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1959,
                          "nodeType": "ExpressionStatement",
                          "src": "22628:27:17"
                        }
                      ]
                    }
                  },
                  "id": 1962,
                  "nodeType": "IfStatement",
                  "src": "22409:257:17",
                  "trueBody": {
                    "id": 1949,
                    "nodeType": "Block",
                    "src": "22430:145:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 1947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1935,
                            "name": "availableStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "22444:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1944,
                                    "name": "totalStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 115,
                                    "src": "22538:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1940,
                                          "name": "user",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1914,
                                          "src": "22515:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                          }
                                        },
                                        "id": 1941,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "stakedAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 75,
                                        "src": "22515:17:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1938,
                                        "name": "totalFrozen",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 119,
                                        "src": "22499:11:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1939,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11558,
                                      "src": "22499:15:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1942,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22499:34:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1943,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11573,
                                  "src": "22499:38:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22499:51:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1936,
                                "name": "availableStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1928,
                                "src": "22462:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "22462:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22462:102:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22444:120:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1948,
                        "nodeType": "ExpressionStatement",
                        "src": "22444:120:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1963,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "22676:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1966,
                          "name": "availableStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1928,
                          "src": "22706:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1964,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "22690:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "22690:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22690:32:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22676:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1969,
                  "nodeType": "ExpressionStatement",
                  "src": "22676:46:17"
                },
                {
                  "assignments": [
                    1971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1971,
                      "mutability": "mutable",
                      "name": "shareReduction",
                      "nameLocation": "22741:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2211,
                      "src": "22733:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1970,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22733:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1981,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1978,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1914,
                          "src": "22808:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                            "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                          }
                        },
                        "id": 1979,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75,
                        "src": "22808:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1974,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1914,
                              "src": "22778:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 1975,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73,
                            "src": "22778:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1972,
                            "name": "availableStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "22758:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11558,
                          "src": "22758:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22758:32:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11573,
                      "src": "22758:36:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22758:77:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22733:102:17"
                },
                {
                  "expression": {
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1982,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "22845:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "22845:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1988,
                          "name": "availableStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1928,
                          "src": "22887:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1985,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1914,
                            "src": "22865:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                              "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                            }
                          },
                          "id": 1986,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "22865:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "22865:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22865:38:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22845:58:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "22845:58:17"
                },
                {
                  "expression": {
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1992,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "22913:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 1994,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "22913:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1998,
                          "name": "shareReduction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1971,
                          "src": "22943:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1995,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1914,
                            "src": "22927:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                              "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                            }
                          },
                          "id": 1996,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "shares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73,
                          "src": "22927:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "22927:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22927:31:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22913:45:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "22913:45:17"
                },
                {
                  "expression": {
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2002,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "22968:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2005,
                          "name": "shareReduction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1971,
                          "src": "22998:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2003,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "22982:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11543,
                        "src": "22982:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22982:31:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22968:45:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "22968:45:17"
                },
                {
                  "expression": {
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2009,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "23023:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 2011,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "apyBaseline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "23023:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653132",
                          "id": 2018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23081:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2015,
                              "name": "accRewardPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "23058:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 2012,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1914,
                                "src": "23042:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 2013,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "23042:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11558,
                            "src": "23042:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23042:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11573,
                        "src": "23042:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23042:44:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23023:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2021,
                  "nodeType": "ExpressionStatement",
                  "src": "23023:63:17"
                },
                {
                  "expression": {
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2022,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "23096:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 2024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "profitBaseline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "23096:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653132",
                          "id": 2031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23157:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2028,
                              "name": "accProfitPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "23134:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 2025,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1914,
                                "src": "23118:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                  "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                }
                              },
                              "id": 2026,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "23118:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11558,
                            "src": "23118:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23118:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11573,
                        "src": "23118:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23118:44:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23096:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2034,
                  "nodeType": "ExpressionStatement",
                  "src": "23096:66:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2035,
                      "name": "totalFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "23177:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23191:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23177:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2120,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "24099:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "24099:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 2125,
                            "name": "earlyWithdrawFeeTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "24139:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 2122,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1914,
                              "src": "24114:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 2123,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lastBlockStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81,
                            "src": "24114:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11528,
                          "src": "24114:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24114:46:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "24099:61:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2153,
                    "nodeType": "IfStatement",
                    "src": "24082:371:17",
                    "trueBody": {
                      "id": 2152,
                      "nodeType": "Block",
                      "src": "24171:282:17",
                      "statements": [
                        {
                          "assignments": [
                            2129
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2129,
                              "mutability": "mutable",
                              "name": "withdrawalFee",
                              "nameLocation": "24217:13:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 2152,
                              "src": "24209:21:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2128,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "24209:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2137,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 2135,
                                "name": "divisor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "24292:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2132,
                                    "name": "earlyWithdrawFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33,
                                    "src": "24253:16:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2130,
                                    "name": "availableStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1928,
                                    "src": "24233:15:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11558,
                                  "src": "24233:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24233:37:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11573,
                              "src": "24233:41:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24233:80:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "24209:104:17"
                        },
                        {
                          "expression": {
                            "id": 2143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2138,
                              "name": "availableStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1928,
                              "src": "24327:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2141,
                                  "name": "withdrawalFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2129,
                                  "src": "24365:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2139,
                                  "name": "availableStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1928,
                                  "src": "24345:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11543,
                                "src": "24345:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24345:34:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "24327:52:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2144,
                          "nodeType": "ExpressionStatement",
                          "src": "24327:52:17"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2148,
                                "name": "reserveAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "24412:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2149,
                                "name": "withdrawalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2129,
                                "src": "24428:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2145,
                                "name": "crush",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "24393:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                  "typeString": "contract CRUSHToken"
                                }
                              },
                              "id": 2147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeTransfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11159,
                              "src": "24393:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                                "typeString": "function (contract IERC20,address,uint256)"
                              }
                            },
                            "id": 2150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24393:49:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2151,
                          "nodeType": "ExpressionStatement",
                          "src": "24393:49:17"
                        }
                      ]
                    }
                  },
                  "id": 2154,
                  "nodeType": "IfStatement",
                  "src": "23173:1280:17",
                  "trueBody": {
                    "id": 2119,
                    "nodeType": "Block",
                    "src": "23194:882:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2038,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1914,
                              "src": "23212:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 2039,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lastFrozenWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85,
                            "src": "23212:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23238:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "23212:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2054,
                        "nodeType": "IfStatement",
                        "src": "23208:268:17",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2043,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "23286:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2044,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "23286:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 2048,
                                      "name": "frozenEarlyWithdrawFeeTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42,
                                      "src": "23356:26:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 2045,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1914,
                                        "src": "23328:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                        }
                                      },
                                      "id": 2046,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lastFrozenWithdraw",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 85,
                                      "src": "23328:23:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2047,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11528,
                                    "src": "23328:27:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2049,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23328:55:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23286:97:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4f6e6c79204f6e6520576974686472617720616c6c6f77656420706572203320686f75727320647572696e6720667265657a65",
                                "id": 2051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23405:53:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d4c524e52190e528f441990393d4688894fe386de412d0b8ceeb98ae80fa76dc",
                                  "typeString": "literal_string \"Only One Withdraw allowed per 3 hours during freeze\""
                                },
                                "value": "Only One Withdraw allowed per 3 hours during freeze"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d4c524e52190e528f441990393d4688894fe386de412d0b8ceeb98ae80fa76dc",
                                  "typeString": "literal_string \"Only One Withdraw allowed per 3 hours during freeze\""
                                }
                              ],
                              "id": 2042,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "23257:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 2052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23257:219:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2053,
                          "nodeType": "ExpressionStatement",
                          "src": "23257:219:17"
                        }
                      },
                      {
                        "assignments": [
                          2056
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2056,
                            "mutability": "mutable",
                            "name": "withdrawalFee",
                            "nameLocation": "23499:13:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2119,
                            "src": "23491:21:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2055,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23491:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2064,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2062,
                              "name": "divisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "23597:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2059,
                                  "name": "frozenEarlyWithdrawFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "23552:22:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2057,
                                  "name": "availableStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1928,
                                  "src": "23515:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11558,
                                "src": "23515:36:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23515:60:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11573,
                            "src": "23515:81:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23515:90:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23491:114:17"
                      },
                      {
                        "expression": {
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2065,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1914,
                              "src": "23619:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 2067,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastFrozenWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85,
                            "src": "23619:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2068,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "23645:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "23645:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23619:41:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2071,
                        "nodeType": "ExpressionStatement",
                        "src": "23619:41:17"
                      },
                      {
                        "expression": {
                          "id": 2077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2072,
                            "name": "availableStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "23674:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2075,
                                "name": "withdrawalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2056,
                                "src": "23712:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2073,
                                "name": "availableStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1928,
                                "src": "23692:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11543,
                              "src": "23692:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23692:34:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23674:52:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2078,
                        "nodeType": "ExpressionStatement",
                        "src": "23674:52:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2079,
                            "name": "withdrawalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "23745:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2080,
                            "name": "totalFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "23761:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23745:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 2109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2104,
                              "name": "totalFrozen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "23957:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2107,
                                  "name": "withdrawalFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2056,
                                  "src": "23987:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2105,
                                  "name": "totalFrozen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 119,
                                  "src": "23971:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11543,
                                "src": "23971:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23971:30:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23957:44:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2110,
                          "nodeType": "ExpressionStatement",
                          "src": "23957:44:17"
                        },
                        "id": 2111,
                        "nodeType": "IfStatement",
                        "src": "23741:260:17",
                        "trueBody": {
                          "id": 2103,
                          "nodeType": "Block",
                          "src": "23774:177:17",
                          "statements": [
                            {
                              "assignments": [
                                2083
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2083,
                                  "mutability": "mutable",
                                  "name": "remainder",
                                  "nameLocation": "23800:9:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2103,
                                  "src": "23792:17:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2082,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23792:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2088,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2086,
                                    "name": "totalFrozen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 119,
                                    "src": "23830:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2084,
                                    "name": "withdrawalFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2056,
                                    "src": "23812:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2085,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11543,
                                  "src": "23812:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23812:30:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23792:50:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2094,
                                        "name": "bankroll",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66,
                                        "src": "23882:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                          "typeString": "contract BitcrushBankroll"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BitcrushBankroll_$3203",
                                          "typeString": "contract BitcrushBankroll"
                                        }
                                      ],
                                      "id": 2093,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "23874:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2092,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "23874:7:17",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2095,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "23874:17:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2096,
                                    "name": "remainder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2083,
                                    "src": "23893:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2089,
                                    "name": "crush",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63,
                                    "src": "23860:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                      "typeString": "contract CRUSHToken"
                                    }
                                  },
                                  "id": 2091,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11875,
                                  "src": "23860:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23860:43:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2098,
                              "nodeType": "ExpressionStatement",
                              "src": "23860:43:17"
                            },
                            {
                              "expression": {
                                "id": 2101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2099,
                                  "name": "totalFrozen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 119,
                                  "src": "23921:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2100,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23935:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "23921:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2102,
                              "nodeType": "ExpressionStatement",
                              "src": "23921:15:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2115,
                              "name": "reserveAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "24035:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2116,
                              "name": "withdrawalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "24051:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2112,
                              "name": "crush",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "24016:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                                "typeString": "contract CRUSHToken"
                              }
                            },
                            "id": 2114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11159,
                            "src": "24016:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24016:49:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2118,
                        "nodeType": "ExpressionStatement",
                        "src": "24016:49:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2158,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24482:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24482:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2160,
                        "name": "availableStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1928,
                        "src": "24494:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2155,
                        "name": "crush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "24463:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRUSHToken_$3289",
                          "typeString": "contract CRUSHToken"
                        }
                      },
                      "id": 2157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11159,
                      "src": "24463:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12374_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12374_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24463:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "24463:47:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2163,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "24561:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                          "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                        }
                      },
                      "id": 2164,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "24561:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24582:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24561:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2206,
                  "nodeType": "IfStatement",
                  "src": "24557:343:17",
                  "trueBody": {
                    "id": 2205,
                    "nodeType": "Block",
                    "src": "24585:315:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2167,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1914,
                              "src": "24603:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                              }
                            },
                            "id": 2168,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "24603:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2169,
                                "name": "addressIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "24617:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 2170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "24617:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24641:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "24617:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24603:39:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2199,
                        "nodeType": "IfStatement",
                        "src": "24599:257:17",
                        "trueBody": {
                          "id": 2198,
                          "nodeType": "Block",
                          "src": "24644:212:17",
                          "statements": [
                            {
                              "assignments": [
                                2175
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2175,
                                  "mutability": "mutable",
                                  "name": "lastAddress",
                                  "nameLocation": "24670:11:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2198,
                                  "src": "24662:19:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2174,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24662:7:17",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2182,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 2176,
                                  "name": "addressIndexes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98,
                                  "src": "24684:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2181,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2177,
                                      "name": "addressIndexes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98,
                                      "src": "24699:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "24699:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2179,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "24723:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "24699:25:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "24684:41:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24662:63:17"
                            },
                            {
                              "expression": {
                                "id": 2188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2183,
                                    "name": "addressIndexes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "24743:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 2186,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2184,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1914,
                                      "src": "24758:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                        "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                      }
                                    },
                                    "id": 2185,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "index",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83,
                                    "src": "24758:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "24743:26:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2187,
                                  "name": "lastAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2175,
                                  "src": "24772:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "24743:40:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2189,
                              "nodeType": "ExpressionStatement",
                              "src": "24743:40:17"
                            },
                            {
                              "expression": {
                                "id": 2196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2190,
                                      "name": "stakings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "24801:8:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserStaking_$90_storage_$",
                                        "typeString": "mapping(address => struct BitcrushStaking.UserStaking storage ref)"
                                      }
                                    },
                                    "id": 2192,
                                    "indexExpression": {
                                      "id": 2191,
                                      "name": "lastAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2175,
                                      "src": "24810:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24801:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStaking_$90_storage",
                                      "typeString": "struct BitcrushStaking.UserStaking storage ref"
                                    }
                                  },
                                  "id": 2193,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83,
                                  "src": "24801:27:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2194,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1914,
                                    "src": "24831:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStaking_$90_storage_ptr",
                                      "typeString": "struct BitcrushStaking.UserStaking storage pointer"
                                    }
                                  },
                                  "id": 2195,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83,
                                  "src": "24831:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24801:40:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2197,
                              "nodeType": "ExpressionStatement",
                              "src": "24801:40:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2200,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "24869:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "24869:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24869:20:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2204,
                        "nodeType": "ExpressionStatement",
                        "src": "24869:20:17"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2208,
                        "name": "totalPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "24932:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2207,
                      "name": "RewardPoolUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "24914:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24914:28:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2210,
                  "nodeType": "EmitStatement",
                  "src": "24909:33:17"
                }
              ]
            },
            "documentation": {
              "id": 1906,
              "nodeType": "StructuredDocumentation",
              "src": "22063:104:17",
              "text": "emergency withdraw funds of users\n @dev transfer all available funds of users to users wallet"
            },
            "functionSelector": "db2e21bc",
            "id": 2212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nameLocation": "22181:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22198:2:17"
            },
            "returnParameters": {
              "id": 1908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22208:0:17"
            },
            "scope": 2213,
            "src": "22172:2777:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2214,
        "src": "402:24549:17",
        "usedErrors": []
      }
    ],
    "src": "31:24921:17"
  },
  "bytecode": "60a0604052600a600155606460025560326003556105dc60045560be600555612a3060065560036007556007546203f4806200003c919062000134565b6008556109c4600955674c53ecdc18a60000601255600a601c553480156200006357600080fd5b506040516200308738038062003087833981016040819052620000869162000170565b6200009133620000e4565b6001600160a01b038316608052678ac7230489e800008211620000b45760128290555b600d80546001600160a01b0319166001600160a01b0392909216919091179055505042601d5543601455620001b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826200015257634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03811681146200016d57600080fd5b50565b6000806000606084860312156200018657600080fd5b8351620001938162000157565b602085015160408601519194509250620001ad8162000157565b809150509250925092565b608051612e3c6200024b6000396000818161059e01528181610824015281816108d20152818161094001528181610a3701528181610b7801528181610ff00152818161113301528181611170015281816111c50152818161182e01528181611be101528181611c5201528181611c8c015281816121f30152818161228e01528181612312015261234a0152612e3c6000f3fe608060405234801561001057600080fd5b50600436106103835760003560e01c8063817b1cd2116101de578063bde8a93e1161010f578063e39faaa4116100ad578063f2fde38b1161007c578063f2fde38b146106fd578063f40f0f5214610710578063f79ed94b14610723578063fa2b8a5d1461073657600080fd5b8063e39faaa4146106c5578063e3aeeb46146106d8578063ecb1c924146106eb578063ecfb49a3146106f457600080fd5b8063c61f1c0b116100e9578063c61f1c0b1461060b578063d54ad2a114610614578063db2e21bc1461061d578063dc6e13e11461062557600080fd5b8063bde8a93e146105d2578063c22982f4146105e5578063c53f871f146105f857600080fd5b8063a80a78821161017c578063b249e88e11610156578063b249e88e14610590578063b359a9f914610599578063bc063e1a146105c0578063bca5503d146105c957600080fd5b8063a80a788214610576578063a9f8d1811461057f578063aa8badc11461058857600080fd5b8063939d6237116101b8578063939d62371461053f5780639b05ddb3146105485780639e13900c14610550578063a775573a1461056357600080fd5b8063817b1cd2146105125780638da5cb5b1461051b5780638f44ebfc1461052c57600080fd5b806349535ef5116102b8578063668579c9116102565780636e74d2e2116102305780636e74d2e2146104db5780636f90e046146104e4578063715018a6146104f757806376e9e6c0146104ff57600080fd5b8063668579c9146104c05780636874d620146104c95780636903d0b6146104d257600080fd5b806351496bbd1161029257806351496bbd146104895780635832d5711461049157806364a9c480146104a45780636535fc66146104ad57600080fd5b806349535ef51461046e5780634b37f006146104775780634bf211b81461048057600080fd5b80632e0ae2f2116103255780633a53ed49116102ff5780633a53ed491461042c5780633a98ef391461043f57806341441d3b14610448578063445e76881461045b57600080fd5b80632e0ae2f21461040757806338ed019a1461041057806339cc13781461041957600080fd5b80631f2dc5ef116103615780631f2dc5ef146103d85780632533830a146103e157806326cba336146103ea578063289bac07146103ff57600080fd5b80630a3960bc146103885780630c657eb0146103a45780631e7f87bc146103cf575b600080fd5b61039160055481565b6040519081526020015b60405180910390f35b600b546103b7906001600160a01b031681565b6040516001600160a01b03909116815260200161039b565b61039160195481565b61039161271081565b610391601b5481565b6103fd6103f8366004612a81565b610745565b005b600f54610391565b61039160045481565b61039160115481565b610391610427366004612aaf565b6107be565b6103fd61043a366004612a81565b61080d565b610391600a5481565b6103fd610456366004612a81565b610929565b6103fd610469366004612ada565b610c9d565b61039160095481565b61039160075481565b61039160105481565b6103fd6113e4565b6103b761049f366004612a81565b6114a6565b610391601a5481565b6103fd6104bb366004612a81565b6114d0565b610391601d5481565b61039160065481565b61039160085481565b61039160025481565b6103fd6104f2366004612a81565b611541565b6103fd6115c0565b6103fd61050d366004612a81565b6115f6565b61039160175481565b6000546001600160a01b03166103b7565b6103fd61053a366004612b0a565b6116ce565b61039160135481565b6103fd61186d565b6103fd61055e366004612aaf565b611cbd565b6103fd610571366004612a81565b611d62565b61039160035481565b61039160145481565b6103fd611df9565b61039160155481565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b6103916103e881565b61039160015481565b6103fd6105e0366004612aaf565b611eb0565b6103fd6105f3366004612a81565b611f55565b6103fd610606366004612a81565b611fc5565b61039160125481565b61039160185481565b6103fd612035565b610681610633366004612aaf565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154905089565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200161039b565b6103fd6106d3366004612a81565b612493565b600c546103b7906001600160a01b031681565b610391601c5481565b61039160165481565b6103fd61070b366004612aaf565b612588565b61039161071e366004612aaf565b612620565b600d546103b7906001600160a01b031681565b610391678ac7230489e8000081565b6000546001600160a01b031633146107785760405162461bcd60e51b815260040161076f90612b4c565b60405180910390fd5b600081116107985760405162461bcd60e51b815260040161076f90612b81565b6103e881106107b95760405162461bcd60e51b815260040161076f90612bb8565b600155565b6001600160a01b0381166000908152600e602052604081206008810154601554825461080692916108009164e8d4a51000916107fa919061270e565b9061271a565b90612726565b9392505050565b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108979190612bef565b10156108b55760405162461bcd60e51b815260040161076f90612c08565b6016546108c29082612732565b6016556108fa6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461273e565b6016546040517f1ef37ab665f7c977b577275d7a49e72cd18d1143eccd1112f1198e4a39d1428c90600090a250565b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b39190612bef565b10156109d15760405162461bcd60e51b815260040161076f90612c08565b60008111610a1a5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081cdd185ada5b99c8185b5bdd5b9d60521b604482015260640161076f565b610a22611df9565b610a2a6113e4565b610a5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461273e565b601754610a6b57436010555b336000908152600e602052604090206001810154610ae357436003820155600f80546001818101835560008390527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290910180546001600160a01b031916331790559054610ad99190612c64565b6005820155610bd7565b6000610b0f826007015461080064e8d4a510006107fa601354876000015461270e90919063ffffffff16565b9050601654811115610b2057506016545b601654610b2d9082612726565b60165560088201546015548354600092610b579290916108009164e8d4a51000916107fa9161270e565b9050610b638282612732565b91508115610bd457610b9f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846127a9565b6002830154610bae9083612732565b6002840155601854610bc09083612732565b601855601a54610bd09082612732565b601a555b50505b6000600a54600014610c0557610bfe6017546107fa600a548661270e90919063ffffffff16565b9050610c08565b50815b601754610c159084612732565b601755600a54610c259082612732565b600a558154610c35574360038301555b8154610c419082612732565b808355601554610c5b9164e8d4a51000916107fa9161270e565b60088301558154601354610c799164e8d4a51000916107fa9161270e565b60078301556001820154610c8d9084612732565b6001830155504360049091015550565b610ca5611df9565b610cad6113e4565b336000908152600e6020526040812060078101546013548254929392610ce392916108009164e8d4a51000916107fa919061270e565b90506000610d11836008015461080064e8d4a510006107fa601554886000015461270e90919063ffffffff16565b9050601654821115610d235760165491505b601654610d309083612726565b601655610d3d8282612732565b601a54909250610d4d9082612732565b601a55436003840155600183015460195415610e0257610d8c610d856017546107fa876001015460195461270e90919063ffffffff16565b8290612726565b905085811015610dfd5760405162461bcd60e51b815260206004820152603660248201527f46726f7a656e2046756e64733a2043616e2774207769746864726177206d6f7260448201527565207468616e20417661696c61626c652066756e647360501b606482015260840161076f565b610e14565b600684015415610e1457600060068501555b85811015610e8a5760405162461bcd60e51b815260206004820152603f60248201527f576974686472617720616d6f756e742063616e206e6f7420626520677265617460448201527f6572207468616e20617661696c61626c65207374616b656420616d6f756e7400606482015260840161076f565b601754610e979087612726565b60175560018401548454600091610eb3916107fa908a9061270e565b6001860154909150610ec59088612726565b60018601558454610ed69082612726565b8555600a54610ee59082612726565b600a556013548554610f019164e8d4a51000916107fa9161270e565b60078601556015548554610f1f9164e8d4a51000916107fa9161270e565b6008860155610f2e8785612732565b601954909750156110de57600685015415610f72576006805490860154610f5491612732565b4211610f725760405162461bcd60e51b815260040161076f90612c7b565b6000610f8f6127106107fa6004548b61270e90919063ffffffff16565b4260068801559050610fa18882612726565b9750601954811115611069576000610fc46019548361272690919063ffffffff16565b600b5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015611039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105d9190612cce565b5050600060195561107a565b6019546110769082612726565b6019555b600b546040516316714ff560e21b8152600481018390526001600160a01b03909116906359c53fd490602401600060405180830381600087803b1580156110c057600080fd5b505af11580156110d4573d6000803e3d6000fd5b505050505061115e565b60085460048601546110ef91612732565b43101561115e5760006111136127106107fa6003548b61270e90919063ffffffff16565b905061111f8882612726565b600d5490985061115c906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836127a9565b505b8561119c576111976001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633896127a9565b61129a565b600c5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018990527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015611210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112349190612cce565b50600c54604051637efd381360e01b8152600481018990523360248201526001600160a01b0390911690637efd381390604401600060405180830381600087803b15801561128157600080fd5b505af1158015611295573d6000803e3d6000fd5b505050505b60028501546112a99085612732565b60028601556018546112bb9085612732565b60185560018501546113af57600f546112d690600190612c64565b85600501541461137b57600f8054600091906112f490600190612c64565b8154811061130457611304612ceb565b9060005260206000200160009054906101000a90046001600160a01b0316905080600f87600501548154811061133c5761133c612ceb565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055600589810154949093168252600e90526040902001555b600f80548061138c5761138c612d01565b600082815260209020810160001990810180546001600160a01b03191690550190555b6016546040517f1ef37ab665f7c977b577275d7a49e72cd18d1143eccd1112f1198e4a39d1428c90600090a250505050505050565b600a546113ed57565b600b54604080516345c9c1d160e01b815290516000926001600160a01b0316916345c9c1d1916004808301926020929190829003018187875af1158015611438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145c9190612bef565b9050806114665750565b601b546114739082612732565b601b55600a5460009061148f906107fa8464e8d4a5100061270e565b60155490915061149f9082612732565b6015555050565b600f81815481106114b657600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146114fa5760405162461bcd60e51b815260040161076f90612b4c565b6000811161151a5760405162461bcd60e51b815260040161076f90612b81565b6103e881111561153c5760405162461bcd60e51b815260040161076f90612bb8565b600555565b6000546001600160a01b0316331461156b5760405162461bcd60e51b815260040161076f90612b4c565b600081116115bb5760405162461bcd60e51b815260206004820152601b60248201527f54696d65206d7573742062652067726561746572207468616e20300000000000604482015260640161076f565b600855565b6000546001600160a01b031633146115ea5760405162461bcd60e51b815260040161076f90612b4c565b6115f460006127de565b565b6000546001600160a01b031633146116205760405162461bcd60e51b815260040161076f90612b4c565b600081116116655760405162461bcd60e51b815260206004820152601260248201527104c696d69742063616e206e6f7420626520360741b604482015260640161076f565b601e81106116c95760405162461bcd60e51b815260206004820152602b60248201527f4d6178206175746f636f6d706f756e64206c696d69742063616e6e6f7420626560448201526a020677265617465722033360ac1b606482015260840161076f565b601c55565b600b546001600160a01b031633146117285760405162461bcd60e51b815260206004820152601760248201527f43616c6c6574206d7573742062652062616e6b726f6c6c000000000000000000604482015260640161076f565b60195460175461173791612726565b8311156117ac5760405162461bcd60e51b815260206004820152603d60248201527f467265657a6520616d6f756e742073686f756c64206265206c6573732074686160448201527f6e206f7220657175616c20746f20617661696c61626c652066756e6473000000606482015260840161076f565b6019546117b99084612732565b601955604051630f62cf8d60e41b8152600481018490526001600160a01b03838116602483015282919082169063f62cf8d090604401600060405180830381600087803b15801561180957600080fd5b505af115801561181d573d6000803e3d6000fd5b506118579250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905083866127a9565b61185f611df9565b6118676113e4565b50505050565b4360105411156118bf5760405162461bcd60e51b815260206004820181905260248201527f436f6d706f756e6420416c6c206e6f7420796574206170706c696361626c652e604482015260640161076f565b6000601754116119115760405162461bcd60e51b815260206004820152601a60248201527f4e6f205374616b6564207265776172647320746f20636c61696d000000000000604482015260640161076f565b601154600f54600091829182918291811061192a575060005b600f54601c548111158061194d5750600f54601c5461194a908490612732565b10155b1561195b5750600f5461196c565b601c54611969908390612732565b90505b6119746113e4565b61197c611df9565b815b81811015611ba2576000600e6000600f848154811061199f5761199f612ceb565b60009182526020808320909101546001600160a01b031683528201929092526040018120600781015460135482549294506119e8926108009164e8d4a51000916107fa9161270e565b90506119f48682612732565b6016541015611a0d57601654611a0a9087612726565b90505b6007820154611a1c9082612732565b60078301558015611a3457611a318682612732565b95505b6000611a60836008015461080064e8d4a510006107fa601554886000015461270e90919063ffffffff16565b6008840154909150611a729082612732565b6008840155611a818282612732565b91508115611b8757601a54611a969082612732565b601a55601854611aa69083612732565b601855600254600090611ac290612710906107fa90869061270e565b9050611ace8b82612732565b9a506000611aed6127106107fa6001548761270e90919063ffffffff16565b9050611af98a82612732565b99506000611b186127106107fa6005548861270e90919063ffffffff16565b9050611b248c82612732565b9b50611b308584612726565b9450611b3c8583612726565b9450611b488582612726565b6002870154909550611b5a9086612732565b60028701556001860154611b6e9086612732565b6001870155601754611b809086612732565b6017555050505b50504360039091015580611b9a81612d17565b91505061197e565b506011819055600f548110611bb75760006011555b601654611bc49084612726565b60165543601055604051630852cd8d60e31b8152600481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b158015611c2d57600080fd5b505af1158015611c41573d6000803e3d6000fd5b50611c7b9250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905033866127a9565b600d54611cb5906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116876127a9565b505050505050565b6000546001600160a01b03163314611ce75760405162461bcd60e51b815260040161076f90612b4c565b600c546001600160a01b031615611d405760405162461bcd60e51b815260206004820152601f60248201527f4c6976652057616c6c6574206164647265737320616c72656164792073657400604482015260640161076f565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611d8c5760405162461bcd60e51b815260040161076f90612b4c565b678ac7230489e80000811115611df45760405162461bcd60e51b815260206004820152602760248201527f43727573682050657220426c6f636b2063616e206e6f74206265206d6f72652060448201526607468616e2031360cc1b606482015260840161076f565b601255565b6014544311611e0457565b601754611e115743601455565b60125460195415611e4657611e43611e3c6127106107fa60095460125461270e90919063ffffffff16565b8290612732565b90505b601654611e51575060005b6000611e686014544361272690919063ffffffff16565b90506000611e94600a546107fa64e8d4a51000611e8e878761270e90919063ffffffff16565b9061270e565b601354909150611ea49082612732565b60135550504360145550565b6000546001600160a01b03163314611eda5760405162461bcd60e51b815260040161076f90612b4c565b600b546001600160a01b031615611f335760405162461bcd60e51b815260206004820152601c60248201527f42616e6b726f6c6c206164647265737320616c72656164792073657400000000604482015260640161076f565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611f7f5760405162461bcd60e51b815260040161076f90612b4c565b60008111611f9f5760405162461bcd60e51b815260040161076f90612b81565b6103e88110611fc05760405162461bcd60e51b815260040161076f90612bb8565b600355565b6000546001600160a01b03163314611fef5760405162461bcd60e51b815260040161076f90612b4c565b6000811161200f5760405162461bcd60e51b815260040161076f90612b81565b6103e881106120305760405162461bcd60e51b815260040161076f90612bb8565b600255565b61203d611df9565b336000908152600e6020526040902043600382015560018101546019541561208857612081610d856017546107fa856001015460195461270e90919063ffffffff16565b905061209a565b60068201541561209a57600060068301555b6017546120a79082612726565b601755600182015482546000916120c3916107fa90859061270e565b60018401549091506120d59083612726565b600184015582546120e69082612726565b8355600a546120f59082612726565b600a5560135483546121119164e8d4a51000916107fa9161270e565b6007840155601554835461212f9164e8d4a51000916107fa9161270e565b6008840155601954156122bd5760068301541561217557600680549084015461215791612732565b42116121755760405162461bcd60e51b815260040161076f90612c7b565b60006121926127106107fa6004548661270e90919063ffffffff16565b42600686015590506121a48382612726565b925060195481111561226c5760006121c76019548361272690919063ffffffff16565b600b5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801561223c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122609190612cce565b5050600060195561227d565b6019546122799082612726565b6019555b600d546122b7906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836127a9565b5061233d565b60085460048401546122ce91612732565b43101561233d5760006122f26127106107fa6003548661270e90919063ffffffff16565b90506122fe8382612726565b600d5490935061233b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836127a9565b505b6123716001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846127a9565b600183015461246257600f5461238990600190612c64565b83600501541461242e57600f8054600091906123a790600190612c64565b815481106123b7576123b7612ceb565b9060005260206000200160009054906101000a90046001600160a01b0316905080600f8560050154815481106123ef576123ef612ceb565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055600587810154949093168252600e90526040902001555b600f80548061243f5761243f612d01565b600082815260209020810160001990810180546001600160a01b03191690550190555b6016546040517f1ef37ab665f7c977b577275d7a49e72cd18d1143eccd1112f1198e4a39d1428c90600090a2505050565b600b546001600160a01b031633146124ed5760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206d7573742062652062616e6b726f6c6c000000000000000000604482015260640161076f565b6019548111156125655760405162461bcd60e51b815260206004820152603c60248201527f756e667265657a6520616d6f756e742063616e7420626520677265617465722060448201527f7468616e2063757272656e746c792066726f7a656e20616d6f756e7400000000606482015260840161076f565b6019546125729082612726565b60195561257d611df9565b6125856113e4565b50565b6000546001600160a01b031633146125b25760405162461bcd60e51b815260040161076f90612b4c565b6001600160a01b0381166126175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161076f565b612585816127de565b6001600160a01b0381166000908152600e602052604081206012546019541561266657612663611e3c6127106107fa60095460125461270e90919063ffffffff16565b90505b601654612671575060005b601354601454431180156126865750600a5415155b156126dd5760006126a26014544361272690919063ffffffff16565b905060006126c8600a546107fa64e8d4a51000611e8e888761270e90919063ffffffff16565b6013549091506126d89082612732565b925050505b612705836007015461080064e8d4a510006107fa85886000015461270e90919063ffffffff16565b95945050505050565b60006108068284612d32565b60006108068284612d51565b60006108068284612c64565b60006108068284612d73565b6040516001600160a01b03808516602483015283166044820152606481018290526118679085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261282e565b6040516001600160a01b0383166024820152604481018290526127d990849063a9059cbb60e01b90606401612772565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000612883826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129009092919063ffffffff16565b8051909150156127d957808060200190518101906128a19190612cce565b6127d95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161076f565b606061290f8484600085612917565b949350505050565b6060824710156129785760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161076f565b6001600160a01b0385163b6129cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161076f565b600080866001600160a01b031685876040516129eb9190612db7565b60006040518083038185875af1925050503d8060008114612a28576040519150601f19603f3d011682016040523d82523d6000602084013e612a2d565b606091505b5091509150612a3d828286612a48565b979650505050505050565b60608315612a57575081610806565b825115612a675782518084602001fd5b8160405162461bcd60e51b815260040161076f9190612dd3565b600060208284031215612a9357600080fd5b5035919050565b6001600160a01b038116811461258557600080fd5b600060208284031215612ac157600080fd5b813561080681612a9a565b801515811461258557600080fd5b60008060408385031215612aed57600080fd5b823591506020830135612aff81612acc565b809150509250929050565b600080600060608486031215612b1f57600080fd5b833592506020840135612b3181612a9a565b91506040840135612b4181612a9a565b809150509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f466565206d7573742062652067726561746572207468616e2030000000000000604082015260600190565b60208082526019908201527f466565206d757374206265206c657373207468616e2031302500000000000000604082015260600190565b600060208284031215612c0157600080fd5b5051919050565b60208082526026908201527f496e73756666696369656e7420437275736820746f6b656e7320666f7220747260408201526530b739b332b960d11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082821015612c7657612c76612c4e565b500390565b60208082526033908201527f4f6e6c79204f6e6520576974686472617720616c6c6f77656420706572203320604082015272686f75727320647572696e6720667265657a6560681b606082015260800190565b600060208284031215612ce057600080fd5b815161080681612acc565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000600019821415612d2b57612d2b612c4e565b5060010190565b6000816000190483118215151615612d4c57612d4c612c4e565b500290565b600082612d6e57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612d8657612d86612c4e565b500190565b60005b83811015612da6578181015183820152602001612d8e565b838111156118675750506000910152565b60008251612dc9818460208701612d8b565b9190910192915050565b6020815260008251806020840152612df2816040850160208701612d8b565b601f01601f1916919091016040019291505056fea264697066735822122016fad45700e4e2e7141164aa7f88556eb99f0a943364762557b2b289ba5953a664736f6c634300080c0033",
  "bytecodeSha1": "928fbd27bf2116c5eeaf11e12b95c0374ee7c4d3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "BitcrushStaking",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "254": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {
        "Address.functionCallWithValue": {
          "251": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "252": [
            7735,
            7742,
            false
          ],
          "253": [
            7876,
            7897,
            false
          ]
        }
      },
      "12": {},
      "16": {},
      "17": {
        "BitcrushStaking.addRewardToPool": {
          "194": [
            4234,
            4272,
            true
          ]
        },
        "BitcrushStaking.compoundAll": {
          "220": [
            14596,
            14633,
            true
          ],
          "221": [
            14709,
            14724,
            true
          ],
          "222": [
            14966,
            15009,
            false
          ],
          "223": [
            15105,
            15147,
            true
          ],
          "224": [
            15163,
            15221,
            false
          ],
          "225": [
            15721,
            15768,
            false
          ],
          "226": [
            15948,
            15964,
            false
          ],
          "227": [
            16419,
            16435,
            false
          ],
          "228": [
            17806,
            17849,
            false
          ]
        },
        "BitcrushStaking.emergencyWithdraw": {
          "238": [
            22413,
            22428,
            false
          ],
          "239": [
            22585,
            22612,
            false
          ],
          "240": [
            23177,
            23192,
            false
          ],
          "241": [
            23212,
            23239,
            false
          ],
          "242": [
            23286,
            23383,
            true
          ],
          "243": [
            23745,
            23772,
            false
          ],
          "244": [
            24099,
            24160,
            false
          ],
          "245": [
            24603,
            24642,
            false
          ]
        },
        "BitcrushStaking.enterStaking": {
          "195": [
            6591,
            6629,
            true
          ],
          "196": [
            6711,
            6722,
            true
          ],
          "197": [
            7374,
            7393,
            false
          ],
          "198": [
            7705,
            7716,
            false
          ],
          "199": [
            8055,
            8071,
            false
          ]
        },
        "BitcrushStaking.freezeStaking": {
          "218": [
            18458,
            18489,
            true
          ],
          "219": [
            18638,
            18677,
            true
          ]
        },
        "BitcrushStaking.leaveStaking": {
          "200": [
            9439,
            9457,
            false
          ],
          "201": [
            9747,
            9762,
            false
          ],
          "202": [
            9937,
            9963,
            true
          ],
          "203": [
            10072,
            10099,
            false
          ],
          "204": [
            10183,
            10209,
            true
          ],
          "205": [
            10823,
            10838,
            false
          ],
          "206": [
            10858,
            10885,
            false
          ],
          "207": [
            10932,
            11029,
            true
          ],
          "208": [
            11363,
            11390,
            false
          ],
          "209": [
            11707,
            11768,
            false
          ],
          "210": [
            12021,
            12041,
            false
          ],
          "211": [
            12429,
            12468,
            false
          ]
        },
        "BitcrushStaking.pendingReward": {
          "248": [
            13171,
            13186,
            false
          ],
          "249": [
            13429,
            13459,
            false
          ],
          "250": [
            13463,
            13479,
            false
          ]
        },
        "BitcrushStaking.setAutoCompoundLimit": {
          "216": [
            21904,
            21914,
            true
          ],
          "217": [
            21955,
            21966,
            true
          ]
        },
        "BitcrushStaking.setBankroll": {
          "233": [
            3469,
            3500,
            true
          ]
        },
        "BitcrushStaking.setCrushPerBlock": {
          "230": [
            6256,
            6286,
            true
          ]
        },
        "BitcrushStaking.setEarlyWithdrawFee": {
          "234": [
            20844,
            20852,
            true
          ],
          "235": [
            20901,
            20915,
            true
          ]
        },
        "BitcrushStaking.setEarlyWithdrawFeeTime": {
          "215": [
            21590,
            21599,
            true
          ]
        },
        "BitcrushStaking.setLiveWallet": {
          "229": [
            3858,
            3891,
            true
          ]
        },
        "BitcrushStaking.setPerformanceFeeBurn": {
          "236": [
            20483,
            20491,
            true
          ],
          "237": [
            20540,
            20554,
            true
          ]
        },
        "BitcrushStaking.setPerformanceFeeCompounder": {
          "192": [
            20112,
            20120,
            true
          ],
          "193": [
            20169,
            20183,
            true
          ]
        },
        "BitcrushStaking.setPerformanceFeeReserve": {
          "213": [
            21213,
            21221,
            true
          ],
          "214": [
            21270,
            21285,
            true
          ]
        },
        "BitcrushStaking.unfreezeStaking": {
          "246": [
            19270,
            19301,
            true
          ],
          "247": [
            19360,
            19382,
            true
          ]
        },
        "BitcrushStaking.updateDistribution": {
          "231": [
            4812,
            4843,
            false
          ],
          "232": [
            5019,
            5034,
            false
          ]
        },
        "BitcrushStaking.updateProfits": {
          "212": [
            5837,
            5858,
            false
          ]
        }
      },
      "18": {},
      "19": {},
      "2": {},
      "22": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "255": [
            3735,
            3756,
            false
          ],
          "256": [
            3819,
            3849,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "182": [
            2378,
            2395
          ],
          "183": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "81": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "170": [
            1998,
            2071
          ],
          "171": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Address.functionCall": {
          "185": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "186": [
            5137,
            5218
          ],
          "188": [
            5228,
            5288
          ],
          "189": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "187": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "190": [
            7758,
            7775
          ],
          "191": [
            8202,
            8222
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "16": {
        "SafeMath.add": {
          "179": [
            2818,
            2830
          ]
        },
        "SafeMath.div": {
          "177": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "176": [
            3528,
            3540
          ]
        },
        "SafeMath.sub": {
          "178": [
            3185,
            3197
          ]
        }
      },
      "17": {
        "BitcrushStaking.addRewardToPool": {
          "7": [
            4213,
            4336
          ],
          "8": [
            4346,
            4380
          ],
          "9": [
            4390,
            4448
          ],
          "10": [
            4458,
            4491
          ]
        },
        "BitcrushStaking.compoundAll": {
          "92": [
            14575,
            14691
          ],
          "93": [
            14701,
            14755
          ],
          "94": [
            15011,
            15025
          ],
          "95": [
            15232,
            15266
          ],
          "96": [
            15281,
            15327
          ],
          "97": [
            15338,
            15353
          ],
          "98": [
            15363,
            15383
          ],
          "99": [
            15788,
            15835
          ],
          "100": [
            15863,
            15930
          ],
          "101": [
            15982,
            16037
          ],
          "102": [
            16239,
            16342
          ],
          "103": [
            16356,
            16401
          ],
          "104": [
            16455,
            16514
          ],
          "105": [
            16532,
            16577
          ],
          "106": [
            16721,
            16762
          ],
          "107": [
            16918,
            16970
          ],
          "108": [
            17122,
            17169
          ],
          "109": [
            17187,
            17230
          ],
          "110": [
            17248,
            17292
          ],
          "111": [
            17310,
            17353
          ],
          "112": [
            17371,
            17480
          ],
          "113": [
            17498,
            17605
          ],
          "114": [
            17624,
            17667
          ],
          "115": [
            17695,
            17741
          ],
          "116": [
            15438,
            15441
          ],
          "117": [
            17761,
            17792
          ],
          "118": [
            17865,
            17887
          ],
          "119": [
            17907,
            17951
          ],
          "120": [
            17961,
            17997
          ],
          "121": [
            18007,
            18030
          ],
          "122": [
            18040,
            18088
          ],
          "123": [
            18098,
            18148
          ]
        },
        "BitcrushStaking.emergencyWithdraw": {
          "141": [
            22218,
            22238
          ],
          "142": [
            22306,
            22345
          ],
          "143": [
            22444,
            22564
          ],
          "144": [
            22628,
            22655
          ],
          "145": [
            22676,
            22722
          ],
          "146": [
            22845,
            22903
          ],
          "147": [
            22913,
            22958
          ],
          "148": [
            22968,
            23013
          ],
          "149": [
            23023,
            23086
          ],
          "150": [
            23096,
            23162
          ],
          "151": [
            23257,
            23476
          ],
          "152": [
            23619,
            23660
          ],
          "153": [
            23674,
            23726
          ],
          "154": [
            23860,
            23903
          ],
          "155": [
            23921,
            23936
          ],
          "156": [
            23957,
            24001
          ],
          "157": [
            24016,
            24065
          ],
          "158": [
            24327,
            24379
          ],
          "159": [
            24393,
            24442
          ],
          "160": [
            24463,
            24510
          ],
          "161": [
            24743,
            24783
          ],
          "162": [
            24801,
            24841
          ],
          "163": [
            24869,
            24889
          ],
          "164": [
            24909,
            24942
          ]
        },
        "BitcrushStaking.enterStaking": {
          "11": [
            6570,
            6693
          ],
          "12": [
            6703,
            6749
          ],
          "13": [
            6760,
            6780
          ],
          "14": [
            6790,
            6805
          ],
          "15": [
            6815,
            6873
          ],
          "16": [
            6919,
            6955
          ],
          "17": [
            7075,
            7114
          ],
          "18": [
            7128,
            7159
          ],
          "19": [
            7173,
            7211
          ],
          "20": [
            7395,
            7414
          ],
          "21": [
            7428,
            7462
          ],
          "22": [
            7651,
            7687
          ],
          "23": [
            7736,
            7775
          ],
          "24": [
            7793,
            7845
          ],
          "25": [
            7863,
            7903
          ],
          "26": [
            7921,
            7981
          ],
          "27": [
            8085,
            8142
          ],
          "28": [
            8157,
            8180
          ],
          "29": [
            8191,
            8229
          ],
          "30": [
            8239,
            8283
          ],
          "31": [
            8329,
            8368
          ],
          "32": [
            8388,
            8432
          ],
          "33": [
            8442,
            8508
          ],
          "34": [
            8518,
            8581
          ],
          "35": [
            8591,
            8641
          ],
          "36": [
            8651,
            8686
          ]
        },
        "BitcrushStaking.freezeStaking": {
          "85": [
            18450,
            18517
          ],
          "86": [
            18617,
            18764
          ],
          "87": [
            18774,
            18812
          ],
          "88": [
            18893,
            18941
          ],
          "89": [
            18951,
            18999
          ],
          "90": [
            19009,
            19029
          ],
          "91": [
            19039,
            19054
          ]
        },
        "BitcrushStaking.indexesLength": {
          "0": [
            19831,
            19871
          ]
        },
        "BitcrushStaking.leaveStaking": {
          "37": [
            9085,
            9105
          ],
          "38": [
            9115,
            9130
          ],
          "39": [
            9459,
            9477
          ],
          "40": [
            9487,
            9520
          ],
          "41": [
            9530,
            9562
          ],
          "42": [
            9572,
            9630
          ],
          "43": [
            9640,
            9679
          ],
          "44": [
            9778,
            9898
          ],
          "45": [
            9912,
            10051
          ],
          "46": [
            10115,
            10142
          ],
          "47": [
            10162,
            10298
          ],
          "48": [
            10308,
            10346
          ],
          "49": [
            10461,
            10511
          ],
          "50": [
            10521,
            10566
          ],
          "51": [
            10576,
            10621
          ],
          "52": [
            10631,
            10694
          ],
          "53": [
            10704,
            10770
          ],
          "54": [
            10780,
            10809
          ],
          "55": [
            10903,
            11122
          ],
          "56": [
            11253,
            11294
          ],
          "57": [
            11308,
            11344
          ],
          "58": [
            11478,
            11521
          ],
          "59": [
            11539,
            11554
          ],
          "60": [
            11575,
            11619
          ],
          "61": [
            11634,
            11673
          ],
          "62": [
            11897,
            11933
          ],
          "63": [
            11947,
            11996
          ],
          "64": [
            12043,
            12082
          ],
          "65": [
            12111,
            12154
          ],
          "66": [
            12168,
            12217
          ],
          "67": [
            12237,
            12288
          ],
          "68": [
            12298,
            12337
          ],
          "69": [
            12569,
            12609
          ],
          "70": [
            12627,
            12667
          ],
          "71": [
            12695,
            12715
          ],
          "72": [
            12735,
            12768
          ]
        },
        "BitcrushStaking.pendingProfits": {
          "6": [
            14231,
            14349
          ]
        },
        "BitcrushStaking.pendingReward": {
          "172": [
            13200,
            13307
          ],
          "173": [
            13337,
            13355
          ],
          "174": [
            13716,
            13774
          ],
          "175": [
            13794,
            13914
          ]
        },
        "BitcrushStaking.setAutoCompoundLimit": {
          "82": [
            21896,
            21937
          ],
          "83": [
            21947,
            22014
          ],
          "84": [
            22024,
            22050
          ]
        },
        "BitcrushStaking.setBankroll": {
          "133": [
            3448,
            3554
          ],
          "134": [
            3564,
            3584
          ]
        },
        "BitcrushStaking.setCrushPerBlock": {
          "126": [
            6235,
            6351
          ],
          "127": [
            6361,
            6384
          ]
        },
        "BitcrushStaking.setEarlyWithdrawFee": {
          "135": [
            20836,
            20883
          ],
          "136": [
            20893,
            20945
          ],
          "137": [
            20955,
            20978
          ]
        },
        "BitcrushStaking.setEarlyWithdrawFeeTime": {
          "79": [
            21582,
            21631
          ],
          "80": [
            21641,
            21669
          ]
        },
        "BitcrushStaking.setLiveWallet": {
          "124": [
            3837,
            3948
          ],
          "125": [
            3958,
            3982
          ]
        },
        "BitcrushStaking.setPerformanceFeeBurn": {
          "138": [
            20475,
            20522
          ],
          "139": [
            20532,
            20584
          ],
          "140": [
            20594,
            20619
          ]
        },
        "BitcrushStaking.setPerformanceFeeCompounder": {
          "3": [
            20104,
            20151
          ],
          "4": [
            20161,
            20213
          ],
          "5": [
            20223,
            20254
          ]
        },
        "BitcrushStaking.setPerformanceFeeReserve": {
          "76": [
            21205,
            21252
          ],
          "77": [
            21262,
            21315
          ],
          "78": [
            21325,
            21353
          ]
        },
        "BitcrushStaking.unfreezeStaking": {
          "165": [
            19262,
            19329
          ],
          "166": [
            19339,
            19468
          ],
          "167": [
            19478,
            19516
          ],
          "168": [
            19526,
            19546
          ],
          "169": [
            19556,
            19571
          ]
        },
        "BitcrushStaking.updateDistribution": {
          "128": [
            4897,
            4927
          ],
          "129": [
            5048,
            5155
          ],
          "130": [
            5185,
            5203
          ],
          "131": [
            5397,
            5450
          ],
          "132": [
            5460,
            5490
          ]
        },
        "BitcrushStaking.updateProfits": {
          "73": [
            5860,
            5867
          ],
          "74": [
            5876,
            5945
          ],
          "75": [
            6029,
            6082
          ]
        }
      },
      "18": {},
      "19": {},
      "2": {},
      "22": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "184": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "181": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "180": [
            1050,
            1146
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "BitcrushBankroll",
    "BitcrushLiveWallet",
    "CRUSHToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103835760003560e01c8063817b1cd2116101de578063bde8a93e1161010f578063e39faaa4116100ad578063f2fde38b1161007c578063f2fde38b146106fd578063f40f0f5214610710578063f79ed94b14610723578063fa2b8a5d1461073657600080fd5b8063e39faaa4146106c5578063e3aeeb46146106d8578063ecb1c924146106eb578063ecfb49a3146106f457600080fd5b8063c61f1c0b116100e9578063c61f1c0b1461060b578063d54ad2a114610614578063db2e21bc1461061d578063dc6e13e11461062557600080fd5b8063bde8a93e146105d2578063c22982f4146105e5578063c53f871f146105f857600080fd5b8063a80a78821161017c578063b249e88e11610156578063b249e88e14610590578063b359a9f914610599578063bc063e1a146105c0578063bca5503d146105c957600080fd5b8063a80a788214610576578063a9f8d1811461057f578063aa8badc11461058857600080fd5b8063939d6237116101b8578063939d62371461053f5780639b05ddb3146105485780639e13900c14610550578063a775573a1461056357600080fd5b8063817b1cd2146105125780638da5cb5b1461051b5780638f44ebfc1461052c57600080fd5b806349535ef5116102b8578063668579c9116102565780636e74d2e2116102305780636e74d2e2146104db5780636f90e046146104e4578063715018a6146104f757806376e9e6c0146104ff57600080fd5b8063668579c9146104c05780636874d620146104c95780636903d0b6146104d257600080fd5b806351496bbd1161029257806351496bbd146104895780635832d5711461049157806364a9c480146104a45780636535fc66146104ad57600080fd5b806349535ef51461046e5780634b37f006146104775780634bf211b81461048057600080fd5b80632e0ae2f2116103255780633a53ed49116102ff5780633a53ed491461042c5780633a98ef391461043f57806341441d3b14610448578063445e76881461045b57600080fd5b80632e0ae2f21461040757806338ed019a1461041057806339cc13781461041957600080fd5b80631f2dc5ef116103615780631f2dc5ef146103d85780632533830a146103e157806326cba336146103ea578063289bac07146103ff57600080fd5b80630a3960bc146103885780630c657eb0146103a45780631e7f87bc146103cf575b600080fd5b61039160055481565b6040519081526020015b60405180910390f35b600b546103b7906001600160a01b031681565b6040516001600160a01b03909116815260200161039b565b61039160195481565b61039161271081565b610391601b5481565b6103fd6103f8366004612a81565b610745565b005b600f54610391565b61039160045481565b61039160115481565b610391610427366004612aaf565b6107be565b6103fd61043a366004612a81565b61080d565b610391600a5481565b6103fd610456366004612a81565b610929565b6103fd610469366004612ada565b610c9d565b61039160095481565b61039160075481565b61039160105481565b6103fd6113e4565b6103b761049f366004612a81565b6114a6565b610391601a5481565b6103fd6104bb366004612a81565b6114d0565b610391601d5481565b61039160065481565b61039160085481565b61039160025481565b6103fd6104f2366004612a81565b611541565b6103fd6115c0565b6103fd61050d366004612a81565b6115f6565b61039160175481565b6000546001600160a01b03166103b7565b6103fd61053a366004612b0a565b6116ce565b61039160135481565b6103fd61186d565b6103fd61055e366004612aaf565b611cbd565b6103fd610571366004612a81565b611d62565b61039160035481565b61039160145481565b6103fd611df9565b61039160155481565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b6103916103e881565b61039160015481565b6103fd6105e0366004612aaf565b611eb0565b6103fd6105f3366004612a81565b611f55565b6103fd610606366004612a81565b611fc5565b61039160125481565b61039160185481565b6103fd612035565b610681610633366004612aaf565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154905089565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200161039b565b6103fd6106d3366004612a81565b612493565b600c546103b7906001600160a01b031681565b610391601c5481565b61039160165481565b6103fd61070b366004612aaf565b612588565b61039161071e366004612aaf565b612620565b600d546103b7906001600160a01b031681565b610391678ac7230489e8000081565b6000546001600160a01b031633146107785760405162461bcd60e51b815260040161076f90612b4c565b60405180910390fd5b600081116107985760405162461bcd60e51b815260040161076f90612b81565b6103e881106107b95760405162461bcd60e51b815260040161076f90612bb8565b600155565b6001600160a01b0381166000908152600e602052604081206008810154601554825461080692916108009164e8d4a51000916107fa919061270e565b9061271a565b90612726565b9392505050565b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108979190612bef565b10156108b55760405162461bcd60e51b815260040161076f90612c08565b6016546108c29082612732565b6016556108fa6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461273e565b6016546040517f1ef37ab665f7c977b577275d7a49e72cd18d1143eccd1112f1198e4a39d1428c90600090a250565b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b39190612bef565b10156109d15760405162461bcd60e51b815260040161076f90612c08565b60008111610a1a5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081cdd185ada5b99c8185b5bdd5b9d60521b604482015260640161076f565b610a22611df9565b610a2a6113e4565b610a5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461273e565b601754610a6b57436010555b336000908152600e602052604090206001810154610ae357436003820155600f80546001818101835560008390527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290910180546001600160a01b031916331790559054610ad99190612c64565b6005820155610bd7565b6000610b0f826007015461080064e8d4a510006107fa601354876000015461270e90919063ffffffff16565b9050601654811115610b2057506016545b601654610b2d9082612726565b60165560088201546015548354600092610b579290916108009164e8d4a51000916107fa9161270e565b9050610b638282612732565b91508115610bd457610b9f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846127a9565b6002830154610bae9083612732565b6002840155601854610bc09083612732565b601855601a54610bd09082612732565b601a555b50505b6000600a54600014610c0557610bfe6017546107fa600a548661270e90919063ffffffff16565b9050610c08565b50815b601754610c159084612732565b601755600a54610c259082612732565b600a558154610c35574360038301555b8154610c419082612732565b808355601554610c5b9164e8d4a51000916107fa9161270e565b60088301558154601354610c799164e8d4a51000916107fa9161270e565b60078301556001820154610c8d9084612732565b6001830155504360049091015550565b610ca5611df9565b610cad6113e4565b336000908152600e6020526040812060078101546013548254929392610ce392916108009164e8d4a51000916107fa919061270e565b90506000610d11836008015461080064e8d4a510006107fa601554886000015461270e90919063ffffffff16565b9050601654821115610d235760165491505b601654610d309083612726565b601655610d3d8282612732565b601a54909250610d4d9082612732565b601a55436003840155600183015460195415610e0257610d8c610d856017546107fa876001015460195461270e90919063ffffffff16565b8290612726565b905085811015610dfd5760405162461bcd60e51b815260206004820152603660248201527f46726f7a656e2046756e64733a2043616e2774207769746864726177206d6f7260448201527565207468616e20417661696c61626c652066756e647360501b606482015260840161076f565b610e14565b600684015415610e1457600060068501555b85811015610e8a5760405162461bcd60e51b815260206004820152603f60248201527f576974686472617720616d6f756e742063616e206e6f7420626520677265617460448201527f6572207468616e20617661696c61626c65207374616b656420616d6f756e7400606482015260840161076f565b601754610e979087612726565b60175560018401548454600091610eb3916107fa908a9061270e565b6001860154909150610ec59088612726565b60018601558454610ed69082612726565b8555600a54610ee59082612726565b600a556013548554610f019164e8d4a51000916107fa9161270e565b60078601556015548554610f1f9164e8d4a51000916107fa9161270e565b6008860155610f2e8785612732565b601954909750156110de57600685015415610f72576006805490860154610f5491612732565b4211610f725760405162461bcd60e51b815260040161076f90612c7b565b6000610f8f6127106107fa6004548b61270e90919063ffffffff16565b4260068801559050610fa18882612726565b9750601954811115611069576000610fc46019548361272690919063ffffffff16565b600b5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015611039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105d9190612cce565b5050600060195561107a565b6019546110769082612726565b6019555b600b546040516316714ff560e21b8152600481018390526001600160a01b03909116906359c53fd490602401600060405180830381600087803b1580156110c057600080fd5b505af11580156110d4573d6000803e3d6000fd5b505050505061115e565b60085460048601546110ef91612732565b43101561115e5760006111136127106107fa6003548b61270e90919063ffffffff16565b905061111f8882612726565b600d5490985061115c906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836127a9565b505b8561119c576111976001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633896127a9565b61129a565b600c5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018990527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015611210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112349190612cce565b50600c54604051637efd381360e01b8152600481018990523360248201526001600160a01b0390911690637efd381390604401600060405180830381600087803b15801561128157600080fd5b505af1158015611295573d6000803e3d6000fd5b505050505b60028501546112a99085612732565b60028601556018546112bb9085612732565b60185560018501546113af57600f546112d690600190612c64565b85600501541461137b57600f8054600091906112f490600190612c64565b8154811061130457611304612ceb565b9060005260206000200160009054906101000a90046001600160a01b0316905080600f87600501548154811061133c5761133c612ceb565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055600589810154949093168252600e90526040902001555b600f80548061138c5761138c612d01565b600082815260209020810160001990810180546001600160a01b03191690550190555b6016546040517f1ef37ab665f7c977b577275d7a49e72cd18d1143eccd1112f1198e4a39d1428c90600090a250505050505050565b600a546113ed57565b600b54604080516345c9c1d160e01b815290516000926001600160a01b0316916345c9c1d1916004808301926020929190829003018187875af1158015611438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145c9190612bef565b9050806114665750565b601b546114739082612732565b601b55600a5460009061148f906107fa8464e8d4a5100061270e565b60155490915061149f9082612732565b6015555050565b600f81815481106114b657600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146114fa5760405162461bcd60e51b815260040161076f90612b4c565b6000811161151a5760405162461bcd60e51b815260040161076f90612b81565b6103e881111561153c5760405162461bcd60e51b815260040161076f90612bb8565b600555565b6000546001600160a01b0316331461156b5760405162461bcd60e51b815260040161076f90612b4c565b600081116115bb5760405162461bcd60e51b815260206004820152601b60248201527f54696d65206d7573742062652067726561746572207468616e20300000000000604482015260640161076f565b600855565b6000546001600160a01b031633146115ea5760405162461bcd60e51b815260040161076f90612b4c565b6115f460006127de565b565b6000546001600160a01b031633146116205760405162461bcd60e51b815260040161076f90612b4c565b600081116116655760405162461bcd60e51b815260206004820152601260248201527104c696d69742063616e206e6f7420626520360741b604482015260640161076f565b601e81106116c95760405162461bcd60e51b815260206004820152602b60248201527f4d6178206175746f636f6d706f756e64206c696d69742063616e6e6f7420626560448201526a020677265617465722033360ac1b606482015260840161076f565b601c55565b600b546001600160a01b031633146117285760405162461bcd60e51b815260206004820152601760248201527f43616c6c6574206d7573742062652062616e6b726f6c6c000000000000000000604482015260640161076f565b60195460175461173791612726565b8311156117ac5760405162461bcd60e51b815260206004820152603d60248201527f467265657a6520616d6f756e742073686f756c64206265206c6573732074686160448201527f6e206f7220657175616c20746f20617661696c61626c652066756e6473000000606482015260840161076f565b6019546117b99084612732565b601955604051630f62cf8d60e41b8152600481018490526001600160a01b03838116602483015282919082169063f62cf8d090604401600060405180830381600087803b15801561180957600080fd5b505af115801561181d573d6000803e3d6000fd5b506118579250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905083866127a9565b61185f611df9565b6118676113e4565b50505050565b4360105411156118bf5760405162461bcd60e51b815260206004820181905260248201527f436f6d706f756e6420416c6c206e6f7420796574206170706c696361626c652e604482015260640161076f565b6000601754116119115760405162461bcd60e51b815260206004820152601a60248201527f4e6f205374616b6564207265776172647320746f20636c61696d000000000000604482015260640161076f565b601154600f54600091829182918291811061192a575060005b600f54601c548111158061194d5750600f54601c5461194a908490612732565b10155b1561195b5750600f5461196c565b601c54611969908390612732565b90505b6119746113e4565b61197c611df9565b815b81811015611ba2576000600e6000600f848154811061199f5761199f612ceb565b60009182526020808320909101546001600160a01b031683528201929092526040018120600781015460135482549294506119e8926108009164e8d4a51000916107fa9161270e565b90506119f48682612732565b6016541015611a0d57601654611a0a9087612726565b90505b6007820154611a1c9082612732565b60078301558015611a3457611a318682612732565b95505b6000611a60836008015461080064e8d4a510006107fa601554886000015461270e90919063ffffffff16565b6008840154909150611a729082612732565b6008840155611a818282612732565b91508115611b8757601a54611a969082612732565b601a55601854611aa69083612732565b601855600254600090611ac290612710906107fa90869061270e565b9050611ace8b82612732565b9a506000611aed6127106107fa6001548761270e90919063ffffffff16565b9050611af98a82612732565b99506000611b186127106107fa6005548861270e90919063ffffffff16565b9050611b248c82612732565b9b50611b308584612726565b9450611b3c8583612726565b9450611b488582612726565b6002870154909550611b5a9086612732565b60028701556001860154611b6e9086612732565b6001870155601754611b809086612732565b6017555050505b50504360039091015580611b9a81612d17565b91505061197e565b506011819055600f548110611bb75760006011555b601654611bc49084612726565b60165543601055604051630852cd8d60e31b8152600481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b158015611c2d57600080fd5b505af1158015611c41573d6000803e3d6000fd5b50611c7b9250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905033866127a9565b600d54611cb5906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116876127a9565b505050505050565b6000546001600160a01b03163314611ce75760405162461bcd60e51b815260040161076f90612b4c565b600c546001600160a01b031615611d405760405162461bcd60e51b815260206004820152601f60248201527f4c6976652057616c6c6574206164647265737320616c72656164792073657400604482015260640161076f565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611d8c5760405162461bcd60e51b815260040161076f90612b4c565b678ac7230489e80000811115611df45760405162461bcd60e51b815260206004820152602760248201527f43727573682050657220426c6f636b2063616e206e6f74206265206d6f72652060448201526607468616e2031360cc1b606482015260840161076f565b601255565b6014544311611e0457565b601754611e115743601455565b60125460195415611e4657611e43611e3c6127106107fa60095460125461270e90919063ffffffff16565b8290612732565b90505b601654611e51575060005b6000611e686014544361272690919063ffffffff16565b90506000611e94600a546107fa64e8d4a51000611e8e878761270e90919063ffffffff16565b9061270e565b601354909150611ea49082612732565b60135550504360145550565b6000546001600160a01b03163314611eda5760405162461bcd60e51b815260040161076f90612b4c565b600b546001600160a01b031615611f335760405162461bcd60e51b815260206004820152601c60248201527f42616e6b726f6c6c206164647265737320616c72656164792073657400000000604482015260640161076f565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611f7f5760405162461bcd60e51b815260040161076f90612b4c565b60008111611f9f5760405162461bcd60e51b815260040161076f90612b81565b6103e88110611fc05760405162461bcd60e51b815260040161076f90612bb8565b600355565b6000546001600160a01b03163314611fef5760405162461bcd60e51b815260040161076f90612b4c565b6000811161200f5760405162461bcd60e51b815260040161076f90612b81565b6103e881106120305760405162461bcd60e51b815260040161076f90612bb8565b600255565b61203d611df9565b336000908152600e6020526040902043600382015560018101546019541561208857612081610d856017546107fa856001015460195461270e90919063ffffffff16565b905061209a565b60068201541561209a57600060068301555b6017546120a79082612726565b601755600182015482546000916120c3916107fa90859061270e565b60018401549091506120d59083612726565b600184015582546120e69082612726565b8355600a546120f59082612726565b600a5560135483546121119164e8d4a51000916107fa9161270e565b6007840155601554835461212f9164e8d4a51000916107fa9161270e565b6008840155601954156122bd5760068301541561217557600680549084015461215791612732565b42116121755760405162461bcd60e51b815260040161076f90612c7b565b60006121926127106107fa6004548661270e90919063ffffffff16565b42600686015590506121a48382612726565b925060195481111561226c5760006121c76019548361272690919063ffffffff16565b600b5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801561223c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122609190612cce565b5050600060195561227d565b6019546122799082612726565b6019555b600d546122b7906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836127a9565b5061233d565b60085460048401546122ce91612732565b43101561233d5760006122f26127106107fa6003548661270e90919063ffffffff16565b90506122fe8382612726565b600d5490935061233b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836127a9565b505b6123716001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846127a9565b600183015461246257600f5461238990600190612c64565b83600501541461242e57600f8054600091906123a790600190612c64565b815481106123b7576123b7612ceb565b9060005260206000200160009054906101000a90046001600160a01b0316905080600f8560050154815481106123ef576123ef612ceb565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055600587810154949093168252600e90526040902001555b600f80548061243f5761243f612d01565b600082815260209020810160001990810180546001600160a01b03191690550190555b6016546040517f1ef37ab665f7c977b577275d7a49e72cd18d1143eccd1112f1198e4a39d1428c90600090a2505050565b600b546001600160a01b031633146124ed5760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206d7573742062652062616e6b726f6c6c000000000000000000604482015260640161076f565b6019548111156125655760405162461bcd60e51b815260206004820152603c60248201527f756e667265657a6520616d6f756e742063616e7420626520677265617465722060448201527f7468616e2063757272656e746c792066726f7a656e20616d6f756e7400000000606482015260840161076f565b6019546125729082612726565b60195561257d611df9565b6125856113e4565b50565b6000546001600160a01b031633146125b25760405162461bcd60e51b815260040161076f90612b4c565b6001600160a01b0381166126175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161076f565b612585816127de565b6001600160a01b0381166000908152600e602052604081206012546019541561266657612663611e3c6127106107fa60095460125461270e90919063ffffffff16565b90505b601654612671575060005b601354601454431180156126865750600a5415155b156126dd5760006126a26014544361272690919063ffffffff16565b905060006126c8600a546107fa64e8d4a51000611e8e888761270e90919063ffffffff16565b6013549091506126d89082612732565b925050505b612705836007015461080064e8d4a510006107fa85886000015461270e90919063ffffffff16565b95945050505050565b60006108068284612d32565b60006108068284612d51565b60006108068284612c64565b60006108068284612d73565b6040516001600160a01b03808516602483015283166044820152606481018290526118679085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261282e565b6040516001600160a01b0383166024820152604481018290526127d990849063a9059cbb60e01b90606401612772565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000612883826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129009092919063ffffffff16565b8051909150156127d957808060200190518101906128a19190612cce565b6127d95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161076f565b606061290f8484600085612917565b949350505050565b6060824710156129785760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161076f565b6001600160a01b0385163b6129cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161076f565b600080866001600160a01b031685876040516129eb9190612db7565b60006040518083038185875af1925050503d8060008114612a28576040519150601f19603f3d011682016040523d82523d6000602084013e612a2d565b606091505b5091509150612a3d828286612a48565b979650505050505050565b60608315612a57575081610806565b825115612a675782518084602001fd5b8160405162461bcd60e51b815260040161076f9190612dd3565b600060208284031215612a9357600080fd5b5035919050565b6001600160a01b038116811461258557600080fd5b600060208284031215612ac157600080fd5b813561080681612a9a565b801515811461258557600080fd5b60008060408385031215612aed57600080fd5b823591506020830135612aff81612acc565b809150509250929050565b600080600060608486031215612b1f57600080fd5b833592506020840135612b3181612a9a565b91506040840135612b4181612a9a565b809150509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f466565206d7573742062652067726561746572207468616e2030000000000000604082015260600190565b60208082526019908201527f466565206d757374206265206c657373207468616e2031302500000000000000604082015260600190565b600060208284031215612c0157600080fd5b5051919050565b60208082526026908201527f496e73756666696369656e7420437275736820746f6b656e7320666f7220747260408201526530b739b332b960d11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082821015612c7657612c76612c4e565b500390565b60208082526033908201527f4f6e6c79204f6e6520576974686472617720616c6c6f77656420706572203320604082015272686f75727320647572696e6720667265657a6560681b606082015260800190565b600060208284031215612ce057600080fd5b815161080681612acc565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000600019821415612d2b57612d2b612c4e565b5060010190565b6000816000190483118215151615612d4c57612d4c612c4e565b500290565b600082612d6e57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612d8657612d86612c4e565b500190565b60005b83811015612da6578181015183820152602001612d8e565b838111156118675750506000910152565b60008251612dc9818460208701612d8b565b9190910192915050565b6020815260008251806020840152612df2816040850160208701612d8b565b601f01601f1916919091016040019291505056fea264697066735822122016fad45700e4e2e7141164aa7f88556eb99f0a943364762557b2b289ba5953a664736f6c634300080c0033",
  "deployedSourceMap": "402:24549:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:42;;;;;;;;;160:25:33;;;148:2;133:18;987:42:17;;;;;;;;1399:32;;;;;-1:-1:-1;;;;;1399:32:17;;;;;;-1:-1:-1;;;;;385:32:33;;;367:51;;355:2;340:18;1399:32:17;196:228:33;2458:26:17;;;;;;798:39;;832:5;798:39;;2530:37;;;;;;20026:235;;;;;;:::i;:::-;;:::i;:::-;;19747:131;19850:14;:21;19747:131;;911:44;;;;;;1993:33;;;;;;14094:262;;;;;;:::i;:::-;;:::i;4154:344::-;;;;;;:::i;:::-;;:::i;1293:26::-;;;;;;6514:2179;;;;;;:::i;:::-;;:::i;9009:3766::-;;;;;;:::i;:::-;;:::i;1232:30::-;;;;;;1118:33;;;;;;1950:36;;;;;;5691:398;;;:::i;1912:31::-;;;;;;:::i;:::-;;:::i;2490:34::-;;;;;;21130:230;;;;;;:::i;:::-;;:::i;2664:34::-;;;;;;1062:49;;;;;;1157:69;;;;;;729:39;;;;;;21507:169;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;21823:234:17:-;;;;;;:::i;:::-;;:::i;2365:26::-;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;18323:738:17;;;;;;:::i;:::-;;:::i;2135:32::-;;;;;;14535:3620;;;:::i;3755:234::-;;;;;;:::i;:::-;;:::i;6095:296::-;;;;;;:::i;:::-;;:::i;844:36::-;;;;;;2173:30;;;;;;4761:736;;;:::i;2252:32::-;;;;;;1360:33;;;;;584:38;;618:4;584:38;;654:44;;;;;;3372:219;;;;;;:::i;:::-;;:::i;20766:::-;;;;;;:::i;:::-;;:::i;20403:223::-;;;;;;:::i;:::-;;:::i;2032:50::-;;;;;;2397:27;;;;;;22172:2777;;;:::i;1859:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3262:25:33;;;3318:2;3303:18;;3296:34;;;;3346:18;;;3339:34;;;;3404:2;3389:18;;3382:34;;;;3447:3;3432:19;;3425:35;;;;3491:3;3476:19;;3469:35;3535:3;3520:19;;3513:35;3579:3;3564:19;;3557:35;3623:3;3608:19;;3601:35;3249:3;3234:19;1859:47:17;2891:751:33;19203:375:17;;;;;;:::i;:::-;;:::i;1437:36::-;;;;;-1:-1:-1;;;;;1437:36:17;;;2602:37;;;;;;2313:24;;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;12981:940:17:-;;;;;;:::i;:::-;;:::i;1517:29::-;;;;;-1:-1:-1;;;;;1517:29:17;;;512:66;;558:20;512:66;;20026:235;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;20119:1:17::1;20112:4;:8;20104:47;;;;-1:-1:-1::0;;;20104:47:17::1;;;;;;;:::i;:::-;618:4;20169;:14;20161:52;;;;-1:-1:-1::0;;;20161:52:17::1;;;;;;;:::i;:::-;20223:24;:31:::0;20026:235::o;14094:262::-;-1:-1:-1;;;;;14203:18:17;;14157:7;14203:18;;;:8;:18;;;;;14316:19;;;;14266:17;;14250:11;;:99;;14316:19;14250:44;;14289:4;;14250:34;;:11;:15;:34::i;:::-;:38;;:44::i;:::-;:48;;:99::i;:::-;14231:118;14094:262;-1:-1:-1;;;14094:262:17:o;4154:344::-;4234:27;;-1:-1:-1;;;4234:27:17;;4250:10;4234:27;;;367:51:33;4265:7:17;;4234:5;-1:-1:-1;;;;;4234:15:17;;;;340:18:33;;4234:27:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;4213:123;;;;-1:-1:-1;;;4213:123:17;;;;;;;:::i;:::-;4358:9;;:22;;4372:7;4358:13;:22::i;:::-;4346:9;:34;4390:58;-1:-1:-1;;;;;4390:5:17;:22;4413:10;4433:4;4440:7;4390:22;:58::i;:::-;4481:9;;4463:28;;;;;;;4154:344;:::o;6514:2179::-;6591:27;;-1:-1:-1;;;6591:27:17;;6607:10;6591:27;;;367:51:33;6622:7:17;;6591:5;-1:-1:-1;;;;;6591:15:17;;;;340:18:33;;6591:27:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;6570:123;;;;-1:-1:-1;;;6570:123:17;;;;;;;:::i;:::-;6721:1;6711:7;:11;6703:46;;;;-1:-1:-1;;;6703:46:17;;5750:2:33;6703:46:17;;;5732:21:33;5789:2;5769:18;;;5762:30;-1:-1:-1;;;5808:18:33;;;5801:52;5870:18;;6703:46:17;5548:346:33;6703:46:17;6760:20;:18;:20::i;:::-;6790:15;:13;:15::i;:::-;6815:58;-1:-1:-1;;;;;6815:5:17;:22;6838:10;6858:4;6865:7;6815:22;:58::i;:::-;6887:11;;6883:83;;6943:12;6919:21;:36;6883:83;7011:10;6975:24;7002:20;;;:8;:20;;;;;7037:17;;;;7033:973;;7102:12;7075:24;;;:39;7128:14;:31;;;;;;;;-1:-1:-1;7128:31:17;;;;;;;;;-1:-1:-1;;;;;;7128:31:17;7148:10;7128:31;;;7186:21;;:25;;7128:31;7186:25;:::i;:::-;7173:10;;;:38;7033:973;;;7242:15;7260:96;7326:4;:16;;;7260:44;7299:4;7260:34;7276:17;;7260:4;:11;;;:15;;:34;;;;:::i;:96::-;7242:114;;7384:9;;7374:7;:19;7370:44;;;-1:-1:-1;7405:9:17;;7370:44;7440:9;;:22;;7454:7;7440:13;:22::i;:::-;7428:9;:34;7617:19;;;;7550:17;;7500:28;;7476:21;;7500:137;;7617:19;;7500:95;;7590:4;;7500:68;;:49;:68::i;:137::-;7476:161;-1:-1:-1;7661:26:17;:7;7476:161;7661:11;:26::i;:::-;7651:36;-1:-1:-1;7705:11:17;;7701:295;;7736:39;-1:-1:-1;;;;;7736:5:17;:18;7755:10;7767:7;7736:18;:39::i;:::-;7814:18;;;;:31;;7837:7;7814:22;:31::i;:::-;7793:18;;;:52;7878:12;;:25;;7895:7;7878:16;:25::i;:::-;7863:12;:40;7943:19;;:38;;7967:13;7943:23;:38::i;:::-;7921:19;:60;7701:295;7228:778;;7033:973;8016:21;8055:11;;8070:1;8055:16;8051:129;;8101:41;8130:11;;8101:24;8113:11;;8101:7;:11;;:24;;;;:::i;:41::-;8085:57;;8051:129;;;-1:-1:-1;8173:7:17;8051:129;8205:11;;:24;;8221:7;8205:15;:24::i;:::-;8191:11;:38;8253:11;;:30;;8269:13;8253:15;:30::i;:::-;8239:11;:44;8297:11;;8293:86;;8356:12;8329:24;;;:39;8293:86;8402:11;;:30;;8418:13;8402:15;:30::i;:::-;8388:44;;;8464:17;;:44;;8503:4;;8464:34;;:21;:34::i;:44::-;8442:19;;;:66;8559:11;;8537:17;;:44;;8576:4;;8537:34;;:21;:34::i;:44::-;8518:16;;;:63;8611:17;;;;:30;;8633:7;8611:21;:30::i;:::-;8591:17;;;:50;-1:-1:-1;8674:12:17;8651:20;;;;:35;-1:-1:-1;6514:2179:17:o;9009:3766::-;9085:20;:18;:20::i;:::-;9115:15;:13;:15::i;:::-;9176:10;9140:24;9167:20;;;:8;:20;;;;;9276:16;;;;9230:17;;9214:11;;9167:20;;9140:24;9214:88;;9276:16;9214:44;;9253:4;;9214:34;;:11;:15;:34::i;:88::-;9197:105;;9312:19;9334:91;9396:4;:19;;;9334:44;9373:4;9334:34;9350:17;;9334:4;:11;;;:15;;:34;;;;:::i;:91::-;9312:113;;9448:9;;9439:6;:18;9435:42;;;9468:9;;9459:18;;9435:42;9499:9;;:21;;9513:6;9499:13;:21::i;:::-;9487:9;:33;9539:23;:6;9550:11;9539:10;:23::i;:::-;9594:19;;9530:32;;-1:-1:-1;9594:36:17;;9618:11;9594:23;:36::i;:::-;9572:19;:58;9667:12;9640:24;;;:39;9716:17;;;;9747:11;;:15;9743:410;;9796:102;9833:51;9872:11;;9833:34;9849:4;:17;;;9833:11;;:15;;:34;;;;:::i;:51::-;9796:15;;:19;:102::i;:::-;9778:120;;9956:7;9937:15;:26;;9912:139;;;;-1:-1:-1;;;9912:139:17;;6363:2:33;9912:139:17;;;6345:21:33;6402:2;6382:18;;;6375:30;6441:34;6421:18;;;6414:62;-1:-1:-1;;;6492:18:33;;;6485:52;6554:19;;9912:139:17;6161:418:33;9912:139:17;9743:410;;;10072:23;;;;:27;10068:85;;10141:1;10115:23;;;:27;10068:85;10202:7;10183:15;:26;;10162:136;;;;-1:-1:-1;;;10162:136:17;;6786:2:33;10162:136:17;;;6768:21:33;6825:2;6805:18;;;6798:30;6864:34;6844:18;;;6837:62;6935:33;6915:18;;;6908:61;6986:19;;10162:136:17;6584:427:33;10162:136:17;10322:11;;:24;;10338:7;10322:15;:24::i;:::-;10308:11;:38;10424:17;;;;10394:11;;10357:22;;10382:69;;:24;;:7;;:11;:24::i;:69::-;10481:17;;;;10357:94;;-1:-1:-1;10481:30:17;;10503:7;10481:21;:30::i;:::-;10461:17;;;:50;10535:11;;:31;;10551:14;10535:15;:31::i;:::-;10521:45;;10590:11;;:31;;10606:14;10590:15;:31::i;:::-;10576:11;:45;10666:17;;10650:11;;:44;;10689:4;;10650:34;;:15;:34::i;:44::-;10631:16;;;:63;10742:17;;10726:11;;:44;;10765:4;;10726:34;;:15;:34::i;:44::-;10704:19;;;:66;10790:19;:7;10802:6;10790:11;:19::i;:::-;10823:11;;10780:29;;-1:-1:-1;10823:15:17;10819:1188;;10858:23;;;;:27;10854:268;;11002:26;;;10974:23;;;;:55;;:27;:55::i;:::-;10932:15;:97;10903:219;;;;-1:-1:-1;;;10903:219:17;;;;;;;:::i;:::-;11137:21;11161:78;832:5;11161:35;11173:22;;11161:7;:11;;:35;;;;:::i;:78::-;11279:15;11253:23;;;:41;11137:102;-1:-1:-1;11318:26:17;:7;11137:102;11318:11;:26::i;:::-;11308:36;;11379:11;;11363:13;:27;11359:260;;;11410:17;11430:30;11448:11;;11430:13;:17;;:30;;;;:::i;:::-;11500:8;;11478:43;;-1:-1:-1;;;11478:43:17;;-1:-1:-1;;;;;11500:8:17;;;11478:43;;;7610:51:33;7677:18;;;7670:34;;;11410:50:17;;-1:-1:-1;11478:5:17;:13;;;;7583:18:33;;11478:43:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;11553:1:17;11539:11;:15;11359:260;;;11589:11;;:30;;11605:13;11589:15;:30::i;:::-;11575:11;:44;11359:260;11634:8;;:39;;-1:-1:-1;;;11634:39:17;;;;;160:25:33;;;-1:-1:-1;;;;;11634:8:17;;;;:24;;133:18:33;;11634:39:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10840:844;10819:1188;;;11747:20;;11722;;;;:46;;:24;:46::i;:::-;11707:12;:61;11690:317;;;11817:21;11841:42;832:5;11841:29;11853:16;;11841:7;:11;;:29;;;;:::i;:42::-;11817:66;-1:-1:-1;11907:26:17;:7;11817:66;11907:11;:26::i;:::-;11966:14;;11897:36;;-1:-1:-1;11947:49:17;;-1:-1:-1;;;;;11947:5:17;:18;;;11966:14;11982:13;11947:18;:49::i;:::-;11779:228;11690:317;12021:20;12017:211;;12043:39;-1:-1:-1;;;;;12043:5:17;:18;12062:10;12074:7;12043:18;:39::i;:::-;12017:211;;;12133:10;;12111:43;;-1:-1:-1;;;12111:43:17;;-1:-1:-1;;;;;12133:10:17;;;12111:43;;;7610:51:33;7677:18;;;7670:34;;;12111:5:17;:13;;;;;;7583:18:33;;12111:43:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12168:10:17;;:49;;-1:-1:-1;;;12168:49:17;;;;;8139:25:33;;;12206:10:17;8180:18:33;;;8173:60;-1:-1:-1;;;;;12168:10:17;;;;:28;;8112:18:33;;12168:49:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12017:211;12258:18;;;;:30;;12281:6;12258:22;:30::i;:::-;12237:18;;;:51;12313:12;;:24;;12330:6;12313:16;:24::i;:::-;12298:12;:39;12387:17;;;;12383:343;;12443:14;:21;:25;;12467:1;;12443:25;:::i;:::-;12429:4;:10;;;:39;12425:257;;12510:14;12525:21;;12488:19;;12510:14;12525:25;;12549:1;;12525:25;:::i;:::-;12510:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12510:41:17;12488:63;;12598:11;12569:14;12584:4;:10;;;12569:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;:40;;-1:-1:-1;;;;;;12569:40:17;-1:-1:-1;;;;;12569:40:17;;;;;;12657:10;;;;;12627:21;;;;;;:8;:21;;;;;:27;:40;12425:257;12695:14;:20;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;12695:20:17;;;;;-1:-1:-1;;;;;;12695:20:17;;;;;;12383:343;12758:9;;12740:28;;;;;;;9075:3700;;;;;9009:3766;;:::o;5691:398::-;5737:11;;5733:29;;5691:398::o;5733:29::-;5798:8;;:25;;;-1:-1:-1;;;5798:25:17;;;;5771:24;;-1:-1:-1;;;;;5798:8:17;;:23;;:25;;;;;;;;;;;;;;5771:24;5798:8;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5771:52;-1:-1:-1;5837:21:17;5833:34;;5860:7;5691:398::o;5833:34::-;5901:22;;:44;;5928:16;5901:26;:44::i;:::-;5876:22;:69;6007:11;;5955:18;;5976:43;;:26;:16;5997:4;5976:20;:26::i;:43::-;6049:17;;5955:64;;-1:-1:-1;6049:33:17;;5955:64;6049:21;:33::i;:::-;6029:17;:53;-1:-1:-1;;5691:398:17:o;1912:31::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1912:31:17;;-1:-1:-1;1912:31:17;:::o;21130:230::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;21220:1:17::1;21213:4;:8;21205:47;;;;-1:-1:-1::0;;;21205:47:17::1;;;;;;;:::i;:::-;618:4;21270;:15;;21262:53;;;;-1:-1:-1::0;;;21262:53:17::1;;;;;;;:::i;:::-;21325:21;:28:::0;21130:230::o;21507:169::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;21598:1:17::1;21590:5;:9;21582:49;;;::::0;-1:-1:-1;;;21582:49:17;;8710:2:33;21582:49:17::1;::::0;::::1;8692:21:33::0;8749:2;8729:18;;;8722:30;8788:29;8768:18;;;8761:57;8835:18;;21582:49:17::1;8508:351:33::0;21582:49:17::1;21641:20;:28:::0;21507:169::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;21823:234:17:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;21913:1:17::1;21904:6;:10;21896:41;;;::::0;-1:-1:-1;;;21896:41:17;;9066:2:33;21896:41:17::1;::::0;::::1;9048:21:33::0;9105:2;9085:18;;;9078:30;-1:-1:-1;;;9124:18:33;;;9117:48;9182:18;;21896:41:17::1;8864:342:33::0;21896:41:17::1;21964:2;21955:6;:11;21947:67;;;::::0;-1:-1:-1;;;21947:67:17;;9413:2:33;21947:67:17::1;::::0;::::1;9395:21:33::0;9452:2;9432:18;;;9425:30;9491:34;9471:18;;;9464:62;-1:-1:-1;;;9542:18:33;;;9535:41;9593:19;;21947:67:17::1;9211:407:33::0;21947:67:17::1;22024:17;:26:::0;21823:234::o;18323:738::-;18480:8;;-1:-1:-1;;;;;18480:8:17;18458:10;:31;18450:67;;;;-1:-1:-1;;;18450:67:17;;9825:2:33;18450:67:17;;;9807:21:33;9864:2;9844:18;;;9837:30;9903:25;9883:18;;;9876:53;9946:18;;18450:67:17;9623:347:33;18450:67:17;18665:11;;18649;;:28;;:15;:28::i;:::-;18638:7;:39;;18617:147;;;;-1:-1:-1;;;18617:147:17;;10177:2:33;18617:147:17;;;10159:21:33;10216:2;10196:18;;;10189:30;10255:34;10235:18;;;10228:62;10326:31;10306:18;;;10299:59;10375:19;;18617:147:17;9975:425:33;18617:147:17;18788:11;;:24;;18804:7;18788:15;:24::i;:::-;18774:11;:38;18893:48;;-1:-1:-1;;;18893:48:17;;;;;8139:25:33;;;-1:-1:-1;;;;;8200:32:33;;;8180:18;;;8173:60;18872:10:17;;18893:27;;;;;;8112:18:33;;18893:48:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18951:48:17;;-1:-1:-1;;;;;;;18951:5:17;:18;;-1:-1:-1;18978:10:17;18991:7;18951:18;:48::i;:::-;19009:20;:18;:20::i;:::-;19039:15;:13;:15::i;:::-;18440:621;18323:738;;;:::o;14535:3620::-;14621:12;14596:21;;:37;;14575:116;;;;-1:-1:-1;;;14575:116:17;;10607:2:33;14575:116:17;;;10589:21:33;;;10626:18;;;10619:30;10685:34;10665:18;;;10658:62;10737:18;;14575:116:17;10405:356:33;14575:116:17;14723:1;14709:11;;:15;14701:54;;;;-1:-1:-1;;;14701:54:17;;10968:2:33;14701:54:17;;;10950:21:33;11007:2;10987:18;;;10980:30;11046:28;11026:18;;;11019:56;11092:18;;14701:54:17;10766:350:33;14701:54:17;14934:18;;14988:14;:21;14765:19;;;;;;;;14966:43;;14962:63;;-1:-1:-1;15024:1:17;14962:63;15057:14;:21;15130:17;;15105:42;;;;:116;;-1:-1:-1;15200:14:17;:21;15178:17;;15163:33;;:10;;:14;:33::i;:::-;:58;;15105:116;15088:239;;;-1:-1:-1;15245:14:17;:21;15088:239;;;15309:17;;15294:33;;:10;;:14;:33::i;:::-;15281:46;;15088:239;15338:15;:13;:15::i;:::-;15363:20;:18;:20::i;:::-;15410:10;15393:2359;15426:10;15422:1;:14;15393:2359;;;15457:31;15491:8;:27;15500:14;15515:1;15500:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;15500:17:17;15491:27;;;;;;;;;;;;15679:23;;;;15612:17;;15555:35;;15491:27;;-1:-1:-1;15555:148:17;;:102;;15652:4;;15555:75;;:56;:75::i;:148::-;15532:171;-1:-1:-1;15733:35:17;:17;15532:171;15733:21;:35::i;:::-;15721:9;;:47;15717:133;;;15803:9;;:32;;15817:17;15803:13;:32::i;:::-;15788:47;;15717:133;15889:23;;;;:41;;15917:12;15889:27;:41::i;:::-;15863:23;;;:67;15948:16;;15944:93;;16002:35;:17;16024:12;16002:21;:35::i;:::-;15982:55;;15944:93;16051:20;16074:151;16198:11;:26;;;16074:102;16171:4;16074:75;16131:17;;16074:11;:35;;;:56;;:75;;;;:::i;:151::-;16268:26;;;;16051:174;;-1:-1:-1;16268:74:17;;16051:174;16268:30;:74::i;:::-;16239:26;;;:103;16371:30;:12;16388;16371:16;:30::i;:::-;16356:45;-1:-1:-1;16419:16:17;;16415:1267;;16477:19;;:37;;16501:12;16477:23;:37::i;:::-;16455:19;:59;16547:12;;:30;;16564:12;16547:16;:30::i;:::-;16532:12;:45;16633:18;;16595;;16616:87;;832:5;;16616:36;;:12;;:16;:36::i;:87::-;16595:108;-1:-1:-1;16735:27:17;:11;16595:108;16735:15;:27::i;:::-;16721:41;;16781:19;16803:97;832:5;16803:63;16841:24;;16803:12;:37;;:63;;;;:::i;:97::-;16781:119;-1:-1:-1;16937:33:17;:16;16781:119;16937:20;:33::i;:::-;16918:52;;16989:18;17010:94;832:5;17010:60;17048:21;;17010:12;:37;;:60;;;;:::i;:94::-;16989:115;-1:-1:-1;17139:30:17;:14;16989:115;17139:18;:30::i;:::-;17122:47;-1:-1:-1;17202:28:17;:12;17219:10;17202:16;:28::i;:::-;17187:43;-1:-1:-1;17263:29:17;17187:43;17280:11;17263:16;:29::i;:::-;17248:44;-1:-1:-1;17325:28:17;17248:44;17342:10;17325:16;:28::i;:::-;17399:25;;;;17310:43;;-1:-1:-1;17399:81:17;;17310:43;17399:29;:81::i;:::-;17371:25;;;:109;17525:24;;;;:80;;17575:12;17525:28;:80::i;:::-;17498:24;;;:107;17638:11;;:29;;17654:12;17638:15;:29::i;:::-;17624:11;:43;-1:-1:-1;;;16415:1267:17;-1:-1:-1;;17729:12:17;17695:31;;;;:46;15438:3;;;;:::i;:::-;;;;15393:2359;;;-1:-1:-1;17761:18:17;:31;;;17828:14;:21;17806:43;;17802:96;;17886:1;17865:18;:22;17802:96;17919:9;;:32;;17933:17;17919:13;:32::i;:::-;17907:9;:44;17985:12;17961:21;:36;18007:23;;-1:-1:-1;;;18007:23:17;;;;;160:25:33;;;18007:5:17;-1:-1:-1;;;;;18007:10:17;;;;133:18:33;;18007:23:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18040:48:17;;-1:-1:-1;;;;;;;18040:5:17;:18;;-1:-1:-1;18059:10:17;18071:16;18040:18;:48::i;:::-;18117:14;;18098:50;;-1:-1:-1;;;;;18098:5:17;:18;;;18117:14;18133;18098:18;:50::i;:::-;14565:3590;;;;;;14535:3620::o;3755:234::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3866:10:17::1;::::0;-1:-1:-1;;;;;3866:10:17::1;3858:33:::0;3837:111:::1;;;::::0;-1:-1:-1;;;3837:111:17;;11463:2:33;3837:111:17::1;::::0;::::1;11445:21:33::0;11502:2;11482:18;;;11475:30;11541:33;11521:18;;;11514:61;11592:18;;3837:111:17::1;11261:355:33::0;3837:111:17::1;3958:10;:24:::0;;-1:-1:-1;;;;;;3958:24:17::1;-1:-1:-1::0;;;;;3958:24:17;;;::::1;::::0;;;::::1;::::0;;3755:234::o;6095:296::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;558:20:17::1;6256:7;:30;;6235:116;;;::::0;-1:-1:-1;;;6235:116:17;;12227:2:33;6235:116:17::1;::::0;::::1;12209:21:33::0;12266:2;12246:18;;;12239:30;12305:34;12285:18;;;12278:62;-1:-1:-1;;;12356:18:33;;;12349:37;12403:19;;6235:116:17::1;12025:403:33::0;6235:116:17::1;6361:13;:23:::0;6095:296::o;4761:736::-;4828:15;;4812:12;:31;4808:44;;4761:736::o;4808:44::-;4865:11;;4861:97;;4915:12;4897:15;:30;4761:736::o;4861:97::-;4992:13;;5019:11;;:15;5015:140;;5065:90;5101:40;832:5;5101:27;5119:8;;5101:13;;:17;;:27;;;;:::i;:40::-;5065:14;;:18;:90::i;:::-;5048:107;;5015:140;5169:9;;5165:38;;-1:-1:-1;5202:1:17;5165:38;5213:23;5239:33;5256:15;;5239:12;:16;;:33;;;;:::i;:::-;5213:59;;5282:18;5303:84;5366:11;;5303:45;5343:4;5303:35;5323:14;5303:15;:19;;:35;;;;:::i;:::-;:39;;:45::i;:84::-;5417:17;;5282:105;;-1:-1:-1;5417:33:17;;5282:105;5417:21;:33::i;:::-;5397:17;:53;-1:-1:-1;;5478:12:17;5460:15;:30;-1:-1:-1;4761:736:17:o;3372:219::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3477:8:17::1;::::0;-1:-1:-1;;;;;3477:8:17::1;3469:31:::0;3448:106:::1;;;::::0;-1:-1:-1;;;3448:106:17;;12635:2:33;3448:106:17::1;::::0;::::1;12617:21:33::0;12674:2;12654:18;;;12647:30;12713;12693:18;;;12686:58;12761:18;;3448:106:17::1;12433:352:33::0;3448:106:17::1;3564:8;:20:::0;;-1:-1:-1;;;;;;3564:20:17::1;-1:-1:-1::0;;;;;3564:20:17;;;::::1;::::0;;;::::1;::::0;;3372:219::o;20766:::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;20851:1:17::1;20844:4;:8;20836:47;;;;-1:-1:-1::0;;;20836:47:17::1;;;;;;;:::i;:::-;618:4;20901;:14;20893:52;;;;-1:-1:-1::0;;;20893:52:17::1;;;;;;;:::i;:::-;20955:16;:23:::0;20766:219::o;20403:223::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;20490:1:17::1;20483:4;:8;20475:47;;;;-1:-1:-1::0;;;20475:47:17::1;;;;;;;:::i;:::-;618:4;20540;:14;20532:52;;;;-1:-1:-1::0;;;20532:52:17::1;;;;;;;:::i;:::-;20594:18;:25:::0;20403:223::o;22172:2777::-;22218:20;:18;:20::i;:::-;22285:10;22249:24;22276:20;;;:8;:20;;;;;22333:12;22306:24;;;:39;22382:17;;;;22413:11;;:15;22409:257;;22462:102;22499:51;22538:11;;22499:34;22515:4;:17;;;22499:11;;:15;;:34;;;;:::i;22462:102::-;22444:120;;22409:257;;;22585:23;;;;:27;22581:85;;22654:1;22628:23;;;:27;22581:85;22690:11;;:32;;22706:15;22690;:32::i;:::-;22676:11;:46;22808:17;;;;22778:11;;22733:22;;22758:77;;:32;;:15;;:19;:32::i;:77::-;22865:17;;;;22733:102;;-1:-1:-1;22865:38:17;;22887:15;22865:21;:38::i;:::-;22845:17;;;:58;22927:11;;:31;;22943:14;22927:15;:31::i;:::-;22913:45;;22982:11;;:31;;22998:14;22982:15;:31::i;:::-;22968:11;:45;23058:17;;23042:11;;:44;;23081:4;;23042:34;;:15;:34::i;:44::-;23023:16;;;:63;23134:17;;23118:11;;:44;;23157:4;;23118:34;;:15;:34::i;:44::-;23096:19;;;:66;23177:11;;:15;23173:1280;;23212:23;;;;:27;23208:268;;23356:26;;;23328:23;;;;:55;;:27;:55::i;:::-;23286:15;:97;23257:219;;;;-1:-1:-1;;;23257:219:17;;;;;;;:::i;:::-;23491:21;23515:90;832:5;23515:60;23552:22;;23515:15;:36;;:60;;;;:::i;:90::-;23645:15;23619:23;;;:41;23491:114;-1:-1:-1;23692:34:17;:15;23491:114;23692:19;:34::i;:::-;23674:52;;23761:11;;23745:13;:27;23741:260;;;23792:17;23812:30;23830:11;;23812:13;:17;;:30;;;;:::i;:::-;23882:8;;23860:43;;-1:-1:-1;;;23860:43:17;;-1:-1:-1;;;;;23882:8:17;;;23860:43;;;7610:51:33;7677:18;;;7670:34;;;23792:50:17;;-1:-1:-1;23860:5:17;:13;;;;7583:18:33;;23860:43:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;23935:1:17;23921:11;:15;23741:260;;;23971:11;;:30;;23987:13;23971:15;:30::i;:::-;23957:11;:44;23741:260;24035:14;;24016:49;;-1:-1:-1;;;;;24016:5:17;:18;;;24035:14;24051:13;24016:18;:49::i;:::-;23194:882;23173:1280;;;24139:20;;24114;;;;:46;;:24;:46::i;:::-;24099:12;:61;24082:371;;;24209:21;24233:80;832:5;24233:37;24253:16;;24233:15;:19;;:37;;;;:::i;:80::-;24209:104;-1:-1:-1;24345:34:17;:15;24209:104;24345:19;:34::i;:::-;24412:14;;24327:52;;-1:-1:-1;24393:49:17;;-1:-1:-1;;;;;24393:5:17;:18;;;24412:14;24428:13;24393:18;:49::i;:::-;24171:282;24082:371;24463:47;-1:-1:-1;;;;;24463:5:17;:18;24482:10;24494:15;24463:18;:47::i;:::-;24561:17;;;;24557:343;;24617:14;:21;:25;;24641:1;;24617:25;:::i;:::-;24603:4;:10;;;:39;24599:257;;24684:14;24699:21;;24662:19;;24684:14;24699:25;;24723:1;;24699:25;:::i;:::-;24684:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24684:41:17;24662:63;;24772:11;24743:14;24758:4;:10;;;24743:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;:40;;-1:-1:-1;;;;;;24743:40:17;-1:-1:-1;;;;;24743:40:17;;;;;;24831:10;;;;;24801:21;;;;;;:8;:21;;;;;:27;:40;24599:257;24869:14;:20;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;24869:20:17;;;;;-1:-1:-1;;;;;;24869:20:17;;;;;;24557:343;24932:9;;24914:28;;;;;;;22208:2741;;;22172:2777::o;19203:375::-;19292:8;;-1:-1:-1;;;;;19292:8:17;19270:10;:31;19262:67;;;;-1:-1:-1;;;19262:67:17;;12992:2:33;19262:67:17;;;12974:21:33;13031:2;13011:18;;;13004:30;13070:25;13050:18;;;13043:53;13113:18;;19262:67:17;12790:347:33;19262:67:17;19371:11;;19360:7;:22;;19339:129;;;;-1:-1:-1;;;19339:129:17;;13344:2:33;19339:129:17;;;13326:21:33;13383:2;13363:18;;;13356:30;13422:34;13402:18;;;13395:62;13493:30;13473:18;;;13466:58;13541:19;;19339:129:17;13142:424:33;19339:129:17;19492:11;;:24;;19508:7;19492:15;:24::i;:::-;19478:11;:38;19526:20;:18;:20::i;:::-;19556:15;:13;:15::i;:::-;19203:375;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:12;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;13773:2:33;1998:73:0::1;::::0;::::1;13755:21:33::0;13812:2;13792:18;;;13785:30;13851:34;13831:18;;;13824:62;-1:-1:-1;;;13902:18:33;;;13895:36;13948:19;;1998:73:0::1;13571:402:33::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;12981:940:17:-:0;-1:-1:-1;;;;;13091:18:17;;13045:7;13091:18;;;:8;:18;;;;;13144:13;;13171:11;;:15;13167:140;;13217:90;13253:40;832:5;13253:27;13271:8;;13253:13;;:17;;:27;;;;:::i;13217:90::-;13200:107;;13167:140;13321:9;;13317:38;;-1:-1:-1;13354:1:17;13317:38;13398:17;;13444:15;;13429:12;:30;:50;;;;-1:-1:-1;13463:11:17;;:16;;13429:50;13425:360;;;13495:23;13521:33;13538:15;;13521:12;:16;;:33;;;;:::i;:::-;13495:59;;13568:18;13589:113;13690:11;;13589:79;13663:4;13589:52;13626:14;13589:15;:36;;:52;;;;:::i;:113::-;13741:17;;13568:134;;-1:-1:-1;13741:33:17;;13568:134;13741:21;:33::i;:::-;13716:58;;13481:304;;13425:360;13813:101;13884:4;:16;;;13813:49;13857:4;13813:39;13829:22;13813:4;:11;;;:15;;:39;;;;:::i;:101::-;13794:120;12981:940;-1:-1:-1;;;;;12981:940:17:o;3451:96:16:-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;3108:96::-;3166:7;3192:5;3196:1;3192;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;912:241:6:-;1077:68;;-1:-1:-1;;;;;14764:15:33;;;1077:68:6;;;14746:34:33;14816:15;;14796:18;;;14789:43;14848:18;;;14841:34;;;1050:96:6;;1070:5;;-1:-1:-1;;;1100:27:6;14681:18:33;;1077:68:6;;;;-1:-1:-1;;1077:68:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:6;-1:-1:-1;;;;;;1077:68:6;;;;;;;;;;1050:19;:96::i;701:205::-;840:58;;-1:-1:-1;;;;;7628:32:33;;840:58:6;;;7610:51:33;7677:18;;;7670:34;;;813:86:6;;833:5;;-1:-1:-1;;;863:23:6;7583:18:33;;840:58:6;7436:274:33;813:86:6;701:205;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3207:706:6:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:6;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:6;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:6;;15088:2:33;3811:85:6;;;15070:21:33;15127:2;15107:18;;;15100:30;15166:34;15146:18;;;15139:62;-1:-1:-1;;;15217:18:33;;;15210:40;15267:19;;3811:85:6;14886:406:33;3861:223:11;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:11:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:11;;15499:2:33;5137:81:11;;;15481:21:33;15538:2;15518:18;;;15511:30;15577:34;15557:18;;;15550:62;-1:-1:-1;;;15628:18:33;;;15621:36;15674:19;;5137:81:11;15297:402:33;5137:81:11;-1:-1:-1;;;;;1465:19:11;;;5228:60;;;;-1:-1:-1;;;5228:60:11;;15906:2:33;5228:60:11;;;15888:21:33;15945:2;15925:18;;;15918:30;15984:31;15964:18;;;15957:59;16033:18;;5228:60:11;15704:353:33;5228:60:11;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:11;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:11:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:11;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:11;;;;;;;;:::i;429:180:33:-;488:6;541:2;529:9;520:7;516:23;512:32;509:52;;;557:1;554;547:12;509:52;-1:-1:-1;580:23:33;;429:180;-1:-1:-1;429:180:33:o;614:131::-;-1:-1:-1;;;;;689:31:33;;679:42;;669:70;;735:1;732;725:12;750:247;809:6;862:2;850:9;841:7;837:23;833:32;830:52;;;878:1;875;868:12;830:52;917:9;904:23;936:31;961:5;936:31;:::i;1002:118::-;1088:5;1081:13;1074:21;1067:5;1064:32;1054:60;;1110:1;1107;1100:12;1125:309;1190:6;1198;1251:2;1239:9;1230:7;1226:23;1222:32;1219:52;;;1267:1;1264;1257:12;1219:52;1303:9;1290:23;1280:33;;1363:2;1352:9;1348:18;1335:32;1376:28;1398:5;1376:28;:::i;:::-;1423:5;1413:15;;;1125:309;;;;;:::o;1647:456::-;1724:6;1732;1740;1793:2;1781:9;1772:7;1768:23;1764:32;1761:52;;;1809:1;1806;1799:12;1761:52;1845:9;1832:23;1822:33;;1905:2;1894:9;1890:18;1877:32;1918:31;1943:5;1918:31;:::i;:::-;1968:5;-1:-1:-1;2025:2:33;2010:18;;1997:32;2038:33;1997:32;2038:33;:::i;:::-;2090:7;2080:17;;;1647:456;;;;;:::o;3882:356::-;4084:2;4066:21;;;4103:18;;;4096:30;4162:34;4157:2;4142:18;;4135:62;4229:2;4214:18;;3882:356::o;4243:350::-;4445:2;4427:21;;;4484:2;4464:18;;;4457:30;4523:28;4518:2;4503:18;;4496:56;4584:2;4569:18;;4243:350::o;4598:349::-;4800:2;4782:21;;;4839:2;4819:18;;;4812:30;4878:27;4873:2;4858:18;;4851:55;4938:2;4923:18;;4598:349::o;4952:184::-;5022:6;5075:2;5063:9;5054:7;5050:23;5046:32;5043:52;;;5091:1;5088;5081:12;5043:52;-1:-1:-1;5114:16:33;;4952:184;-1:-1:-1;4952:184:33:o;5141:402::-;5343:2;5325:21;;;5382:2;5362:18;;;5355:30;5421:34;5416:2;5401:18;;5394:62;-1:-1:-1;;;5487:2:33;5472:18;;5465:36;5533:3;5518:19;;5141:402::o;5899:127::-;5960:10;5955:3;5951:20;5948:1;5941:31;5991:4;5988:1;5981:15;6015:4;6012:1;6005:15;6031:125;6071:4;6099:1;6096;6093:8;6090:34;;;6104:18;;:::i;:::-;-1:-1:-1;6141:9:33;;6031:125::o;7016:415::-;7218:2;7200:21;;;7257:2;7237:18;;;7230:30;7296:34;7291:2;7276:18;;7269:62;-1:-1:-1;;;7362:2:33;7347:18;;7340:49;7421:3;7406:19;;7016:415::o;7715:245::-;7782:6;7835:2;7823:9;7814:7;7810:23;7806:32;7803:52;;;7851:1;7848;7841:12;7803:52;7883:9;7877:16;7902:28;7924:5;7902:28;:::i;8244:127::-;8305:10;8300:3;8296:20;8293:1;8286:31;8336:4;8333:1;8326:15;8360:4;8357:1;8350:15;8376:127;8437:10;8432:3;8428:20;8425:1;8418:31;8468:4;8465:1;8458:15;8492:4;8489:1;8482:15;11121:135;11160:3;-1:-1:-1;;11181:17:33;;11178:43;;;11201:18;;:::i;:::-;-1:-1:-1;11248:1:33;11237:13;;11121:135::o;13978:168::-;14018:7;14084:1;14080;14076:6;14072:14;14069:1;14066:21;14061:1;14054:9;14047:17;14043:45;14040:71;;;14091:18;;:::i;:::-;-1:-1:-1;14131:9:33;;13978:168::o;14151:217::-;14191:1;14217;14207:132;;14261:10;14256:3;14252:20;14249:1;14242:31;14296:4;14293:1;14286:15;14324:4;14321:1;14314:15;14207:132;-1:-1:-1;14353:9:33;;14151:217::o;14373:128::-;14413:3;14444:1;14440:6;14437:1;14434:13;14431:39;;;14450:18;;:::i;:::-;-1:-1:-1;14486:9:33;;14373:128::o;16062:258::-;16134:1;16144:113;16158:6;16155:1;16152:13;16144:113;;;16234:11;;;16228:18;16215:11;;;16208:39;16180:2;16173:10;16144:113;;;16275:6;16272:1;16269:13;16266:48;;;-1:-1:-1;;16310:1:33;16292:16;;16285:27;16062:258::o;16325:274::-;16454:3;16492:6;16486:13;16508:53;16554:6;16549:3;16542:4;16534:6;16530:17;16508:53;:::i;:::-;16577:16;;;;;16325:274;-1:-1:-1;;16325:274:33:o;16604:383::-;16753:2;16742:9;16735:21;16716:4;16785:6;16779:13;16828:6;16823:2;16812:9;16808:18;16801:34;16844:66;16903:6;16898:2;16887:9;16883:18;16878:2;16870:6;16866:15;16844:66;:::i;:::-;16971:2;16950:15;-1:-1:-1;;16946:29:33;16931:45;;;;16978:2;16927:54;;16604:383;-1:-1:-1;;16604:383:33:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addRewardToPool(uint256)": {
        "details": "adds the provided amount to `totalPool` state variable",
        "notice": "Adds the provided amount to the totalPool",
        "params": {
          "_amount": "the amount to add"
        }
      },
      "compoundAll()": {
        "details": "compounds the rewards of all users in the pool add adds it into their staked amount while deducting fees",
        "notice": "compounds the rewards of all users in the pool"
      },
      "emergencyWithdraw()": {
        "details": "transfer all available funds of users to users wallet",
        "notice": "emergency withdraw funds of users"
      },
      "enterStaking(uint256)": {
        "details": "stakes the provided amount",
        "notice": "Stake the provided amount",
        "params": {
          "_amount": "the amount to stake"
        }
      },
      "freezeStaking(uint256,address,address)": {
        "details": "adds the provided amount to the total frozen variablle",
        "notice": "freeze certain funds in the staking pool and transfer them to the live wallet address"
      },
      "indexesLength()": {
        "details": "returns the total stakers in the staking pool by reading length of addressIndexes array",
        "notice": "returns the total count of users in the staking pool."
      },
      "leaveStaking(uint256,bool)": {
        "details": "leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime",
        "notice": "Leaves staking for a user by the specified amount and transfering staked amount and reward to users address",
        "params": {
          "_amount": "the amount to unstake"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pendingProfits(address)": {
        "notice": "Get pending Profits to Claim",
        "params": {
          "_address": "the user's wallet address to calculate profits"
        },
        "returns": {
          "_0": "pending Profits to be claimed by this user"
        }
      },
      "pendingReward(address)": {
        "details": "calculates potential reward for the address provided based on crush per block",
        "notice": "Get pending rewards of a user for UI",
        "params": {
          "_address": "the address to calculate the reward for"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAutoCompoundLimit(uint256)": {
        "details": "stores the limit in the state variable `autoCompoundLimit`",
        "notice": "Store `_limit`.",
        "params": {
          "_limit": "the new value to store"
        }
      },
      "setBankroll(address)": {
        "details": "stores the _bankroll address in the state variable `bankroll`",
        "notice": "Store `_bankroll`.",
        "params": {
          "_bankroll": "the new value to store"
        }
      },
      "setEarlyWithdrawFee(uint256)": {
        "details": "stores the fee in the state variable `earlyWithdrawFee`",
        "notice": "Store `_fee`.",
        "params": {
          "_fee": "the new value to store"
        }
      },
      "setEarlyWithdrawFeeTime(uint256)": {
        "details": "stores the time in the state variable `earlyWithdrawFeeTime`",
        "notice": "Store `_time`.",
        "params": {
          "_time": "the new value to store"
        }
      },
      "setLiveWallet(address)": {
        "details": "stores the _liveWallet address in the state variable `liveWallet`",
        "notice": "Store `_liveWallet`.",
        "params": {
          "_liveWallet": "the new value to store"
        }
      },
      "setPerformanceFeeBurn(uint256)": {
        "details": "stores the fee in the state variable `performanceFeeBurn`",
        "notice": "Store `_fee`.",
        "params": {
          "_fee": "the new value to store"
        }
      },
      "setPerformanceFeeCompounder(uint256)": {
        "details": "stores the fee in the state variable `performanceFeeCompounder`",
        "notice": "Store `_fee`.",
        "params": {
          "_fee": "the new value to store"
        }
      },
      "setPerformanceFeeReserve(uint256)": {
        "details": "stores the fee in the state variable `performanceFeeReserve`",
        "notice": "Store `_fee`.",
        "params": {
          "_fee": "the new value to store"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unfreezeStaking(uint256)": {
        "details": "deducts the provided amount from the total frozen variablle",
        "notice": "unfreeze previously frozen funds from the staking pool"
      },
      "updateDistribution()": {
        "details": "accRewardPerShare is accumulative, meaning it always holds the total historic rewardPerShare making apyBaseline necessary to keep rewards fair",
        "notice": "updates accRewardPerShare based on the last block calculated and totalShares"
      },
      "updateProfits()": {
        "details": "this allows for consistent profit reporting and no change on profits to distribute",
        "notice": "updates accProfitPerShare based on current Profit available and totalShares"
      }
    },
    "version": 1
  },
  "offset": [
    402,
    24951
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x383 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xBDE8A93E GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xE39FAAA4 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0xF79ED94B EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0xFA2B8A5D EQ PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE39FAAA4 EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xE3AEEB46 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xECB1C924 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xECFB49A3 EQ PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC61F1C0B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC61F1C0B EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xD54AD2A1 EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0xDC6E13E1 EQ PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBDE8A93E EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xC22982F4 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xC53F871F EQ PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA80A7882 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xB249E88E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xB249E88E EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0xB359A9F9 EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xBCA5503D EQ PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA80A7882 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xAA8BADC1 EQ PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x939D6237 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x939D6237 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x9B05DDB3 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0x9E13900C EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xA775573A EQ PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x8F44EBFC EQ PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x49535EF5 GT PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x668579C9 GT PUSH2 0x256 JUMPI DUP1 PUSH4 0x6E74D2E2 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x6E74D2E2 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x6F90E046 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x76E9E6C0 EQ PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x668579C9 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x6874D620 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x6903D0B6 EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51496BBD GT PUSH2 0x292 JUMPI DUP1 PUSH4 0x51496BBD EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x5832D571 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x64A9C480 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x6535FC66 EQ PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x49535EF5 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x4B37F006 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x4BF211B8 EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E0AE2F2 GT PUSH2 0x325 JUMPI DUP1 PUSH4 0x3A53ED49 GT PUSH2 0x2FF JUMPI DUP1 PUSH4 0x3A53ED49 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x41441D3B EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x445E7688 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E0AE2F2 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x38ED019A EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x39CC1378 EQ PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F2DC5EF GT PUSH2 0x361 JUMPI DUP1 PUSH4 0x1F2DC5EF EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x2533830A EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x26CBA336 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x289BAC07 EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3960BC EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xC657EB0 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x1E7F87BC EQ PUSH2 0x3CF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x391 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xB SLOAD PUSH2 0x3B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x391 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x391 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x43A CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH2 0x391 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ADA JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x391 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x49F CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x1541 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x15F6 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0A JUMP JUMPDEST PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x391 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x186D JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x571 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x1DF9 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3B7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x5E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x5F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x606 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x1FC5 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x681 PUSH2 0x633 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP7 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x6D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x2493 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x3B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x70B CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x2588 JUMP JUMPDEST PUSH2 0x391 PUSH2 0x71E CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x2620 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x3B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x391 PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B81 JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2BB8 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x15 SLOAD DUP3 SLOAD PUSH2 0x806 SWAP3 SWAP2 PUSH2 0x800 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x270E JUMP JUMPDEST SWAP1 PUSH2 0x271A JUMP JUMPDEST SWAP1 PUSH2 0x2726 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST LT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x8C2 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH2 0x8FA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD PUSH32 0x1EF37AB665F7C977B577275D7A49E72CD18D1143ECCD1112F1198E4A39D1428C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST LT ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081CDD185ADA5B99C8185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH2 0xA22 PUSH2 0x1DF9 JUMP JUMPDEST PUSH2 0xA2A PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0xA5F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0xA6B JUMPI NUMBER PUSH1 0x10 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xAE3 JUMPI NUMBER PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 DUP4 SWAP1 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 SLOAD PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0F DUP3 PUSH1 0x7 ADD SLOAD PUSH2 0x800 PUSH5 0xE8D4A51000 PUSH2 0x7FA PUSH1 0x13 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x16 SLOAD DUP2 GT ISZERO PUSH2 0xB20 JUMPI POP PUSH1 0x16 SLOAD JUMPDEST PUSH1 0x16 SLOAD PUSH2 0xB2D SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH1 0x15 SLOAD DUP4 SLOAD PUSH1 0x0 SWAP3 PUSH2 0xB57 SWAP3 SWAP1 SWAP2 PUSH2 0x800 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 PUSH2 0x270E JUMP JUMPDEST SWAP1 POP PUSH2 0xB63 DUP3 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP2 POP DUP2 ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xB9F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0xBAE SWAP1 DUP4 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x18 SLOAD PUSH2 0xBC0 SWAP1 DUP4 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x18 SSTORE PUSH1 0x1A SLOAD PUSH2 0xBD0 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1A SSTORE JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x0 EQ PUSH2 0xC05 JUMPI PUSH2 0xBFE PUSH1 0x17 SLOAD PUSH2 0x7FA PUSH1 0xA SLOAD DUP7 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC08 JUMP JUMPDEST POP DUP2 JUMPDEST PUSH1 0x17 SLOAD PUSH2 0xC15 SWAP1 DUP5 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x17 SSTORE PUSH1 0xA SLOAD PUSH2 0xC25 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0xA SSTORE DUP2 SLOAD PUSH2 0xC35 JUMPI NUMBER PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST DUP2 SLOAD PUSH2 0xC41 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x15 SLOAD PUSH2 0xC5B SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x8 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x13 SLOAD PUSH2 0xC79 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x7 DUP4 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0xC8D SWAP1 DUP5 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE POP NUMBER PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH2 0xCA5 PUSH2 0x1DF9 JUMP JUMPDEST PUSH2 0xCAD PUSH2 0x13E4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x13 SLOAD DUP3 SLOAD SWAP3 SWAP4 SWAP3 PUSH2 0xCE3 SWAP3 SWAP2 PUSH2 0x800 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x270E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD11 DUP4 PUSH1 0x8 ADD SLOAD PUSH2 0x800 PUSH5 0xE8D4A51000 PUSH2 0x7FA PUSH1 0x15 SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x16 SLOAD DUP3 GT ISZERO PUSH2 0xD23 JUMPI PUSH1 0x16 SLOAD SWAP2 POP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0xD30 SWAP1 DUP4 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH2 0xD3D DUP3 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1A SLOAD SWAP1 SWAP3 POP PUSH2 0xD4D SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1A SSTORE NUMBER PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x19 SLOAD ISZERO PUSH2 0xE02 JUMPI PUSH2 0xD8C PUSH2 0xD85 PUSH1 0x17 SLOAD PUSH2 0x7FA DUP8 PUSH1 0x1 ADD SLOAD PUSH1 0x19 SLOAD PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2726 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46726F7A656E2046756E64733A2043616E2774207769746864726177206D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x65207468616E20417661696C61626C652066756E6473 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x6 DUP5 ADD SLOAD ISZERO PUSH2 0xE14 JUMPI PUSH1 0x0 PUSH1 0x6 DUP6 ADD SSTORE JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E742063616E206E6F74206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572207468616E20617661696C61626C65207374616B656420616D6F756E7400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0xE97 SWAP1 DUP8 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x17 SSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP5 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xEB3 SWAP2 PUSH2 0x7FA SWAP1 DUP11 SWAP1 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xEC5 SWAP1 DUP9 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SSTORE DUP5 SLOAD PUSH2 0xED6 SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST DUP6 SSTORE PUSH1 0xA SLOAD PUSH2 0xEE5 SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x13 SLOAD DUP6 SLOAD PUSH2 0xF01 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SSTORE PUSH1 0x15 SLOAD DUP6 SLOAD PUSH2 0xF1F SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x8 DUP7 ADD SSTORE PUSH2 0xF2E DUP8 DUP6 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x19 SLOAD SWAP1 SWAP8 POP ISZERO PUSH2 0x10DE JUMPI PUSH1 0x6 DUP6 ADD SLOAD ISZERO PUSH2 0xF72 JUMPI PUSH1 0x6 DUP1 SLOAD SWAP1 DUP7 ADD SLOAD PUSH2 0xF54 SWAP2 PUSH2 0x2732 JUMP JUMPDEST TIMESTAMP GT PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8F PUSH2 0x2710 PUSH2 0x7FA PUSH1 0x4 SLOAD DUP12 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP PUSH1 0x6 DUP9 ADD SSTORE SWAP1 POP PUSH2 0xFA1 DUP9 DUP3 PUSH2 0x2726 JUMP JUMPDEST SWAP8 POP PUSH1 0x19 SLOAD DUP2 GT ISZERO PUSH2 0x1069 JUMPI PUSH1 0x0 PUSH2 0xFC4 PUSH1 0x19 SLOAD DUP4 PUSH2 0x2726 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1039 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x2CCE JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x19 SSTORE PUSH2 0x107A JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH2 0x1076 SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x16714FF5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x59C53FD4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x115E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x10EF SWAP2 PUSH2 0x2732 JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0x115E JUMPI PUSH1 0x0 PUSH2 0x1113 PUSH2 0x2710 PUSH2 0x7FA PUSH1 0x3 SLOAD DUP12 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x111F DUP9 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP9 POP PUSH2 0x115C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x27A9 JUMP JUMPDEST POP JUMPDEST DUP6 PUSH2 0x119C JUMPI PUSH2 0x1197 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP10 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x129A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1210 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1234 SWAP2 SWAP1 PUSH2 0x2CCE JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x7EFD3813 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7EFD3813 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x12A9 SWAP1 DUP6 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0x18 SLOAD PUSH2 0x12BB SWAP1 DUP6 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x18 SSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x13AF JUMPI PUSH1 0xF SLOAD PUSH2 0x12D6 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST DUP6 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x137B JUMPI PUSH1 0xF DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x12F4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1304 JUMPI PUSH2 0x1304 PUSH2 0x2CEB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0xF DUP8 PUSH1 0x5 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x133C JUMPI PUSH2 0x133C PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH1 0x5 DUP10 DUP2 ADD SLOAD SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0xE SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SSTORE JUMPDEST PUSH1 0xF DUP1 SLOAD DUP1 PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE JUMPDEST PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD PUSH32 0x1EF37AB665F7C977B577275D7A49E72CD18D1143ECCD1112F1198E4A39D1428C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x13ED JUMPI JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x45C9C1D1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x45C9C1D1 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1438 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145C SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1466 JUMPI POP JUMP JUMPDEST PUSH1 0x1B SLOAD PUSH2 0x1473 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1B SSTORE PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x148F SWAP1 PUSH2 0x7FA DUP5 PUSH5 0xE8D4A51000 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 SWAP2 POP PUSH2 0x149F SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x15 SSTORE POP POP JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x151A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B81 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x153C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2BB8 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x156B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54696D65206D7573742062652067726561746572207468616E20300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH2 0x15F4 PUSH1 0x0 PUSH2 0x27DE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4C696D69742063616E206E6F74206265203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x1E DUP2 LT PUSH2 0x16C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178206175746F636F6D706F756E64206C696D69742063616E6E6F74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x206772656174657220333 PUSH1 0xAC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x1C SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6574206D7573742062652062616E6B726F6C6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x17 SLOAD PUSH2 0x1737 SWAP2 PUSH2 0x2726 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x17AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x467265657A6520616D6F756E742073686F756C64206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7220657175616C20746F20617661696C61626C652066756E6473000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH2 0x17B9 SWAP1 DUP5 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x19 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF62CF8D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0xF62CF8D0 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x181D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1857 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP DUP4 DUP7 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x185F PUSH2 0x1DF9 JUMP JUMPDEST PUSH2 0x1867 PUSH2 0x13E4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST NUMBER PUSH1 0x10 SLOAD GT ISZERO PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D706F756E6420416C6C206E6F7420796574206170706C696361626C652E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x17 SLOAD GT PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F205374616B6564207265776172647320746F20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xF SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP2 LT PUSH2 0x192A JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1C SLOAD DUP2 GT ISZERO DUP1 PUSH2 0x194D JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1C SLOAD PUSH2 0x194A SWAP1 DUP5 SWAP1 PUSH2 0x2732 JUMP JUMPDEST LT ISZERO JUMPDEST ISZERO PUSH2 0x195B JUMPI POP PUSH1 0xF SLOAD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH2 0x1969 SWAP1 DUP4 SWAP1 PUSH2 0x2732 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1974 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x197C PUSH2 0x1DF9 JUMP JUMPDEST DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BA2 JUMPI PUSH1 0x0 PUSH1 0xE PUSH1 0x0 PUSH1 0xF DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x199F JUMPI PUSH2 0x199F PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x13 SLOAD DUP3 SLOAD SWAP3 SWAP5 POP PUSH2 0x19E8 SWAP3 PUSH2 0x800 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 PUSH2 0x270E JUMP JUMPDEST SWAP1 POP PUSH2 0x19F4 DUP7 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x16 SLOAD LT ISZERO PUSH2 0x1A0D JUMPI PUSH1 0x16 SLOAD PUSH2 0x1A0A SWAP1 DUP8 PUSH2 0x2726 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x7 DUP3 ADD SLOAD PUSH2 0x1A1C SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x7 DUP4 ADD SSTORE DUP1 ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A31 DUP7 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x0 PUSH2 0x1A60 DUP4 PUSH1 0x8 ADD SLOAD PUSH2 0x800 PUSH5 0xE8D4A51000 PUSH2 0x7FA PUSH1 0x15 SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP5 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x1A72 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x8 DUP5 ADD SSTORE PUSH2 0x1A81 DUP3 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP2 POP DUP2 ISZERO PUSH2 0x1B87 JUMPI PUSH1 0x1A SLOAD PUSH2 0x1A96 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1A SSTORE PUSH1 0x18 SLOAD PUSH2 0x1AA6 SWAP1 DUP4 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x18 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1AC2 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x7FA SWAP1 DUP7 SWAP1 PUSH2 0x270E JUMP JUMPDEST SWAP1 POP PUSH2 0x1ACE DUP12 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP11 POP PUSH1 0x0 PUSH2 0x1AED PUSH2 0x2710 PUSH2 0x7FA PUSH1 0x1 SLOAD DUP8 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1AF9 DUP11 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP10 POP PUSH1 0x0 PUSH2 0x1B18 PUSH2 0x2710 PUSH2 0x7FA PUSH1 0x5 SLOAD DUP9 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1B24 DUP13 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP12 POP PUSH2 0x1B30 DUP6 DUP5 PUSH2 0x2726 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B3C DUP6 DUP4 PUSH2 0x2726 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B48 DUP6 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SLOAD SWAP1 SWAP6 POP PUSH2 0x1B5A SWAP1 DUP7 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x1B6E SWAP1 DUP7 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD SSTORE PUSH1 0x17 SLOAD PUSH2 0x1B80 SWAP1 DUP7 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x17 SSTORE POP POP POP JUMPDEST POP POP NUMBER PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH2 0x1B9A DUP2 PUSH2 0x2D17 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x197E JUMP JUMPDEST POP PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0xF SLOAD DUP2 LT PUSH2 0x1BB7 JUMPI PUSH1 0x0 PUSH1 0x11 SSTORE JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x1BC4 SWAP1 DUP5 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x16 SSTORE NUMBER PUSH1 0x10 SSTORE PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1C7B SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP CALLER DUP7 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1CB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP8 PUSH2 0x27A9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1D40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6976652057616C6C6574206164647265737320616C72656164792073657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0x1DF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43727573682050657220426C6F636B2063616E206E6F74206265206D6F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x7468616E20313 PUSH1 0xCC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST PUSH1 0x14 SLOAD NUMBER GT PUSH2 0x1E04 JUMPI JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x1E11 JUMPI NUMBER PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x19 SLOAD ISZERO PUSH2 0x1E46 JUMPI PUSH2 0x1E43 PUSH2 0x1E3C PUSH2 0x2710 PUSH2 0x7FA PUSH1 0x9 SLOAD PUSH1 0x12 SLOAD PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2732 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x1E51 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1E68 PUSH1 0x14 SLOAD NUMBER PUSH2 0x2726 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E94 PUSH1 0xA SLOAD PUSH2 0x7FA PUSH5 0xE8D4A51000 PUSH2 0x1E8E DUP8 DUP8 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP PUSH2 0x1EA4 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x13 SSTORE POP POP NUMBER PUSH1 0x14 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616E6B726F6C6C206164647265737320616C72656164792073657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B81 JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x1FC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2BB8 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x200F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B81 JUMP JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x2030 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2BB8 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x203D PUSH2 0x1DF9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x19 SLOAD ISZERO PUSH2 0x2088 JUMPI PUSH2 0x2081 PUSH2 0xD85 PUSH1 0x17 SLOAD PUSH2 0x7FA DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x19 SLOAD PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x209A JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SLOAD ISZERO PUSH2 0x209A JUMPI PUSH1 0x0 PUSH1 0x6 DUP4 ADD SSTORE JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x20A7 SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x17 SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x20C3 SWAP2 PUSH2 0x7FA SWAP1 DUP6 SWAP1 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x20D5 SWAP1 DUP4 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE DUP3 SLOAD PUSH2 0x20E6 SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST DUP4 SSTORE PUSH1 0xA SLOAD PUSH2 0x20F5 SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x13 SLOAD DUP4 SLOAD PUSH2 0x2111 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x15 SLOAD DUP4 SLOAD PUSH2 0x212F SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x7FA SWAP2 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0x19 SLOAD ISZERO PUSH2 0x22BD JUMPI PUSH1 0x6 DUP4 ADD SLOAD ISZERO PUSH2 0x2175 JUMPI PUSH1 0x6 DUP1 SLOAD SWAP1 DUP5 ADD SLOAD PUSH2 0x2157 SWAP2 PUSH2 0x2732 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x2175 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2192 PUSH2 0x2710 PUSH2 0x7FA PUSH1 0x4 SLOAD DUP7 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x21A4 DUP4 DUP3 PUSH2 0x2726 JUMP JUMPDEST SWAP3 POP PUSH1 0x19 SLOAD DUP2 GT ISZERO PUSH2 0x226C JUMPI PUSH1 0x0 PUSH2 0x21C7 PUSH1 0x19 SLOAD DUP4 PUSH2 0x2726 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x223C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2260 SWAP2 SWAP1 PUSH2 0x2CCE JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x19 SSTORE PUSH2 0x227D JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH2 0x2279 SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMPDEST PUSH1 0xD SLOAD PUSH2 0x22B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x27A9 JUMP JUMPDEST POP PUSH2 0x233D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x22CE SWAP2 PUSH2 0x2732 JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0x233D JUMPI PUSH1 0x0 PUSH2 0x22F2 PUSH2 0x2710 PUSH2 0x7FA PUSH1 0x3 SLOAD DUP7 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x22FE DUP4 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP4 POP PUSH2 0x233B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x27A9 JUMP JUMPDEST POP JUMPDEST PUSH2 0x2371 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x2462 JUMPI PUSH1 0xF SLOAD PUSH2 0x2389 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST DUP4 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x242E JUMPI PUSH1 0xF DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x23A7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x23B7 JUMPI PUSH2 0x23B7 PUSH2 0x2CEB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0xF DUP6 PUSH1 0x5 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x23EF JUMPI PUSH2 0x23EF PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH1 0x5 DUP8 DUP2 ADD SLOAD SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0xE SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SSTORE JUMPDEST PUSH1 0xF DUP1 SLOAD DUP1 PUSH2 0x243F JUMPI PUSH2 0x243F PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE JUMPDEST PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD PUSH32 0x1EF37AB665F7C977B577275D7A49E72CD18D1143ECCD1112F1198E4A39D1428C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652062616E6B726F6C6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 GT ISZERO PUSH2 0x2565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E667265657A6520616D6F756E742063616E74206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E2063757272656E746C792066726F7A656E20616D6F756E7400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH2 0x2572 SWAP1 DUP3 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x19 SSTORE PUSH2 0x257D PUSH2 0x1DF9 JUMP JUMPDEST PUSH2 0x2585 PUSH2 0x13E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH2 0x2585 DUP2 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x12 SLOAD PUSH1 0x19 SLOAD ISZERO PUSH2 0x2666 JUMPI PUSH2 0x2663 PUSH2 0x1E3C PUSH2 0x2710 PUSH2 0x7FA PUSH1 0x9 SLOAD PUSH1 0x12 SLOAD PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x2671 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2686 JUMPI POP PUSH1 0xA SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x26DD JUMPI PUSH1 0x0 PUSH2 0x26A2 PUSH1 0x14 SLOAD NUMBER PUSH2 0x2726 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26C8 PUSH1 0xA SLOAD PUSH2 0x7FA PUSH5 0xE8D4A51000 PUSH2 0x1E8E DUP9 DUP8 PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP PUSH2 0x26D8 SWAP1 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH2 0x2705 DUP4 PUSH1 0x7 ADD SLOAD PUSH2 0x800 PUSH5 0xE8D4A51000 PUSH2 0x7FA DUP6 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x270E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP3 DUP5 PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP3 DUP5 PUSH2 0x2D51 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP3 DUP5 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP3 DUP5 PUSH2 0x2D73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1867 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x27D9 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2772 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2883 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2900 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x27D9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x28A1 SWAP2 SWAP1 PUSH2 0x2CCE JUMP JUMPDEST PUSH2 0x27D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x290F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2917 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x29EB SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2A28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2A3D DUP3 DUP3 DUP7 PUSH2 0x2A48 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A57 JUMPI POP DUP2 PUSH2 0x806 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2A67 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x2DD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x806 DUP2 PUSH2 0x2A9A JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2AFF DUP2 PUSH2 0x2ACC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2B31 DUP2 PUSH2 0x2A9A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2B41 DUP2 PUSH2 0x2A9A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x466565206D7573742062652067726561746572207468616E2030000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206C657373207468616E2031302500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420437275736820746F6B656E7320666F72207472 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x30B739B332B9 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2C76 JUMPI PUSH2 0x2C76 PUSH2 0x2C4E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204F6E6520576974686472617720616C6C6F77656420706572203320 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x686F75727320647572696E6720667265657A65 PUSH1 0x68 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x806 DUP2 PUSH2 0x2ACC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2D2B JUMPI PUSH2 0x2D2B PUSH2 0x2C4E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2D4C JUMPI PUSH2 0x2D4C PUSH2 0x2C4E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2D6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2D86 JUMPI PUSH2 0x2D86 PUSH2 0x2C4E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DA6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D8E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1867 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2DC9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2D8B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2DF2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND STATICCALL 0xD4 JUMPI STOP 0xE4 0xE2 0xE7 EQ GT PUSH5 0xAA7F88556E 0xB9 SWAP16 EXP SWAP5 CALLER PUSH5 0x762557B2B2 DUP10 0xBA MSIZE MSTORE8 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "6": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "12": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "17": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "POP",
      "path": "17"
    },
    "18": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "21": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "LT",
      "path": "17"
    },
    "22": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x383"
    },
    "25": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "29": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "SHR",
      "path": "17"
    },
    "32": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "33": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x817B1CD2"
    },
    "38": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "39": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DE"
    },
    "42": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "43": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "44": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBDE8A93E"
    },
    "49": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "50": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10F"
    },
    "53": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "54": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "55": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xE39FAAA4"
    },
    "60": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "61": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAD"
    },
    "64": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "66": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "72": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "76": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "77": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "83": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6FD"
    },
    "86": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "87": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF40F0F52"
    },
    "93": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "94": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x710"
    },
    "97": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "98": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "99": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF79ED94B"
    },
    "104": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "105": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x723"
    },
    "108": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "109": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "110": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFA2B8A5D"
    },
    "115": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "116": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x736"
    },
    "119": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "120": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "123": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "124": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "125": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "126": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xE39FAAA4"
    },
    "131": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "132": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6C5"
    },
    "135": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "136": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "137": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xE3AEEB46"
    },
    "142": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "143": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6D8"
    },
    "146": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "147": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "148": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xECB1C924"
    },
    "153": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "154": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6EB"
    },
    "157": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "158": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "159": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xECFB49A3"
    },
    "164": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "165": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6F4"
    },
    "168": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "169": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "172": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "173": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "174": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "175": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC61F1C0B"
    },
    "180": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "181": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "185": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "186": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC61F1C0B"
    },
    "191": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "192": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x60B"
    },
    "195": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "196": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "197": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xD54AD2A1"
    },
    "202": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "203": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x614"
    },
    "206": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "207": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "208": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xDB2E21BC"
    },
    "213": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "214": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x61D"
    },
    "217": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "218": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "219": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xDC6E13E1"
    },
    "224": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "225": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x625"
    },
    "228": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "229": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "232": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "233": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "234": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "235": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBDE8A93E"
    },
    "240": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "241": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5D2"
    },
    "244": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "245": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "246": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC22982F4"
    },
    "251": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "252": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5E5"
    },
    "255": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "256": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "257": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC53F871F"
    },
    "262": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "263": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5F8"
    },
    "266": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "267": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "269": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "270": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "271": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "272": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "273": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA80A7882"
    },
    "278": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "279": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17C"
    },
    "282": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "283": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "284": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xB249E88E"
    },
    "289": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "290": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x156"
    },
    "293": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "294": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "295": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xB249E88E"
    },
    "300": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "301": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x590"
    },
    "304": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "305": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "306": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xB359A9F9"
    },
    "311": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "312": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x599"
    },
    "315": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "316": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "317": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBC063E1A"
    },
    "322": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "323": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5C0"
    },
    "326": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "327": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "328": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBCA5503D"
    },
    "333": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "334": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5C9"
    },
    "337": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "338": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "340": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "341": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "342": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "343": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "344": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA80A7882"
    },
    "349": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "350": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x576"
    },
    "353": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "354": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "355": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA9F8D181"
    },
    "360": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "361": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x57F"
    },
    "364": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "365": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "366": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xAA8BADC1"
    },
    "371": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "372": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x588"
    },
    "375": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "376": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "378": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "379": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "380": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "381": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "382": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x939D6237"
    },
    "387": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "388": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B8"
    },
    "391": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "392": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "393": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x939D6237"
    },
    "398": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "399": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x53F"
    },
    "402": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "403": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "404": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x9B05DDB3"
    },
    "409": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "410": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x548"
    },
    "413": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "414": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "415": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x9E13900C"
    },
    "420": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "421": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x550"
    },
    "424": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "425": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "426": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA775573A"
    },
    "431": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "432": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x563"
    },
    "435": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "436": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "438": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "439": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "440": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "441": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "442": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x817B1CD2"
    },
    "447": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "448": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x512"
    },
    "451": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "452": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "453": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "458": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "459": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x51B"
    },
    "462": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "463": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "464": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8F44EBFC"
    },
    "469": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "470": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x52C"
    },
    "473": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "474": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "476": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "477": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "478": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "479": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "480": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x49535EF5"
    },
    "485": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "486": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2B8"
    },
    "489": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "490": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "491": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x668579C9"
    },
    "496": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "497": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x256"
    },
    "500": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "501": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "502": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x6E74D2E2"
    },
    "507": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "508": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x230"
    },
    "511": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "512": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "513": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x6E74D2E2"
    },
    "518": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "519": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4DB"
    },
    "522": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "523": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "524": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x6F90E046"
    },
    "529": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "530": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4E4"
    },
    "533": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "534": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "535": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x715018A6"
    },
    "540": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "541": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4F7"
    },
    "544": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "545": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "546": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x76E9E6C0"
    },
    "551": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "552": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4FF"
    },
    "555": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "556": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "558": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "559": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "560": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "561": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "562": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x668579C9"
    },
    "567": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "568": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4C0"
    },
    "571": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "572": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "573": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x6874D620"
    },
    "578": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "579": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4C9"
    },
    "582": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "583": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "584": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x6903D0B6"
    },
    "589": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "590": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D2"
    },
    "593": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "594": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "596": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "597": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "598": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "599": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "600": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x51496BBD"
    },
    "605": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "606": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x292"
    },
    "609": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "610": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "611": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x51496BBD"
    },
    "616": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "617": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x489"
    },
    "620": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "621": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "622": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x5832D571"
    },
    "627": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "628": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x491"
    },
    "631": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "632": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "633": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x64A9C480"
    },
    "638": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "639": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4A4"
    },
    "642": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "643": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "644": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x6535FC66"
    },
    "649": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "650": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4AD"
    },
    "653": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "654": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "656": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "657": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "658": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "659": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "660": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x49535EF5"
    },
    "665": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "666": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x46E"
    },
    "669": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "670": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "671": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x4B37F006"
    },
    "676": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "677": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x477"
    },
    "680": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "681": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "682": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x4BF211B8"
    },
    "687": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "688": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x480"
    },
    "691": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "692": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "694": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "695": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "696": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "697": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "698": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2E0AE2F2"
    },
    "703": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "704": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x325"
    },
    "707": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "708": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "709": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3A53ED49"
    },
    "714": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "715": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2FF"
    },
    "718": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "719": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "720": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3A53ED49"
    },
    "725": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "726": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x42C"
    },
    "729": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "730": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "731": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3A98EF39"
    },
    "736": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "737": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43F"
    },
    "740": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "741": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "742": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x41441D3B"
    },
    "747": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "748": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x448"
    },
    "751": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "752": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "753": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x445E7688"
    },
    "758": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "759": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x45B"
    },
    "762": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "763": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "765": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "766": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "767": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "768": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "769": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2E0AE2F2"
    },
    "774": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "775": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x407"
    },
    "778": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "779": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "780": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x38ED019A"
    },
    "785": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "786": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x410"
    },
    "789": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "790": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "791": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x39CC1378"
    },
    "796": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "797": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x419"
    },
    "800": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "801": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "803": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "804": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "805": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "806": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "807": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x1F2DC5EF"
    },
    "812": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "GT",
      "path": "17"
    },
    "813": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x361"
    },
    "816": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "817": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "818": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x1F2DC5EF"
    },
    "823": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "824": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3D8"
    },
    "827": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "828": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "829": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2533830A"
    },
    "834": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "835": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E1"
    },
    "838": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "839": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "840": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x26CBA336"
    },
    "845": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "846": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3EA"
    },
    "849": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "850": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "851": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x289BAC07"
    },
    "856": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "857": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FF"
    },
    "860": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "861": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "863": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "864": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "865": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "866": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "867": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA3960BC"
    },
    "872": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "873": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x388"
    },
    "876": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "877": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "878": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC657EB0"
    },
    "883": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "884": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3A4"
    },
    "887": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "888": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "889": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x1E7F87BC"
    },
    "894": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "EQ",
      "path": "17"
    },
    "895": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3CF"
    },
    "898": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "899": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "900": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "902": {
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "DUP1",
      "path": "17"
    },
    "903": {
      "first_revert": true,
      "fn": null,
      "offset": [
        402,
        24951
      ],
      "op": "REVERT",
      "path": "17"
    },
    "904": {
      "offset": [
        987,
        1029
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "905": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "908": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "910": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "911": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "DUP2",
      "path": "17"
    },
    "912": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "JUMP",
      "path": "17"
    },
    "913": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "914": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "916": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "917": {
      "op": "SWAP1"
    },
    "918": {
      "op": "DUP2"
    },
    "919": {
      "op": "MSTORE"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "922": {
      "op": "ADD"
    },
    "923": {
      "offset": [
        987,
        1029
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "924": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "926": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "927": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "DUP1",
      "path": "17"
    },
    "928": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "929": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "SUB",
      "path": "17"
    },
    "930": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "931": {
      "fn": null,
      "offset": [
        987,
        1029
      ],
      "op": "RETURN",
      "path": "17"
    },
    "932": {
      "offset": [
        1399,
        1431
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "933": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xB"
    },
    "935": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "936": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3B7"
    },
    "939": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "946": {
      "op": "SHL"
    },
    "947": {
      "op": "SUB"
    },
    "948": {
      "offset": [
        1399,
        1431
      ],
      "op": "AND",
      "path": "17"
    },
    "949": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "DUP2",
      "path": "17"
    },
    "950": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "JUMP",
      "path": "17"
    },
    "951": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "952": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "954": {
      "fn": null,
      "offset": [
        1399,
        1431
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "op": "SWAP1"
    },
    "964": {
      "op": "SWAP2"
    },
    "965": {
      "op": "AND"
    },
    "966": {
      "op": "DUP2"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "offset": [
        1399,
        1431
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x39B"
    },
    "974": {
      "op": "JUMP"
    },
    "975": {
      "offset": [
        2458,
        2484
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "976": {
      "fn": null,
      "offset": [
        2458,
        2484
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "979": {
      "fn": null,
      "offset": [
        2458,
        2484
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "981": {
      "fn": null,
      "offset": [
        2458,
        2484
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "982": {
      "fn": null,
      "offset": [
        2458,
        2484
      ],
      "op": "DUP2",
      "path": "17"
    },
    "983": {
      "fn": null,
      "offset": [
        2458,
        2484
      ],
      "op": "JUMP",
      "path": "17"
    },
    "984": {
      "offset": [
        798,
        837
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "985": {
      "fn": null,
      "offset": [
        798,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "988": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "991": {
      "offset": [
        798,
        837
      ],
      "op": "DUP2",
      "path": "17"
    },
    "992": {
      "fn": null,
      "offset": [
        798,
        837
      ],
      "op": "JUMP",
      "path": "17"
    },
    "993": {
      "offset": [
        2530,
        2567
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "994": {
      "fn": null,
      "offset": [
        2530,
        2567
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "997": {
      "fn": null,
      "offset": [
        2530,
        2567
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1B"
    },
    "999": {
      "fn": null,
      "offset": [
        2530,
        2567
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1000": {
      "fn": null,
      "offset": [
        2530,
        2567
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1001": {
      "fn": null,
      "offset": [
        2530,
        2567
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1002": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1003": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1006": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F8"
    },
    "1009": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1010": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1012": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1015": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "jump": "i",
      "offset": [
        20026,
        20261
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1016": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1017": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x745"
    },
    "1020": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "jump": "i",
      "offset": [
        20026,
        20261
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1021": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1022": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "STOP",
      "path": "17"
    },
    "1023": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        19747,
        19878
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1024": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        19850,
        19864
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 0,
      "value": "0xF"
    },
    "1026": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        19850,
        19871
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1027": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        19747,
        19878
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1030": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        19747,
        19878
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1031": {
      "offset": [
        911,
        955
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1032": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        911,
        955
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1035": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        911,
        955
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1037": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        911,
        955
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1038": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        911,
        955
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1039": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        911,
        955
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1040": {
      "offset": [
        1993,
        2026
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1041": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        1993,
        2026
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1044": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        1993,
        2026
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x11"
    },
    "1046": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        1993,
        2026
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1047": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        1993,
        2026
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1048": {
      "fn": "BitcrushStaking.indexesLength",
      "offset": [
        1993,
        2026
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1049": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1050": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1053": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x427"
    },
    "1056": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1057": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1059": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2AAF"
    },
    "1062": {
      "fn": "BitcrushStaking.pendingProfits",
      "jump": "i",
      "offset": [
        14094,
        14356
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1063": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1064": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7BE"
    },
    "1067": {
      "fn": "BitcrushStaking.pendingProfits",
      "jump": "i",
      "offset": [
        14094,
        14356
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1068": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1069": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1072": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43A"
    },
    "1075": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1076": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1078": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1081": {
      "fn": "BitcrushStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        4154,
        4498
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1082": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1083": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x80D"
    },
    "1086": {
      "fn": "BitcrushStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        4154,
        4498
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1087": {
      "offset": [
        1293,
        1319
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1088": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        1293,
        1319
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1091": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        1293,
        1319
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "1093": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        1293,
        1319
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1094": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        1293,
        1319
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1095": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        1293,
        1319
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1096": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1097": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1100": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x456"
    },
    "1103": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1104": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1106": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1109": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        6514,
        8693
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1110": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1111": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x929"
    },
    "1114": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        6514,
        8693
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1115": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1116": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1119": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x469"
    },
    "1122": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1123": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1125": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2ADA"
    },
    "1128": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9009,
        12775
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1129": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1130": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC9D"
    },
    "1133": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9009,
        12775
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1134": {
      "offset": [
        1232,
        1262
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1135": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1232,
        1262
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1138": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1232,
        1262
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x9"
    },
    "1140": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1232,
        1262
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1141": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1232,
        1262
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1142": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1232,
        1262
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1143": {
      "offset": [
        1118,
        1151
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1144": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1118,
        1151
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1147": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1118,
        1151
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "1149": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1118,
        1151
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1150": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1118,
        1151
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1151": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1118,
        1151
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1152": {
      "offset": [
        1950,
        1986
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1153": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1950,
        1986
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1156": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1950,
        1986
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x10"
    },
    "1158": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1950,
        1986
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1159": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1950,
        1986
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1160": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        1950,
        1986
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1161": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5691,
        6089
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1162": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5691,
        6089
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1165": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5691,
        6089
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13E4"
    },
    "1168": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "i",
      "offset": [
        5691,
        6089
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1169": {
      "offset": [
        1912,
        1943
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1170": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3B7"
    },
    "1173": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x49F"
    },
    "1176": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1177": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1179": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1182": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "i",
      "offset": [
        1912,
        1943
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1183": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1184": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14A6"
    },
    "1187": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "i",
      "offset": [
        1912,
        1943
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1188": {
      "offset": [
        2490,
        2524
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1189": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        2490,
        2524
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1192": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        2490,
        2524
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1A"
    },
    "1194": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        2490,
        2524
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1195": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        2490,
        2524
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1196": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        2490,
        2524
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1197": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1198": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1201": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4BB"
    },
    "1204": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1205": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1207": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1210": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "jump": "i",
      "offset": [
        21130,
        21360
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1211": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1212": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14D0"
    },
    "1215": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "jump": "i",
      "offset": [
        21130,
        21360
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1216": {
      "offset": [
        2664,
        2698
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1217": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        2664,
        2698
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1220": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        2664,
        2698
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1D"
    },
    "1222": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        2664,
        2698
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1223": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        2664,
        2698
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1224": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        2664,
        2698
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1225": {
      "offset": [
        1062,
        1111
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1226": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1062,
        1111
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1229": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1062,
        1111
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "1231": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1062,
        1111
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1232": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1062,
        1111
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1233": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1062,
        1111
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1234": {
      "offset": [
        1157,
        1226
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1235": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1157,
        1226
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1238": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1157,
        1226
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "1240": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1157,
        1226
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1241": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1157,
        1226
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1242": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        1157,
        1226
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1243": {
      "offset": [
        729,
        768
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1244": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        729,
        768
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1247": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        729,
        768
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1249": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        729,
        768
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1250": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        729,
        768
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1251": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        729,
        768
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1252": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1253": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1256": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4F2"
    },
    "1259": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1260": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1262": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1265": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "jump": "i",
      "offset": [
        21507,
        21676
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1266": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1267": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1541"
    },
    "1270": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "jump": "i",
      "offset": [
        21507,
        21676
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1271": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1272": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FD"
    },
    "1275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C0"
    },
    "1278": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1279": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1280": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1283": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x50D"
    },
    "1286": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1287": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1289": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1292": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "jump": "i",
      "offset": [
        21823,
        22057
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1293": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1294": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15F6"
    },
    "1297": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "jump": "i",
      "offset": [
        21823,
        22057
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1298": {
      "offset": [
        2365,
        2391
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1299": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        2365,
        2391
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1302": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        2365,
        2391
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "1304": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        2365,
        2391
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1305": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        2365,
        2391
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1306": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        2365,
        2391
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1307": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1310": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1320": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "1323": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1324": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1325": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1328": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x53A"
    },
    "1331": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1332": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1334": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2B0A"
    },
    "1337": {
      "fn": "BitcrushStaking.freezeStaking",
      "jump": "i",
      "offset": [
        18323,
        19061
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1338": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1339": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16CE"
    },
    "1342": {
      "fn": "BitcrushStaking.freezeStaking",
      "jump": "i",
      "offset": [
        18323,
        19061
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1343": {
      "offset": [
        2135,
        2167
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1344": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        2135,
        2167
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1347": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        2135,
        2167
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x13"
    },
    "1349": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        2135,
        2167
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1350": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        2135,
        2167
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1351": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        2135,
        2167
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1352": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14535,
        18155
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1353": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14535,
        18155
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1356": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14535,
        18155
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x186D"
    },
    "1359": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        14535,
        18155
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1360": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1361": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1364": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x55E"
    },
    "1367": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1368": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1370": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2AAF"
    },
    "1373": {
      "fn": "BitcrushStaking.setLiveWallet",
      "jump": "i",
      "offset": [
        3755,
        3989
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1374": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1375": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CBD"
    },
    "1378": {
      "fn": "BitcrushStaking.setLiveWallet",
      "jump": "i",
      "offset": [
        3755,
        3989
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1379": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1380": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1383": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x571"
    },
    "1386": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1387": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1389": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1392": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "jump": "i",
      "offset": [
        6095,
        6391
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1393": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1394": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D62"
    },
    "1397": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "jump": "i",
      "offset": [
        6095,
        6391
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1398": {
      "offset": [
        844,
        880
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1399": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        844,
        880
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1402": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        844,
        880
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1404": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        844,
        880
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1405": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        844,
        880
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1406": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        844,
        880
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1407": {
      "offset": [
        2173,
        2203
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1408": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        2173,
        2203
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1411": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        2173,
        2203
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x14"
    },
    "1413": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        2173,
        2203
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1414": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        2173,
        2203
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1415": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        2173,
        2203
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1416": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4761,
        5497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1417": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4761,
        5497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1420": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4761,
        5497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF9"
    },
    "1423": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "i",
      "offset": [
        4761,
        5497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1424": {
      "offset": [
        2252,
        2284
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1425": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        2252,
        2284
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1428": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        2252,
        2284
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x15"
    },
    "1430": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        2252,
        2284
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1431": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        2252,
        2284
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1432": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        2252,
        2284
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1433": {
      "offset": [
        1360,
        1393
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1434": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        1360,
        1393
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3B7"
    },
    "1437": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        1360,
        1393
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "1470": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        1360,
        1393
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1471": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        1360,
        1393
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1472": {
      "offset": [
        584,
        622
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1473": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        584,
        622
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1476": {
      "offset": [
        618,
        622
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E8"
    },
    "1479": {
      "offset": [
        584,
        622
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1480": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        584,
        622
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1481": {
      "offset": [
        654,
        698
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1482": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        654,
        698
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1485": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        654,
        698
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1487": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        654,
        698
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1488": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        654,
        698
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1489": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        654,
        698
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1490": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1491": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1494": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5E0"
    },
    "1497": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1498": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1500": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2AAF"
    },
    "1503": {
      "fn": "BitcrushStaking.setBankroll",
      "jump": "i",
      "offset": [
        3372,
        3591
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1504": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1505": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1EB0"
    },
    "1508": {
      "fn": "BitcrushStaking.setBankroll",
      "jump": "i",
      "offset": [
        3372,
        3591
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1509": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1510": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1513": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5F3"
    },
    "1516": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1517": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1519": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1522": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        20766,
        20985
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1523": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1524": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F55"
    },
    "1527": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        20766,
        20985
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1528": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1529": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1532": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x606"
    },
    "1535": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1536": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1538": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1541": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "jump": "i",
      "offset": [
        20403,
        20626
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1542": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1543": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FC5"
    },
    "1546": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "jump": "i",
      "offset": [
        20403,
        20626
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1547": {
      "offset": [
        2032,
        2082
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1548": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2032,
        2082
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1551": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2032,
        2082
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x12"
    },
    "1553": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2032,
        2082
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1554": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2032,
        2082
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1555": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2032,
        2082
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1556": {
      "offset": [
        2397,
        2424
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1557": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2397,
        2424
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1560": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2397,
        2424
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x18"
    },
    "1562": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2397,
        2424
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1563": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2397,
        2424
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1564": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        2397,
        2424
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1565": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22172,
        24949
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1566": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22172,
        24949
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1569": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22172,
        24949
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2035"
    },
    "1572": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        22172,
        24949
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1573": {
      "offset": [
        1859,
        1906
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1574": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x681"
    },
    "1577": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x633"
    },
    "1580": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1581": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1583": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2AAF"
    },
    "1586": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        1859,
        1906
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1587": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1588": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "1590": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1592": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1593": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1594": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1596": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1597": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1599": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1601": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1602": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1604": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1605": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "POP",
      "path": "17"
    },
    "1606": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1607": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "POP",
      "path": "17"
    },
    "1608": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1609": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1611": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1612": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1613": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1614": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1615": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1617": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1618": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1619": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1620": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1621": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1623": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1624": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1625": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1626": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1627": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1629": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1630": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1631": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1632": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1633": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1635": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1636": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1637": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1638": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1639": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "1641": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1642": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1643": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1644": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1645": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "1647": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1648": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1649": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1650": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1651": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "1653": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1654": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1655": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1656": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1657": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "1659": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "ADD",
      "path": "17"
    },
    "1660": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1661": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1662": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "POP",
      "path": "17"
    },
    "1663": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP10",
      "path": "17"
    },
    "1664": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1665": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1666": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1668": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1669": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        1859,
        1906
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1670": {
      "op": "SWAP10"
    },
    "1671": {
      "op": "DUP11"
    },
    "1672": {
      "op": "MSTORE"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1675": {
      "op": "DUP11"
    },
    "1676": {
      "op": "ADD"
    },
    "1677": {
      "op": "SWAP9"
    },
    "1678": {
      "op": "SWAP1"
    },
    "1679": {
      "op": "SWAP9"
    },
    "1680": {
      "op": "MSTORE"
    },
    "1681": {
      "op": "SWAP7"
    },
    "1682": {
      "op": "DUP9"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "SWAP6"
    },
    "1685": {
      "op": "SWAP1"
    },
    "1686": {
      "op": "SWAP6"
    },
    "1687": {
      "op": "MSTORE"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1690": {
      "op": "DUP8"
    },
    "1691": {
      "op": "ADD"
    },
    "1692": {
      "op": "SWAP4"
    },
    "1693": {
      "op": "SWAP1"
    },
    "1694": {
      "op": "SWAP4"
    },
    "1695": {
      "op": "MSTORE"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1698": {
      "op": "DUP7"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "op": "SWAP2"
    },
    "1701": {
      "op": "SWAP1"
    },
    "1702": {
      "op": "SWAP2"
    },
    "1703": {
      "op": "MSTORE"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1706": {
      "op": "DUP6"
    },
    "1707": {
      "op": "ADD"
    },
    "1708": {
      "op": "MSTORE"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1711": {
      "op": "DUP5"
    },
    "1712": {
      "op": "ADD"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1716": {
      "op": "DUP4"
    },
    "1717": {
      "op": "ADD"
    },
    "1718": {
      "op": "MSTORE"
    },
    "1719": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1722": {
      "op": "DUP3"
    },
    "1723": {
      "op": "ADD"
    },
    "1724": {
      "op": "MSTORE"
    },
    "1725": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1728": {
      "op": "ADD"
    },
    "1729": {
      "offset": [
        1859,
        1906
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x39B"
    },
    "1732": {
      "op": "JUMP"
    },
    "1733": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1734": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FD"
    },
    "1737": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6D3"
    },
    "1740": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1741": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1743": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A81"
    },
    "1746": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "jump": "i",
      "offset": [
        19203,
        19578
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1747": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1748": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2493"
    },
    "1751": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "jump": "i",
      "offset": [
        19203,
        19578
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1752": {
      "offset": [
        1437,
        1473
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1753": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        1437,
        1473
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xC"
    },
    "1755": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        1437,
        1473
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1756": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        1437,
        1473
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3B7"
    },
    "1759": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        1437,
        1473
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1766": {
      "op": "SHL"
    },
    "1767": {
      "op": "SUB"
    },
    "1768": {
      "offset": [
        1437,
        1473
      ],
      "op": "AND",
      "path": "17"
    },
    "1769": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        1437,
        1473
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1770": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        1437,
        1473
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1771": {
      "offset": [
        2602,
        2639
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1772": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2602,
        2639
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1775": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2602,
        2639
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1C"
    },
    "1777": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2602,
        2639
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1778": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2602,
        2639
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1779": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2602,
        2639
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1780": {
      "offset": [
        2313,
        2337
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1781": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2313,
        2337
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1784": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2313,
        2337
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "1786": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2313,
        2337
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1787": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2313,
        2337
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1788": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        2313,
        2337
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FD"
    },
    "1793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70B"
    },
    "1796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AAF"
    },
    "1802": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2588"
    },
    "1807": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1808": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1809": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1812": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x71E"
    },
    "1815": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1816": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1818": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2AAF"
    },
    "1821": {
      "fn": "BitcrushStaking.pendingReward",
      "jump": "i",
      "offset": [
        12981,
        13921
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1822": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1823": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2620"
    },
    "1826": {
      "fn": "BitcrushStaking.pendingReward",
      "jump": "i",
      "offset": [
        12981,
        13921
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1827": {
      "offset": [
        1517,
        1546
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1828": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        1517,
        1546
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xD"
    },
    "1830": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        1517,
        1546
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1831": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        1517,
        1546
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3B7"
    },
    "1834": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        1517,
        1546
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "op": "SUB"
    },
    "1843": {
      "offset": [
        1517,
        1546
      ],
      "op": "AND",
      "path": "17"
    },
    "1844": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        1517,
        1546
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1845": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        1517,
        1546
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1846": {
      "offset": [
        512,
        578
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1847": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        512,
        578
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x391"
    },
    "1850": {
      "offset": [
        558,
        578
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0x8AC7230489E80000"
    },
    "1859": {
      "offset": [
        512,
        578
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1860": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        512,
        578
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1861": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20026,
        20261
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1862": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1864": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "op": "SUB"
    },
    "1873": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1874": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 2
    },
    "1875": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1876": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x778"
    },
    "1879": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1882": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1883": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1889": {
      "op": "SHL"
    },
    "1890": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1891": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1892": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1894": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1895": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "1898": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1899": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "1902": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1903": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1904": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1906": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1907": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1908": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1909": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1910": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1911": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1912": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1913": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20119,
        20120
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 3,
      "value": "0x0"
    },
    "1915": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20112,
        20116
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1916": {
      "branch": 192,
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20112,
        20120
      ],
      "op": "GT",
      "path": "17"
    },
    "1917": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x798"
    },
    "1920": {
      "branch": 192,
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1921": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1923": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1924": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1932": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1933": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1935": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "ADD",
      "path": "17"
    },
    "1936": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "1939": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1940": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2B81"
    },
    "1943": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "jump": "i",
      "offset": [
        20104,
        20151
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1944": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20104,
        20151
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1945": {
      "offset": [
        618,
        622
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E8"
    },
    "1948": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20169,
        20173
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 4
    },
    "1949": {
      "branch": 193,
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20169,
        20183
      ],
      "op": "LT",
      "path": "17"
    },
    "1950": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7B9"
    },
    "1953": {
      "branch": 193,
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1954": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1956": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1957": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1963": {
      "op": "SHL"
    },
    "1964": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1965": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1966": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1968": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "ADD",
      "path": "17"
    },
    "1969": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "1972": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1973": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BB8"
    },
    "1976": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "jump": "i",
      "offset": [
        20161,
        20213
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1977": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20161,
        20213
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1978": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20223,
        20247
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x1"
    },
    "1980": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "offset": [
        20223,
        20254
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1981": {
      "fn": "BitcrushStaking.setPerformanceFeeCompounder",
      "jump": "o",
      "offset": [
        20026,
        20261
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1982": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1992": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "AND",
      "path": "17"
    },
    "1993": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14157,
        14164
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1995": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1996": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1997": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1998": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "2000": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2002": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2003": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2005": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2006": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14203,
        14221
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2007": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14316,
        14335
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 6,
      "value": "0x8"
    },
    "2009": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14316,
        14335
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2010": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14316,
        14335
      ],
      "op": "ADD",
      "path": "17"
    },
    "2011": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14316,
        14335
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2012": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14266,
        14283
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x15"
    },
    "2014": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14266,
        14283
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2015": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14261
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2016": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14261
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2017": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14349
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x806"
    },
    "2020": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14349
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2021": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14316,
        14335
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2022": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14294
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x800"
    },
    "2025": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14294
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2026": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14289,
        14293
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "2032": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14289,
        14293
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2033": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14284
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "2036": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14284
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2037": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14261
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2038": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14265
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "2041": {
      "fn": "BitcrushStaking.pendingProfits",
      "jump": "i",
      "offset": [
        14250,
        14284
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2042": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14284
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2043": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14288
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2044": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14288
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x271A"
    },
    "2047": {
      "fn": "BitcrushStaking.pendingProfits",
      "jump": "i",
      "offset": [
        14250,
        14294
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2048": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14294
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2049": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14298
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2050": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14298
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "2053": {
      "fn": "BitcrushStaking.pendingProfits",
      "jump": "i",
      "offset": [
        14250,
        14349
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2054": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14250,
        14349
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2055": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14231,
        14349
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2056": {
      "fn": "BitcrushStaking.pendingProfits",
      "offset": [
        14094,
        14356
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2057": {
      "op": "POP"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "fn": "BitcrushStaking.pendingProfits",
      "jump": "o",
      "offset": [
        14094,
        14356
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2061": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2062": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 7,
      "value": "0x40"
    },
    "2064": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2065": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2072": {
      "op": "SHL"
    },
    "2073": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2074": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2075": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4250,
        4260
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2076": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2078": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2079": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "ADD",
      "path": "17"
    },
    "2080": {
      "op": "MSTORE"
    },
    "2081": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4265,
        4272
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2082": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4265,
        4272
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2083": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4239
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2122": {
      "op": "SHL"
    },
    "2123": {
      "op": "SUB"
    },
    "2124": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4249
      ],
      "op": "AND",
      "path": "17"
    },
    "2125": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4249
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2126": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4249
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x70A08231"
    },
    "2131": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4249
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2134": {
      "op": "ADD"
    },
    "2135": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2137": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2139": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2140": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2141": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2142": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "SUB",
      "path": "17"
    },
    "2143": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2144": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2145": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "GAS",
      "path": "17"
    },
    "2146": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2147": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2148": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2149": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2150": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x873"
    },
    "2153": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2154": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2155": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2157": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2158": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2159": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2160": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2162": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2163": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2164": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "POP",
      "path": "17"
    },
    "2165": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "POP",
      "path": "17"
    },
    "2166": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "POP",
      "path": "17"
    },
    "2167": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "POP",
      "path": "17"
    },
    "2168": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2170": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2171": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2172": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2174": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "NOT",
      "path": "17"
    },
    "2175": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2177": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2178": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "ADD",
      "path": "17"
    },
    "2179": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "AND",
      "path": "17"
    },
    "2180": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2181": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "ADD",
      "path": "17"
    },
    "2182": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2183": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2185": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2186": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "POP",
      "path": "17"
    },
    "2187": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2188": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "ADD",
      "path": "17"
    },
    "2189": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2190": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x897"
    },
    "2193": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2194": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2195": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BEF"
    },
    "2198": {
      "fn": "BitcrushStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        4234,
        4261
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2199": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4261
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2200": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4272
      ],
      "op": "LT",
      "path": "17"
    },
    "2201": {
      "branch": 194,
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4234,
        4272
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2202": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8B5"
    },
    "2205": {
      "branch": 194,
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2206": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2208": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2217": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2218": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2220": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "ADD",
      "path": "17"
    },
    "2221": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "2224": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2225": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C08"
    },
    "2228": {
      "fn": "BitcrushStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        4213,
        4336
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2229": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4213,
        4336
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2230": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4358,
        4367
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 8,
      "value": "0x16"
    },
    "2232": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4358,
        4367
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2233": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4358,
        4380
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8C2"
    },
    "2236": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4358,
        4380
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2237": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4372,
        4379
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2238": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4358,
        4371
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "2241": {
      "fn": "BitcrushStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        4358,
        4380
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2242": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4358,
        4380
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2243": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4346,
        4355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "2245": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4346,
        4380
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2246": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4390,
        4448
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 9,
      "value": "0x8FA"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "op": "SUB"
    },
    "2257": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4390,
        4395
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "2290": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4390,
        4412
      ],
      "op": "AND",
      "path": "17"
    },
    "2291": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4413,
        4423
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2292": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4433,
        4437
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "2293": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4440,
        4447
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2294": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4390,
        4412
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x273E"
    },
    "2297": {
      "fn": "BitcrushStaking.addRewardToPool",
      "jump": "i",
      "offset": [
        4390,
        4448
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2298": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4390,
        4448
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2299": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4481,
        4490
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 10,
      "value": "0x16"
    },
    "2301": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4481,
        4490
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2302": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4463,
        4491
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2304": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4463,
        4491
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2305": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4463,
        4491
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x1EF37AB665F7C977B577275D7A49E72CD18D1143ECCD1112F1198E4A39D1428C"
    },
    "2338": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4463,
        4491
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2339": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4463,
        4491
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2341": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4463,
        4491
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2342": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4463,
        4491
      ],
      "op": "LOG2",
      "path": "17"
    },
    "2343": {
      "fn": "BitcrushStaking.addRewardToPool",
      "offset": [
        4154,
        4498
      ],
      "op": "POP",
      "path": "17"
    },
    "2344": {
      "fn": "BitcrushStaking.addRewardToPool",
      "jump": "o",
      "offset": [
        4154,
        4498
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2345": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6514,
        8693
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2346": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 11,
      "value": "0x40"
    },
    "2348": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2349": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2356": {
      "op": "SHL"
    },
    "2357": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2358": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2359": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6607,
        6617
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2360": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2362": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2363": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "ADD",
      "path": "17"
    },
    "2364": {
      "op": "MSTORE"
    },
    "2365": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6622,
        6629
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2366": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6622,
        6629
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2367": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6596
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2406": {
      "op": "SHL"
    },
    "2407": {
      "op": "SUB"
    },
    "2408": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6606
      ],
      "op": "AND",
      "path": "17"
    },
    "2409": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6606
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2410": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6606
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x70A08231"
    },
    "2415": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6606
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2418": {
      "op": "ADD"
    },
    "2419": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2421": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2423": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2424": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2425": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2426": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "SUB",
      "path": "17"
    },
    "2427": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2428": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2429": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "GAS",
      "path": "17"
    },
    "2430": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2431": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2432": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2433": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2434": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x98F"
    },
    "2437": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2438": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2439": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2441": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2442": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2443": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2444": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2446": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2447": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2448": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "POP",
      "path": "17"
    },
    "2449": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "POP",
      "path": "17"
    },
    "2450": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "POP",
      "path": "17"
    },
    "2451": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "POP",
      "path": "17"
    },
    "2452": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2454": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2455": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2456": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2458": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "NOT",
      "path": "17"
    },
    "2459": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2461": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2462": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "ADD",
      "path": "17"
    },
    "2463": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "AND",
      "path": "17"
    },
    "2464": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2465": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "ADD",
      "path": "17"
    },
    "2466": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2467": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2469": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2470": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "POP",
      "path": "17"
    },
    "2471": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2472": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "ADD",
      "path": "17"
    },
    "2473": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2474": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9B3"
    },
    "2477": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2478": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2479": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BEF"
    },
    "2482": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        6591,
        6618
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2483": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6618
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2484": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6629
      ],
      "op": "LT",
      "path": "17"
    },
    "2485": {
      "branch": 195,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6591,
        6629
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2486": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9D1"
    },
    "2489": {
      "branch": 195,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2490": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2492": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2501": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2502": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2504": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "ADD",
      "path": "17"
    },
    "2505": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "2508": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2509": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C08"
    },
    "2512": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        6570,
        6693
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2513": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6570,
        6693
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2514": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6721,
        6722
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 12,
      "value": "0x0"
    },
    "2516": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6711,
        6718
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2517": {
      "branch": 196,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6711,
        6722
      ],
      "op": "GT",
      "path": "17"
    },
    "2518": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1A"
    },
    "2521": {
      "branch": 196,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2522": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2524": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2531": {
      "op": "SHL"
    },
    "2532": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2533": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2536": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2538": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2539": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "ADD",
      "path": "17"
    },
    "2540": {
      "op": "MSTORE"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2545": {
      "op": "DUP3"
    },
    "2546": {
      "op": "ADD"
    },
    "2547": {
      "op": "MSTORE"
    },
    "2548": {
      "op": "PUSH22",
      "value": "0x125B9D985B1A59081CDD185ADA5B99C8185B5BDD5B9D"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2573": {
      "op": "SHL"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2576": {
      "op": "DUP3"
    },
    "2577": {
      "op": "ADD"
    },
    "2578": {
      "op": "MSTORE"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2581": {
      "op": "ADD"
    },
    "2582": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "2585": {
      "op": "JUMP"
    },
    "2586": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6703,
        6749
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2587": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6760,
        6780
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 13,
      "value": "0xA22"
    },
    "2590": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6760,
        6778
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF9"
    },
    "2593": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        6760,
        6780
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2594": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6760,
        6780
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2595": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6790,
        6805
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 14,
      "value": "0xA2A"
    },
    "2598": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6790,
        6803
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13E4"
    },
    "2601": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        6790,
        6805
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2602": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6790,
        6805
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2603": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6815,
        6873
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 15,
      "value": "0xA5F"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2612": {
      "op": "SHL"
    },
    "2613": {
      "op": "SUB"
    },
    "2614": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6815,
        6820
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "2647": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6815,
        6837
      ],
      "op": "AND",
      "path": "17"
    },
    "2648": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6838,
        6848
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2649": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6858,
        6862
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "2650": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6865,
        6872
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2651": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6815,
        6837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x273E"
    },
    "2654": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        6815,
        6873
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2655": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6815,
        6873
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2656": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6887,
        6898
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "2658": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6887,
        6898
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2659": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6883,
        6966
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA6B"
    },
    "2662": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6883,
        6966
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2663": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6943,
        6955
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 16
    },
    "2664": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6919,
        6940
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x10"
    },
    "2666": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6919,
        6955
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2667": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6883,
        6966
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2668": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7011,
        7021
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2669": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        6975,
        6999
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2671": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7022
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2672": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7022
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2673": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7022
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2674": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7010
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "2676": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7022
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2678": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7022
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2679": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7022
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2681": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7022
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2682": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7002,
        7022
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2683": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7037,
        7054
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2685": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7037,
        7054
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2686": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7037,
        7054
      ],
      "op": "ADD",
      "path": "17"
    },
    "2687": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7037,
        7054
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2688": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7033,
        8006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAE3"
    },
    "2691": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7033,
        8006
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2692": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7102,
        7114
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 17
    },
    "2693": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7075,
        7099
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "2695": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7075,
        7099
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2696": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7075,
        7099
      ],
      "op": "ADD",
      "path": "17"
    },
    "2697": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7075,
        7114
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2698": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7142
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 18,
      "value": "0xF"
    },
    "2700": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2701": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2702": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2704": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2705": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2706": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "ADD",
      "path": "17"
    },
    "2707": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2708": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2711": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2712": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2713": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2714": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802"
    },
    "2747": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2748": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2749": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "ADD",
      "path": "17"
    },
    "2750": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2751": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "op": "SUB"
    },
    "2760": {
      "op": "NOT"
    },
    "2761": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "AND",
      "path": "17"
    },
    "2762": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7148,
        7158
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2763": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "OR",
      "path": "17"
    },
    "2764": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2765": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2766": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7186,
        7207
      ],
      "op": "SWAP1",
      "path": "17",
      "statement": 19
    },
    "2767": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7186,
        7207
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2768": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7186,
        7211
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAD9"
    },
    "2771": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7186,
        7211
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2772": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7128,
        7159
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2773": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7186,
        7211
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C64"
    },
    "2776": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7186,
        7211
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2777": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7186,
        7211
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2778": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7173,
        7183
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "2780": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7173,
        7183
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2781": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7173,
        7183
      ],
      "op": "ADD",
      "path": "17"
    },
    "2782": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7173,
        7211
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2783": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7033,
        8006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBD7"
    },
    "2786": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7033,
        8006
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2787": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7033,
        8006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2788": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7242,
        7257
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2790": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7356
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB0F"
    },
    "2793": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7326,
        7330
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2794": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7326,
        7342
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "2796": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7326,
        7342
      ],
      "op": "ADD",
      "path": "17"
    },
    "2797": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7326,
        7342
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2798": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7304
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x800"
    },
    "2801": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7299,
        7303
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "2807": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7294
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "2810": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7276,
        7293
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x13"
    },
    "2812": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7276,
        7293
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2813": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7264
      ],
      "op": "DUP8",
      "path": "17"
    },
    "2814": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7271
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2816": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7271
      ],
      "op": "ADD",
      "path": "17"
    },
    "2817": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7271
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2818": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7275
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "2821": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7275
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2822": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7294
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2823": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7294
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2824": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7294
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2829": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7294
      ],
      "op": "AND",
      "path": "17"
    },
    "2830": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7260,
        7294
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2831": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7260,
        7356
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2832": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7242,
        7356
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2833": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7242,
        7356
      ],
      "op": "POP",
      "path": "17"
    },
    "2834": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7384,
        7393
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "2836": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7384,
        7393
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2837": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7374,
        7381
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2838": {
      "branch": 197,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7374,
        7393
      ],
      "op": "GT",
      "path": "17"
    },
    "2839": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7370,
        7414
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2840": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7370,
        7414
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB20"
    },
    "2843": {
      "branch": 197,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7370,
        7414
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7405,
        7414
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 20,
      "value": "0x16"
    },
    "2847": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7405,
        7414
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2848": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7370,
        7414
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2849": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7440,
        7449
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 21,
      "value": "0x16"
    },
    "2851": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7440,
        7449
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2852": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7440,
        7462
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB2D"
    },
    "2855": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7440,
        7462
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2856": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7454,
        7461
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2857": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7440,
        7453
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "2860": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7440,
        7462
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2861": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7440,
        7462
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2862": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7428,
        7437
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "2864": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7428,
        7462
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2865": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7617,
        7636
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "2867": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7617,
        7636
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2868": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7617,
        7636
      ],
      "op": "ADD",
      "path": "17"
    },
    "2869": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7617,
        7636
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2870": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7550,
        7567
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x15"
    },
    "2872": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7550,
        7567
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2873": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7528
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2874": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7528
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2875": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7476,
        7497
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2877": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7476,
        7497
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2878": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7637
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB57"
    },
    "2881": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7637
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2882": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7617,
        7636
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2883": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7617,
        7636
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2884": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7595
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x800"
    },
    "2887": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7595
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2888": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7590,
        7594
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "2894": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7590,
        7594
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2895": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7568
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "2898": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7568
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2899": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7549
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "2902": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7500,
        7568
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2903": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7500,
        7637
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2904": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7476,
        7637
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2905": {
      "op": "POP"
    },
    "2906": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7661,
        7687
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 22,
      "value": "0xB63"
    },
    "2909": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7661,
        7668
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2910": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7476,
        7637
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2911": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7661,
        7672
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "2914": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7661,
        7687
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2915": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7661,
        7687
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2916": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7651,
        7687
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7705,
        7716
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2919": {
      "branch": 198,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7705,
        7716
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2920": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7701,
        7996
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBD4"
    },
    "2923": {
      "branch": 198,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7701,
        7996
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2924": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7736,
        7775
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 23,
      "value": "0xB9F"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2933": {
      "op": "SHL"
    },
    "2934": {
      "op": "SUB"
    },
    "2935": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7736,
        7741
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "2968": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7736,
        7754
      ],
      "op": "AND",
      "path": "17"
    },
    "2969": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7755,
        7765
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2970": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7767,
        7774
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2971": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7736,
        7754
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "2974": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7736,
        7775
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2975": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7736,
        7775
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2976": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7814,
        7832
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 24,
      "value": "0x2"
    },
    "2978": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7814,
        7832
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2979": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7814,
        7832
      ],
      "op": "ADD",
      "path": "17"
    },
    "2980": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7814,
        7832
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2981": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7814,
        7845
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBAE"
    },
    "2984": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7814,
        7845
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2985": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7837,
        7844
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2986": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7814,
        7836
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "2989": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7814,
        7845
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2990": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7814,
        7845
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2991": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7793,
        7811
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2993": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7793,
        7811
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2994": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7793,
        7811
      ],
      "op": "ADD",
      "path": "17"
    },
    "2995": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7793,
        7845
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2996": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7878,
        7890
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 25,
      "value": "0x18"
    },
    "2998": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7878,
        7890
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2999": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7878,
        7903
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBC0"
    },
    "3002": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7878,
        7903
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3003": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7895,
        7902
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3004": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7878,
        7894
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3007": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7878,
        7903
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3008": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7878,
        7903
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3009": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7863,
        7875
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x18"
    },
    "3011": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7863,
        7903
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3012": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7943,
        7962
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 26,
      "value": "0x1A"
    },
    "3014": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7943,
        7962
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3015": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7943,
        7981
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBD0"
    },
    "3018": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7943,
        7981
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3019": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7967,
        7980
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3020": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7943,
        7966
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3023": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        7943,
        7981
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3024": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7943,
        7981
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3025": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7921,
        7940
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1A"
    },
    "3027": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7921,
        7981
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3028": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7701,
        7996
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3029": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7228,
        8006
      ],
      "op": "POP",
      "path": "17"
    },
    "3030": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7228,
        8006
      ],
      "op": "POP",
      "path": "17"
    },
    "3031": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        7033,
        8006
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3032": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8016,
        8037
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3034": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8055,
        8066
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "3036": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8055,
        8066
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3037": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8070,
        8071
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3039": {
      "branch": 199,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8055,
        8071
      ],
      "op": "EQ",
      "path": "17"
    },
    "3040": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8051,
        8180
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC05"
    },
    "3043": {
      "branch": 199,
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8051,
        8180
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3044": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8142
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 27,
      "value": "0xBFE"
    },
    "3047": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8130,
        8141
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "3049": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8130,
        8141
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3050": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8125
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3053": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8113,
        8124
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "3055": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8113,
        8124
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3056": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8108
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3057": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8112
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3060": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8112
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3061": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8125
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3062": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8125
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3063": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8125
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3068": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8125
      ],
      "op": "AND",
      "path": "17"
    },
    "3069": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        8101,
        8125
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3070": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8101,
        8142
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3071": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8085,
        8142
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3072": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8085,
        8142
      ],
      "op": "POP",
      "path": "17"
    },
    "3073": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8051,
        8180
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC08"
    },
    "3076": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8051,
        8180
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3077": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8051,
        8180
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3078": {
      "op": "POP"
    },
    "3079": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8173,
        8180
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 28
    },
    "3080": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8051,
        8180
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3081": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8205,
        8216
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 29,
      "value": "0x17"
    },
    "3083": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8205,
        8216
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3084": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8205,
        8229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC15"
    },
    "3087": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8205,
        8229
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3088": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8221,
        8228
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3089": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8205,
        8220
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3092": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        8205,
        8229
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3093": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8205,
        8229
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3094": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8191,
        8202
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "3096": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8191,
        8229
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3097": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8253,
        8264
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 30,
      "value": "0xA"
    },
    "3099": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8253,
        8264
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3100": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8253,
        8283
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC25"
    },
    "3103": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8253,
        8283
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3104": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8269,
        8282
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3105": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8253,
        8268
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3108": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        8253,
        8283
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3109": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8253,
        8283
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3110": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8239,
        8250
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "3112": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8239,
        8283
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3113": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8297,
        8308
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3114": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8297,
        8308
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3115": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8293,
        8379
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC35"
    },
    "3118": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8293,
        8379
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3119": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8356,
        8368
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 31
    },
    "3120": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8329,
        8353
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "3122": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8329,
        8353
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3123": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8329,
        8353
      ],
      "op": "ADD",
      "path": "17"
    },
    "3124": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8329,
        8368
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3125": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8293,
        8379
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3126": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8402,
        8413
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 32
    },
    "3127": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8402,
        8413
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3128": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8402,
        8432
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC41"
    },
    "3131": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8402,
        8432
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3132": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8418,
        8431
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3133": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8402,
        8417
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3136": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        8402,
        8432
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3137": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8402,
        8432
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3138": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8388,
        8432
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3139": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8388,
        8432
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3140": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8388,
        8432
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3141": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8464,
        8481
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 33,
      "value": "0x15"
    },
    "3143": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8464,
        8481
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3144": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8464,
        8508
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC5B"
    },
    "3147": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8464,
        8508
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3148": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8503,
        8507
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "3154": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8503,
        8507
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3155": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8464,
        8498
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3158": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8464,
        8498
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3159": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8464,
        8485
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3162": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        8464,
        8498
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3163": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8464,
        8508
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3164": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8442,
        8461
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "3166": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8442,
        8461
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3167": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8442,
        8461
      ],
      "op": "ADD",
      "path": "17"
    },
    "3168": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8442,
        8508
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3169": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8559,
        8570
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 34
    },
    "3170": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8559,
        8570
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3171": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8537,
        8554
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x13"
    },
    "3173": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8537,
        8554
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3174": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8537,
        8581
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC79"
    },
    "3177": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8537,
        8581
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3178": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8576,
        8580
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "3184": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8576,
        8580
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3185": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8537,
        8571
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3188": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8537,
        8571
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3189": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8537,
        8558
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3192": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        8537,
        8571
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3193": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8537,
        8581
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3194": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8518,
        8534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "3196": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8518,
        8534
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3197": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8518,
        8534
      ],
      "op": "ADD",
      "path": "17"
    },
    "3198": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8518,
        8581
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3199": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8611,
        8628
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 35,
      "value": "0x1"
    },
    "3201": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8611,
        8628
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3202": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8611,
        8628
      ],
      "op": "ADD",
      "path": "17"
    },
    "3203": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8611,
        8628
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3204": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8611,
        8641
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC8D"
    },
    "3207": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8611,
        8641
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3208": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8633,
        8640
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3209": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8611,
        8632
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3212": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "i",
      "offset": [
        8611,
        8641
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3213": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8611,
        8641
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3214": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8591,
        8608
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3216": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8591,
        8608
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3217": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8591,
        8608
      ],
      "op": "ADD",
      "path": "17"
    },
    "3218": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8591,
        8641
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3219": {
      "op": "POP"
    },
    "3220": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8674,
        8686
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 36
    },
    "3221": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8651,
        8671
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3223": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8651,
        8671
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3224": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8651,
        8671
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3225": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8651,
        8671
      ],
      "op": "ADD",
      "path": "17"
    },
    "3226": {
      "fn": "BitcrushStaking.enterStaking",
      "offset": [
        8651,
        8686
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3227": {
      "op": "POP"
    },
    "3228": {
      "fn": "BitcrushStaking.enterStaking",
      "jump": "o",
      "offset": [
        6514,
        8693
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3229": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3230": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9085,
        9105
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 37,
      "value": "0xCA5"
    },
    "3233": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9085,
        9103
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF9"
    },
    "3236": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9085,
        9105
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3237": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9085,
        9105
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3238": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9115,
        9130
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 38,
      "value": "0xCAD"
    },
    "3241": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9115,
        9128
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13E4"
    },
    "3244": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9115,
        9130
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3245": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9115,
        9130
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3246": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9176,
        9186
      ],
      "op": "CALLER",
      "path": "17"
    },
    "3247": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9140,
        9164
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3249": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3250": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3251": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3252": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9175
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "3254": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3256": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3257": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3259": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3260": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3261": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9276,
        9292
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "3263": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9276,
        9292
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3264": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9276,
        9292
      ],
      "op": "ADD",
      "path": "17"
    },
    "3265": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9276,
        9292
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3266": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9230,
        9247
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x13"
    },
    "3268": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9230,
        9247
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3269": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9225
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3270": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9225
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3271": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3272": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9167,
        9187
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "3273": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9140,
        9164
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3274": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9302
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCE3"
    },
    "3277": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9302
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3278": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9276,
        9292
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3279": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9258
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x800"
    },
    "3282": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9258
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3283": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9253,
        9257
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "3289": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9253,
        9257
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3290": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9248
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3293": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9248
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3294": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9225
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3295": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9229
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3298": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9214,
        9248
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3299": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9214,
        9302
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3300": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9197,
        9302
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3301": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9197,
        9302
      ],
      "op": "POP",
      "path": "17"
    },
    "3302": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9312,
        9331
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3304": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9425
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD11"
    },
    "3307": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9396,
        9400
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3308": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9396,
        9415
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "3310": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9396,
        9415
      ],
      "op": "ADD",
      "path": "17"
    },
    "3311": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9396,
        9415
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3312": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9378
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x800"
    },
    "3315": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9373,
        9377
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "3321": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9368
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3324": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9350,
        9367
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x15"
    },
    "3326": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9350,
        9367
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3327": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9338
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3328": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9345
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3330": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9345
      ],
      "op": "ADD",
      "path": "17"
    },
    "3331": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9345
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3332": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9349
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3335": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9349
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3336": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9368
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3337": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9368
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3338": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9368
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3343": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9368
      ],
      "op": "AND",
      "path": "17"
    },
    "3344": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9334,
        9368
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3345": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9334,
        9425
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3346": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9312,
        9425
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3347": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9312,
        9425
      ],
      "op": "POP",
      "path": "17"
    },
    "3348": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9448,
        9457
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "3350": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9448,
        9457
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3351": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9439,
        9445
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3352": {
      "branch": 200,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9439,
        9457
      ],
      "op": "GT",
      "path": "17"
    },
    "3353": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9435,
        9477
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3354": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9435,
        9477
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD23"
    },
    "3357": {
      "branch": 200,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9435,
        9477
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3358": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9468,
        9477
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 39,
      "value": "0x16"
    },
    "3360": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9468,
        9477
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3361": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9459,
        9477
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3362": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9459,
        9477
      ],
      "op": "POP",
      "path": "17"
    },
    "3363": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9435,
        9477
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3364": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9499,
        9508
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 40,
      "value": "0x16"
    },
    "3366": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9499,
        9508
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3367": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9499,
        9520
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD30"
    },
    "3370": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9499,
        9520
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3371": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9513,
        9519
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3372": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9499,
        9512
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "3375": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9499,
        9520
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3376": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9499,
        9520
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3377": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9487,
        9496
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "3379": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9487,
        9520
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3380": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9539,
        9562
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 41,
      "value": "0xD3D"
    },
    "3383": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9539,
        9545
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3384": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9550,
        9561
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3385": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9539,
        9549
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3388": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9539,
        9562
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3389": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9539,
        9562
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3390": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9594,
        9613
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 42,
      "value": "0x1A"
    },
    "3392": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9594,
        9613
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3393": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9530,
        9562
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3394": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9530,
        9562
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9594,
        9630
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD4D"
    },
    "3399": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9594,
        9630
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3400": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9618,
        9629
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3401": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9594,
        9617
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3404": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9594,
        9630
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3405": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9594,
        9630
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3406": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9572,
        9591
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1A"
    },
    "3408": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9572,
        9630
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3409": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9667,
        9679
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 43
    },
    "3410": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9640,
        9664
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "3412": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9640,
        9664
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3413": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9640,
        9664
      ],
      "op": "ADD",
      "path": "17"
    },
    "3414": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9640,
        9679
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3415": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9716,
        9733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3417": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9716,
        9733
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3418": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9716,
        9733
      ],
      "op": "ADD",
      "path": "17"
    },
    "3419": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9716,
        9733
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3420": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9747,
        9758
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "3422": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9747,
        9758
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3423": {
      "branch": 201,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9747,
        9762
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3424": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9743,
        10153
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE02"
    },
    "3427": {
      "branch": 201,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9743,
        10153
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3428": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9796,
        9898
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 44,
      "value": "0xD8C"
    },
    "3431": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9884
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD85"
    },
    "3434": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9872,
        9883
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "3436": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9872,
        9883
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3437": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9867
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3440": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9849,
        9853
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3441": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9849,
        9866
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3443": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9849,
        9866
      ],
      "op": "ADD",
      "path": "17"
    },
    "3444": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9849,
        9866
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3445": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9844
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "3447": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9844
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3448": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9848
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3451": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9848
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3452": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9867
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3453": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9867
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3454": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9867
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3459": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9867
      ],
      "op": "AND",
      "path": "17"
    },
    "3460": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9833,
        9867
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3461": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9833,
        9884
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3462": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9796,
        9811
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3463": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9796,
        9811
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3464": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9796,
        9815
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "3467": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        9796,
        9898
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3468": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9796,
        9898
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3469": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9778,
        9898
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3470": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9778,
        9898
      ],
      "op": "POP",
      "path": "17"
    },
    "3471": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9956,
        9963
      ],
      "op": "DUP6",
      "path": "17",
      "statement": 45
    },
    "3472": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9937,
        9952
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3473": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9937,
        9963
      ],
      "op": "LT",
      "path": "17"
    },
    "3474": {
      "branch": 202,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9937,
        9963
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3475": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDFD"
    },
    "3478": {
      "branch": 202,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3479": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3481": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3488": {
      "op": "SHL"
    },
    "3489": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3490": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3493": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3495": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3496": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "ADD",
      "path": "17"
    },
    "3497": {
      "op": "MSTORE"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3502": {
      "op": "DUP3"
    },
    "3503": {
      "op": "ADD"
    },
    "3504": {
      "op": "MSTORE"
    },
    "3505": {
      "op": "PUSH32",
      "value": "0x46726F7A656E2046756E64733A2043616E2774207769746864726177206D6F72"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3540": {
      "op": "DUP3"
    },
    "3541": {
      "op": "ADD"
    },
    "3542": {
      "op": "MSTORE"
    },
    "3543": {
      "op": "PUSH22",
      "value": "0x65207468616E20417661696C61626C652066756E6473"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3568": {
      "op": "SHL"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3571": {
      "op": "DUP3"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "op": "MSTORE"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3576": {
      "op": "ADD"
    },
    "3577": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "3580": {
      "op": "JUMP"
    },
    "3581": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9912,
        10051
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3582": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9743,
        10153
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE14"
    },
    "3585": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9743,
        10153
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3586": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9743,
        10153
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3587": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10072,
        10095
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "3589": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10072,
        10095
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3590": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10072,
        10095
      ],
      "op": "ADD",
      "path": "17"
    },
    "3591": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10072,
        10095
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3592": {
      "branch": 203,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10072,
        10099
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3593": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10068,
        10153
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE14"
    },
    "3596": {
      "branch": 203,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10068,
        10153
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3597": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10141,
        10142
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 46,
      "value": "0x0"
    },
    "3599": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10115,
        10138
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "3601": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10115,
        10138
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3602": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10115,
        10138
      ],
      "op": "ADD",
      "path": "17"
    },
    "3603": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10115,
        10142
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3604": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10068,
        10153
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3605": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10202,
        10209
      ],
      "op": "DUP6",
      "path": "17",
      "statement": 47
    },
    "3606": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10183,
        10198
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3607": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10183,
        10209
      ],
      "op": "LT",
      "path": "17"
    },
    "3608": {
      "branch": 204,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10183,
        10209
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3609": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE8A"
    },
    "3612": {
      "branch": 204,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3613": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3615": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3622": {
      "op": "SHL"
    },
    "3623": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3624": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3627": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3629": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3630": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "ADD",
      "path": "17"
    },
    "3631": {
      "op": "MSTORE"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3636": {
      "op": "DUP3"
    },
    "3637": {
      "op": "ADD"
    },
    "3638": {
      "op": "MSTORE"
    },
    "3639": {
      "op": "PUSH32",
      "value": "0x576974686472617720616D6F756E742063616E206E6F74206265206772656174"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3674": {
      "op": "DUP3"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "MSTORE"
    },
    "3677": {
      "op": "PUSH32",
      "value": "0x6572207468616E20617661696C61626C65207374616B656420616D6F756E7400"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3712": {
      "op": "DUP3"
    },
    "3713": {
      "op": "ADD"
    },
    "3714": {
      "op": "MSTORE"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "3721": {
      "op": "JUMP"
    },
    "3722": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10162,
        10298
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3723": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10322,
        10333
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 48,
      "value": "0x17"
    },
    "3725": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10322,
        10333
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3726": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10322,
        10346
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE97"
    },
    "3729": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10322,
        10346
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3730": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10338,
        10345
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3731": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10322,
        10337
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "3734": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10322,
        10346
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3735": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10322,
        10346
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3736": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10308,
        10319
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "3738": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10308,
        10346
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3739": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10424,
        10441
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3741": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10424,
        10441
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3742": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10424,
        10441
      ],
      "op": "ADD",
      "path": "17"
    },
    "3743": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10424,
        10441
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3744": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10394,
        10405
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3745": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10394,
        10405
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3746": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10357,
        10379
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3748": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10357,
        10379
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3749": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10382,
        10451
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEB3"
    },
    "3752": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10382,
        10451
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3753": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10382,
        10406
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3756": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10382,
        10406
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3757": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10382,
        10389
      ],
      "op": "DUP11",
      "path": "17"
    },
    "3758": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10382,
        10389
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3759": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10382,
        10393
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3762": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10382,
        10406
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3763": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10382,
        10451
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3764": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10481,
        10498
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 49,
      "value": "0x1"
    },
    "3766": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10481,
        10498
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3767": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10481,
        10498
      ],
      "op": "ADD",
      "path": "17"
    },
    "3768": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10481,
        10498
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3769": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10357,
        10451
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3770": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10357,
        10451
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3771": {
      "op": "POP"
    },
    "3772": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10481,
        10511
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEC5"
    },
    "3775": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10481,
        10511
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3776": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10503,
        10510
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3777": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10481,
        10502
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "3780": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10481,
        10511
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3781": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10481,
        10511
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3782": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10461,
        10478
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3784": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10461,
        10478
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3785": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10461,
        10478
      ],
      "op": "ADD",
      "path": "17"
    },
    "3786": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10461,
        10511
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3787": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10535,
        10546
      ],
      "op": "DUP5",
      "path": "17",
      "statement": 50
    },
    "3788": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10535,
        10546
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3789": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10535,
        10566
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xED6"
    },
    "3792": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10535,
        10566
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3793": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10551,
        10565
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3794": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10535,
        10550
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "3797": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10535,
        10566
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3798": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10535,
        10566
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3799": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10521,
        10566
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3800": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10521,
        10566
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3801": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10590,
        10601
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 51,
      "value": "0xA"
    },
    "3803": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10590,
        10601
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3804": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10590,
        10621
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEE5"
    },
    "3807": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10590,
        10621
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3808": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10606,
        10620
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3809": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10590,
        10605
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "3812": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10590,
        10621
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3813": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10590,
        10621
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3814": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10576,
        10587
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "3816": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10576,
        10621
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3817": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10666,
        10683
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 52,
      "value": "0x13"
    },
    "3819": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10666,
        10683
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3820": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10650,
        10661
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3821": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10650,
        10661
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3822": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10650,
        10694
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF01"
    },
    "3825": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10650,
        10694
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3826": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10689,
        10693
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "3832": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10689,
        10693
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3833": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10650,
        10684
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3836": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10650,
        10684
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3837": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10650,
        10665
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3840": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10650,
        10684
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3841": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10650,
        10694
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3842": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10631,
        10647
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "3844": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10631,
        10647
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3845": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10631,
        10647
      ],
      "op": "ADD",
      "path": "17"
    },
    "3846": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10631,
        10694
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3847": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10742,
        10759
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 53,
      "value": "0x15"
    },
    "3849": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10742,
        10759
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3850": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10726,
        10737
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3851": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10726,
        10737
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3852": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10726,
        10770
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF1F"
    },
    "3855": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10726,
        10770
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3856": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10765,
        10769
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "3862": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10765,
        10769
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3863": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10726,
        10760
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3866": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10726,
        10760
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3867": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10726,
        10741
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3870": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10726,
        10760
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3871": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10726,
        10770
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3872": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10704,
        10723
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "3874": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10704,
        10723
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3875": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10704,
        10723
      ],
      "op": "ADD",
      "path": "17"
    },
    "3876": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10704,
        10770
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3877": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10790,
        10809
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 54,
      "value": "0xF2E"
    },
    "3880": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10790,
        10797
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3881": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10802,
        10808
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3882": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10790,
        10801
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3885": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10790,
        10809
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3886": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10790,
        10809
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3887": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10823,
        10834
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "3889": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10823,
        10834
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3890": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10780,
        10809
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3891": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10780,
        10809
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "branch": 205,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10823,
        10838
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3894": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10819,
        12007
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10DE"
    },
    "3897": {
      "branch": 205,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10819,
        12007
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3898": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10858,
        10881
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "3900": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10858,
        10881
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3901": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10858,
        10881
      ],
      "op": "ADD",
      "path": "17"
    },
    "3902": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10858,
        10881
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3903": {
      "branch": 206,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10858,
        10885
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3904": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10854,
        11122
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF72"
    },
    "3907": {
      "branch": 206,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10854,
        11122
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3908": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11002,
        11028
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 55,
      "value": "0x6"
    },
    "3910": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11002,
        11028
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3911": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11002,
        11028
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3912": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10974,
        10997
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3913": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10974,
        10997
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3914": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10974,
        10997
      ],
      "op": "ADD",
      "path": "17"
    },
    "3915": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10974,
        10997
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3916": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10974,
        11029
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF54"
    },
    "3919": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10974,
        11029
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3920": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "3923": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10974,
        11029
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3924": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10974,
        11029
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3925": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10932,
        10947
      ],
      "op": "TIMESTAMP",
      "path": "17"
    },
    "3926": {
      "branch": 207,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10932,
        11029
      ],
      "op": "GT",
      "path": "17"
    },
    "3927": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF72"
    },
    "3930": {
      "branch": 207,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3931": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3933": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3940": {
      "op": "SHL"
    },
    "3941": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3942": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3943": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3945": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "ADD",
      "path": "17"
    },
    "3946": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "3949": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3950": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C7B"
    },
    "3953": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        10903,
        11122
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3954": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10903,
        11122
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3955": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11137,
        11158
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3957": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11239
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF8F"
    },
    "3960": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "3963": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11196
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "3966": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11173,
        11195
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3968": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11173,
        11195
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3969": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11168
      ],
      "op": "DUP12",
      "path": "17"
    },
    "3970": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11172
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "3973": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11172
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3974": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11196
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3975": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11196
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3976": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11196
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3981": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11196
      ],
      "op": "AND",
      "path": "17"
    },
    "3982": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11161,
        11196
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3983": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11161,
        11239
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3984": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11279,
        11294
      ],
      "op": "TIMESTAMP",
      "path": "17",
      "statement": 56
    },
    "3985": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11253,
        11276
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "3987": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11253,
        11276
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3988": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11253,
        11276
      ],
      "op": "ADD",
      "path": "17"
    },
    "3989": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11253,
        11294
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "3990": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11137,
        11239
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11318,
        11344
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 57,
      "value": "0xFA1"
    },
    "3995": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11318,
        11325
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3996": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11137,
        11239
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3997": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11318,
        11329
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "4000": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11318,
        11344
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4001": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11318,
        11344
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4002": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11308,
        11344
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "4003": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11308,
        11344
      ],
      "op": "POP",
      "path": "17"
    },
    "4004": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11379,
        11390
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "4006": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11379,
        11390
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4007": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11363,
        11376
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4008": {
      "branch": 208,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11363,
        11390
      ],
      "op": "GT",
      "path": "17"
    },
    "4009": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11359,
        11619
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4010": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11359,
        11619
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1069"
    },
    "4013": {
      "branch": 208,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11359,
        11619
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4014": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11410,
        11427
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4016": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11460
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFC4"
    },
    "4019": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11448,
        11459
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "4021": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11448,
        11459
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4022": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11443
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4023": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11447
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "4026": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11447
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4027": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11460
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4028": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11460
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4029": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11460
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4034": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11460
      ],
      "op": "AND",
      "path": "17"
    },
    "4035": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11430,
        11460
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4036": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11430,
        11460
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4037": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11500,
        11508
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 58,
      "value": "0xB"
    },
    "4039": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11500,
        11508
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4040": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4042": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4043": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4050": {
      "op": "SHL"
    },
    "4051": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4052": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4059": {
      "op": "SHL"
    },
    "4060": {
      "op": "SUB"
    },
    "4061": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11500,
        11508
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4062": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11500,
        11508
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4063": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11500,
        11508
      ],
      "op": "AND",
      "path": "17"
    },
    "4064": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4066": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4067": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "ADD",
      "path": "17"
    },
    "4068": {
      "op": "MSTORE"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4071": {
      "op": "DUP2"
    },
    "4072": {
      "op": "ADD"
    },
    "4073": {
      "op": "DUP4"
    },
    "4074": {
      "op": "SWAP1"
    },
    "4075": {
      "op": "MSTORE"
    },
    "4076": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11410,
        11460
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4077": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11410,
        11460
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11483
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "4112": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11491
      ],
      "op": "AND",
      "path": "17"
    },
    "4113": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11491
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4114": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11491
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x95EA7B3"
    },
    "4119": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11491
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4122": {
      "op": "ADD"
    },
    "4123": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4125": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4127": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4128": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4129": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4130": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "SUB",
      "path": "17"
    },
    "4131": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4132": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4134": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4135": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "GAS",
      "path": "17"
    },
    "4136": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "CALL",
      "path": "17"
    },
    "4137": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4138": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4139": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4140": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1039"
    },
    "4143": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4144": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4145": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4147": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4148": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4149": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4150": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4152": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4153": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4154": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "POP",
      "path": "17"
    },
    "4155": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "POP",
      "path": "17"
    },
    "4156": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "POP",
      "path": "17"
    },
    "4157": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "POP",
      "path": "17"
    },
    "4158": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4160": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4161": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4162": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4164": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "NOT",
      "path": "17"
    },
    "4165": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4167": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4168": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "ADD",
      "path": "17"
    },
    "4169": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "AND",
      "path": "17"
    },
    "4170": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4171": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "ADD",
      "path": "17"
    },
    "4172": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4173": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4175": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4176": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "POP",
      "path": "17"
    },
    "4177": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4178": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "ADD",
      "path": "17"
    },
    "4179": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4180": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x105D"
    },
    "4183": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4184": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4185": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2CCE"
    },
    "4188": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11478,
        11521
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4189": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11478,
        11521
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4190": {
      "op": "POP"
    },
    "4191": {
      "op": "POP"
    },
    "4192": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11553,
        11554
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 59,
      "value": "0x0"
    },
    "4194": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11539,
        11550
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "4196": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11539,
        11554
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "4197": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11359,
        11619
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x107A"
    },
    "4200": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11359,
        11619
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4201": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11359,
        11619
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4202": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11589,
        11600
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 60,
      "value": "0x19"
    },
    "4204": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11589,
        11600
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4205": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11589,
        11619
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1076"
    },
    "4208": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11589,
        11619
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4209": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11605,
        11618
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4210": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11589,
        11604
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "4213": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11589,
        11619
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4214": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11589,
        11619
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4215": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11575,
        11586
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "4217": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11575,
        11619
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "4218": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11359,
        11619
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4219": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11642
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 61,
      "value": "0xB"
    },
    "4221": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11642
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4222": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4224": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4225": {
      "op": "PUSH4",
      "value": "0x16714FF5"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4232": {
      "op": "SHL"
    },
    "4233": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4234": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4235": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4237": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4238": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "ADD",
      "path": "17"
    },
    "4239": {
      "op": "DUP4"
    },
    "4240": {
      "op": "SWAP1"
    },
    "4241": {
      "op": "MSTORE"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4248": {
      "op": "SHL"
    },
    "4249": {
      "op": "SUB"
    },
    "4250": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11642
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4251": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11642
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4252": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11642
      ],
      "op": "AND",
      "path": "17"
    },
    "4253": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11642
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4254": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11658
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x59C53FD4"
    },
    "4259": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11658
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4262": {
      "op": "ADD"
    },
    "4263": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4265": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4267": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4268": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4269": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4270": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "SUB",
      "path": "17"
    },
    "4271": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4272": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4274": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4275": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4276": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "4277": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4278": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4279": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4280": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10C0"
    },
    "4283": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4284": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4286": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4287": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4288": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4289": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "POP",
      "path": "17"
    },
    "4290": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "GAS",
      "path": "17"
    },
    "4291": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "CALL",
      "path": "17"
    },
    "4292": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4293": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4294": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4295": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10D4"
    },
    "4298": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4299": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4300": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4302": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4303": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4304": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4305": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4307": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4308": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4309": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "POP",
      "path": "17"
    },
    "4310": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "POP",
      "path": "17"
    },
    "4311": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "POP",
      "path": "17"
    },
    "4312": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11634,
        11673
      ],
      "op": "POP",
      "path": "17"
    },
    "4313": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10840,
        11684
      ],
      "op": "POP",
      "path": "17"
    },
    "4314": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10819,
        12007
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x115E"
    },
    "4317": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10819,
        12007
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4318": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        10819,
        12007
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4319": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11747,
        11767
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "4321": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11747,
        11767
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4322": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11722,
        11742
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4324": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11722,
        11742
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4325": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11722,
        11742
      ],
      "op": "ADD",
      "path": "17"
    },
    "4326": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11722,
        11742
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4327": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11722,
        11768
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10EF"
    },
    "4330": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11722,
        11768
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4331": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11722,
        11746
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "4334": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11722,
        11768
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4335": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11722,
        11768
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4336": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11707,
        11719
      ],
      "op": "NUMBER",
      "path": "17"
    },
    "4337": {
      "branch": 209,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11707,
        11768
      ],
      "op": "LT",
      "path": "17"
    },
    "4338": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11690,
        12007
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4339": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11690,
        12007
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x115E"
    },
    "4342": {
      "branch": 209,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11690,
        12007
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4343": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11817,
        11838
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4345": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11883
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1113"
    },
    "4348": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "4351": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11870
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "4354": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11853,
        11869
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "4356": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11853,
        11869
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4357": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11848
      ],
      "op": "DUP12",
      "path": "17"
    },
    "4358": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11852
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "4361": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11852
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4362": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11870
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4363": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11870
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4364": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11870
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4369": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11870
      ],
      "op": "AND",
      "path": "17"
    },
    "4370": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11841,
        11870
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4371": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11841,
        11883
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4372": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11817,
        11883
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4373": {
      "op": "POP"
    },
    "4374": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11907,
        11933
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 62,
      "value": "0x111F"
    },
    "4377": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11907,
        11914
      ],
      "op": "DUP9",
      "path": "17"
    },
    "4378": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11817,
        11883
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4379": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11907,
        11918
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "4382": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11907,
        11933
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4383": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11907,
        11933
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4384": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11966,
        11980
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 63,
      "value": "0xD"
    },
    "4386": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11966,
        11980
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4387": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11897,
        11933
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4388": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11897,
        11933
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11947,
        11996
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x115C"
    },
    "4393": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11947,
        11996
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4400": {
      "op": "SHL"
    },
    "4401": {
      "op": "SUB"
    },
    "4402": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11947,
        11952
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "4435": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11947,
        11965
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4436": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11947,
        11965
      ],
      "op": "AND",
      "path": "17"
    },
    "4437": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11947,
        11965
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4438": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11966,
        11980
      ],
      "op": "AND",
      "path": "17"
    },
    "4439": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11982,
        11995
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4440": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11947,
        11965
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "4443": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        11947,
        11996
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4444": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11947,
        11996
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4445": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11779,
        12007
      ],
      "op": "POP",
      "path": "17"
    },
    "4446": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        11690,
        12007
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4447": {
      "branch": 210,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12021,
        12041
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4448": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12017,
        12228
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x119C"
    },
    "4451": {
      "branch": 210,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12017,
        12228
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4452": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12043,
        12082
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 64,
      "value": "0x1197"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4461": {
      "op": "SHL"
    },
    "4462": {
      "op": "SUB"
    },
    "4463": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12043,
        12048
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "4496": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12043,
        12061
      ],
      "op": "AND",
      "path": "17"
    },
    "4497": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12062,
        12072
      ],
      "op": "CALLER",
      "path": "17"
    },
    "4498": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12074,
        12081
      ],
      "op": "DUP10",
      "path": "17"
    },
    "4499": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12043,
        12061
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "4502": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12043,
        12082
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4503": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12043,
        12082
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4504": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12017,
        12228
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x129A"
    },
    "4507": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12017,
        12228
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4508": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12017,
        12228
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4509": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12133,
        12143
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 65,
      "value": "0xC"
    },
    "4511": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12133,
        12143
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4512": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4514": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4515": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4522": {
      "op": "SHL"
    },
    "4523": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4524": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4531": {
      "op": "SHL"
    },
    "4532": {
      "op": "SUB"
    },
    "4533": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12133,
        12143
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4534": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12133,
        12143
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4535": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12133,
        12143
      ],
      "op": "AND",
      "path": "17"
    },
    "4536": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4538": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4539": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "ADD",
      "path": "17"
    },
    "4540": {
      "op": "MSTORE"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4543": {
      "op": "DUP2"
    },
    "4544": {
      "op": "ADD"
    },
    "4545": {
      "op": "DUP10"
    },
    "4546": {
      "op": "SWAP1"
    },
    "4547": {
      "op": "MSTORE"
    },
    "4548": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12116
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "4581": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12124
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4582": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12124
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4583": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12124
      ],
      "op": "AND",
      "path": "17"
    },
    "4584": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12124
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4585": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12124
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x95EA7B3"
    },
    "4590": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12124
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4593": {
      "op": "ADD"
    },
    "4594": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4596": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4598": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4599": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4600": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4601": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "SUB",
      "path": "17"
    },
    "4602": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4603": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4605": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4606": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "GAS",
      "path": "17"
    },
    "4607": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "CALL",
      "path": "17"
    },
    "4608": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4609": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4610": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4611": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1210"
    },
    "4614": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4615": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4616": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4618": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4619": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4620": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4621": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4623": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4624": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4625": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "POP",
      "path": "17"
    },
    "4626": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "POP",
      "path": "17"
    },
    "4627": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "POP",
      "path": "17"
    },
    "4628": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "POP",
      "path": "17"
    },
    "4629": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4631": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4632": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4633": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4635": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "NOT",
      "path": "17"
    },
    "4636": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4638": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4639": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "ADD",
      "path": "17"
    },
    "4640": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "AND",
      "path": "17"
    },
    "4641": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4642": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "ADD",
      "path": "17"
    },
    "4643": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4644": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4646": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4647": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "POP",
      "path": "17"
    },
    "4648": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4649": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "ADD",
      "path": "17"
    },
    "4650": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4651": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1234"
    },
    "4654": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4655": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4656": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2CCE"
    },
    "4659": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12111,
        12154
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4660": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12111,
        12154
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4661": {
      "op": "POP"
    },
    "4662": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12178
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 66,
      "value": "0xC"
    },
    "4664": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12178
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4665": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4667": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4668": {
      "op": "PUSH4",
      "value": "0x7EFD3813"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4675": {
      "op": "SHL"
    },
    "4676": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4677": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4678": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4680": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4681": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "ADD",
      "path": "17"
    },
    "4682": {
      "op": "DUP10"
    },
    "4683": {
      "op": "SWAP1"
    },
    "4684": {
      "op": "MSTORE"
    },
    "4685": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12206,
        12216
      ],
      "op": "CALLER",
      "path": "17"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4688": {
      "op": "DUP3"
    },
    "4689": {
      "op": "ADD"
    },
    "4690": {
      "op": "MSTORE"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4697": {
      "op": "SHL"
    },
    "4698": {
      "op": "SUB"
    },
    "4699": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12178
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4700": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12178
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4701": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12178
      ],
      "op": "AND",
      "path": "17"
    },
    "4702": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12178
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4703": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12196
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x7EFD3813"
    },
    "4708": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12196
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4711": {
      "op": "ADD"
    },
    "4712": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4714": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4716": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4717": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4718": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4719": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "SUB",
      "path": "17"
    },
    "4720": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4721": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4723": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4724": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4725": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "4726": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4727": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4728": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4729": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1281"
    },
    "4732": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4733": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4735": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4736": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4737": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4738": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "POP",
      "path": "17"
    },
    "4739": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "GAS",
      "path": "17"
    },
    "4740": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "CALL",
      "path": "17"
    },
    "4741": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4742": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4743": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4744": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1295"
    },
    "4747": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4748": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4749": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4751": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4752": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4753": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4754": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4756": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4757": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4758": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "POP",
      "path": "17"
    },
    "4759": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "POP",
      "path": "17"
    },
    "4760": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "POP",
      "path": "17"
    },
    "4761": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12168,
        12217
      ],
      "op": "POP",
      "path": "17"
    },
    "4762": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12017,
        12228
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4763": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12258,
        12276
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 67,
      "value": "0x2"
    },
    "4765": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12258,
        12276
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4766": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12258,
        12276
      ],
      "op": "ADD",
      "path": "17"
    },
    "4767": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12258,
        12276
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4768": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12258,
        12288
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12A9"
    },
    "4771": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12258,
        12288
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4772": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12281,
        12287
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4773": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12258,
        12280
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "4776": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12258,
        12288
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4777": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12258,
        12288
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4778": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12237,
        12255
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "4780": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12237,
        12255
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4781": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12237,
        12255
      ],
      "op": "ADD",
      "path": "17"
    },
    "4782": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12237,
        12288
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "4783": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12313,
        12325
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 68,
      "value": "0x18"
    },
    "4785": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12313,
        12325
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4786": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12313,
        12337
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12BB"
    },
    "4789": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12313,
        12337
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4790": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12330,
        12336
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4791": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12313,
        12329
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "4794": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12313,
        12337
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4795": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12313,
        12337
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4796": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12298,
        12310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x18"
    },
    "4798": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12298,
        12337
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "4799": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12387,
        12404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4801": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12387,
        12404
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4802": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12387,
        12404
      ],
      "op": "ADD",
      "path": "17"
    },
    "4803": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12387,
        12404
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4804": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12383,
        12726
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13AF"
    },
    "4807": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12383,
        12726
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4808": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12443,
        12457
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "4810": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12443,
        12464
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4811": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12443,
        12468
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12D6"
    },
    "4814": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12443,
        12468
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4815": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12467,
        12468
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4817": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12467,
        12468
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4818": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12443,
        12468
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C64"
    },
    "4821": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12443,
        12468
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4822": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12443,
        12468
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4823": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12429,
        12433
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4824": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12429,
        12439
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "4826": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12429,
        12439
      ],
      "op": "ADD",
      "path": "17"
    },
    "4827": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12429,
        12439
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4828": {
      "branch": 211,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12429,
        12468
      ],
      "op": "EQ",
      "path": "17"
    },
    "4829": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12425,
        12682
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x137B"
    },
    "4832": {
      "branch": 211,
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12425,
        12682
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4833": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12524
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "4835": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12525,
        12546
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4836": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12525,
        12546
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4837": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12488,
        12507
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4839": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12488,
        12507
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4840": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12524
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4841": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12525,
        12550
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12F4"
    },
    "4844": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12525,
        12550
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4845": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12549,
        12550
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4847": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12549,
        12550
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4848": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12525,
        12550
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C64"
    },
    "4851": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12525,
        12550
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4852": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12525,
        12550
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4853": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4854": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4855": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4856": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "LT",
      "path": "17"
    },
    "4857": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1304"
    },
    "4860": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4861": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1304"
    },
    "4864": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2CEB"
    },
    "4867": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12510,
        12551
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4868": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4869": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4870": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4872": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4873": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4875": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4877": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4878": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "ADD",
      "path": "17"
    },
    "4879": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4881": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4882": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4883": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4884": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "4887": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "EXP",
      "path": "17"
    },
    "4888": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4889": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "DIV",
      "path": "17"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4896": {
      "op": "SHL"
    },
    "4897": {
      "op": "SUB"
    },
    "4898": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12510,
        12551
      ],
      "op": "AND",
      "path": "17"
    },
    "4899": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12488,
        12551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4900": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12488,
        12551
      ],
      "op": "POP",
      "path": "17"
    },
    "4901": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12598,
        12609
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 69
    },
    "4902": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12583
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "4904": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12584,
        12588
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4905": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12584,
        12594
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "4907": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12584,
        12594
      ],
      "op": "ADD",
      "path": "17"
    },
    "4908": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12584,
        12594
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4909": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4910": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4911": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4912": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "LT",
      "path": "17"
    },
    "4913": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x133C"
    },
    "4916": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4917": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x133C"
    },
    "4920": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2CEB"
    },
    "4923": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12569,
        12595
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4924": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4925": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4927": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4928": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4929": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4930": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4932": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4933": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4934": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4935": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4936": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4937": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4938": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12595
      ],
      "op": "ADD",
      "path": "17"
    },
    "4939": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4940": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4947": {
      "op": "SHL"
    },
    "4948": {
      "op": "SUB"
    },
    "4949": {
      "op": "NOT"
    },
    "4950": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "AND",
      "path": "17"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4957": {
      "op": "SHL"
    },
    "4958": {
      "op": "SUB"
    },
    "4959": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "4960": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4961": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "AND",
      "path": "17"
    },
    "4962": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "OR",
      "path": "17"
    },
    "4963": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4964": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12569,
        12609
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "4965": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12657,
        12667
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 70,
      "value": "0x5"
    },
    "4967": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12657,
        12667
      ],
      "op": "DUP10",
      "path": "17"
    },
    "4968": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12657,
        12667
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4969": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12657,
        12667
      ],
      "op": "ADD",
      "path": "17"
    },
    "4970": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12657,
        12667
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4971": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "4972": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4973": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "4974": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "AND",
      "path": "17"
    },
    "4975": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4976": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4977": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12635
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "4979": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4980": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4981": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4983": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4984": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12648
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4985": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12654
      ],
      "op": "ADD",
      "path": "17"
    },
    "4986": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12627,
        12667
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "4987": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12425,
        12682
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4988": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12709
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 71,
      "value": "0xF"
    },
    "4990": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4991": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4992": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4993": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x138C"
    },
    "4996": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4997": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x138C"
    },
    "5000": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2D01"
    },
    "5003": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "i",
      "offset": [
        12695,
        12715
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5004": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5005": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5007": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5008": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5009": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5010": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5012": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5013": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5014": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5015": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "ADD",
      "path": "17"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5018": {
      "op": "NOT"
    },
    "5019": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5020": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5021": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "ADD",
      "path": "17"
    },
    "5022": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5023": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5030": {
      "op": "SHL"
    },
    "5031": {
      "op": "SUB"
    },
    "5032": {
      "op": "NOT"
    },
    "5033": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "AND",
      "path": "17"
    },
    "5034": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5035": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5036": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "ADD",
      "path": "17"
    },
    "5037": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5038": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12695,
        12715
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5039": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12383,
        12726
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5040": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12758,
        12767
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 72,
      "value": "0x16"
    },
    "5042": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12758,
        12767
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5043": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12740,
        12768
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5045": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12740,
        12768
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5046": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12740,
        12768
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x1EF37AB665F7C977B577275D7A49E72CD18D1143ECCD1112F1198E4A39D1428C"
    },
    "5079": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12740,
        12768
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5080": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12740,
        12768
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5082": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12740,
        12768
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5083": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        12740,
        12768
      ],
      "op": "LOG2",
      "path": "17"
    },
    "5084": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9075,
        12775
      ],
      "op": "POP",
      "path": "17"
    },
    "5085": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9075,
        12775
      ],
      "op": "POP",
      "path": "17"
    },
    "5086": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9075,
        12775
      ],
      "op": "POP",
      "path": "17"
    },
    "5087": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9075,
        12775
      ],
      "op": "POP",
      "path": "17"
    },
    "5088": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9075,
        12775
      ],
      "op": "POP",
      "path": "17"
    },
    "5089": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "POP",
      "path": "17"
    },
    "5090": {
      "fn": "BitcrushStaking.leaveStaking",
      "offset": [
        9009,
        12775
      ],
      "op": "POP",
      "path": "17"
    },
    "5091": {
      "fn": "BitcrushStaking.leaveStaking",
      "jump": "o",
      "offset": [
        9009,
        12775
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5092": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5691,
        6089
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5093": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5737,
        5748
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "5095": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5737,
        5748
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5096": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5733,
        5762
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13ED"
    },
    "5099": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5733,
        5762
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5100": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "o",
      "offset": [
        5691,
        6089
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5101": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5733,
        5762
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5102": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5806
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xB"
    },
    "5104": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5806
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5105": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5107": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5108": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5109": {
      "op": "PUSH4",
      "value": "0x45C9C1D1"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5116": {
      "op": "SHL"
    },
    "5117": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5118": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5119": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5120": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5121": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5771,
        5795
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5123": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5771,
        5795
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5130": {
      "op": "SHL"
    },
    "5131": {
      "op": "SUB"
    },
    "5132": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5806
      ],
      "op": "AND",
      "path": "17"
    },
    "5133": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5806
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5134": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5821
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x45C9C1D1"
    },
    "5139": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5821
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5140": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5142": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5143": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5144": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "ADD",
      "path": "17"
    },
    "5145": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5146": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5148": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5149": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5150": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5151": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5152": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5153": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SUB",
      "path": "17"
    },
    "5154": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "ADD",
      "path": "17"
    },
    "5155": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5156": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5771,
        5795
      ],
      "op": "DUP8",
      "path": "17"
    },
    "5157": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5806
      ],
      "op": "DUP8",
      "path": "17"
    },
    "5158": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "GAS",
      "path": "17"
    },
    "5159": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "CALL",
      "path": "17"
    },
    "5160": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5161": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5162": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5163": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1438"
    },
    "5166": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5167": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5168": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5170": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5171": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "5172": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5173": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5175": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "REVERT",
      "path": "17"
    },
    "5176": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5177": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "POP",
      "path": "17"
    },
    "5178": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "POP",
      "path": "17"
    },
    "5179": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "POP",
      "path": "17"
    },
    "5180": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "POP",
      "path": "17"
    },
    "5181": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5183": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5184": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5185": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "5187": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "NOT",
      "path": "17"
    },
    "5188": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "5190": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5191": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "ADD",
      "path": "17"
    },
    "5192": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "AND",
      "path": "17"
    },
    "5193": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5194": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "ADD",
      "path": "17"
    },
    "5195": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5196": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5198": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5199": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "POP",
      "path": "17"
    },
    "5200": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5201": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "ADD",
      "path": "17"
    },
    "5202": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5203": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x145C"
    },
    "5206": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5207": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5208": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BEF"
    },
    "5211": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "i",
      "offset": [
        5798,
        5823
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5212": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5798,
        5823
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5213": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5771,
        5823
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5214": {
      "op": "POP"
    },
    "5215": {
      "branch": 212,
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5837,
        5858
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5216": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5833,
        5867
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1466"
    },
    "5219": {
      "branch": 212,
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5833,
        5867
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5220": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5860,
        5867
      ],
      "op": "POP",
      "path": "17",
      "statement": 73
    },
    "5221": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "o",
      "offset": [
        5691,
        6089
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5222": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5833,
        5867
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5223": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5901,
        5923
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 74,
      "value": "0x1B"
    },
    "5225": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5901,
        5923
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5226": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5901,
        5945
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1473"
    },
    "5229": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5901,
        5945
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5230": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5928,
        5944
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5231": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5901,
        5927
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "5234": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "i",
      "offset": [
        5901,
        5945
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5235": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5901,
        5945
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5236": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5876,
        5898
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1B"
    },
    "5238": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5876,
        5945
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5239": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6007,
        6018
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "5241": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6007,
        6018
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5242": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5955,
        5973
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5244": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5955,
        5973
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5245": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5976,
        6019
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x148F"
    },
    "5248": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5976,
        6019
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5249": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5976,
        6002
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "5252": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5976,
        5992
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5253": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5997,
        6001
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "5259": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5976,
        5996
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "5262": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "i",
      "offset": [
        5976,
        6002
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5263": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5976,
        6019
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5264": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6049,
        6066
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 75,
      "value": "0x15"
    },
    "5266": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6049,
        6066
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5267": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5955,
        6019
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5268": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5955,
        6019
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5269": {
      "op": "POP"
    },
    "5270": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6049,
        6082
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x149F"
    },
    "5273": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6049,
        6082
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5274": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        5955,
        6019
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5275": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6049,
        6070
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "5278": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "i",
      "offset": [
        6049,
        6082
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5279": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6049,
        6082
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5280": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6029,
        6046
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x15"
    },
    "5282": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        6029,
        6082
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5283": {
      "op": "POP"
    },
    "5284": {
      "op": "POP"
    },
    "5285": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "o",
      "offset": [
        5691,
        6089
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5286": {
      "offset": [
        1912,
        1943
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5287": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "5289": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5290": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5291": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5292": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5293": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "LT",
      "path": "17"
    },
    "5294": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14B6"
    },
    "5297": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5298": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5300": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5301": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "REVERT",
      "path": "17"
    },
    "5302": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5303": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5305": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5306": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5307": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5308": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5310": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5311": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5312": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5313": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "ADD",
      "path": "17"
    },
    "5314": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5321": {
      "op": "SHL"
    },
    "5322": {
      "op": "SUB"
    },
    "5323": {
      "offset": [
        1912,
        1943
      ],
      "op": "AND",
      "path": "17"
    },
    "5324": {
      "fn": "BitcrushStaking.updateProfits",
      "offset": [
        1912,
        1943
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5325": {
      "op": "POP"
    },
    "5326": {
      "offset": [
        1912,
        1943
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5327": {
      "fn": "BitcrushStaking.updateProfits",
      "jump": "o",
      "offset": [
        1912,
        1943
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5328": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21130,
        21360
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5329": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5331": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5338": {
      "op": "SHL"
    },
    "5339": {
      "op": "SUB"
    },
    "5340": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5341": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5342": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5343": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14FA"
    },
    "5346": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5347": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5349": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5350": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5356": {
      "op": "SHL"
    },
    "5357": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5358": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5359": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5361": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5362": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "5365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5366": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "5369": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5370": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5371": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21220,
        21221
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 76,
      "value": "0x0"
    },
    "5373": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21213,
        21217
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5374": {
      "branch": 213,
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21213,
        21221
      ],
      "op": "GT",
      "path": "17"
    },
    "5375": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x151A"
    },
    "5378": {
      "branch": 213,
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5379": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5381": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5382": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5388": {
      "op": "SHL"
    },
    "5389": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5390": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5391": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5393": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "ADD",
      "path": "17"
    },
    "5394": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "5397": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5398": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2B81"
    },
    "5401": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "jump": "i",
      "offset": [
        21205,
        21252
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5402": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21205,
        21252
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5403": {
      "offset": [
        618,
        622
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E8"
    },
    "5406": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21270,
        21274
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 77
    },
    "5407": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21270,
        21285
      ],
      "op": "GT",
      "path": "17"
    },
    "5408": {
      "branch": 214,
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21270,
        21285
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5409": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x153C"
    },
    "5412": {
      "branch": 214,
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5413": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5415": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5422": {
      "op": "SHL"
    },
    "5423": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5424": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5425": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5427": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "ADD",
      "path": "17"
    },
    "5428": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "5431": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5432": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BB8"
    },
    "5435": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "jump": "i",
      "offset": [
        21262,
        21315
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5436": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21262,
        21315
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5437": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21325,
        21346
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 78,
      "value": "0x5"
    },
    "5439": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "offset": [
        21325,
        21353
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5440": {
      "fn": "BitcrushStaking.setPerformanceFeeReserve",
      "jump": "o",
      "offset": [
        21130,
        21360
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5441": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21507,
        21676
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5442": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5444": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5451": {
      "op": "SHL"
    },
    "5452": {
      "op": "SUB"
    },
    "5453": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5454": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5455": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5456": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156B"
    },
    "5459": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5460": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5462": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5469": {
      "op": "SHL"
    },
    "5470": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5472": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5474": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "5478": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "5482": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5484": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21598,
        21599
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 79,
      "value": "0x0"
    },
    "5486": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21590,
        21595
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5487": {
      "branch": 215,
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21590,
        21599
      ],
      "op": "GT",
      "path": "17"
    },
    "5488": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15BB"
    },
    "5491": {
      "branch": 215,
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5492": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5494": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5501": {
      "op": "SHL"
    },
    "5502": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5503": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5506": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5508": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5509": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "ADD",
      "path": "17"
    },
    "5510": {
      "op": "MSTORE"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5515": {
      "op": "DUP3"
    },
    "5516": {
      "op": "ADD"
    },
    "5517": {
      "op": "MSTORE"
    },
    "5518": {
      "op": "PUSH32",
      "value": "0x54696D65206D7573742062652067726561746572207468616E20300000000000"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5553": {
      "op": "DUP3"
    },
    "5554": {
      "op": "ADD"
    },
    "5555": {
      "op": "MSTORE"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5558": {
      "op": "ADD"
    },
    "5559": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "5562": {
      "op": "JUMP"
    },
    "5563": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21582,
        21631
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5564": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21641,
        21661
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 80,
      "value": "0x8"
    },
    "5566": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "offset": [
        21641,
        21669
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5567": {
      "fn": "BitcrushStaking.setEarlyWithdrawFeeTime",
      "jump": "o",
      "offset": [
        21507,
        21676
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5568": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5569": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5571": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5578": {
      "op": "SHL"
    },
    "5579": {
      "op": "SUB"
    },
    "5580": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5581": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5582": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5583": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15EA"
    },
    "5586": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5587": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5589": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5596": {
      "op": "SHL"
    },
    "5597": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5599": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5601": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5602": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "5605": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5606": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "5609": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5611": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 81,
      "value": "0x15F4"
    },
    "5614": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27DE"
    },
    "5619": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5620": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5621": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5622": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21823,
        22057
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5623": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5625": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5632": {
      "op": "SHL"
    },
    "5633": {
      "op": "SUB"
    },
    "5634": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5635": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5636": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5637": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1620"
    },
    "5640": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5641": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5652": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5653": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5655": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5656": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "5659": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5660": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "5663": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5664": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5665": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21913,
        21914
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 82,
      "value": "0x0"
    },
    "5667": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21904,
        21910
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5668": {
      "branch": 216,
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21904,
        21914
      ],
      "op": "GT",
      "path": "17"
    },
    "5669": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1665"
    },
    "5672": {
      "branch": 216,
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5673": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5675": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5682": {
      "op": "SHL"
    },
    "5683": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5684": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5687": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5689": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5690": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "ADD",
      "path": "17"
    },
    "5691": {
      "op": "MSTORE"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5696": {
      "op": "DUP3"
    },
    "5697": {
      "op": "ADD"
    },
    "5698": {
      "op": "MSTORE"
    },
    "5699": {
      "op": "PUSH18",
      "value": "0x4C696D69742063616E206E6F74206265203"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "5720": {
      "op": "SHL"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5723": {
      "op": "DUP3"
    },
    "5724": {
      "op": "ADD"
    },
    "5725": {
      "op": "MSTORE"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5728": {
      "op": "ADD"
    },
    "5729": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "5732": {
      "op": "JUMP"
    },
    "5733": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21896,
        21937
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5734": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21964,
        21966
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 83,
      "value": "0x1E"
    },
    "5736": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21955,
        21961
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5737": {
      "branch": 217,
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21955,
        21966
      ],
      "op": "LT",
      "path": "17"
    },
    "5738": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16C9"
    },
    "5741": {
      "branch": 217,
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5742": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5744": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5745": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5751": {
      "op": "SHL"
    },
    "5752": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5753": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5756": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5758": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5759": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "ADD",
      "path": "17"
    },
    "5760": {
      "op": "MSTORE"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5765": {
      "op": "DUP3"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "op": "MSTORE"
    },
    "5768": {
      "op": "PUSH32",
      "value": "0x4D6178206175746F636F6D706F756E64206C696D69742063616E6E6F74206265"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5803": {
      "op": "DUP3"
    },
    "5804": {
      "op": "ADD"
    },
    "5805": {
      "op": "MSTORE"
    },
    "5806": {
      "op": "PUSH11",
      "value": "0x206772656174657220333"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0xAC"
    },
    "5820": {
      "op": "SHL"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5823": {
      "op": "DUP3"
    },
    "5824": {
      "op": "ADD"
    },
    "5825": {
      "op": "MSTORE"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5828": {
      "op": "ADD"
    },
    "5829": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "5832": {
      "op": "JUMP"
    },
    "5833": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        21947,
        22014
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5834": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        22024,
        22041
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 84,
      "value": "0x1C"
    },
    "5836": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "offset": [
        22024,
        22050
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "5837": {
      "fn": "BitcrushStaking.setAutoCompoundLimit",
      "jump": "o",
      "offset": [
        21823,
        22057
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5838": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5839": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18480,
        18488
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 85,
      "value": "0xB"
    },
    "5841": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18480,
        18488
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5848": {
      "op": "SHL"
    },
    "5849": {
      "op": "SUB"
    },
    "5850": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18480,
        18488
      ],
      "op": "AND",
      "path": "17"
    },
    "5851": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18458,
        18468
      ],
      "op": "CALLER",
      "path": "17"
    },
    "5852": {
      "branch": 218,
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18458,
        18489
      ],
      "op": "EQ",
      "path": "17"
    },
    "5853": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1728"
    },
    "5856": {
      "branch": 218,
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5857": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5859": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5866": {
      "op": "SHL"
    },
    "5867": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5868": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5871": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5873": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5874": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "ADD",
      "path": "17"
    },
    "5875": {
      "op": "MSTORE"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5880": {
      "op": "DUP3"
    },
    "5881": {
      "op": "ADD"
    },
    "5882": {
      "op": "MSTORE"
    },
    "5883": {
      "op": "PUSH32",
      "value": "0x43616C6C6574206D7573742062652062616E6B726F6C6C000000000000000000"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5918": {
      "op": "DUP3"
    },
    "5919": {
      "op": "ADD"
    },
    "5920": {
      "op": "MSTORE"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5923": {
      "op": "ADD"
    },
    "5924": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "5927": {
      "op": "JUMP"
    },
    "5928": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18450,
        18517
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5929": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18665,
        18676
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 86,
      "value": "0x19"
    },
    "5931": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18665,
        18676
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5932": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18649,
        18660
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "5934": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18649,
        18660
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5935": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18649,
        18677
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1737"
    },
    "5938": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18649,
        18677
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5939": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18649,
        18664
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "5942": {
      "fn": "BitcrushStaking.freezeStaking",
      "jump": "i",
      "offset": [
        18649,
        18677
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5943": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18649,
        18677
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5944": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18638,
        18645
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5945": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18638,
        18677
      ],
      "op": "GT",
      "path": "17"
    },
    "5946": {
      "branch": 219,
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18638,
        18677
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5947": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17AC"
    },
    "5950": {
      "branch": 219,
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5951": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5953": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5960": {
      "op": "SHL"
    },
    "5961": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5962": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5965": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5967": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5968": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "ADD",
      "path": "17"
    },
    "5969": {
      "op": "MSTORE"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5974": {
      "op": "DUP3"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "op": "MSTORE"
    },
    "5977": {
      "op": "PUSH32",
      "value": "0x467265657A6520616D6F756E742073686F756C64206265206C65737320746861"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6012": {
      "op": "DUP3"
    },
    "6013": {
      "op": "ADD"
    },
    "6014": {
      "op": "MSTORE"
    },
    "6015": {
      "op": "PUSH32",
      "value": "0x6E206F7220657175616C20746F20617661696C61626C652066756E6473000000"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6050": {
      "op": "DUP3"
    },
    "6051": {
      "op": "ADD"
    },
    "6052": {
      "op": "MSTORE"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6055": {
      "op": "ADD"
    },
    "6056": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "6059": {
      "op": "JUMP"
    },
    "6060": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18617,
        18764
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6061": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18788,
        18799
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 87,
      "value": "0x19"
    },
    "6063": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18788,
        18799
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6064": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18788,
        18812
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17B9"
    },
    "6067": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18788,
        18812
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6068": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18804,
        18811
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6069": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18788,
        18803
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6072": {
      "fn": "BitcrushStaking.freezeStaking",
      "jump": "i",
      "offset": [
        18788,
        18812
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6073": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18788,
        18812
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6074": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18774,
        18785
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "6076": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18774,
        18812
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "6077": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 88,
      "value": "0x40"
    },
    "6079": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6080": {
      "op": "PUSH4",
      "value": "0xF62CF8D"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "6087": {
      "op": "SHL"
    },
    "6088": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6089": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6090": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6092": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6093": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "ADD",
      "path": "17"
    },
    "6094": {
      "op": "DUP5"
    },
    "6095": {
      "op": "SWAP1"
    },
    "6096": {
      "op": "MSTORE"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6103": {
      "op": "SHL"
    },
    "6104": {
      "op": "SUB"
    },
    "6105": {
      "op": "DUP4"
    },
    "6106": {
      "op": "DUP2"
    },
    "6107": {
      "op": "AND"
    },
    "6108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6110": {
      "op": "DUP4"
    },
    "6111": {
      "op": "ADD"
    },
    "6112": {
      "op": "MSTORE"
    },
    "6113": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18872,
        18882
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6114": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18872,
        18882
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6115": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18920
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6116": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18920
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6117": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18920
      ],
      "op": "AND",
      "path": "17"
    },
    "6118": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18920
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6119": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18920
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF62CF8D0"
    },
    "6124": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18920
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6127": {
      "op": "ADD"
    },
    "6128": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6130": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6132": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6133": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6134": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6135": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "SUB",
      "path": "17"
    },
    "6136": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6137": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6139": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP8",
      "path": "17"
    },
    "6140": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6141": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "6142": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6143": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6144": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6145": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1809"
    },
    "6148": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6149": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6151": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6152": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "REVERT",
      "path": "17"
    },
    "6153": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6154": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "POP",
      "path": "17"
    },
    "6155": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "GAS",
      "path": "17"
    },
    "6156": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "CALL",
      "path": "17"
    },
    "6157": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6158": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6159": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6160": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x181D"
    },
    "6163": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6164": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "6165": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6167": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6168": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "6169": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "6170": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6172": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "REVERT",
      "path": "17"
    },
    "6173": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18893,
        18941
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6174": {
      "op": "POP"
    },
    "6175": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18951,
        18999
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 89,
      "value": "0x1857"
    },
    "6178": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18951,
        18999
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6179": {
      "op": "POP"
    },
    "6180": {
      "op": "POP"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6187": {
      "op": "SHL"
    },
    "6188": {
      "op": "SUB"
    },
    "6189": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18951,
        18956
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "6222": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18951,
        18969
      ],
      "op": "AND",
      "path": "17"
    },
    "6223": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18951,
        18969
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6224": {
      "op": "POP"
    },
    "6225": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18978,
        18988
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6226": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18991,
        18998
      ],
      "op": "DUP7",
      "path": "17"
    },
    "6227": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18951,
        18969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "6230": {
      "fn": "BitcrushStaking.freezeStaking",
      "jump": "i",
      "offset": [
        18951,
        18999
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6231": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18951,
        18999
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6232": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        19009,
        19029
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 90,
      "value": "0x185F"
    },
    "6235": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        19009,
        19027
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF9"
    },
    "6238": {
      "fn": "BitcrushStaking.freezeStaking",
      "jump": "i",
      "offset": [
        19009,
        19029
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6239": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        19009,
        19029
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6240": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        19039,
        19054
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 91,
      "value": "0x1867"
    },
    "6243": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        19039,
        19052
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13E4"
    },
    "6246": {
      "fn": "BitcrushStaking.freezeStaking",
      "jump": "i",
      "offset": [
        19039,
        19054
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6247": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        19039,
        19054
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6248": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18440,
        19061
      ],
      "op": "POP",
      "path": "17"
    },
    "6249": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "POP",
      "path": "17"
    },
    "6250": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "POP",
      "path": "17"
    },
    "6251": {
      "fn": "BitcrushStaking.freezeStaking",
      "offset": [
        18323,
        19061
      ],
      "op": "POP",
      "path": "17"
    },
    "6252": {
      "fn": "BitcrushStaking.freezeStaking",
      "jump": "o",
      "offset": [
        18323,
        19061
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6253": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14535,
        18155
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6254": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14621,
        14633
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 92
    },
    "6255": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14596,
        14617
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x10"
    },
    "6257": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14596,
        14617
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6258": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14596,
        14633
      ],
      "op": "GT",
      "path": "17"
    },
    "6259": {
      "branch": 220,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14596,
        14633
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6260": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x18BF"
    },
    "6263": {
      "branch": 220,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6264": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6266": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6275": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6278": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6280": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6281": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "ADD",
      "path": "17"
    },
    "6282": {
      "op": "DUP2"
    },
    "6283": {
      "op": "SWAP1"
    },
    "6284": {
      "op": "MSTORE"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6287": {
      "op": "DUP3"
    },
    "6288": {
      "op": "ADD"
    },
    "6289": {
      "op": "MSTORE"
    },
    "6290": {
      "op": "PUSH32",
      "value": "0x436F6D706F756E6420416C6C206E6F7420796574206170706C696361626C652E"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6325": {
      "op": "DUP3"
    },
    "6326": {
      "op": "ADD"
    },
    "6327": {
      "op": "MSTORE"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6330": {
      "op": "ADD"
    },
    "6331": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "6334": {
      "op": "JUMP"
    },
    "6335": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14575,
        14691
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6336": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14723,
        14724
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 93,
      "value": "0x0"
    },
    "6338": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14709,
        14720
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "6340": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14709,
        14720
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6341": {
      "branch": 221,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14709,
        14724
      ],
      "op": "GT",
      "path": "17"
    },
    "6342": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1911"
    },
    "6345": {
      "branch": 221,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6346": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6348": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "6349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6355": {
      "op": "SHL"
    },
    "6356": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6357": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6360": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "6362": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6363": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "ADD",
      "path": "17"
    },
    "6364": {
      "op": "MSTORE"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6369": {
      "op": "DUP3"
    },
    "6370": {
      "op": "ADD"
    },
    "6371": {
      "op": "MSTORE"
    },
    "6372": {
      "op": "PUSH32",
      "value": "0x4E6F205374616B6564207265776172647320746F20636C61696D000000000000"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6407": {
      "op": "DUP3"
    },
    "6408": {
      "op": "ADD"
    },
    "6409": {
      "op": "MSTORE"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6412": {
      "op": "ADD"
    },
    "6413": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "6416": {
      "op": "JUMP"
    },
    "6417": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14701,
        14755
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6418": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14934,
        14952
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x11"
    },
    "6420": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14934,
        14952
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6421": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14988,
        15002
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "6423": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14988,
        15009
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6424": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14765,
        14784
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6426": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14765,
        14784
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6427": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14765,
        14784
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6428": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14765,
        14784
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6429": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14765,
        14784
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6430": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14765,
        14784
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6431": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14765,
        14784
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6432": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14765,
        14784
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6433": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14966,
        15009
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6434": {
      "branch": 222,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14966,
        15009
      ],
      "op": "LT",
      "path": "17"
    },
    "6435": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14962,
        15025
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x192A"
    },
    "6438": {
      "branch": 222,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14962,
        15025
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6439": {
      "op": "POP"
    },
    "6440": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15024,
        15025
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 94,
      "value": "0x0"
    },
    "6442": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14962,
        15025
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6443": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15057,
        15071
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "6445": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15057,
        15078
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6446": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15130,
        15147
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1C"
    },
    "6448": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15130,
        15147
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6449": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15105,
        15147
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6450": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15105,
        15147
      ],
      "op": "GT",
      "path": "17"
    },
    "6451": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15105,
        15147
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6452": {
      "branch": 223,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15105,
        15147
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6453": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15105,
        15221
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x194D"
    },
    "6456": {
      "branch": 223,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15105,
        15221
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6457": {
      "op": "POP"
    },
    "6458": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15200,
        15214
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "6460": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15200,
        15221
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6461": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15178,
        15195
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1C"
    },
    "6463": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15178,
        15195
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6464": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15163,
        15196
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x194A"
    },
    "6467": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15163,
        15196
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6468": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15163,
        15173
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6469": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15163,
        15173
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6470": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15163,
        15177
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6473": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15163,
        15196
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6474": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15163,
        15196
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6475": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15163,
        15221
      ],
      "op": "LT",
      "path": "17"
    },
    "6476": {
      "branch": 224,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15163,
        15221
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6477": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15105,
        15221
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6478": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15088,
        15327
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6479": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15088,
        15327
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x195B"
    },
    "6482": {
      "branch": 224,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15088,
        15327
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6483": {
      "op": "POP"
    },
    "6484": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15245,
        15259
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 95,
      "value": "0xF"
    },
    "6486": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15245,
        15266
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6487": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15088,
        15327
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x196C"
    },
    "6490": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15088,
        15327
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6491": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15088,
        15327
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6492": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15309,
        15326
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 96,
      "value": "0x1C"
    },
    "6494": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15309,
        15326
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6495": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15294,
        15327
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1969"
    },
    "6498": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15294,
        15327
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6499": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15294,
        15304
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6500": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15294,
        15304
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6501": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15294,
        15308
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6504": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15294,
        15327
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6505": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15294,
        15327
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6506": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15281,
        15327
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6507": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15281,
        15327
      ],
      "op": "POP",
      "path": "17"
    },
    "6508": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15088,
        15327
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6509": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15338,
        15353
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 97,
      "value": "0x1974"
    },
    "6512": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15338,
        15351
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13E4"
    },
    "6515": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15338,
        15353
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6516": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15338,
        15353
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6517": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15363,
        15383
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 98,
      "value": "0x197C"
    },
    "6520": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15363,
        15381
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF9"
    },
    "6523": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15363,
        15383
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6524": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15363,
        15383
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6525": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15410,
        15420
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6526": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15393,
        17752
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6527": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15426,
        15436
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6528": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15422,
        15423
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6529": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15422,
        15436
      ],
      "op": "LT",
      "path": "17"
    },
    "6530": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15393,
        17752
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6531": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15393,
        17752
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BA2"
    },
    "6534": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15393,
        17752
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6535": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15457,
        15488
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6537": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15499
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "6539": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6541": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15514
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "6543": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15515,
        15516
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6544": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6545": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6546": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6547": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "LT",
      "path": "17"
    },
    "6548": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x199F"
    },
    "6551": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6552": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x199F"
    },
    "6555": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2CEB"
    },
    "6558": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15500,
        15517
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6559": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6560": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6562": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6563": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6564": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6565": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "6567": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6568": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6569": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "6570": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6571": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6572": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "ADD",
      "path": "17"
    },
    "6573": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6580": {
      "op": "SHL"
    },
    "6581": {
      "op": "SUB"
    },
    "6582": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15500,
        15517
      ],
      "op": "AND",
      "path": "17"
    },
    "6583": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6584": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6585": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6586": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "ADD",
      "path": "17"
    },
    "6587": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6588": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6589": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6590": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "6591": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "6593": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "ADD",
      "path": "17"
    },
    "6594": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6595": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "6596": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15679,
        15702
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "6598": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15679,
        15702
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6599": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15679,
        15702
      ],
      "op": "ADD",
      "path": "17"
    },
    "6600": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15679,
        15702
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6601": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15612,
        15629
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x13"
    },
    "6603": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15612,
        15629
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6604": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15590
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6605": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15590
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6606": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6607": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15491,
        15518
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "6608": {
      "op": "POP"
    },
    "6609": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15703
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x19E8"
    },
    "6612": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15703
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "6613": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15657
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x800"
    },
    "6616": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15657
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6617": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15652,
        15656
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "6623": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15652,
        15656
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6624": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15630
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "6627": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15630
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6628": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15611
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "6631": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15555,
        15630
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6632": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15555,
        15703
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6633": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15532,
        15703
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15733,
        15768
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x19F4"
    },
    "6638": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15733,
        15750
      ],
      "op": "DUP7",
      "path": "17"
    },
    "6639": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15532,
        15703
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6640": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15733,
        15754
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6643": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15733,
        15768
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6644": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15733,
        15768
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6645": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15721,
        15730
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "6647": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15721,
        15730
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6648": {
      "branch": 225,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15721,
        15768
      ],
      "op": "LT",
      "path": "17"
    },
    "6649": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15717,
        15850
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6650": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15717,
        15850
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A0D"
    },
    "6653": {
      "branch": 225,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15717,
        15850
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6654": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15803,
        15812
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 99,
      "value": "0x16"
    },
    "6656": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15803,
        15812
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6657": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15803,
        15835
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A0A"
    },
    "6660": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15803,
        15835
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6661": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15817,
        15834
      ],
      "op": "DUP8",
      "path": "17"
    },
    "6662": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15803,
        15816
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "6665": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15803,
        15835
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6666": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15803,
        15835
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6667": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15788,
        15835
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6668": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15788,
        15835
      ],
      "op": "POP",
      "path": "17"
    },
    "6669": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15717,
        15850
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6670": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15889,
        15912
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 100,
      "value": "0x7"
    },
    "6672": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15889,
        15912
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6673": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15889,
        15912
      ],
      "op": "ADD",
      "path": "17"
    },
    "6674": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15889,
        15912
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6675": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15889,
        15930
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A1C"
    },
    "6678": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15889,
        15930
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6679": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15917,
        15929
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6680": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15889,
        15916
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6683": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15889,
        15930
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6684": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15889,
        15930
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6685": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15863,
        15886
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "6687": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15863,
        15886
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6688": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15863,
        15886
      ],
      "op": "ADD",
      "path": "17"
    },
    "6689": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15863,
        15930
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "6690": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15948,
        15964
      ],
      "op": "DUP1",
      "path": "17"
    },
    "6691": {
      "branch": 226,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15948,
        15964
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6692": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15944,
        16037
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A34"
    },
    "6695": {
      "branch": 226,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15944,
        16037
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6696": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16002,
        16037
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 101,
      "value": "0x1A31"
    },
    "6699": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16002,
        16019
      ],
      "op": "DUP7",
      "path": "17"
    },
    "6700": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16024,
        16036
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6701": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16002,
        16023
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6704": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16002,
        16037
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6705": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16002,
        16037
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6706": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15982,
        16037
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "6707": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15982,
        16037
      ],
      "op": "POP",
      "path": "17"
    },
    "6708": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15944,
        16037
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6709": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16051,
        16071
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6711": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16225
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A60"
    },
    "6714": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16198,
        16209
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6715": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16198,
        16224
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "6717": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16198,
        16224
      ],
      "op": "ADD",
      "path": "17"
    },
    "6718": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16198,
        16224
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6719": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16176
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x800"
    },
    "6722": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16171,
        16175
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "6728": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16149
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "6731": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16131,
        16148
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x15"
    },
    "6733": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16131,
        16148
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6734": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16085
      ],
      "op": "DUP9",
      "path": "17"
    },
    "6735": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16109
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6737": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16109
      ],
      "op": "ADD",
      "path": "17"
    },
    "6738": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16109
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6739": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16130
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "6742": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16130
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6743": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16149
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6744": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16149
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6745": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16149
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "6750": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16149
      ],
      "op": "AND",
      "path": "17"
    },
    "6751": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16074,
        16149
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6752": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16074,
        16225
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6753": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16268,
        16294
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 102,
      "value": "0x8"
    },
    "6755": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16268,
        16294
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6756": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16268,
        16294
      ],
      "op": "ADD",
      "path": "17"
    },
    "6757": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16268,
        16294
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6758": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16051,
        16225
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6759": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16051,
        16225
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6760": {
      "op": "POP"
    },
    "6761": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16268,
        16342
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A72"
    },
    "6764": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16268,
        16342
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6765": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16051,
        16225
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6766": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16268,
        16298
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6769": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16268,
        16342
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6770": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16268,
        16342
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6771": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16239,
        16265
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "6773": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16239,
        16265
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6774": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16239,
        16265
      ],
      "op": "ADD",
      "path": "17"
    },
    "6775": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16239,
        16342
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "6776": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16371,
        16401
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 103,
      "value": "0x1A81"
    },
    "6779": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16371,
        16383
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6780": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16388,
        16400
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6781": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16371,
        16387
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6784": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16371,
        16401
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6785": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16371,
        16401
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6786": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16356,
        16401
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6787": {
      "op": "POP"
    },
    "6788": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16419,
        16435
      ],
      "op": "DUP2",
      "path": "17"
    },
    "6789": {
      "branch": 227,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16419,
        16435
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "6790": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16415,
        17682
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B87"
    },
    "6793": {
      "branch": 227,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16415,
        17682
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "6794": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16477,
        16496
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 104,
      "value": "0x1A"
    },
    "6796": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16477,
        16496
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6797": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16477,
        16514
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A96"
    },
    "6800": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16477,
        16514
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6801": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16501,
        16513
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6802": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16477,
        16500
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6805": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16477,
        16514
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6806": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16477,
        16514
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6807": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16455,
        16474
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1A"
    },
    "6809": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16455,
        16514
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "6810": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16547,
        16559
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 105,
      "value": "0x18"
    },
    "6812": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16547,
        16559
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6813": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16547,
        16577
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AA6"
    },
    "6816": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16547,
        16577
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6817": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16564,
        16576
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6818": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16547,
        16563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6821": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16547,
        16577
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6822": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16547,
        16577
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6823": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16532,
        16544
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x18"
    },
    "6825": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16532,
        16577
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "6826": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16633,
        16651
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "6828": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16633,
        16651
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6829": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16595,
        16613
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6831": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16595,
        16613
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6832": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16616,
        16703
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AC2"
    },
    "6835": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16616,
        16703
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6836": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "6839": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        832,
        837
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6840": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16616,
        16652
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "6843": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16616,
        16652
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6844": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16616,
        16628
      ],
      "op": "DUP7",
      "path": "17"
    },
    "6845": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16616,
        16628
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6846": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16616,
        16632
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "6849": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16616,
        16652
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6850": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16616,
        16703
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6851": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16595,
        16703
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6852": {
      "op": "POP"
    },
    "6853": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16735,
        16762
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 106,
      "value": "0x1ACE"
    },
    "6856": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16735,
        16746
      ],
      "op": "DUP12",
      "path": "17"
    },
    "6857": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16595,
        16703
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6858": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16735,
        16750
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6861": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16735,
        16762
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6862": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16735,
        16762
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6863": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16721,
        16762
      ],
      "op": "SWAP11",
      "path": "17"
    },
    "6864": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16721,
        16762
      ],
      "op": "POP",
      "path": "17"
    },
    "6865": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16781,
        16800
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6867": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16900
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AED"
    },
    "6870": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "6873": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16866
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "6876": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16841,
        16865
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "6878": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16841,
        16865
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6879": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16815
      ],
      "op": "DUP8",
      "path": "17"
    },
    "6880": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16840
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "6883": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16840
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6884": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16866
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6885": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16866
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6886": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16866
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "6891": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16866
      ],
      "op": "AND",
      "path": "17"
    },
    "6892": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16803,
        16866
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6893": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16803,
        16900
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6894": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16781,
        16900
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6895": {
      "op": "POP"
    },
    "6896": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16937,
        16970
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 107,
      "value": "0x1AF9"
    },
    "6899": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16937,
        16953
      ],
      "op": "DUP11",
      "path": "17"
    },
    "6900": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16781,
        16900
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6901": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16937,
        16957
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6904": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        16937,
        16970
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6905": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16937,
        16970
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6906": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16918,
        16970
      ],
      "op": "SWAP10",
      "path": "17"
    },
    "6907": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16918,
        16970
      ],
      "op": "POP",
      "path": "17"
    },
    "6908": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16989,
        17007
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "6910": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17104
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B18"
    },
    "6913": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "6916": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17070
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "6919": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17048,
        17069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "6921": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17048,
        17069
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6922": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17022
      ],
      "op": "DUP9",
      "path": "17"
    },
    "6923": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17047
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "6926": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17047
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6927": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17070
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6928": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17070
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6929": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17070
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "6934": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17070
      ],
      "op": "AND",
      "path": "17"
    },
    "6935": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17010,
        17070
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6936": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17010,
        17104
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6937": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16989,
        17104
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6938": {
      "op": "POP"
    },
    "6939": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17139,
        17169
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 108,
      "value": "0x1B24"
    },
    "6942": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17139,
        17153
      ],
      "op": "DUP13",
      "path": "17"
    },
    "6943": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16989,
        17104
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6944": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17139,
        17157
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "6947": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17139,
        17169
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6948": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17139,
        17169
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6949": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17122,
        17169
      ],
      "op": "SWAP12",
      "path": "17"
    },
    "6950": {
      "op": "POP"
    },
    "6951": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17202,
        17230
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 109,
      "value": "0x1B30"
    },
    "6954": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17202,
        17214
      ],
      "op": "DUP6",
      "path": "17"
    },
    "6955": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17219,
        17229
      ],
      "op": "DUP5",
      "path": "17"
    },
    "6956": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17202,
        17218
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "6959": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17202,
        17230
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6960": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17202,
        17230
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6961": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17187,
        17230
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "6962": {
      "op": "POP"
    },
    "6963": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17263,
        17292
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 110,
      "value": "0x1B3C"
    },
    "6966": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17187,
        17230
      ],
      "op": "DUP6",
      "path": "17"
    },
    "6967": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17280,
        17291
      ],
      "op": "DUP4",
      "path": "17"
    },
    "6968": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17263,
        17279
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "6971": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17263,
        17292
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6972": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17263,
        17292
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6973": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17248,
        17292
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "6974": {
      "op": "POP"
    },
    "6975": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17325,
        17353
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 111,
      "value": "0x1B48"
    },
    "6978": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17248,
        17292
      ],
      "op": "DUP6",
      "path": "17"
    },
    "6979": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17342,
        17352
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6980": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17325,
        17341
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "6983": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17325,
        17353
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6984": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17325,
        17353
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "6985": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17399,
        17424
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 112,
      "value": "0x2"
    },
    "6987": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17399,
        17424
      ],
      "op": "DUP8",
      "path": "17"
    },
    "6988": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17399,
        17424
      ],
      "op": "ADD",
      "path": "17"
    },
    "6989": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17399,
        17424
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6990": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17310,
        17353
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6991": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17310,
        17353
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "6992": {
      "op": "POP"
    },
    "6993": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17399,
        17480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B5A"
    },
    "6996": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17399,
        17480
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6997": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17310,
        17353
      ],
      "op": "DUP7",
      "path": "17"
    },
    "6998": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17399,
        17428
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "7001": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17399,
        17480
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7002": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17399,
        17480
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7003": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17371,
        17396
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "7005": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17371,
        17396
      ],
      "op": "DUP8",
      "path": "17"
    },
    "7006": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17371,
        17396
      ],
      "op": "ADD",
      "path": "17"
    },
    "7007": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17371,
        17480
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7008": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17525,
        17549
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 113,
      "value": "0x1"
    },
    "7010": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17525,
        17549
      ],
      "op": "DUP7",
      "path": "17"
    },
    "7011": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17525,
        17549
      ],
      "op": "ADD",
      "path": "17"
    },
    "7012": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17525,
        17549
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7013": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17525,
        17605
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B6E"
    },
    "7016": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17525,
        17605
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7017": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17575,
        17587
      ],
      "op": "DUP7",
      "path": "17"
    },
    "7018": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17525,
        17553
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "7021": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17525,
        17605
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7022": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17525,
        17605
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7023": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17498,
        17522
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "7025": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17498,
        17522
      ],
      "op": "DUP8",
      "path": "17"
    },
    "7026": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17498,
        17522
      ],
      "op": "ADD",
      "path": "17"
    },
    "7027": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17498,
        17605
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7028": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17638,
        17649
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 114,
      "value": "0x17"
    },
    "7030": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17638,
        17649
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7031": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17638,
        17667
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B80"
    },
    "7034": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17638,
        17667
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7035": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17654,
        17666
      ],
      "op": "DUP7",
      "path": "17"
    },
    "7036": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17638,
        17653
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "7039": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17638,
        17667
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7040": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17638,
        17667
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7041": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17624,
        17635
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "7043": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17624,
        17667
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7044": {
      "op": "POP"
    },
    "7045": {
      "op": "POP"
    },
    "7046": {
      "op": "POP"
    },
    "7047": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        16415,
        17682
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7048": {
      "op": "POP"
    },
    "7049": {
      "op": "POP"
    },
    "7050": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17729,
        17741
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 115
    },
    "7051": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17695,
        17726
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "7053": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17695,
        17726
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7054": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17695,
        17726
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7055": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17695,
        17726
      ],
      "op": "ADD",
      "path": "17"
    },
    "7056": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17695,
        17741
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7057": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15438,
        15441
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 116
    },
    "7058": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15438,
        15441
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B9A"
    },
    "7061": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15438,
        15441
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7062": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15438,
        15441
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2D17"
    },
    "7065": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        15438,
        15441
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7066": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15438,
        15441
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7067": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15438,
        15441
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7068": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15438,
        15441
      ],
      "op": "POP",
      "path": "17"
    },
    "7069": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15438,
        15441
      ],
      "op": "POP",
      "path": "17"
    },
    "7070": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15393,
        17752
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x197E"
    },
    "7073": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15393,
        17752
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7074": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        15393,
        17752
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7075": {
      "op": "POP"
    },
    "7076": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17761,
        17779
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 117,
      "value": "0x11"
    },
    "7078": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17761,
        17792
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7079": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17761,
        17792
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7080": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17761,
        17792
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7081": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17828,
        17842
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "7083": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17828,
        17849
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7084": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17806,
        17849
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7085": {
      "branch": 228,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17806,
        17849
      ],
      "op": "LT",
      "path": "17"
    },
    "7086": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17802,
        17898
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BB7"
    },
    "7089": {
      "branch": 228,
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17802,
        17898
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7090": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17886,
        17887
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 118,
      "value": "0x0"
    },
    "7092": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17865,
        17883
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x11"
    },
    "7094": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17865,
        17887
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7095": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17802,
        17898
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7096": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17919,
        17928
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 119,
      "value": "0x16"
    },
    "7098": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17919,
        17928
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7099": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17919,
        17951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BC4"
    },
    "7102": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17919,
        17951
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7103": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17933,
        17950
      ],
      "op": "DUP5",
      "path": "17"
    },
    "7104": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17919,
        17932
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "7107": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        17919,
        17951
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7108": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17919,
        17951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7109": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17907,
        17916
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "7111": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17907,
        17951
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7112": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17985,
        17997
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 120
    },
    "7113": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17961,
        17982
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x10"
    },
    "7115": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        17961,
        17997
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7116": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 121,
      "value": "0x40"
    },
    "7118": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7119": {
      "op": "PUSH4",
      "value": "0x852CD8D"
    },
    "7124": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7126": {
      "op": "SHL"
    },
    "7127": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7128": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7129": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7131": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7132": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "ADD",
      "path": "17"
    },
    "7133": {
      "op": "DUP8"
    },
    "7134": {
      "op": "SWAP1"
    },
    "7135": {
      "op": "MSTORE"
    },
    "7136": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18012
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7175": {
      "op": "SHL"
    },
    "7176": {
      "op": "SUB"
    },
    "7177": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18017
      ],
      "op": "AND",
      "path": "17"
    },
    "7178": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18017
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7179": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18017
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x42966C68"
    },
    "7184": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18017
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7187": {
      "op": "ADD"
    },
    "7188": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7190": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7192": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7193": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7194": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP4",
      "path": "17"
    },
    "7195": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "SUB",
      "path": "17"
    },
    "7196": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7197": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7199": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP8",
      "path": "17"
    },
    "7200": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7201": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "7202": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7203": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7204": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7205": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C2D"
    },
    "7208": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7209": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7211": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7212": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "REVERT",
      "path": "17"
    },
    "7213": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7214": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "POP",
      "path": "17"
    },
    "7215": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "GAS",
      "path": "17"
    },
    "7216": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "CALL",
      "path": "17"
    },
    "7217": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7218": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7219": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7220": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C41"
    },
    "7223": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7224": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "7225": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7227": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7228": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "7229": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "7230": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7232": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "REVERT",
      "path": "17"
    },
    "7233": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18007,
        18030
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7234": {
      "op": "POP"
    },
    "7235": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18040,
        18088
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 122,
      "value": "0x1C7B"
    },
    "7238": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18040,
        18088
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "7239": {
      "op": "POP"
    },
    "7240": {
      "op": "POP"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7247": {
      "op": "SHL"
    },
    "7248": {
      "op": "SUB"
    },
    "7249": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18040,
        18045
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "7282": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18040,
        18058
      ],
      "op": "AND",
      "path": "17"
    },
    "7283": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18040,
        18058
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7284": {
      "op": "POP"
    },
    "7285": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18059,
        18069
      ],
      "op": "CALLER",
      "path": "17"
    },
    "7286": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18071,
        18087
      ],
      "op": "DUP7",
      "path": "17"
    },
    "7287": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18040,
        18058
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "7290": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        18040,
        18088
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7291": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18040,
        18088
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7292": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18117,
        18131
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 123,
      "value": "0xD"
    },
    "7294": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18117,
        18131
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7295": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18098,
        18148
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CB5"
    },
    "7298": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18098,
        18148
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7305": {
      "op": "SHL"
    },
    "7306": {
      "op": "SUB"
    },
    "7307": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18098,
        18103
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "7340": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18098,
        18116
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7341": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18098,
        18116
      ],
      "op": "AND",
      "path": "17"
    },
    "7342": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18098,
        18116
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7343": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18117,
        18131
      ],
      "op": "AND",
      "path": "17"
    },
    "7344": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18133,
        18147
      ],
      "op": "DUP8",
      "path": "17"
    },
    "7345": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18098,
        18116
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "7348": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "i",
      "offset": [
        18098,
        18148
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7349": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        18098,
        18148
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7350": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14565,
        18155
      ],
      "op": "POP",
      "path": "17"
    },
    "7351": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14565,
        18155
      ],
      "op": "POP",
      "path": "17"
    },
    "7352": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14565,
        18155
      ],
      "op": "POP",
      "path": "17"
    },
    "7353": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14565,
        18155
      ],
      "op": "POP",
      "path": "17"
    },
    "7354": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14565,
        18155
      ],
      "op": "POP",
      "path": "17"
    },
    "7355": {
      "fn": "BitcrushStaking.compoundAll",
      "offset": [
        14565,
        18155
      ],
      "op": "POP",
      "path": "17"
    },
    "7356": {
      "fn": "BitcrushStaking.compoundAll",
      "jump": "o",
      "offset": [
        14535,
        18155
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7357": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3755,
        3989
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7358": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7360": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7367": {
      "op": "SHL"
    },
    "7368": {
      "op": "SUB"
    },
    "7369": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7370": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7371": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7372": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE7"
    },
    "7375": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7379": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7385": {
      "op": "SHL"
    },
    "7386": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7387": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7388": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7390": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7391": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "7394": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7395": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "7398": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7399": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7400": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 124,
      "value": "0xC"
    },
    "7402": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3866,
        3876
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7409": {
      "op": "SHL"
    },
    "7410": {
      "op": "SUB"
    },
    "7411": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3866,
        3876
      ],
      "op": "AND",
      "path": "17"
    },
    "7412": {
      "branch": 229,
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3858,
        3891
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7413": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D40"
    },
    "7416": {
      "branch": 229,
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7417": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7419": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7426": {
      "op": "SHL"
    },
    "7427": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7428": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7431": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7433": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7434": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "ADD",
      "path": "17"
    },
    "7435": {
      "op": "MSTORE"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7440": {
      "op": "DUP3"
    },
    "7441": {
      "op": "ADD"
    },
    "7442": {
      "op": "MSTORE"
    },
    "7443": {
      "op": "PUSH32",
      "value": "0x4C6976652057616C6C6574206164647265737320616C72656164792073657400"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7478": {
      "op": "DUP3"
    },
    "7479": {
      "op": "ADD"
    },
    "7480": {
      "op": "MSTORE"
    },
    "7481": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7483": {
      "op": "ADD"
    },
    "7484": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "7487": {
      "op": "JUMP"
    },
    "7488": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3837,
        3948
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7489": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3968
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 125,
      "value": "0xC"
    },
    "7491": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7492": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7499": {
      "op": "SHL"
    },
    "7500": {
      "op": "SUB"
    },
    "7501": {
      "op": "NOT"
    },
    "7502": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "AND",
      "path": "17"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7509": {
      "op": "SHL"
    },
    "7510": {
      "op": "SUB"
    },
    "7511": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "7512": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7513": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "7514": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "AND",
      "path": "17"
    },
    "7515": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7516": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7517": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7518": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "OR",
      "path": "17"
    },
    "7519": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7520": {
      "fn": "BitcrushStaking.setLiveWallet",
      "offset": [
        3958,
        3982
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7521": {
      "fn": "BitcrushStaking.setLiveWallet",
      "jump": "o",
      "offset": [
        3755,
        3989
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7522": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6095,
        6391
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7523": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7525": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7532": {
      "op": "SHL"
    },
    "7533": {
      "op": "SUB"
    },
    "7534": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7535": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7536": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7537": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8C"
    },
    "7540": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7541": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7543": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7550": {
      "op": "SHL"
    },
    "7551": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7552": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7553": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7555": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7556": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "7559": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7560": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "7563": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7564": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7565": {
      "offset": [
        558,
        578
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0x8AC7230489E80000"
    },
    "7574": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6256,
        6263
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 126
    },
    "7575": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6256,
        6286
      ],
      "op": "GT",
      "path": "17"
    },
    "7576": {
      "branch": 230,
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6256,
        6286
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7577": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF4"
    },
    "7580": {
      "branch": 230,
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7581": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7583": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7590": {
      "op": "SHL"
    },
    "7591": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7592": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7595": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7597": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7598": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "ADD",
      "path": "17"
    },
    "7599": {
      "op": "MSTORE"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7604": {
      "op": "DUP3"
    },
    "7605": {
      "op": "ADD"
    },
    "7606": {
      "op": "MSTORE"
    },
    "7607": {
      "op": "PUSH32",
      "value": "0x43727573682050657220426C6F636B2063616E206E6F74206265206D6F726520"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7642": {
      "op": "DUP3"
    },
    "7643": {
      "op": "ADD"
    },
    "7644": {
      "op": "MSTORE"
    },
    "7645": {
      "op": "PUSH7",
      "value": "0x7468616E20313"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0xCC"
    },
    "7655": {
      "op": "SHL"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7658": {
      "op": "DUP3"
    },
    "7659": {
      "op": "ADD"
    },
    "7660": {
      "op": "MSTORE"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7663": {
      "op": "ADD"
    },
    "7664": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "7667": {
      "op": "JUMP"
    },
    "7668": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6235,
        6351
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7669": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6361,
        6374
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 127,
      "value": "0x12"
    },
    "7671": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "offset": [
        6361,
        6384
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7672": {
      "fn": "BitcrushStaking.setCrushPerBlock",
      "jump": "o",
      "offset": [
        6095,
        6391
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7673": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4761,
        5497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7674": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4828,
        4843
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x14"
    },
    "7676": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4828,
        4843
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7677": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4812,
        4824
      ],
      "op": "NUMBER",
      "path": "17"
    },
    "7678": {
      "branch": 231,
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4812,
        4843
      ],
      "op": "GT",
      "path": "17"
    },
    "7679": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4808,
        4852
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E04"
    },
    "7682": {
      "branch": 231,
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4808,
        4852
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7683": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "o",
      "offset": [
        4761,
        5497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7684": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4808,
        4852
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7685": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4865,
        4876
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "7687": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4865,
        4876
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7688": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4861,
        4958
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E11"
    },
    "7691": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4861,
        4958
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7692": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4915,
        4927
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 128
    },
    "7693": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4897,
        4912
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x14"
    },
    "7695": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4897,
        4927
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7696": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "o",
      "offset": [
        4761,
        5497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7697": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4861,
        4958
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7698": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4992,
        5005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x12"
    },
    "7700": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        4992,
        5005
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7701": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5019,
        5030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "7703": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5019,
        5030
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7704": {
      "branch": 232,
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5019,
        5034
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7705": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5015,
        5155
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E46"
    },
    "7708": {
      "branch": 232,
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5015,
        5155
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7709": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5065,
        5155
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 129,
      "value": "0x1E43"
    },
    "7712": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5141
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E3C"
    },
    "7715": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "7718": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5128
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "7721": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5119,
        5127
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x9"
    },
    "7723": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5119,
        5127
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7724": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5114
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x12"
    },
    "7726": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5114
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7727": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5118
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "7730": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5118
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7731": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5128
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7732": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5128
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7733": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5128
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "7738": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5128
      ],
      "op": "AND",
      "path": "17"
    },
    "7739": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "i",
      "offset": [
        5101,
        5128
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7740": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5101,
        5141
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7741": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5065,
        5079
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7742": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5065,
        5079
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7743": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5065,
        5083
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "7746": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "i",
      "offset": [
        5065,
        5155
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7747": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5065,
        5155
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7748": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5048,
        5155
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7749": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5048,
        5155
      ],
      "op": "POP",
      "path": "17"
    },
    "7750": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5015,
        5155
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7751": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5169,
        5178
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "7753": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5169,
        5178
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7754": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5165,
        5203
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E51"
    },
    "7757": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5165,
        5203
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7758": {
      "op": "POP"
    },
    "7759": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5202,
        5203
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 130,
      "value": "0x0"
    },
    "7761": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5165,
        5203
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7762": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5213,
        5236
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7764": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5272
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E68"
    },
    "7767": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5256,
        5271
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x14"
    },
    "7769": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5256,
        5271
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7770": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5251
      ],
      "op": "NUMBER",
      "path": "17"
    },
    "7771": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5255
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "7774": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5255
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7775": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5272
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7776": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5272
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7777": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5272
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "7782": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5272
      ],
      "op": "AND",
      "path": "17"
    },
    "7783": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "i",
      "offset": [
        5239,
        5272
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7784": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5239,
        5272
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7785": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5213,
        5272
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7786": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5213,
        5272
      ],
      "op": "POP",
      "path": "17"
    },
    "7787": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7789": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5387
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E94"
    },
    "7792": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5366,
        5377
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "7794": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5366,
        5377
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7795": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5348
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "7798": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5343,
        5347
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "7804": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5338
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E8E"
    },
    "7807": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5323,
        5337
      ],
      "op": "DUP8",
      "path": "17"
    },
    "7808": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5318
      ],
      "op": "DUP8",
      "path": "17"
    },
    "7809": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5322
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "7812": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5322
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7813": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5338
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7814": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5338
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7815": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5338
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "7820": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5338
      ],
      "op": "AND",
      "path": "17"
    },
    "7821": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "i",
      "offset": [
        5303,
        5338
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7822": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5338
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7823": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5342
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7824": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5342
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "7827": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "i",
      "offset": [
        5303,
        5348
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7828": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5303,
        5387
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7829": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5417,
        5434
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 131,
      "value": "0x13"
    },
    "7831": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5417,
        5434
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7832": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5282,
        5387
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7833": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5282,
        5387
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7834": {
      "op": "POP"
    },
    "7835": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5417,
        5450
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1EA4"
    },
    "7838": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5417,
        5450
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7839": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5282,
        5387
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7840": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5417,
        5438
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "7843": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "i",
      "offset": [
        5417,
        5450
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7844": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5417,
        5450
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7845": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5397,
        5414
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x13"
    },
    "7847": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5397,
        5450
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7848": {
      "op": "POP"
    },
    "7849": {
      "op": "POP"
    },
    "7850": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5478,
        5490
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 132
    },
    "7851": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5460,
        5475
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x14"
    },
    "7853": {
      "fn": "BitcrushStaking.updateDistribution",
      "offset": [
        5460,
        5490
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "7854": {
      "op": "POP"
    },
    "7855": {
      "fn": "BitcrushStaking.updateDistribution",
      "jump": "o",
      "offset": [
        4761,
        5497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7856": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3372,
        3591
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7857": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7859": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7866": {
      "op": "SHL"
    },
    "7867": {
      "op": "SUB"
    },
    "7868": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7869": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7870": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7871": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EDA"
    },
    "7874": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7875": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7877": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7884": {
      "op": "SHL"
    },
    "7885": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7886": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7887": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "7893": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7894": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "7897": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7898": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7899": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3477,
        3485
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 133,
      "value": "0xB"
    },
    "7901": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3477,
        3485
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7908": {
      "op": "SHL"
    },
    "7909": {
      "op": "SUB"
    },
    "7910": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3477,
        3485
      ],
      "op": "AND",
      "path": "17"
    },
    "7911": {
      "branch": 233,
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3469,
        3500
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7912": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F33"
    },
    "7915": {
      "branch": 233,
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7916": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7918": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7925": {
      "op": "SHL"
    },
    "7926": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7927": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7930": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7932": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7933": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "ADD",
      "path": "17"
    },
    "7934": {
      "op": "MSTORE"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7939": {
      "op": "DUP3"
    },
    "7940": {
      "op": "ADD"
    },
    "7941": {
      "op": "MSTORE"
    },
    "7942": {
      "op": "PUSH32",
      "value": "0x42616E6B726F6C6C206164647265737320616C72656164792073657400000000"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7977": {
      "op": "DUP3"
    },
    "7978": {
      "op": "ADD"
    },
    "7979": {
      "op": "MSTORE"
    },
    "7980": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7982": {
      "op": "ADD"
    },
    "7983": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "7986": {
      "op": "JUMP"
    },
    "7987": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3448,
        3554
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7988": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3572
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 134,
      "value": "0xB"
    },
    "7990": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7991": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7998": {
      "op": "SHL"
    },
    "7999": {
      "op": "SUB"
    },
    "8000": {
      "op": "NOT"
    },
    "8001": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "AND",
      "path": "17"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8008": {
      "op": "SHL"
    },
    "8009": {
      "op": "SUB"
    },
    "8010": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "8011": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8012": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "8013": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "AND",
      "path": "17"
    },
    "8014": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8015": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8016": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8017": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "OR",
      "path": "17"
    },
    "8018": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8019": {
      "fn": "BitcrushStaking.setBankroll",
      "offset": [
        3564,
        3584
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8020": {
      "fn": "BitcrushStaking.setBankroll",
      "jump": "o",
      "offset": [
        3372,
        3591
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8021": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20766,
        20985
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8022": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8024": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8031": {
      "op": "SHL"
    },
    "8032": {
      "op": "SUB"
    },
    "8033": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8034": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8035": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8036": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7F"
    },
    "8039": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8042": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8049": {
      "op": "SHL"
    },
    "8050": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8054": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "8058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8059": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "8062": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8064": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20851,
        20852
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 135,
      "value": "0x0"
    },
    "8066": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20844,
        20848
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8067": {
      "branch": 234,
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20844,
        20852
      ],
      "op": "GT",
      "path": "17"
    },
    "8068": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F9F"
    },
    "8071": {
      "branch": 234,
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8072": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8074": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8081": {
      "op": "SHL"
    },
    "8082": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8083": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8084": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8086": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "ADD",
      "path": "17"
    },
    "8087": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "8090": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8091": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2B81"
    },
    "8094": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        20836,
        20883
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8095": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20836,
        20883
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8096": {
      "offset": [
        618,
        622
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E8"
    },
    "8099": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20901,
        20905
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 136
    },
    "8100": {
      "branch": 235,
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20901,
        20915
      ],
      "op": "LT",
      "path": "17"
    },
    "8101": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FC0"
    },
    "8104": {
      "branch": 235,
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8105": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8107": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8114": {
      "op": "SHL"
    },
    "8115": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8116": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8117": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8119": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "ADD",
      "path": "17"
    },
    "8120": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "8123": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8124": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BB8"
    },
    "8127": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "jump": "i",
      "offset": [
        20893,
        20945
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8128": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20893,
        20945
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8129": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20955,
        20971
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 137,
      "value": "0x3"
    },
    "8131": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "offset": [
        20955,
        20978
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8132": {
      "fn": "BitcrushStaking.setEarlyWithdrawFee",
      "jump": "o",
      "offset": [
        20766,
        20985
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8133": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20403,
        20626
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8134": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8136": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8143": {
      "op": "SHL"
    },
    "8144": {
      "op": "SUB"
    },
    "8145": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8146": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8147": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8148": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FEF"
    },
    "8151": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8152": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8154": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8161": {
      "op": "SHL"
    },
    "8162": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8163": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8164": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8166": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8167": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "8170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8171": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "8174": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8175": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8176": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20490,
        20491
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 138,
      "value": "0x0"
    },
    "8178": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20483,
        20487
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8179": {
      "branch": 236,
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20483,
        20491
      ],
      "op": "GT",
      "path": "17"
    },
    "8180": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x200F"
    },
    "8183": {
      "branch": 236,
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8184": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8186": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8193": {
      "op": "SHL"
    },
    "8194": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8195": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8196": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8198": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "ADD",
      "path": "17"
    },
    "8199": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "8202": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8203": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2B81"
    },
    "8206": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "jump": "i",
      "offset": [
        20475,
        20522
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8207": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20475,
        20522
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8208": {
      "offset": [
        618,
        622
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E8"
    },
    "8211": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20540,
        20544
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 139
    },
    "8212": {
      "branch": 237,
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20540,
        20554
      ],
      "op": "LT",
      "path": "17"
    },
    "8213": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2030"
    },
    "8216": {
      "branch": 237,
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8217": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8219": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8226": {
      "op": "SHL"
    },
    "8227": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8228": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8229": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8231": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "ADD",
      "path": "17"
    },
    "8232": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "8235": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8236": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BB8"
    },
    "8239": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "jump": "i",
      "offset": [
        20532,
        20584
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8240": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20532,
        20584
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8241": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20594,
        20612
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 140,
      "value": "0x2"
    },
    "8243": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "offset": [
        20594,
        20619
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8244": {
      "fn": "BitcrushStaking.setPerformanceFeeBurn",
      "jump": "o",
      "offset": [
        20403,
        20626
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8245": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22172,
        24949
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8246": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22218,
        22238
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 141,
      "value": "0x203D"
    },
    "8249": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22218,
        22236
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF9"
    },
    "8252": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        22218,
        22238
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8253": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22218,
        22238
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8254": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22285,
        22295
      ],
      "op": "CALLER",
      "path": "17"
    },
    "8255": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22249,
        22273
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8257": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8258": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8259": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8260": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22284
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "8262": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "8264": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8265": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8267": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8268": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22276,
        22296
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "8269": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22333,
        22345
      ],
      "op": "NUMBER",
      "path": "17",
      "statement": 142
    },
    "8270": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22306,
        22330
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "8272": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22306,
        22330
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8273": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22306,
        22330
      ],
      "op": "ADD",
      "path": "17"
    },
    "8274": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22306,
        22345
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8275": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22382,
        22399
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "8277": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22382,
        22399
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8278": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22382,
        22399
      ],
      "op": "ADD",
      "path": "17"
    },
    "8279": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22382,
        22399
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8280": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22413,
        22424
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "8282": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22413,
        22424
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8283": {
      "branch": 238,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22413,
        22428
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8284": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22409,
        22666
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2088"
    },
    "8287": {
      "branch": 238,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22409,
        22666
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8288": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22462,
        22564
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 143,
      "value": "0x2081"
    },
    "8291": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22550
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD85"
    },
    "8294": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22538,
        22549
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "8296": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22538,
        22549
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8297": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22533
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "8300": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22515,
        22519
      ],
      "op": "DUP6",
      "path": "17"
    },
    "8301": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22515,
        22532
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "8303": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22515,
        22532
      ],
      "op": "ADD",
      "path": "17"
    },
    "8304": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22515,
        22532
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8305": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22510
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "8307": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22510
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8308": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22514
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "8311": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22514
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8312": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22533
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8313": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22533
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8314": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22533
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "8319": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22499,
        22533
      ],
      "op": "AND",
      "path": "17"
    },
    "8320": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        22499,
        22533
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8321": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22462,
        22564
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8322": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22444,
        22564
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8323": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22444,
        22564
      ],
      "op": "POP",
      "path": "17"
    },
    "8324": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22409,
        22666
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x209A"
    },
    "8327": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22409,
        22666
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8328": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22409,
        22666
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8329": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22585,
        22608
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "8331": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22585,
        22608
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8332": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22585,
        22608
      ],
      "op": "ADD",
      "path": "17"
    },
    "8333": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22585,
        22608
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8334": {
      "branch": 239,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22585,
        22612
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8335": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22581,
        22666
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x209A"
    },
    "8338": {
      "branch": 239,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22581,
        22666
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8339": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22654,
        22655
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 144,
      "value": "0x0"
    },
    "8341": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22628,
        22651
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "8343": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22628,
        22651
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8344": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22628,
        22651
      ],
      "op": "ADD",
      "path": "17"
    },
    "8345": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22628,
        22655
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8346": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22581,
        22666
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8347": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22690,
        22701
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 145,
      "value": "0x17"
    },
    "8349": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22690,
        22701
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8350": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22690,
        22722
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20A7"
    },
    "8353": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22690,
        22722
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8354": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22706,
        22721
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8355": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22690,
        22705
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "8358": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        22690,
        22722
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8359": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22690,
        22722
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8360": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22676,
        22687
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "8362": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22676,
        22722
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8363": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22808,
        22825
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "8365": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22808,
        22825
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8366": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22808,
        22825
      ],
      "op": "ADD",
      "path": "17"
    },
    "8367": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22808,
        22825
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8368": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22778,
        22789
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8369": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22778,
        22789
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8370": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22733,
        22755
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8372": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22733,
        22755
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8373": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22758,
        22835
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20C3"
    },
    "8376": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22758,
        22835
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8377": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22758,
        22790
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "8380": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22758,
        22790
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8381": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22758,
        22773
      ],
      "op": "DUP6",
      "path": "17"
    },
    "8382": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22758,
        22773
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8383": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22758,
        22777
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "8386": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        22758,
        22790
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8387": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22758,
        22835
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8388": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22865,
        22882
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 146,
      "value": "0x1"
    },
    "8390": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22865,
        22882
      ],
      "op": "DUP5",
      "path": "17"
    },
    "8391": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22865,
        22882
      ],
      "op": "ADD",
      "path": "17"
    },
    "8392": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22865,
        22882
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8393": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22733,
        22835
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8394": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22733,
        22835
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8395": {
      "op": "POP"
    },
    "8396": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22865,
        22903
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20D5"
    },
    "8399": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22865,
        22903
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8400": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22887,
        22902
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8401": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22865,
        22886
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "8404": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        22865,
        22903
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8405": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22865,
        22903
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8406": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22845,
        22862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "8408": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22845,
        22862
      ],
      "op": "DUP5",
      "path": "17"
    },
    "8409": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22845,
        22862
      ],
      "op": "ADD",
      "path": "17"
    },
    "8410": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22845,
        22903
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8411": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22927,
        22938
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 147
    },
    "8412": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22927,
        22938
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8413": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22927,
        22958
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20E6"
    },
    "8416": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22927,
        22958
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8417": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22943,
        22957
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8418": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22927,
        22942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "8421": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        22927,
        22958
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8422": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22927,
        22958
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8423": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22913,
        22958
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8424": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22913,
        22958
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8425": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22982,
        22993
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 148,
      "value": "0xA"
    },
    "8427": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22982,
        22993
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8428": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22982,
        23013
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20F5"
    },
    "8431": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22982,
        23013
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8432": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22998,
        23012
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8433": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22982,
        22997
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "8436": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        22982,
        23013
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8437": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22982,
        23013
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8438": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22968,
        22979
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "8440": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22968,
        23013
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8441": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23058,
        23075
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 149,
      "value": "0x13"
    },
    "8443": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23058,
        23075
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8444": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23042,
        23053
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8445": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23042,
        23053
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8446": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23042,
        23086
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2111"
    },
    "8449": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23042,
        23086
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8450": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23081,
        23085
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "8456": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23081,
        23085
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8457": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23042,
        23076
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "8460": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23042,
        23076
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8461": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23042,
        23057
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "8464": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23042,
        23076
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8465": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23042,
        23086
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8466": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23023,
        23039
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "8468": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23023,
        23039
      ],
      "op": "DUP5",
      "path": "17"
    },
    "8469": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23023,
        23039
      ],
      "op": "ADD",
      "path": "17"
    },
    "8470": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23023,
        23086
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8471": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23134,
        23151
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 150,
      "value": "0x15"
    },
    "8473": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23134,
        23151
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8474": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23118,
        23129
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8475": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23118,
        23129
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8476": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23118,
        23162
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x212F"
    },
    "8479": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23118,
        23162
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8480": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23157,
        23161
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "8486": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23157,
        23161
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8487": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23118,
        23152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "8490": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23118,
        23152
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8491": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23118,
        23133
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "8494": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23118,
        23152
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8495": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23118,
        23162
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8496": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23096,
        23115
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "8498": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23096,
        23115
      ],
      "op": "DUP5",
      "path": "17"
    },
    "8499": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23096,
        23115
      ],
      "op": "ADD",
      "path": "17"
    },
    "8500": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23096,
        23162
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8501": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23177,
        23188
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "8503": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23177,
        23188
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8504": {
      "branch": 240,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23177,
        23192
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8505": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23173,
        24453
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x22BD"
    },
    "8508": {
      "branch": 240,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23173,
        24453
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8509": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23212,
        23235
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "8511": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23212,
        23235
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8512": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23212,
        23235
      ],
      "op": "ADD",
      "path": "17"
    },
    "8513": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23212,
        23235
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8514": {
      "branch": 241,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23212,
        23239
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8515": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23208,
        23476
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2175"
    },
    "8518": {
      "branch": 241,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23208,
        23476
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8519": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23356,
        23382
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 151,
      "value": "0x6"
    },
    "8521": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23356,
        23382
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8522": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23356,
        23382
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8523": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23328,
        23351
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8524": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23328,
        23351
      ],
      "op": "DUP5",
      "path": "17"
    },
    "8525": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23328,
        23351
      ],
      "op": "ADD",
      "path": "17"
    },
    "8526": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23328,
        23351
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8527": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23328,
        23383
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2157"
    },
    "8530": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23328,
        23383
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8531": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23328,
        23355
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "8534": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23328,
        23383
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8535": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23328,
        23383
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8536": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23286,
        23301
      ],
      "op": "TIMESTAMP",
      "path": "17"
    },
    "8537": {
      "branch": 242,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23286,
        23383
      ],
      "op": "GT",
      "path": "17"
    },
    "8538": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2175"
    },
    "8541": {
      "branch": 242,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8542": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8544": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8551": {
      "op": "SHL"
    },
    "8552": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8553": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8554": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8556": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "ADD",
      "path": "17"
    },
    "8557": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "8560": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8561": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C7B"
    },
    "8564": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23257,
        23476
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8565": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23257,
        23476
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8566": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23491,
        23512
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8568": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23605
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2192"
    },
    "8571": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "8574": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23575
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "8577": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23552,
        23574
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8579": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23552,
        23574
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8580": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23530
      ],
      "op": "DUP7",
      "path": "17"
    },
    "8581": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23551
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "8584": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8585": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23575
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8586": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23575
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8587": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23575
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "8592": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23575
      ],
      "op": "AND",
      "path": "17"
    },
    "8593": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23515,
        23575
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8594": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23515,
        23605
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8595": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23645,
        23660
      ],
      "op": "TIMESTAMP",
      "path": "17",
      "statement": 152
    },
    "8596": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23619,
        23642
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "8598": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23619,
        23642
      ],
      "op": "DUP7",
      "path": "17"
    },
    "8599": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23619,
        23642
      ],
      "op": "ADD",
      "path": "17"
    },
    "8600": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23619,
        23660
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8601": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23491,
        23605
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8602": {
      "op": "POP"
    },
    "8603": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23692,
        23726
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 153,
      "value": "0x21A4"
    },
    "8606": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23692,
        23707
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8607": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23491,
        23605
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8608": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23692,
        23711
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "8611": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23692,
        23726
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8612": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23692,
        23726
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8613": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23674,
        23726
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "8614": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23674,
        23726
      ],
      "op": "POP",
      "path": "17"
    },
    "8615": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23761,
        23772
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "8617": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23761,
        23772
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8618": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23745,
        23758
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8619": {
      "branch": 243,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23745,
        23772
      ],
      "op": "GT",
      "path": "17"
    },
    "8620": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23741,
        24001
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8621": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23741,
        24001
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x226C"
    },
    "8624": {
      "branch": 243,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23741,
        24001
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8625": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23792,
        23809
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8627": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23842
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x21C7"
    },
    "8630": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23830,
        23841
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "8632": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23830,
        23841
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8633": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23825
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8634": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23829
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "8637": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23829
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8638": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23842
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8639": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23842
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8640": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23842
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "8645": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23842
      ],
      "op": "AND",
      "path": "17"
    },
    "8646": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23812,
        23842
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8647": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23812,
        23842
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8648": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23882,
        23890
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 154,
      "value": "0xB"
    },
    "8650": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23882,
        23890
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8651": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8653": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8654": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8661": {
      "op": "SHL"
    },
    "8662": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8663": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8670": {
      "op": "SHL"
    },
    "8671": {
      "op": "SUB"
    },
    "8672": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23882,
        23890
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8673": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23882,
        23890
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8674": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23882,
        23890
      ],
      "op": "AND",
      "path": "17"
    },
    "8675": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8677": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8678": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "ADD",
      "path": "17"
    },
    "8679": {
      "op": "MSTORE"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8682": {
      "op": "DUP2"
    },
    "8683": {
      "op": "ADD"
    },
    "8684": {
      "op": "DUP4"
    },
    "8685": {
      "op": "SWAP1"
    },
    "8686": {
      "op": "MSTORE"
    },
    "8687": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23792,
        23842
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8688": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23792,
        23842
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "8689": {
      "op": "POP"
    },
    "8690": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23865
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "8723": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23873
      ],
      "op": "AND",
      "path": "17"
    },
    "8724": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23873
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8725": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23873
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x95EA7B3"
    },
    "8730": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23873
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8731": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8733": {
      "op": "ADD"
    },
    "8734": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "8736": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8738": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8739": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8740": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8741": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "SUB",
      "path": "17"
    },
    "8742": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8743": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8745": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP8",
      "path": "17"
    },
    "8746": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "GAS",
      "path": "17"
    },
    "8747": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "CALL",
      "path": "17"
    },
    "8748": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8749": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8750": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8751": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x223C"
    },
    "8754": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8755": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "8756": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8758": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8759": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "8760": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "8761": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8763": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "REVERT",
      "path": "17"
    },
    "8764": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8765": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "POP",
      "path": "17"
    },
    "8766": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "POP",
      "path": "17"
    },
    "8767": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "POP",
      "path": "17"
    },
    "8768": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "POP",
      "path": "17"
    },
    "8769": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8771": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8772": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "8773": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "8775": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "NOT",
      "path": "17"
    },
    "8776": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "8778": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8779": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "ADD",
      "path": "17"
    },
    "8780": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "AND",
      "path": "17"
    },
    "8781": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8782": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "ADD",
      "path": "17"
    },
    "8783": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8784": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8786": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8787": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "POP",
      "path": "17"
    },
    "8788": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8789": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "ADD",
      "path": "17"
    },
    "8790": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8791": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2260"
    },
    "8794": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8795": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8796": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2CCE"
    },
    "8799": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23860,
        23903
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8800": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23860,
        23903
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8801": {
      "op": "POP"
    },
    "8802": {
      "op": "POP"
    },
    "8803": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23935,
        23936
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 155,
      "value": "0x0"
    },
    "8805": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23921,
        23932
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "8807": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23921,
        23936
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8808": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23741,
        24001
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x227D"
    },
    "8811": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23741,
        24001
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8812": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23741,
        24001
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8813": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23971,
        23982
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 156,
      "value": "0x19"
    },
    "8815": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23971,
        23982
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8816": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23971,
        24001
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2279"
    },
    "8819": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23971,
        24001
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8820": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23987,
        24000
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8821": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23971,
        23986
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "8824": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        23971,
        24001
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8825": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23971,
        24001
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8826": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23957,
        23968
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "8828": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23957,
        24001
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "8829": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23741,
        24001
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8830": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24035,
        24049
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 157,
      "value": "0xD"
    },
    "8832": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24035,
        24049
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8833": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24016,
        24065
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x22B7"
    },
    "8836": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24016,
        24065
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8843": {
      "op": "SHL"
    },
    "8844": {
      "op": "SUB"
    },
    "8845": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24016,
        24021
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "8878": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24016,
        24034
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8879": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24016,
        24034
      ],
      "op": "AND",
      "path": "17"
    },
    "8880": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24016,
        24034
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8881": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24035,
        24049
      ],
      "op": "AND",
      "path": "17"
    },
    "8882": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24051,
        24064
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8883": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24016,
        24034
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "8886": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24016,
        24065
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8887": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24016,
        24065
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8888": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23194,
        24076
      ],
      "op": "POP",
      "path": "17"
    },
    "8889": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23173,
        24453
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x233D"
    },
    "8892": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23173,
        24453
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8893": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        23173,
        24453
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8894": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24139,
        24159
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "8896": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24139,
        24159
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8897": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24114,
        24134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8899": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24114,
        24134
      ],
      "op": "DUP5",
      "path": "17"
    },
    "8900": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24114,
        24134
      ],
      "op": "ADD",
      "path": "17"
    },
    "8901": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24114,
        24134
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8902": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24114,
        24160
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x22CE"
    },
    "8905": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24114,
        24160
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8906": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24114,
        24138
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "8909": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24114,
        24160
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8910": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24114,
        24160
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8911": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24099,
        24111
      ],
      "op": "NUMBER",
      "path": "17"
    },
    "8912": {
      "branch": 244,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24099,
        24160
      ],
      "op": "LT",
      "path": "17"
    },
    "8913": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24082,
        24453
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8914": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24082,
        24453
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x233D"
    },
    "8917": {
      "branch": 244,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24082,
        24453
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8918": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24209,
        24230
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8920": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24313
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x22F2"
    },
    "8923": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "8926": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24270
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "8929": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24253,
        24269
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "8931": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24253,
        24269
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8932": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24248
      ],
      "op": "DUP7",
      "path": "17"
    },
    "8933": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "8936": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24252
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8937": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24270
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "8938": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24270
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8939": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24270
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "8944": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24270
      ],
      "op": "AND",
      "path": "17"
    },
    "8945": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24233,
        24270
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8946": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24233,
        24313
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8947": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24209,
        24313
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8948": {
      "op": "POP"
    },
    "8949": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24345,
        24379
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 158,
      "value": "0x22FE"
    },
    "8952": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24345,
        24360
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8953": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24209,
        24313
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8954": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24345,
        24364
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "8957": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24345,
        24379
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8958": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24345,
        24379
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8959": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24412,
        24426
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 159,
      "value": "0xD"
    },
    "8961": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24412,
        24426
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8962": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24327,
        24379
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8963": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24327,
        24379
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "8964": {
      "op": "POP"
    },
    "8965": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24393,
        24442
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x233B"
    },
    "8968": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24393,
        24442
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8975": {
      "op": "SHL"
    },
    "8976": {
      "op": "SUB"
    },
    "8977": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24393,
        24398
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "9010": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24393,
        24411
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9011": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24393,
        24411
      ],
      "op": "AND",
      "path": "17"
    },
    "9012": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24393,
        24411
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9013": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24412,
        24426
      ],
      "op": "AND",
      "path": "17"
    },
    "9014": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24428,
        24441
      ],
      "op": "DUP4",
      "path": "17"
    },
    "9015": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24393,
        24411
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "9018": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24393,
        24442
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9019": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24393,
        24442
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9020": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24171,
        24453
      ],
      "op": "POP",
      "path": "17"
    },
    "9021": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24082,
        24453
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9022": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24463,
        24510
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 160,
      "value": "0x2371"
    },
    "9025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9031": {
      "op": "SHL"
    },
    "9032": {
      "op": "SUB"
    },
    "9033": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24463,
        24468
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "9066": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24463,
        24481
      ],
      "op": "AND",
      "path": "17"
    },
    "9067": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24482,
        24492
      ],
      "op": "CALLER",
      "path": "17"
    },
    "9068": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24494,
        24509
      ],
      "op": "DUP5",
      "path": "17"
    },
    "9069": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24463,
        24481
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x27A9"
    },
    "9072": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24463,
        24510
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9073": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24463,
        24510
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9074": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24561,
        24578
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "9076": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24561,
        24578
      ],
      "op": "DUP4",
      "path": "17"
    },
    "9077": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24561,
        24578
      ],
      "op": "ADD",
      "path": "17"
    },
    "9078": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24561,
        24578
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9079": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24557,
        24900
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2462"
    },
    "9082": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24557,
        24900
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9083": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24617,
        24631
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "9085": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24617,
        24638
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9086": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24617,
        24642
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2389"
    },
    "9089": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24617,
        24642
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9090": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24641,
        24642
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "9092": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24641,
        24642
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9093": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24617,
        24642
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C64"
    },
    "9096": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24617,
        24642
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9097": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24617,
        24642
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9098": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24603,
        24607
      ],
      "op": "DUP4",
      "path": "17"
    },
    "9099": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24603,
        24613
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "9101": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24603,
        24613
      ],
      "op": "ADD",
      "path": "17"
    },
    "9102": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24603,
        24613
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9103": {
      "branch": 245,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24603,
        24642
      ],
      "op": "EQ",
      "path": "17"
    },
    "9104": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24599,
        24856
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x242E"
    },
    "9107": {
      "branch": 245,
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24599,
        24856
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9108": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24698
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "9110": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24699,
        24720
      ],
      "op": "DUP1",
      "path": "17"
    },
    "9111": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24699,
        24720
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9112": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24662,
        24681
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9114": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24662,
        24681
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9115": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24698
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9116": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24699,
        24724
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23A7"
    },
    "9119": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24699,
        24724
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9120": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24723,
        24724
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "9122": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24723,
        24724
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9123": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24699,
        24724
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C64"
    },
    "9126": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24699,
        24724
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9127": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24699,
        24724
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9128": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9129": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9130": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9131": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "LT",
      "path": "17"
    },
    "9132": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23B7"
    },
    "9135": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9136": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23B7"
    },
    "9139": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2CEB"
    },
    "9142": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24684,
        24725
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9143": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9144": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9145": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9147": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9148": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "9150": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9152": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "9153": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "ADD",
      "path": "17"
    },
    "9154": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9156": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9157": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9158": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9159": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "9162": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "EXP",
      "path": "17"
    },
    "9163": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9164": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "DIV",
      "path": "17"
    },
    "9165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9171": {
      "op": "SHL"
    },
    "9172": {
      "op": "SUB"
    },
    "9173": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24684,
        24725
      ],
      "op": "AND",
      "path": "17"
    },
    "9174": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24662,
        24725
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9175": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24662,
        24725
      ],
      "op": "POP",
      "path": "17"
    },
    "9176": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24772,
        24783
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 161
    },
    "9177": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24757
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xF"
    },
    "9179": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24758,
        24762
      ],
      "op": "DUP6",
      "path": "17"
    },
    "9180": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24758,
        24768
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "9182": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24758,
        24768
      ],
      "op": "ADD",
      "path": "17"
    },
    "9183": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24758,
        24768
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9184": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9185": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9186": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9187": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "LT",
      "path": "17"
    },
    "9188": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23EF"
    },
    "9191": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9192": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23EF"
    },
    "9195": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2CEB"
    },
    "9198": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24743,
        24769
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9199": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9200": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9202": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9203": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "DUP3",
      "path": "17"
    },
    "9204": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9205": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "9207": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "DUP1",
      "path": "17"
    },
    "9208": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "DUP4",
      "path": "17"
    },
    "9209": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "9210": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9211": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9212": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9213": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24769
      ],
      "op": "ADD",
      "path": "17"
    },
    "9214": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "DUP1",
      "path": "17"
    },
    "9215": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9222": {
      "op": "SHL"
    },
    "9223": {
      "op": "SUB"
    },
    "9224": {
      "op": "NOT"
    },
    "9225": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "AND",
      "path": "17"
    },
    "9226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9232": {
      "op": "SHL"
    },
    "9233": {
      "op": "SUB"
    },
    "9234": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "9235": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "DUP6",
      "path": "17"
    },
    "9236": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "AND",
      "path": "17"
    },
    "9237": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "OR",
      "path": "17"
    },
    "9238": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9239": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24743,
        24783
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "9240": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24831,
        24841
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 162,
      "value": "0x5"
    },
    "9242": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24831,
        24841
      ],
      "op": "DUP8",
      "path": "17"
    },
    "9243": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24831,
        24841
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9244": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24831,
        24841
      ],
      "op": "ADD",
      "path": "17"
    },
    "9245": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24831,
        24841
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9246": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "9247": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9248": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "9249": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "AND",
      "path": "17"
    },
    "9250": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "DUP3",
      "path": "17"
    },
    "9251": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9252": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24809
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "9254": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9255": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9256": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "9258": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9259": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24822
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "9260": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24828
      ],
      "op": "ADD",
      "path": "17"
    },
    "9261": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24801,
        24841
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "9262": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24599,
        24856
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9263": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24883
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 163,
      "value": "0xF"
    },
    "9265": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "DUP1",
      "path": "17"
    },
    "9266": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9267": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "DUP1",
      "path": "17"
    },
    "9268": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243F"
    },
    "9271": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9272": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243F"
    },
    "9275": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2D01"
    },
    "9278": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "i",
      "offset": [
        24869,
        24889
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9279": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9280": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9282": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "DUP3",
      "path": "17"
    },
    "9283": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9284": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9285": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "9287": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9288": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "9289": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9290": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "ADD",
      "path": "17"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9293": {
      "op": "NOT"
    },
    "9294": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9295": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9296": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "ADD",
      "path": "17"
    },
    "9297": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "DUP1",
      "path": "17"
    },
    "9298": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9305": {
      "op": "SHL"
    },
    "9306": {
      "op": "SUB"
    },
    "9307": {
      "op": "NOT"
    },
    "9308": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "AND",
      "path": "17"
    },
    "9309": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9310": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "9311": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "ADD",
      "path": "17"
    },
    "9312": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9313": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24869,
        24889
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "9314": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24557,
        24900
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9315": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24932,
        24941
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 164,
      "value": "0x16"
    },
    "9317": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24932,
        24941
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9318": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24914,
        24942
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "9320": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24914,
        24942
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "9321": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24914,
        24942
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x1EF37AB665F7C977B577275D7A49E72CD18D1143ECCD1112F1198E4A39D1428C"
    },
    "9354": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24914,
        24942
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9355": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24914,
        24942
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9357": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24914,
        24942
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9358": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        24914,
        24942
      ],
      "op": "LOG2",
      "path": "17"
    },
    "9359": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22208,
        24949
      ],
      "op": "POP",
      "path": "17"
    },
    "9360": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22208,
        24949
      ],
      "op": "POP",
      "path": "17"
    },
    "9361": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "offset": [
        22208,
        24949
      ],
      "op": "POP",
      "path": "17"
    },
    "9362": {
      "fn": "BitcrushStaking.emergencyWithdraw",
      "jump": "o",
      "offset": [
        22172,
        24949
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9363": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9364": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19292,
        19300
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 165,
      "value": "0xB"
    },
    "9366": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19292,
        19300
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9373": {
      "op": "SHL"
    },
    "9374": {
      "op": "SUB"
    },
    "9375": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19292,
        19300
      ],
      "op": "AND",
      "path": "17"
    },
    "9376": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19270,
        19280
      ],
      "op": "CALLER",
      "path": "17"
    },
    "9377": {
      "branch": 246,
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19270,
        19301
      ],
      "op": "EQ",
      "path": "17"
    },
    "9378": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x24ED"
    },
    "9381": {
      "branch": 246,
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9382": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "9384": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "9385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9391": {
      "op": "SHL"
    },
    "9392": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9393": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9396": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "9398": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "DUP3",
      "path": "17"
    },
    "9399": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "ADD",
      "path": "17"
    },
    "9400": {
      "op": "MSTORE"
    },
    "9401": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9405": {
      "op": "DUP3"
    },
    "9406": {
      "op": "ADD"
    },
    "9407": {
      "op": "MSTORE"
    },
    "9408": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652062616E6B726F6C6C000000000000000000"
    },
    "9441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9443": {
      "op": "DUP3"
    },
    "9444": {
      "op": "ADD"
    },
    "9445": {
      "op": "MSTORE"
    },
    "9446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9448": {
      "op": "ADD"
    },
    "9449": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "9452": {
      "op": "JUMP"
    },
    "9453": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19262,
        19329
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9454": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19371,
        19382
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 166,
      "value": "0x19"
    },
    "9456": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19371,
        19382
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9457": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19360,
        19367
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9458": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19360,
        19382
      ],
      "op": "GT",
      "path": "17"
    },
    "9459": {
      "branch": 247,
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19360,
        19382
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "9460": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2565"
    },
    "9463": {
      "branch": 247,
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9464": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "9466": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "9467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9473": {
      "op": "SHL"
    },
    "9474": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9475": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9478": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "9480": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "DUP3",
      "path": "17"
    },
    "9481": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "ADD",
      "path": "17"
    },
    "9482": {
      "op": "MSTORE"
    },
    "9483": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9487": {
      "op": "DUP3"
    },
    "9488": {
      "op": "ADD"
    },
    "9489": {
      "op": "MSTORE"
    },
    "9490": {
      "op": "PUSH32",
      "value": "0x756E667265657A6520616D6F756E742063616E74206265206772656174657220"
    },
    "9523": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9525": {
      "op": "DUP3"
    },
    "9526": {
      "op": "ADD"
    },
    "9527": {
      "op": "MSTORE"
    },
    "9528": {
      "op": "PUSH32",
      "value": "0x7468616E2063757272656E746C792066726F7A656E20616D6F756E7400000000"
    },
    "9561": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9563": {
      "op": "DUP3"
    },
    "9564": {
      "op": "ADD"
    },
    "9565": {
      "op": "MSTORE"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9568": {
      "op": "ADD"
    },
    "9569": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76F"
    },
    "9572": {
      "op": "JUMP"
    },
    "9573": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19339,
        19468
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9574": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19492,
        19503
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 167,
      "value": "0x19"
    },
    "9576": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19492,
        19503
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9577": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19492,
        19516
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2572"
    },
    "9580": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19492,
        19516
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9581": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19508,
        19515
      ],
      "op": "DUP3",
      "path": "17"
    },
    "9582": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19492,
        19507
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "9585": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "jump": "i",
      "offset": [
        19492,
        19516
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9586": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19492,
        19516
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9587": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19478,
        19489
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "9589": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19478,
        19516
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "9590": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19526,
        19546
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 168,
      "value": "0x257D"
    },
    "9593": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19526,
        19544
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF9"
    },
    "9596": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "jump": "i",
      "offset": [
        19526,
        19546
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9597": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19526,
        19546
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9598": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19556,
        19571
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 169,
      "value": "0x2585"
    },
    "9601": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19556,
        19569
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13E4"
    },
    "9604": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "jump": "i",
      "offset": [
        19556,
        19571
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9605": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19556,
        19571
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9606": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "offset": [
        19203,
        19578
      ],
      "op": "POP",
      "path": "17"
    },
    "9607": {
      "fn": "BitcrushStaking.unfreezeStaking",
      "jump": "o",
      "offset": [
        19203,
        19578
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9608": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9609": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9611": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9618": {
      "op": "SHL"
    },
    "9619": {
      "op": "SUB"
    },
    "9620": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9621": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9622": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9623": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B2"
    },
    "9626": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9627": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9629": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9636": {
      "op": "SHL"
    },
    "9637": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9638": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9641": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9642": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "9645": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4C"
    },
    "9649": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9657": {
      "op": "SHL"
    },
    "9658": {
      "op": "SUB"
    },
    "9659": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 170
    },
    "9660": {
      "branch": 254,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "9661": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2617"
    },
    "9664": {
      "branch": 254,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9665": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9667": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9674": {
      "op": "SHL"
    },
    "9675": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9676": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9679": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "9683": {
      "op": "MSTORE"
    },
    "9684": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9688": {
      "op": "DUP3"
    },
    "9689": {
      "op": "ADD"
    },
    "9690": {
      "op": "MSTORE"
    },
    "9691": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9726": {
      "op": "DUP3"
    },
    "9727": {
      "op": "ADD"
    },
    "9728": {
      "op": "MSTORE"
    },
    "9729": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9736": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9738": {
      "op": "SHL"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9741": {
      "op": "DUP3"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9746": {
      "op": "ADD"
    },
    "9747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "9750": {
      "op": "JUMP"
    },
    "9751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 171,
      "value": "0x2585"
    },
    "9755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27DE"
    },
    "9759": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9760": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9767": {
      "op": "SHL"
    },
    "9768": {
      "op": "SUB"
    },
    "9769": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9770": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "AND",
      "path": "17"
    },
    "9771": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13045,
        13052
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9773": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9774": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9775": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9776": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13099
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE"
    },
    "9778": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "9780": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "9781": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "9783": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "DUP2",
      "path": "17"
    },
    "9784": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13091,
        13109
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "9785": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13144,
        13157
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x12"
    },
    "9787": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13144,
        13157
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9788": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13171,
        13182
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x19"
    },
    "9790": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13171,
        13182
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9791": {
      "branch": 248,
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13171,
        13186
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "9792": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13167,
        13307
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2666"
    },
    "9795": {
      "branch": 248,
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13167,
        13307
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9796": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13217,
        13307
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 172,
      "value": "0x2663"
    },
    "9799": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13293
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E3C"
    },
    "9802": {
      "offset": [
        832,
        837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2710"
    },
    "9805": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13280
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "9808": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13271,
        13279
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x9"
    },
    "9810": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13271,
        13279
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9811": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13266
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x12"
    },
    "9813": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13266
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9814": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13270
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "9817": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13270
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9818": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13280
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9819": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13280
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9820": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13280
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "9825": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13253,
        13280
      ],
      "op": "AND",
      "path": "17"
    },
    "9826": {
      "fn": "BitcrushStaking.pendingReward",
      "jump": "i",
      "offset": [
        13253,
        13280
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9827": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13217,
        13307
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9828": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13200,
        13307
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9829": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13200,
        13307
      ],
      "op": "POP",
      "path": "17"
    },
    "9830": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13167,
        13307
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9831": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13321,
        13330
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x16"
    },
    "9833": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13321,
        13330
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9834": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13317,
        13355
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2671"
    },
    "9837": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13317,
        13355
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9838": {
      "op": "POP"
    },
    "9839": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13354,
        13355
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 173,
      "value": "0x0"
    },
    "9841": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13317,
        13355
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9842": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13398,
        13415
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x13"
    },
    "9844": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13398,
        13415
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9845": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13444,
        13459
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x14"
    },
    "9847": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13444,
        13459
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9848": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13429,
        13441
      ],
      "op": "NUMBER",
      "path": "17"
    },
    "9849": {
      "branch": 249,
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13429,
        13459
      ],
      "op": "GT",
      "path": "17"
    },
    "9850": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13429,
        13479
      ],
      "op": "DUP1",
      "path": "17"
    },
    "9851": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13429,
        13479
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "9852": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13429,
        13479
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2686"
    },
    "9855": {
      "branch": 249,
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13429,
        13479
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9856": {
      "op": "POP"
    },
    "9857": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13463,
        13474
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "9859": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13463,
        13474
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9860": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13463,
        13479
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "9861": {
      "branch": 250,
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13463,
        13479
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "9862": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13429,
        13479
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9863": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13425,
        13785
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "9864": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13425,
        13785
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26DD"
    },
    "9867": {
      "branch": 250,
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13425,
        13785
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "9868": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13495,
        13518
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9870": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13554
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26A2"
    },
    "9873": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13538,
        13553
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x14"
    },
    "9875": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13538,
        13553
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9876": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13533
      ],
      "op": "NUMBER",
      "path": "17"
    },
    "9877": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13537
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2726"
    },
    "9880": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13537
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9881": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13554
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9882": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13554
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9883": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13554
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "9888": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13554
      ],
      "op": "AND",
      "path": "17"
    },
    "9889": {
      "fn": "BitcrushStaking.pendingReward",
      "jump": "i",
      "offset": [
        13521,
        13554
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9890": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13521,
        13554
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9891": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13495,
        13554
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9892": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13495,
        13554
      ],
      "op": "POP",
      "path": "17"
    },
    "9893": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13568,
        13586
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9895": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13702
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26C8"
    },
    "9898": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13690,
        13701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "9900": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13690,
        13701
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9901": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13668
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "9904": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13663,
        13667
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "9910": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13641
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E8E"
    },
    "9913": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13626,
        13640
      ],
      "op": "DUP9",
      "path": "17"
    },
    "9914": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13604
      ],
      "op": "DUP8",
      "path": "17"
    },
    "9915": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13625
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "9918": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9919": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13641
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9920": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13641
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9921": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13641
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "9926": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13641
      ],
      "op": "AND",
      "path": "17"
    },
    "9927": {
      "fn": "BitcrushStaking.pendingReward",
      "jump": "i",
      "offset": [
        13589,
        13641
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9928": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13589,
        13702
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9929": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13741,
        13758
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 174,
      "value": "0x13"
    },
    "9931": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13741,
        13758
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9932": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13568,
        13702
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9933": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13568,
        13702
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9934": {
      "op": "POP"
    },
    "9935": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13741,
        13774
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26D8"
    },
    "9938": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13741,
        13774
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9939": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13568,
        13702
      ],
      "op": "DUP3",
      "path": "17"
    },
    "9940": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13741,
        13762
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2732"
    },
    "9943": {
      "fn": "BitcrushStaking.pendingReward",
      "jump": "i",
      "offset": [
        13741,
        13774
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9944": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13741,
        13774
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9945": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13716,
        13774
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "9946": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13716,
        13774
      ],
      "op": "POP",
      "path": "17"
    },
    "9947": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13481,
        13785
      ],
      "op": "POP",
      "path": "17"
    },
    "9948": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13481,
        13785
      ],
      "op": "POP",
      "path": "17"
    },
    "9949": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13425,
        13785
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9950": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13914
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 175,
      "value": "0x2705"
    },
    "9953": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13884,
        13888
      ],
      "op": "DUP4",
      "path": "17"
    },
    "9954": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13884,
        13900
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "9956": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13884,
        13900
      ],
      "op": "ADD",
      "path": "17"
    },
    "9957": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13884,
        13900
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9958": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x800"
    },
    "9961": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13857,
        13861
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0xE8D4A51000"
    },
    "9967": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13852
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7FA"
    },
    "9970": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13829,
        13851
      ],
      "op": "DUP6",
      "path": "17"
    },
    "9971": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13817
      ],
      "op": "DUP9",
      "path": "17"
    },
    "9972": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13824
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "9974": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13824
      ],
      "op": "ADD",
      "path": "17"
    },
    "9975": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13824
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9976": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13828
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x270E"
    },
    "9979": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13828
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9980": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13852
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "9981": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13852
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "9982": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13852
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "9987": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13852
      ],
      "op": "AND",
      "path": "17"
    },
    "9988": {
      "fn": "BitcrushStaking.pendingReward",
      "jump": "i",
      "offset": [
        13813,
        13852
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9989": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13813,
        13914
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "9990": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        13794,
        13914
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "9991": {
      "fn": "BitcrushStaking.pendingReward",
      "offset": [
        12981,
        13921
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "9992": {
      "op": "POP"
    },
    "9993": {
      "op": "POP"
    },
    "9994": {
      "op": "POP"
    },
    "9995": {
      "op": "POP"
    },
    "9996": {
      "op": "POP"
    },
    "9997": {
      "fn": "BitcrushStaking.pendingReward",
      "jump": "o",
      "offset": [
        12981,
        13921
      ],
      "op": "JUMP",
      "path": "17"
    },
    "9998": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9999": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10001": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 176,
      "value": "0x806"
    },
    "10004": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "16"
    },
    "10005": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "16"
    },
    "10006": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D32"
    },
    "10009": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10010": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10011": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10013": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 177,
      "value": "0x806"
    },
    "10016": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "16"
    },
    "10017": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "16"
    },
    "10018": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D51"
    },
    "10021": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10022": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10023": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10025": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 178,
      "value": "0x806"
    },
    "10028": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "16"
    },
    "10029": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "16"
    },
    "10030": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C64"
    },
    "10033": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10034": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10035": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10037": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 179,
      "value": "0x806"
    },
    "10040": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "16"
    },
    "10041": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "16"
    },
    "10042": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D73"
    },
    "10045": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10046": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10047": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 180,
      "value": "0x40"
    },
    "10049": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10056": {
      "op": "SHL"
    },
    "10057": {
      "op": "SUB"
    },
    "10058": {
      "op": "DUP1"
    },
    "10059": {
      "op": "DUP6"
    },
    "10060": {
      "op": "AND"
    },
    "10061": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "10063": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10064": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "10065": {
      "op": "MSTORE"
    },
    "10066": {
      "op": "DUP4"
    },
    "10067": {
      "op": "AND"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10070": {
      "op": "DUP3"
    },
    "10071": {
      "op": "ADD"
    },
    "10072": {
      "op": "MSTORE"
    },
    "10073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10075": {
      "op": "DUP2"
    },
    "10076": {
      "op": "ADD"
    },
    "10077": {
      "op": "DUP3"
    },
    "10078": {
      "op": "SWAP1"
    },
    "10079": {
      "op": "MSTORE"
    },
    "10080": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1867"
    },
    "10083": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10084": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10085": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10086": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10093": {
      "op": "SHL"
    },
    "10094": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10097": {
      "op": "ADD"
    },
    "10098": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10099": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10101": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10102": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10103": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10105": {
      "op": "NOT"
    },
    "10106": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10107": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10108": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "6"
    },
    "10109": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "10110": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10111": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10112": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10113": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10114": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10115": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10117": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10118": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "6"
    },
    "10119": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10120": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10127": {
      "op": "SHL"
    },
    "10128": {
      "op": "SUB"
    },
    "10129": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "6"
    },
    "10130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10134": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10136": {
      "op": "SHL"
    },
    "10137": {
      "op": "SUB"
    },
    "10138": {
      "op": "NOT"
    },
    "10139": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10140": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "10141": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "6"
    },
    "10142": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10143": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10144": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10145": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "6"
    },
    "10146": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10147": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10148": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10149": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x282E"
    },
    "10152": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10153": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10154": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 181,
      "value": "0x40"
    },
    "10156": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10163": {
      "op": "SHL"
    },
    "10164": {
      "op": "SUB"
    },
    "10165": {
      "op": "DUP4"
    },
    "10166": {
      "op": "AND"
    },
    "10167": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "10169": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10170": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "6"
    },
    "10171": {
      "op": "MSTORE"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10174": {
      "op": "DUP2"
    },
    "10175": {
      "op": "ADD"
    },
    "10176": {
      "op": "DUP3"
    },
    "10177": {
      "op": "SWAP1"
    },
    "10178": {
      "op": "MSTORE"
    },
    "10179": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D9"
    },
    "10182": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10183": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10184": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10185": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "10190": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10192": {
      "op": "SHL"
    },
    "10193": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10196": {
      "op": "ADD"
    },
    "10197": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2772"
    },
    "10200": {
      "op": "JUMP"
    },
    "10201": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10202": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "10203": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "10204": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "10205": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10206": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10207": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10209": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10210": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10217": {
      "op": "SHL"
    },
    "10218": {
      "op": "SUB"
    },
    "10219": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 182
    },
    "10220": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10221": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10228": {
      "op": "SHL"
    },
    "10229": {
      "op": "SUB"
    },
    "10230": {
      "op": "NOT"
    },
    "10231": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10232": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "10233": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10234": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "10235": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10236": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10237": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 183,
      "value": "0x40"
    },
    "10239": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10241": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10242": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10243": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "10244": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10245": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10246": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10247": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10280": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10281": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10282": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10283": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10284": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10285": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10286": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10287": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10289": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2883"
    },
    "10292": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10293": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10295": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10296": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10297": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10299": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "10300": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10302": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10303": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10304": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10306": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10307": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10308": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10310": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "10311": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "10344": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10345": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10346": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "6"
    },
    "10347": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10354": {
      "op": "SHL"
    },
    "10355": {
      "op": "SUB"
    },
    "10356": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "6"
    },
    "10357": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2900"
    },
    "10360": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10361": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10362": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10363": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10364": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "10369": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "6"
    },
    "10370": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10371": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10372": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10373": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10374": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10375": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10376": {
      "op": "POP"
    },
    "10377": {
      "branch": 255,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "10378": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D9"
    },
    "10381": {
      "branch": 255,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10382": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 184
    },
    "10383": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10384": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10386": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "10387": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10388": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10389": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10390": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "10391": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10392": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28A1"
    },
    "10395": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10396": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10397": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CCE"
    },
    "10400": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10401": {
      "branch": 256,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10402": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D9"
    },
    "10405": {
      "branch": 256,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10408": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10413": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10415": {
      "op": "SHL"
    },
    "10416": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10417": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10420": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10422": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10423": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "6"
    },
    "10424": {
      "op": "MSTORE"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10429": {
      "op": "DUP3"
    },
    "10430": {
      "op": "ADD"
    },
    "10431": {
      "op": "MSTORE"
    },
    "10432": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10467": {
      "op": "DUP3"
    },
    "10468": {
      "op": "ADD"
    },
    "10469": {
      "op": "MSTORE"
    },
    "10470": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "10481": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "10483": {
      "op": "SHL"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10486": {
      "op": "DUP3"
    },
    "10487": {
      "op": "ADD"
    },
    "10488": {
      "op": "MSTORE"
    },
    "10489": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10491": {
      "op": "ADD"
    },
    "10492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x76F"
    },
    "10495": {
      "op": "JUMP"
    },
    "10496": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10497": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "10499": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 185,
      "value": "0x290F"
    },
    "10502": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "11"
    },
    "10503": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "11"
    },
    "10504": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "10506": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "11"
    },
    "10507": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2917"
    },
    "10510": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10511": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10512": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "10513": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "10514": {
      "op": "POP"
    },
    "10515": {
      "op": "POP"
    },
    "10516": {
      "op": "POP"
    },
    "10517": {
      "op": "POP"
    },
    "10518": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "10522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 186
    },
    "10523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "10524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "11"
    },
    "10525": {
      "branch": 251,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "10526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2978"
    },
    "10529": {
      "branch": 251,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10539": {
      "op": "SHL"
    },
    "10540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "10546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "11"
    },
    "10548": {
      "op": "MSTORE"
    },
    "10549": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10553": {
      "op": "DUP3"
    },
    "10554": {
      "op": "ADD"
    },
    "10555": {
      "op": "MSTORE"
    },
    "10556": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "10589": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10591": {
      "op": "DUP3"
    },
    "10592": {
      "op": "ADD"
    },
    "10593": {
      "op": "MSTORE"
    },
    "10594": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "10601": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "10603": {
      "op": "SHL"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10606": {
      "op": "DUP3"
    },
    "10607": {
      "op": "ADD"
    },
    "10608": {
      "op": "MSTORE"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10611": {
      "op": "ADD"
    },
    "10612": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x76F"
    },
    "10615": {
      "op": "JUMP"
    },
    "10616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10623": {
      "op": "SHL"
    },
    "10624": {
      "op": "SUB"
    },
    "10625": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "11",
      "statement": 187
    },
    "10626": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "11"
    },
    "10627": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "10628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 188,
      "value": "0x29CF"
    },
    "10631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10641": {
      "op": "SHL"
    },
    "10642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10646": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "10648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10649": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "11"
    },
    "10650": {
      "op": "MSTORE"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10653": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10655": {
      "op": "DUP3"
    },
    "10656": {
      "op": "ADD"
    },
    "10657": {
      "op": "MSTORE"
    },
    "10658": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10693": {
      "op": "DUP3"
    },
    "10694": {
      "op": "ADD"
    },
    "10695": {
      "op": "MSTORE"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10698": {
      "op": "ADD"
    },
    "10699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x76F"
    },
    "10702": {
      "op": "JUMP"
    },
    "10703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "10706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10707": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "11"
    },
    "10708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10714": {
      "op": "SHL"
    },
    "10715": {
      "op": "SUB"
    },
    "10716": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "11"
    },
    "10717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "11"
    },
    "10718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "11"
    },
    "10719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10721": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10722": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29EB"
    },
    "10725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DB7"
    },
    "10730": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "10734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10736": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10737": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "11"
    },
    "10739": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "11"
    },
    "10740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10741": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "11"
    },
    "10742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "11"
    },
    "10743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "11"
    },
    "10744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "11"
    },
    "10745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "10746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "10747": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "10748": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "10749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "10750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "10753": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10754": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "11"
    },
    "10755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A28"
    },
    "10758": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10761": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10762": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10763": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "10764": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "10766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "11"
    },
    "10767": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "10769": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "10770": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "10771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "11"
    },
    "10772": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10773": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "10774": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10776": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "10778": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10779": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10780": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "10781": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "10783": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "10785": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "11"
    },
    "10786": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "11"
    },
    "10787": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "10788": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A2D"
    },
    "10791": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10792": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10793": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "10795": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "10797": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "10799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "10801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "11"
    },
    "10803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 189,
      "value": "0x2A3D"
    },
    "10806": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10808": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "11"
    },
    "10809": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A48"
    },
    "10812": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10814": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "10815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "10816": {
      "op": "POP"
    },
    "10817": {
      "op": "POP"
    },
    "10818": {
      "op": "POP"
    },
    "10819": {
      "op": "POP"
    },
    "10820": {
      "op": "POP"
    },
    "10821": {
      "op": "POP"
    },
    "10822": {
      "op": "POP"
    },
    "10823": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10824": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10825": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "10827": {
      "branch": 252,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "11"
    },
    "10828": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "10829": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A57"
    },
    "10832": {
      "branch": 252,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10833": {
      "op": "POP"
    },
    "10834": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 190
    },
    "10835": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x806"
    },
    "10838": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10839": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10840": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10841": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10842": {
      "branch": 253,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "10843": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A67"
    },
    "10846": {
      "branch": 253,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10847": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10848": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10849": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10850": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "11"
    },
    "10851": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "10853": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "11"
    },
    "10854": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "11"
    },
    "10855": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10856": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 191
    },
    "10857": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10859": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10866": {
      "op": "SHL"
    },
    "10867": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10868": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10869": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "10871": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "11"
    },
    "10872": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x76F"
    },
    "10875": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10876": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10877": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DD3"
    },
    "10880": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10881": {
      "op": "JUMPDEST"
    },
    "10882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10886": {
      "op": "DUP3"
    },
    "10887": {
      "op": "DUP5"
    },
    "10888": {
      "op": "SUB"
    },
    "10889": {
      "op": "SLT"
    },
    "10890": {
      "op": "ISZERO"
    },
    "10891": {
      "op": "PUSH2",
      "value": "0x2A93"
    },
    "10894": {
      "op": "JUMPI"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10897": {
      "op": "DUP1"
    },
    "10898": {
      "op": "REVERT"
    },
    "10899": {
      "op": "JUMPDEST"
    },
    "10900": {
      "op": "POP"
    },
    "10901": {
      "op": "CALLDATALOAD"
    },
    "10902": {
      "op": "SWAP2"
    },
    "10903": {
      "op": "SWAP1"
    },
    "10904": {
      "op": "POP"
    },
    "10905": {
      "jump": "o",
      "op": "JUMP"
    },
    "10906": {
      "op": "JUMPDEST"
    },
    "10907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10913": {
      "op": "SHL"
    },
    "10914": {
      "op": "SUB"
    },
    "10915": {
      "op": "DUP2"
    },
    "10916": {
      "op": "AND"
    },
    "10917": {
      "op": "DUP2"
    },
    "10918": {
      "op": "EQ"
    },
    "10919": {
      "op": "PUSH2",
      "value": "0x2585"
    },
    "10922": {
      "op": "JUMPI"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10925": {
      "op": "DUP1"
    },
    "10926": {
      "op": "REVERT"
    },
    "10927": {
      "op": "JUMPDEST"
    },
    "10928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10932": {
      "op": "DUP3"
    },
    "10933": {
      "op": "DUP5"
    },
    "10934": {
      "op": "SUB"
    },
    "10935": {
      "op": "SLT"
    },
    "10936": {
      "op": "ISZERO"
    },
    "10937": {
      "op": "PUSH2",
      "value": "0x2AC1"
    },
    "10940": {
      "op": "JUMPI"
    },
    "10941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10943": {
      "op": "DUP1"
    },
    "10944": {
      "op": "REVERT"
    },
    "10945": {
      "op": "JUMPDEST"
    },
    "10946": {
      "op": "DUP2"
    },
    "10947": {
      "op": "CALLDATALOAD"
    },
    "10948": {
      "op": "PUSH2",
      "value": "0x806"
    },
    "10951": {
      "op": "DUP2"
    },
    "10952": {
      "op": "PUSH2",
      "value": "0x2A9A"
    },
    "10955": {
      "jump": "i",
      "op": "JUMP"
    },
    "10956": {
      "op": "JUMPDEST"
    },
    "10957": {
      "op": "DUP1"
    },
    "10958": {
      "op": "ISZERO"
    },
    "10959": {
      "op": "ISZERO"
    },
    "10960": {
      "op": "DUP2"
    },
    "10961": {
      "op": "EQ"
    },
    "10962": {
      "op": "PUSH2",
      "value": "0x2585"
    },
    "10965": {
      "op": "JUMPI"
    },
    "10966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10968": {
      "op": "DUP1"
    },
    "10969": {
      "op": "REVERT"
    },
    "10970": {
      "op": "JUMPDEST"
    },
    "10971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10973": {
      "op": "DUP1"
    },
    "10974": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10976": {
      "op": "DUP4"
    },
    "10977": {
      "op": "DUP6"
    },
    "10978": {
      "op": "SUB"
    },
    "10979": {
      "op": "SLT"
    },
    "10980": {
      "op": "ISZERO"
    },
    "10981": {
      "op": "PUSH2",
      "value": "0x2AED"
    },
    "10984": {
      "op": "JUMPI"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10987": {
      "op": "DUP1"
    },
    "10988": {
      "op": "REVERT"
    },
    "10989": {
      "op": "JUMPDEST"
    },
    "10990": {
      "op": "DUP3"
    },
    "10991": {
      "op": "CALLDATALOAD"
    },
    "10992": {
      "op": "SWAP2"
    },
    "10993": {
      "op": "POP"
    },
    "10994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10996": {
      "op": "DUP4"
    },
    "10997": {
      "op": "ADD"
    },
    "10998": {
      "op": "CALLDATALOAD"
    },
    "10999": {
      "op": "PUSH2",
      "value": "0x2AFF"
    },
    "11002": {
      "op": "DUP2"
    },
    "11003": {
      "op": "PUSH2",
      "value": "0x2ACC"
    },
    "11006": {
      "jump": "i",
      "op": "JUMP"
    },
    "11007": {
      "op": "JUMPDEST"
    },
    "11008": {
      "op": "DUP1"
    },
    "11009": {
      "op": "SWAP2"
    },
    "11010": {
      "op": "POP"
    },
    "11011": {
      "op": "POP"
    },
    "11012": {
      "op": "SWAP3"
    },
    "11013": {
      "op": "POP"
    },
    "11014": {
      "op": "SWAP3"
    },
    "11015": {
      "op": "SWAP1"
    },
    "11016": {
      "op": "POP"
    },
    "11017": {
      "jump": "o",
      "op": "JUMP"
    },
    "11018": {
      "op": "JUMPDEST"
    },
    "11019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11021": {
      "op": "DUP1"
    },
    "11022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11024": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11026": {
      "op": "DUP5"
    },
    "11027": {
      "op": "DUP7"
    },
    "11028": {
      "op": "SUB"
    },
    "11029": {
      "op": "SLT"
    },
    "11030": {
      "op": "ISZERO"
    },
    "11031": {
      "op": "PUSH2",
      "value": "0x2B1F"
    },
    "11034": {
      "op": "JUMPI"
    },
    "11035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11037": {
      "op": "DUP1"
    },
    "11038": {
      "op": "REVERT"
    },
    "11039": {
      "op": "JUMPDEST"
    },
    "11040": {
      "op": "DUP4"
    },
    "11041": {
      "op": "CALLDATALOAD"
    },
    "11042": {
      "op": "SWAP3"
    },
    "11043": {
      "op": "POP"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11046": {
      "op": "DUP5"
    },
    "11047": {
      "op": "ADD"
    },
    "11048": {
      "op": "CALLDATALOAD"
    },
    "11049": {
      "op": "PUSH2",
      "value": "0x2B31"
    },
    "11052": {
      "op": "DUP2"
    },
    "11053": {
      "op": "PUSH2",
      "value": "0x2A9A"
    },
    "11056": {
      "jump": "i",
      "op": "JUMP"
    },
    "11057": {
      "op": "JUMPDEST"
    },
    "11058": {
      "op": "SWAP2"
    },
    "11059": {
      "op": "POP"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11062": {
      "op": "DUP5"
    },
    "11063": {
      "op": "ADD"
    },
    "11064": {
      "op": "CALLDATALOAD"
    },
    "11065": {
      "op": "PUSH2",
      "value": "0x2B41"
    },
    "11068": {
      "op": "DUP2"
    },
    "11069": {
      "op": "PUSH2",
      "value": "0x2A9A"
    },
    "11072": {
      "jump": "i",
      "op": "JUMP"
    },
    "11073": {
      "op": "JUMPDEST"
    },
    "11074": {
      "op": "DUP1"
    },
    "11075": {
      "op": "SWAP2"
    },
    "11076": {
      "op": "POP"
    },
    "11077": {
      "op": "POP"
    },
    "11078": {
      "op": "SWAP3"
    },
    "11079": {
      "op": "POP"
    },
    "11080": {
      "op": "SWAP3"
    },
    "11081": {
      "op": "POP"
    },
    "11082": {
      "op": "SWAP3"
    },
    "11083": {
      "jump": "o",
      "op": "JUMP"
    },
    "11084": {
      "op": "JUMPDEST"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11087": {
      "op": "DUP1"
    },
    "11088": {
      "op": "DUP3"
    },
    "11089": {
      "op": "MSTORE"
    },
    "11090": {
      "op": "DUP2"
    },
    "11091": {
      "op": "DUP2"
    },
    "11092": {
      "op": "ADD"
    },
    "11093": {
      "op": "MSTORE"
    },
    "11094": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "11127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11129": {
      "op": "DUP3"
    },
    "11130": {
      "op": "ADD"
    },
    "11131": {
      "op": "MSTORE"
    },
    "11132": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11134": {
      "op": "ADD"
    },
    "11135": {
      "op": "SWAP1"
    },
    "11136": {
      "jump": "o",
      "op": "JUMP"
    },
    "11137": {
      "op": "JUMPDEST"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11140": {
      "op": "DUP1"
    },
    "11141": {
      "op": "DUP3"
    },
    "11142": {
      "op": "MSTORE"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "11145": {
      "op": "SWAP1"
    },
    "11146": {
      "op": "DUP3"
    },
    "11147": {
      "op": "ADD"
    },
    "11148": {
      "op": "MSTORE"
    },
    "11149": {
      "op": "PUSH32",
      "value": "0x466565206D7573742062652067726561746572207468616E2030000000000000"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11184": {
      "op": "DUP3"
    },
    "11185": {
      "op": "ADD"
    },
    "11186": {
      "op": "MSTORE"
    },
    "11187": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11189": {
      "op": "ADD"
    },
    "11190": {
      "op": "SWAP1"
    },
    "11191": {
      "jump": "o",
      "op": "JUMP"
    },
    "11192": {
      "op": "JUMPDEST"
    },
    "11193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11195": {
      "op": "DUP1"
    },
    "11196": {
      "op": "DUP3"
    },
    "11197": {
      "op": "MSTORE"
    },
    "11198": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11200": {
      "op": "SWAP1"
    },
    "11201": {
      "op": "DUP3"
    },
    "11202": {
      "op": "ADD"
    },
    "11203": {
      "op": "MSTORE"
    },
    "11204": {
      "op": "PUSH32",
      "value": "0x466565206D757374206265206C657373207468616E2031302500000000000000"
    },
    "11237": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11239": {
      "op": "DUP3"
    },
    "11240": {
      "op": "ADD"
    },
    "11241": {
      "op": "MSTORE"
    },
    "11242": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11244": {
      "op": "ADD"
    },
    "11245": {
      "op": "SWAP1"
    },
    "11246": {
      "jump": "o",
      "op": "JUMP"
    },
    "11247": {
      "op": "JUMPDEST"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11252": {
      "op": "DUP3"
    },
    "11253": {
      "op": "DUP5"
    },
    "11254": {
      "op": "SUB"
    },
    "11255": {
      "op": "SLT"
    },
    "11256": {
      "op": "ISZERO"
    },
    "11257": {
      "op": "PUSH2",
      "value": "0x2C01"
    },
    "11260": {
      "op": "JUMPI"
    },
    "11261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11263": {
      "op": "DUP1"
    },
    "11264": {
      "op": "REVERT"
    },
    "11265": {
      "op": "JUMPDEST"
    },
    "11266": {
      "op": "POP"
    },
    "11267": {
      "op": "MLOAD"
    },
    "11268": {
      "op": "SWAP2"
    },
    "11269": {
      "op": "SWAP1"
    },
    "11270": {
      "op": "POP"
    },
    "11271": {
      "jump": "o",
      "op": "JUMP"
    },
    "11272": {
      "op": "JUMPDEST"
    },
    "11273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11275": {
      "op": "DUP1"
    },
    "11276": {
      "op": "DUP3"
    },
    "11277": {
      "op": "MSTORE"
    },
    "11278": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11280": {
      "op": "SWAP1"
    },
    "11281": {
      "op": "DUP3"
    },
    "11282": {
      "op": "ADD"
    },
    "11283": {
      "op": "MSTORE"
    },
    "11284": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420437275736820746F6B656E7320666F72207472"
    },
    "11317": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11319": {
      "op": "DUP3"
    },
    "11320": {
      "op": "ADD"
    },
    "11321": {
      "op": "MSTORE"
    },
    "11322": {
      "op": "PUSH6",
      "value": "0x30B739B332B9"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "11331": {
      "op": "SHL"
    },
    "11332": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11334": {
      "op": "DUP3"
    },
    "11335": {
      "op": "ADD"
    },
    "11336": {
      "op": "MSTORE"
    },
    "11337": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11339": {
      "op": "ADD"
    },
    "11340": {
      "op": "SWAP1"
    },
    "11341": {
      "jump": "o",
      "op": "JUMP"
    },
    "11342": {
      "op": "JUMPDEST"
    },
    "11343": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11350": {
      "op": "SHL"
    },
    "11351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11353": {
      "op": "MSTORE"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11356": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11358": {
      "op": "MSTORE"
    },
    "11359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11363": {
      "op": "REVERT"
    },
    "11364": {
      "op": "JUMPDEST"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11367": {
      "op": "DUP3"
    },
    "11368": {
      "op": "DUP3"
    },
    "11369": {
      "op": "LT"
    },
    "11370": {
      "op": "ISZERO"
    },
    "11371": {
      "op": "PUSH2",
      "value": "0x2C76"
    },
    "11374": {
      "op": "JUMPI"
    },
    "11375": {
      "op": "PUSH2",
      "value": "0x2C76"
    },
    "11378": {
      "op": "PUSH2",
      "value": "0x2C4E"
    },
    "11381": {
      "jump": "i",
      "op": "JUMP"
    },
    "11382": {
      "op": "JUMPDEST"
    },
    "11383": {
      "op": "POP"
    },
    "11384": {
      "op": "SUB"
    },
    "11385": {
      "op": "SWAP1"
    },
    "11386": {
      "jump": "o",
      "op": "JUMP"
    },
    "11387": {
      "op": "JUMPDEST"
    },
    "11388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11390": {
      "op": "DUP1"
    },
    "11391": {
      "op": "DUP3"
    },
    "11392": {
      "op": "MSTORE"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "11395": {
      "op": "SWAP1"
    },
    "11396": {
      "op": "DUP3"
    },
    "11397": {
      "op": "ADD"
    },
    "11398": {
      "op": "MSTORE"
    },
    "11399": {
      "op": "PUSH32",
      "value": "0x4F6E6C79204F6E6520576974686472617720616C6C6F77656420706572203320"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11434": {
      "op": "DUP3"
    },
    "11435": {
      "op": "ADD"
    },
    "11436": {
      "op": "MSTORE"
    },
    "11437": {
      "op": "PUSH19",
      "value": "0x686F75727320647572696E6720667265657A65"
    },
    "11457": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "11459": {
      "op": "SHL"
    },
    "11460": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11462": {
      "op": "DUP3"
    },
    "11463": {
      "op": "ADD"
    },
    "11464": {
      "op": "MSTORE"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11467": {
      "op": "ADD"
    },
    "11468": {
      "op": "SWAP1"
    },
    "11469": {
      "jump": "o",
      "op": "JUMP"
    },
    "11470": {
      "op": "JUMPDEST"
    },
    "11471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11475": {
      "op": "DUP3"
    },
    "11476": {
      "op": "DUP5"
    },
    "11477": {
      "op": "SUB"
    },
    "11478": {
      "op": "SLT"
    },
    "11479": {
      "op": "ISZERO"
    },
    "11480": {
      "op": "PUSH2",
      "value": "0x2CE0"
    },
    "11483": {
      "op": "JUMPI"
    },
    "11484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11486": {
      "op": "DUP1"
    },
    "11487": {
      "op": "REVERT"
    },
    "11488": {
      "op": "JUMPDEST"
    },
    "11489": {
      "op": "DUP2"
    },
    "11490": {
      "op": "MLOAD"
    },
    "11491": {
      "op": "PUSH2",
      "value": "0x806"
    },
    "11494": {
      "op": "DUP2"
    },
    "11495": {
      "op": "PUSH2",
      "value": "0x2ACC"
    },
    "11498": {
      "jump": "i",
      "op": "JUMP"
    },
    "11499": {
      "op": "JUMPDEST"
    },
    "11500": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11507": {
      "op": "SHL"
    },
    "11508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11510": {
      "op": "MSTORE"
    },
    "11511": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11513": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11515": {
      "op": "MSTORE"
    },
    "11516": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11520": {
      "op": "REVERT"
    },
    "11521": {
      "op": "JUMPDEST"
    },
    "11522": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11527": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11529": {
      "op": "SHL"
    },
    "11530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11532": {
      "op": "MSTORE"
    },
    "11533": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11537": {
      "op": "MSTORE"
    },
    "11538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11542": {
      "op": "REVERT"
    },
    "11543": {
      "op": "JUMPDEST"
    },
    "11544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11548": {
      "op": "NOT"
    },
    "11549": {
      "op": "DUP3"
    },
    "11550": {
      "op": "EQ"
    },
    "11551": {
      "op": "ISZERO"
    },
    "11552": {
      "op": "PUSH2",
      "value": "0x2D2B"
    },
    "11555": {
      "op": "JUMPI"
    },
    "11556": {
      "op": "PUSH2",
      "value": "0x2D2B"
    },
    "11559": {
      "op": "PUSH2",
      "value": "0x2C4E"
    },
    "11562": {
      "jump": "i",
      "op": "JUMP"
    },
    "11563": {
      "op": "JUMPDEST"
    },
    "11564": {
      "op": "POP"
    },
    "11565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11567": {
      "op": "ADD"
    },
    "11568": {
      "op": "SWAP1"
    },
    "11569": {
      "jump": "o",
      "op": "JUMP"
    },
    "11570": {
      "op": "JUMPDEST"
    },
    "11571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11573": {
      "op": "DUP2"
    },
    "11574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11576": {
      "op": "NOT"
    },
    "11577": {
      "op": "DIV"
    },
    "11578": {
      "op": "DUP4"
    },
    "11579": {
      "op": "GT"
    },
    "11580": {
      "op": "DUP3"
    },
    "11581": {
      "op": "ISZERO"
    },
    "11582": {
      "op": "ISZERO"
    },
    "11583": {
      "op": "AND"
    },
    "11584": {
      "op": "ISZERO"
    },
    "11585": {
      "op": "PUSH2",
      "value": "0x2D4C"
    },
    "11588": {
      "op": "JUMPI"
    },
    "11589": {
      "op": "PUSH2",
      "value": "0x2D4C"
    },
    "11592": {
      "op": "PUSH2",
      "value": "0x2C4E"
    },
    "11595": {
      "jump": "i",
      "op": "JUMP"
    },
    "11596": {
      "op": "JUMPDEST"
    },
    "11597": {
      "op": "POP"
    },
    "11598": {
      "op": "MUL"
    },
    "11599": {
      "op": "SWAP1"
    },
    "11600": {
      "jump": "o",
      "op": "JUMP"
    },
    "11601": {
      "op": "JUMPDEST"
    },
    "11602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11604": {
      "op": "DUP3"
    },
    "11605": {
      "op": "PUSH2",
      "value": "0x2D6E"
    },
    "11608": {
      "op": "JUMPI"
    },
    "11609": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11616": {
      "op": "SHL"
    },
    "11617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11619": {
      "op": "MSTORE"
    },
    "11620": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11622": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11624": {
      "op": "MSTORE"
    },
    "11625": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11629": {
      "op": "REVERT"
    },
    "11630": {
      "op": "JUMPDEST"
    },
    "11631": {
      "op": "POP"
    },
    "11632": {
      "op": "DIV"
    },
    "11633": {
      "op": "SWAP1"
    },
    "11634": {
      "jump": "o",
      "op": "JUMP"
    },
    "11635": {
      "op": "JUMPDEST"
    },
    "11636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11638": {
      "op": "DUP3"
    },
    "11639": {
      "op": "NOT"
    },
    "11640": {
      "op": "DUP3"
    },
    "11641": {
      "op": "GT"
    },
    "11642": {
      "op": "ISZERO"
    },
    "11643": {
      "op": "PUSH2",
      "value": "0x2D86"
    },
    "11646": {
      "op": "JUMPI"
    },
    "11647": {
      "op": "PUSH2",
      "value": "0x2D86"
    },
    "11650": {
      "op": "PUSH2",
      "value": "0x2C4E"
    },
    "11653": {
      "jump": "i",
      "op": "JUMP"
    },
    "11654": {
      "op": "JUMPDEST"
    },
    "11655": {
      "op": "POP"
    },
    "11656": {
      "op": "ADD"
    },
    "11657": {
      "op": "SWAP1"
    },
    "11658": {
      "jump": "o",
      "op": "JUMP"
    },
    "11659": {
      "op": "JUMPDEST"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11662": {
      "op": "JUMPDEST"
    },
    "11663": {
      "op": "DUP4"
    },
    "11664": {
      "op": "DUP2"
    },
    "11665": {
      "op": "LT"
    },
    "11666": {
      "op": "ISZERO"
    },
    "11667": {
      "op": "PUSH2",
      "value": "0x2DA6"
    },
    "11670": {
      "op": "JUMPI"
    },
    "11671": {
      "op": "DUP2"
    },
    "11672": {
      "op": "DUP2"
    },
    "11673": {
      "op": "ADD"
    },
    "11674": {
      "op": "MLOAD"
    },
    "11675": {
      "op": "DUP4"
    },
    "11676": {
      "op": "DUP3"
    },
    "11677": {
      "op": "ADD"
    },
    "11678": {
      "op": "MSTORE"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11681": {
      "op": "ADD"
    },
    "11682": {
      "op": "PUSH2",
      "value": "0x2D8E"
    },
    "11685": {
      "op": "JUMP"
    },
    "11686": {
      "op": "JUMPDEST"
    },
    "11687": {
      "op": "DUP4"
    },
    "11688": {
      "op": "DUP2"
    },
    "11689": {
      "op": "GT"
    },
    "11690": {
      "op": "ISZERO"
    },
    "11691": {
      "op": "PUSH2",
      "value": "0x1867"
    },
    "11694": {
      "op": "JUMPI"
    },
    "11695": {
      "op": "POP"
    },
    "11696": {
      "op": "POP"
    },
    "11697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11699": {
      "op": "SWAP2"
    },
    "11700": {
      "op": "ADD"
    },
    "11701": {
      "op": "MSTORE"
    },
    "11702": {
      "jump": "o",
      "op": "JUMP"
    },
    "11703": {
      "op": "JUMPDEST"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11706": {
      "op": "DUP3"
    },
    "11707": {
      "op": "MLOAD"
    },
    "11708": {
      "op": "PUSH2",
      "value": "0x2DC9"
    },
    "11711": {
      "op": "DUP2"
    },
    "11712": {
      "op": "DUP5"
    },
    "11713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11715": {
      "op": "DUP8"
    },
    "11716": {
      "op": "ADD"
    },
    "11717": {
      "op": "PUSH2",
      "value": "0x2D8B"
    },
    "11720": {
      "jump": "i",
      "op": "JUMP"
    },
    "11721": {
      "op": "JUMPDEST"
    },
    "11722": {
      "op": "SWAP2"
    },
    "11723": {
      "op": "SWAP1"
    },
    "11724": {
      "op": "SWAP2"
    },
    "11725": {
      "op": "ADD"
    },
    "11726": {
      "op": "SWAP3"
    },
    "11727": {
      "op": "SWAP2"
    },
    "11728": {
      "op": "POP"
    },
    "11729": {
      "op": "POP"
    },
    "11730": {
      "jump": "o",
      "op": "JUMP"
    },
    "11731": {
      "op": "JUMPDEST"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11734": {
      "op": "DUP2"
    },
    "11735": {
      "op": "MSTORE"
    },
    "11736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11738": {
      "op": "DUP3"
    },
    "11739": {
      "op": "MLOAD"
    },
    "11740": {
      "op": "DUP1"
    },
    "11741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11743": {
      "op": "DUP5"
    },
    "11744": {
      "op": "ADD"
    },
    "11745": {
      "op": "MSTORE"
    },
    "11746": {
      "op": "PUSH2",
      "value": "0x2DF2"
    },
    "11749": {
      "op": "DUP2"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11752": {
      "op": "DUP6"
    },
    "11753": {
      "op": "ADD"
    },
    "11754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11756": {
      "op": "DUP8"
    },
    "11757": {
      "op": "ADD"
    },
    "11758": {
      "op": "PUSH2",
      "value": "0x2D8B"
    },
    "11761": {
      "jump": "i",
      "op": "JUMP"
    },
    "11762": {
      "op": "JUMPDEST"
    },
    "11763": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11765": {
      "op": "ADD"
    },
    "11766": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11768": {
      "op": "NOT"
    },
    "11769": {
      "op": "AND"
    },
    "11770": {
      "op": "SWAP2"
    },
    "11771": {
      "op": "SWAP1"
    },
    "11772": {
      "op": "SWAP2"
    },
    "11773": {
      "op": "ADD"
    },
    "11774": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11776": {
      "op": "ADD"
    },
    "11777": {
      "op": "SWAP3"
    },
    "11778": {
      "op": "SWAP2"
    },
    "11779": {
      "op": "POP"
    },
    "11780": {
      "op": "POP"
    },
    "11781": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "294eb8b1d675c9a576b643640a892836408a795b",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity >=0.6.5;\n\n//BSC Address: 0x9D1Bc6843130fCAc8A609Bd9cb02Fb8A1E95630e\n//openzeppelin\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n//bitcrush\nimport \"./CrushToken.sol\";\nimport \"./Bankroll.sol\";\n\n//import \"./LiveWallet.sol\";\n\ncontract BitcrushStaking is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for CRUSHToken;\n    uint256 public constant MAX_CRUSH_PER_BLOCK = 10000000000000000000;\n    uint256 public constant MAX_FEE = 1000; // 1000/10000 * 100 = 10%\n    uint256 public performanceFeeCompounder = 10; // 10/10000 * 100 = 0.1%\n    uint256 public performanceFeeBurn = 100; // 100/10000 * 100 = 1%\n    uint256 public constant divisor = 10000;\n\n    uint256 public earlyWithdrawFee = 50; // 50/10000 * 100 = 0.5%\n    uint256 public frozenEarlyWithdrawFee = 1500; // 1500/10000 * 100 = 15%\n    uint256 public performanceFeeReserve = 190; // 190/10000 * 100 = 1.9%\n\n    uint256 public frozenEarlyWithdrawFeeTime = 10800;\n\n    uint256 public blockPerSecond = 3;\n    uint256 public earlyWithdrawFeeTime = (72 * 60 * 60) / blockPerSecond;\n    uint256 public apyBoost = 2500; //2500/10000 * 100 = 25%\n    uint256 public totalShares;\n\n    // Contracts to Interact with\n    CRUSHToken public immutable crush;\n    BitcrushBankroll public bankroll;\n    BitcrushLiveWallet public liveWallet;\n    // Team address to maintain funds\n    address public reserveAddress;\n\n    struct UserStaking {\n        uint256 shares;\n        uint256 stakedAmount;\n        uint256 claimedAmount;\n        uint256 lastBlockCompounded;\n        uint256 lastBlockStaked;\n        uint256 index;\n        uint256 lastFrozenWithdraw;\n        uint256 apyBaseline;\n        uint256 profitBaseline;\n    }\n    mapping(address => UserStaking) public stakings;\n    address[] public addressIndexes;\n\n    uint256 public lastAutoCompoundBlock;\n\n    uint256 public batchStartingIndex;\n    uint256 public crushPerBlock = 5500000000000000000;\n    // Pool Accumulated Reward Per Share (APY)\n    uint256 public accRewardPerShare;\n    uint256 public lastRewardBlock;\n    // Profit Accumulated Reward Per Share\n    uint256 public accProfitPerShare;\n    // Tracking Totals\n    uint256 public totalPool; // Reward for Staking\n    uint256 public totalStaked;\n    uint256 public totalClaimed; // Total Claimed as rewards\n    uint256 public totalFrozen;\n    uint256 public totalProfitsClaimed;\n    uint256 public totalProfitDistributed; // Total Claimed as Profits\n\n    uint256 public autoCompoundLimit = 10; // Max Batch Size\n\n    uint256 public deploymentTimeStamp;\n\n    event RewardPoolUpdated(uint256 indexed _totalPool);\n    event StakeUpdated(address indexed recipeint, uint256 indexed _amount);\n\n    constructor(\n        CRUSHToken _crush,\n        uint256 _crushPerBlock,\n        address _reserveAddress\n    ) {\n        crush = _crush;\n        if (_crushPerBlock <= MAX_CRUSH_PER_BLOCK) {\n            crushPerBlock = _crushPerBlock;\n        }\n        reserveAddress = _reserveAddress;\n        deploymentTimeStamp = block.timestamp;\n        lastRewardBlock = block.number;\n    }\n\n    /// Store `_bankroll`.\n    /// @param _bankroll the new value to store\n    /// @dev stores the _bankroll address in the state variable `bankroll`\n    function setBankroll(BitcrushBankroll _bankroll) public onlyOwner {\n        require(\n            address(bankroll) == address(0),\n            \"Bankroll address already set\"\n        );\n        bankroll = _bankroll;\n    }\n\n    /// Store `_liveWallet`.\n    /// @param _liveWallet the new value to store\n    /// @dev stores the _liveWallet address in the state variable `liveWallet`\n    function setLiveWallet(BitcrushLiveWallet _liveWallet) public onlyOwner {\n        require(\n            address(liveWallet) == address(0),\n            \"Live Wallet address already set\"\n        );\n        liveWallet = _liveWallet;\n    }\n\n    /// Adds the provided amount to the totalPool\n    /// @param _amount the amount to add\n    /// @dev adds the provided amount to `totalPool` state variable\n    function addRewardToPool(uint256 _amount) public {\n        require(\n            crush.balanceOf(msg.sender) >= _amount,\n            \"Insufficient Crush tokens for transfer\"\n        );\n        totalPool = totalPool.add(_amount);\n        crush.safeTransferFrom(msg.sender, address(this), _amount);\n        emit RewardPoolUpdated(totalPool);\n    }\n\n    /// @notice updates accRewardPerShare based on the last block calculated and totalShares\n    /// @dev accRewardPerShare is accumulative, meaning it always holds the total historic\n    /// rewardPerShare making apyBaseline necessary to keep rewards fair\n    function updateDistribution() public {\n        if (block.number <= lastRewardBlock) return;\n        if (totalStaked == 0) {\n            lastRewardBlock = block.number;\n            return;\n        }\n        uint256 rewardPerBlock = crushPerBlock;\n        if (totalFrozen > 0)\n            rewardPerBlock = rewardPerBlock.add(\n                crushPerBlock.mul(apyBoost).div(divisor)\n            );\n        if (totalPool == 0) rewardPerBlock = 0;\n        uint256 blocksSinceCalc = block.number.sub(lastRewardBlock);\n        uint256 rewardCalc = blocksSinceCalc.mul(rewardPerBlock).mul(1e12).div(\n            totalShares\n        );\n        accRewardPerShare = accRewardPerShare.add(rewardCalc);\n        lastRewardBlock = block.number;\n    }\n\n    /// @notice updates accProfitPerShare based on current Profit available and totalShares\n    /// @dev this allows for consistent profit reporting and no change on profits to distribute\n    function updateProfits() public {\n        if (totalShares == 0) return;\n        uint256 requestedProfits = bankroll.transferProfit();\n        if (requestedProfits == 0) return;\n        totalProfitDistributed = totalProfitDistributed.add(requestedProfits);\n        uint256 profitCalc = requestedProfits.mul(1e12).div(totalShares);\n        accProfitPerShare = accProfitPerShare.add(profitCalc);\n    }\n\n    function setCrushPerBlock(uint256 _amount) public onlyOwner {\n        require(_amount >= 0, \"Crush per Block can not be negative\");\n        require(\n            _amount <= MAX_CRUSH_PER_BLOCK,\n            \"Crush Per Block can not be more than 10\"\n        );\n        crushPerBlock = _amount;\n    }\n\n    /// Stake the provided amount\n    /// @param _amount the amount to stake\n    /// @dev stakes the provided amount\n    function enterStaking(uint256 _amount) public {\n        require(\n            crush.balanceOf(msg.sender) >= _amount,\n            \"Insufficient Crush tokens for transfer\"\n        );\n        require(_amount > 0, \"Invalid staking amount\");\n\n        updateDistribution();\n        updateProfits();\n        crush.safeTransferFrom(msg.sender, address(this), _amount);\n        if (totalStaked == 0) {\n            lastAutoCompoundBlock = block.number;\n        }\n        UserStaking storage user = stakings[msg.sender];\n\n        if (user.stakedAmount == 0) {\n            user.lastBlockCompounded = block.number;\n            addressIndexes.push(msg.sender);\n            user.index = addressIndexes.length - 1;\n        } else {\n            uint256 pending = user.shares.mul(accRewardPerShare).div(1e12).sub(\n                user.apyBaseline\n            );\n            if (pending > totalPool) pending = totalPool;\n            totalPool = totalPool.sub(pending);\n            uint256 profitPending = user\n                .shares\n                .mul(accProfitPerShare)\n                .div(1e12)\n                .sub(user.profitBaseline);\n            pending = pending.add(profitPending);\n            if (pending > 0) {\n                crush.safeTransfer(msg.sender, pending);\n                user.claimedAmount = user.claimedAmount.add(pending);\n                totalClaimed = totalClaimed.add(pending);\n                totalProfitsClaimed = totalProfitsClaimed.add(profitPending);\n            }\n        }\n\n        uint256 currentShares = 0;\n        if (totalShares != 0)\n            currentShares = _amount.mul(totalShares).div(totalStaked);\n        else currentShares = _amount;\n\n        totalStaked = totalStaked.add(_amount);\n        totalShares = totalShares.add(currentShares);\n        if (user.shares == 0) {\n            user.lastBlockCompounded = block.number;\n        }\n        user.shares = user.shares.add(currentShares);\n        user.profitBaseline = accProfitPerShare.mul(user.shares).div(1e12);\n        user.apyBaseline = accRewardPerShare.mul(user.shares).div(1e12);\n        user.stakedAmount = user.stakedAmount.add(_amount);\n        user.lastBlockStaked = block.number;\n    }\n\n    /// Leaves staking for a user by the specified amount and transfering staked amount and reward to users address\n    /// @param _amount the amount to unstake\n    /// @dev leaves staking and deducts total pool by the users reward. early withdrawal fee applied if withdraw is made before earlyWithdrawFeeTime\n    function leaveStaking(uint256 _amount, bool _liveWallet) external {\n        updateDistribution();\n        updateProfits();\n        UserStaking storage user = stakings[msg.sender];\n        uint256 reward = user.shares.mul(accRewardPerShare).div(1e12).sub(\n            user.apyBaseline\n        );\n        uint256 profitShare = user.shares.mul(accProfitPerShare).div(1e12).sub(\n            user.profitBaseline\n        );\n        if (reward > totalPool) reward = totalPool;\n        totalPool = totalPool.sub(reward);\n        reward = reward.add(profitShare);\n        totalProfitsClaimed = totalProfitsClaimed.add(profitShare);\n        user.lastBlockCompounded = block.number;\n\n        uint256 availableStaked = user.stakedAmount;\n        if (totalFrozen > 0) {\n            availableStaked = availableStaked.sub(\n                totalFrozen.mul(user.stakedAmount).div(totalStaked)\n            );\n            require(\n                availableStaked >= _amount,\n                \"Frozen Funds: Can't withdraw more than Available funds\"\n            );\n        } else if (user.lastFrozenWithdraw > 0) {\n            user.lastFrozenWithdraw = 0;\n        }\n        require(\n            availableStaked >= _amount,\n            \"Withdraw amount can not be greater than available staked amount\"\n        );\n        totalStaked = totalStaked.sub(_amount);\n\n        uint256 shareReduction = _amount.mul(user.shares).div(\n            user.stakedAmount\n        );\n        user.stakedAmount = user.stakedAmount.sub(_amount);\n        user.shares = user.shares.sub(shareReduction);\n        totalShares = totalShares.sub(shareReduction);\n        user.apyBaseline = user.shares.mul(accRewardPerShare).div(1e12);\n        user.profitBaseline = user.shares.mul(accProfitPerShare).div(1e12);\n        _amount = _amount.add(reward);\n        if (totalFrozen > 0) {\n            if (user.lastFrozenWithdraw > 0)\n                require(\n                    block.timestamp >\n                        user.lastFrozenWithdraw.add(frozenEarlyWithdrawFeeTime),\n                    \"Only One Withdraw allowed per 3 hours during freeze\"\n                );\n\n            uint256 withdrawalFee = _amount.mul(frozenEarlyWithdrawFee).div(\n                divisor\n            );\n            user.lastFrozenWithdraw = block.timestamp;\n            _amount = _amount.sub(withdrawalFee);\n\n            if (withdrawalFee > totalFrozen) {\n                uint256 remainder = withdrawalFee.sub(totalFrozen);\n                crush.approve(address(bankroll), remainder);\n                totalFrozen = 0;\n            } else totalFrozen = totalFrozen.sub(withdrawalFee);\n\n            bankroll.recoverBankroll(withdrawalFee);\n        } else if (\n            block.number < user.lastBlockStaked.add(earlyWithdrawFeeTime)\n        ) {\n            //apply fee\n            uint256 withdrawalFee = _amount.mul(earlyWithdrawFee).div(divisor);\n            _amount = _amount.sub(withdrawalFee);\n            crush.safeTransfer(reserveAddress, withdrawalFee);\n        }\n\n        if (_liveWallet == false) crush.safeTransfer(msg.sender, _amount);\n        else {\n            crush.approve(address(liveWallet), _amount);\n            liveWallet.addbetWithAddress(_amount, msg.sender);\n        }\n        user.claimedAmount = user.claimedAmount.add(reward);\n        totalClaimed = totalClaimed.add(reward);\n        //remove from batchig array\n        if (user.stakedAmount == 0) {\n            if (user.index != addressIndexes.length - 1) {\n                address lastAddress = addressIndexes[addressIndexes.length - 1];\n                addressIndexes[user.index] = lastAddress;\n                stakings[lastAddress].index = user.index;\n            }\n            addressIndexes.pop();\n        }\n        emit RewardPoolUpdated(totalPool);\n    }\n\n    /// Get pending rewards of a user for UI\n    /// @param _address the address to calculate the reward for\n    /// @dev calculates potential reward for the address provided based on crush per block\n    function pendingReward(address _address) external view returns (uint256) {\n        UserStaking storage user = stakings[_address];\n        uint256 rewardPerBlock = crushPerBlock;\n        if (totalFrozen > 0)\n            rewardPerBlock = rewardPerBlock.add(\n                crushPerBlock.mul(apyBoost).div(divisor)\n            );\n        if (totalPool == 0) rewardPerBlock = 0;\n        uint256 localAccRewardPerShare = accRewardPerShare;\n        if (block.number > lastRewardBlock && totalShares != 0) {\n            uint256 blocksSinceCalc = block.number.sub(lastRewardBlock);\n            uint256 rewardCalc = blocksSinceCalc\n                .mul(rewardPerBlock)\n                .mul(1e12)\n                .div(totalShares);\n            localAccRewardPerShare = accRewardPerShare.add(rewardCalc);\n        }\n        return\n            user.shares.mul(localAccRewardPerShare).div(1e12).sub(\n                user.apyBaseline\n            );\n    }\n\n    /// Get pending Profits to Claim\n    /// @param _address the user's wallet address to calculate profits\n    /// @return pending Profits to be claimed by this user\n    function pendingProfits(address _address) public view returns (uint256) {\n        UserStaking storage user = stakings[_address];\n        return\n            user.shares.mul(accProfitPerShare).div(1e12).sub(\n                user.profitBaseline\n            );\n    }\n\n    /// compounds the rewards of all users in the pool\n    /// @dev compounds the rewards of all users in the pool add adds it into their staked amount while deducting fees\n    function compoundAll() public {\n        require(\n            lastAutoCompoundBlock <= block.number,\n            \"Compound All not yet applicable.\"\n        );\n        require(totalStaked > 0, \"No Staked rewards to claim\");\n        uint256 crushToBurn = 0;\n        uint256 performanceFee = 0;\n\n        uint256 compounderReward = 0;\n        uint256 totalPoolDeducted = 0;\n\n        uint256 batchStart = batchStartingIndex;\n        if (batchStartingIndex >= addressIndexes.length) batchStart = 0;\n\n        uint256 batchLimit = addressIndexes.length;\n        if (\n            addressIndexes.length <= autoCompoundLimit ||\n            batchStart.add(autoCompoundLimit) >= addressIndexes.length\n        ) batchLimit = addressIndexes.length;\n        else batchLimit = batchStart.add(autoCompoundLimit);\n\n        updateProfits();\n        updateDistribution();\n        for (uint256 i = batchStart; i < batchLimit; i++) {\n            UserStaking storage currentUser = stakings[addressIndexes[i]];\n            uint256 stakerReward = currentUser\n                .shares\n                .mul(accRewardPerShare)\n                .div(1e12)\n                .sub(currentUser.apyBaseline);\n            if (totalPool < totalPoolDeducted.add(stakerReward)) {\n                stakerReward = totalPool.sub(totalPoolDeducted);\n            }\n            currentUser.apyBaseline = currentUser.apyBaseline.add(stakerReward);\n            if (stakerReward > 0)\n                totalPoolDeducted = totalPoolDeducted.add(stakerReward);\n            uint256 profitReward = currentUser\n                .shares\n                .mul(accProfitPerShare)\n                .div(1e12)\n                .sub(currentUser.profitBaseline);\n            currentUser.profitBaseline = currentUser.profitBaseline.add(\n                profitReward\n            );\n            stakerReward = stakerReward.add(profitReward);\n            if (stakerReward > 0) {\n                totalProfitsClaimed = totalProfitsClaimed.add(profitReward);\n                totalClaimed = totalClaimed.add(stakerReward);\n                uint256 stakerBurn = stakerReward.mul(performanceFeeBurn).div(\n                    divisor\n                );\n                crushToBurn = crushToBurn.add(stakerBurn);\n\n                uint256 cpAllReward = stakerReward\n                    .mul(performanceFeeCompounder)\n                    .div(divisor);\n                compounderReward = compounderReward.add(cpAllReward);\n\n                uint256 feeReserve = stakerReward\n                    .mul(performanceFeeReserve)\n                    .div(divisor);\n                performanceFee = performanceFee.add(feeReserve);\n                stakerReward = stakerReward.sub(stakerBurn);\n                stakerReward = stakerReward.sub(cpAllReward);\n                stakerReward = stakerReward.sub(feeReserve);\n                currentUser.claimedAmount = currentUser.claimedAmount.add(\n                    stakerReward\n                );\n                currentUser.stakedAmount = currentUser.stakedAmount.add(\n                    stakerReward\n                );\n\n                totalStaked = totalStaked.add(stakerReward);\n            }\n            currentUser.lastBlockCompounded = block.number;\n        }\n        batchStartingIndex = batchLimit;\n        if (batchStartingIndex >= addressIndexes.length) {\n            batchStartingIndex = 0;\n        }\n        totalPool = totalPool.sub(totalPoolDeducted);\n        lastAutoCompoundBlock = block.number;\n        crush.burn(crushToBurn);\n        crush.safeTransfer(msg.sender, compounderReward);\n        crush.safeTransfer(reserveAddress, performanceFee);\n    }\n\n    /// freeze certain funds in the staking pool and transfer them to the live wallet address\n    /// @dev adds the provided amount to the total frozen variablle\n    function freezeStaking(\n        uint256 _amount,\n        address _recipient,\n        address _lwAddress\n    ) public {\n        require(msg.sender == address(bankroll), \"Callet must be bankroll\");\n        //divide amount over users\n        //update user mapping to reflect frozen amount\n        require(\n            _amount <= totalStaked.sub(totalFrozen),\n            \"Freeze amount should be less than or equal to available funds\"\n        );\n        totalFrozen = totalFrozen.add(_amount);\n        BitcrushLiveWallet currentLw = BitcrushLiveWallet(_lwAddress);\n        currentLw.addToUserWinnings(_amount, _recipient);\n        crush.safeTransfer(address(_lwAddress), _amount);\n        updateDistribution();\n        updateProfits();\n    }\n\n    /// unfreeze previously frozen funds from the staking pool\n    /// @dev deducts the provided amount from the total frozen variablle\n    function unfreezeStaking(uint256 _amount) public {\n        require(msg.sender == address(bankroll), \"Caller must be bankroll\");\n        require(\n            _amount <= totalFrozen,\n            \"unfreeze amount cant be greater than currently frozen amount\"\n        );\n        totalFrozen = totalFrozen.sub(_amount);\n        updateDistribution();\n        updateProfits();\n    }\n\n    /// returns the total count of users in the staking pool.\n    /// @dev returns the total stakers in the staking pool by reading length of addressIndexes array\n    function indexesLength() external view returns (uint256 _addressesLength) {\n        _addressesLength = addressIndexes.length;\n    }\n\n    /// Store `_fee`.\n    /// @param _fee the new value to store\n    /// @dev stores the fee in the state variable `performanceFeeCompounder`\n    function setPerformanceFeeCompounder(uint256 _fee) public onlyOwner {\n        require(_fee > 0, \"Fee must be greater than 0\");\n        require(_fee < MAX_FEE, \"Fee must be less than 10%\");\n        performanceFeeCompounder = _fee;\n    }\n\n    /// Store `_fee`.\n    /// @param _fee the new value to store\n    /// @dev stores the fee in the state variable `performanceFeeBurn`\n    function setPerformanceFeeBurn(uint256 _fee) public onlyOwner {\n        require(_fee > 0, \"Fee must be greater than 0\");\n        require(_fee < MAX_FEE, \"Fee must be less than 10%\");\n        performanceFeeBurn = _fee;\n    }\n\n    /// Store `_fee`.\n    /// @param _fee the new value to store\n    /// @dev stores the fee in the state variable `earlyWithdrawFee`\n    function setEarlyWithdrawFee(uint256 _fee) public onlyOwner {\n        require(_fee > 0, \"Fee must be greater than 0\");\n        require(_fee < MAX_FEE, \"Fee must be less than 10%\");\n        earlyWithdrawFee = _fee;\n    }\n\n    /// Store `_fee`.\n    /// @param _fee the new value to store\n    /// @dev stores the fee in the state variable `performanceFeeReserve`\n    function setPerformanceFeeReserve(uint256 _fee) public onlyOwner {\n        require(_fee > 0, \"Fee must be greater than 0\");\n        require(_fee <= MAX_FEE, \"Fee must be less than 10%\");\n        performanceFeeReserve = _fee;\n    }\n\n    /// Store `_time`.\n    /// @param _time the new value to store\n    /// @dev stores the time in the state variable `earlyWithdrawFeeTime`\n    function setEarlyWithdrawFeeTime(uint256 _time) public onlyOwner {\n        require(_time > 0, \"Time must be greater than 0\");\n        earlyWithdrawFeeTime = _time;\n    }\n\n    /// Store `_limit`.\n    /// @param _limit the new value to store\n    /// @dev stores the limit in the state variable `autoCompoundLimit`\n    function setAutoCompoundLimit(uint256 _limit) public onlyOwner {\n        require(_limit > 0, \"Limit can not be 0\");\n        require(_limit < 30, \"Max autocompound limit cannot be greater 30\");\n        autoCompoundLimit = _limit;\n    }\n\n    /// emergency withdraw funds of users\n    /// @dev transfer all available funds of users to users wallet\n    function emergencyWithdraw() public {\n        updateDistribution();\n\n        UserStaking storage user = stakings[msg.sender];\n        user.lastBlockCompounded = block.number;\n\n        uint256 availableStaked = user.stakedAmount;\n        if (totalFrozen > 0) {\n            availableStaked = availableStaked.sub(\n                totalFrozen.mul(user.stakedAmount).div(totalStaked)\n            );\n        } else if (user.lastFrozenWithdraw > 0) {\n            user.lastFrozenWithdraw = 0;\n        }\n\n        totalStaked = totalStaked.sub(availableStaked);\n\n        uint256 shareReduction = availableStaked.mul(user.shares).div(\n            user.stakedAmount\n        );\n        user.stakedAmount = user.stakedAmount.sub(availableStaked);\n        user.shares = user.shares.sub(shareReduction);\n        totalShares = totalShares.sub(shareReduction);\n        user.apyBaseline = user.shares.mul(accRewardPerShare).div(1e12);\n        user.profitBaseline = user.shares.mul(accProfitPerShare).div(1e12);\n\n        if (totalFrozen > 0) {\n            if (user.lastFrozenWithdraw > 0)\n                require(\n                    block.timestamp >\n                        user.lastFrozenWithdraw.add(frozenEarlyWithdrawFeeTime),\n                    \"Only One Withdraw allowed per 3 hours during freeze\"\n                );\n\n            uint256 withdrawalFee = availableStaked\n                .mul(frozenEarlyWithdrawFee)\n                .div(divisor);\n            user.lastFrozenWithdraw = block.timestamp;\n            availableStaked = availableStaked.sub(withdrawalFee);\n\n            if (withdrawalFee > totalFrozen) {\n                uint256 remainder = withdrawalFee.sub(totalFrozen);\n                crush.approve(address(bankroll), remainder);\n                totalFrozen = 0;\n            } else totalFrozen = totalFrozen.sub(withdrawalFee);\n\n            crush.safeTransfer(reserveAddress, withdrawalFee);\n        } else if (\n            block.number < user.lastBlockStaked.add(earlyWithdrawFeeTime)\n        ) {\n            //apply fee\n            uint256 withdrawalFee = availableStaked.mul(earlyWithdrawFee).div(\n                divisor\n            );\n            availableStaked = availableStaked.sub(withdrawalFee);\n            crush.safeTransfer(reserveAddress, withdrawalFee);\n        }\n\n        crush.safeTransfer(msg.sender, availableStaked);\n\n        //remove from batchig array\n        if (user.stakedAmount == 0) {\n            if (user.index != addressIndexes.length - 1) {\n                address lastAddress = addressIndexes[addressIndexes.length - 1];\n                addressIndexes[user.index] = lastAddress;\n                stakings[lastAddress].index = user.index;\n            }\n            addressIndexes.pop();\n        }\n        emit RewardPoolUpdated(totalPool);\n    }\n}\n",
  "sourceMap": "402:24549:17:-:0;;;696:2;654:44;;765:3;729:39;;878:2;844:36;;951:4;911:44;;1026:3;987:42;;1106:5;1062:49;;1150:1;1118:33;;1212:14;;1196:12;1195:31;;;;:::i;:::-;1157:69;;1258:4;1232:30;;2063:19;2032:50;;2637:2;2602:37;;2839:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:12;921:18:0;:32::i;:::-;-1:-1:-1;;;;;2959:14:17;;;;558:20;2987:37;;2983:98;;3040:13;:30;;;2983:98;3090:14;:32;;-1:-1:-1;;;;;;3090:32:17;-1:-1:-1;;;;;3090:32:17;;;;;;;;;;-1:-1:-1;;3154:15:17;3132:19;:37;3197:12;3179:15;:30;402:24549;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:217:33:-;54:1;80;70:132;;124:10;119:3;115:20;112:1;105:31;159:4;156:1;149:15;187:4;184:1;177:15;70:132;-1:-1:-1;216:9:33;;14:217::o;236:143::-;-1:-1:-1;;;;;323:31:33;;313:42;;303:70;;369:1;366;359:12;303:70;236:143;:::o;384:489::-;491:6;499;507;560:2;548:9;539:7;535:23;531:32;528:52;;;576:1;573;566:12;528:52;608:9;602:16;627:43;664:5;627:43;:::i;:::-;734:2;719:18;;713:25;783:2;768:18;;762:25;689:5;;-1:-1:-1;713:25:33;-1:-1:-1;796:45:33;762:25;796:45;:::i;:::-;860:7;850:17;;;384:489;;;;;:::o;:::-;402:24549:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BankStaking.sol",
  "type": "contract"
}