{"abi": [{"inputs": [{"internalType": "contract ERC20Burnable", "name": "_crush", "type": "address"}, {"internalType": "contract BitcrushStaking", "name": "_stakingPool", "type": "address"}, {"internalType": "address", "name": "_reserve", "type": "address"}, {"internalType": "address", "name": "_lottery", "type": "address"}, {"internalType": "uint256", "name": "_profitShare", "type": "uint256"}, {"internalType": "uint256", "name": "_houseBankrollShare", "type": "uint256"}, {"internalType": "uint256", "name": "_lotteryShare", "type": "uint256"}, {"internalType": "uint256", "name": "_reserveShare", "type": "uint256"}, {"internalType": "address", "name": "_admin", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "_houseBankrollShare", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "_profitShare", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "_lotteryShare", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "_reserveShare", "type": "uint256"}], "name": "SharesUpdated", "type": "event"}, {"inputs": [], "name": "BURN_RATE", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "DIVISOR", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "addToBankroll", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "addUserLoss", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_address", "type": "address"}], "name": "authorizeAddress", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "authorizedAddresses", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "brSinceCompound", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "crush", "outputs": [{"internalType": "contract ERC20Burnable", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "houseBankrollShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "lottery", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "lotteryShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "negativeBankroll", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "negativeBrSinceCompound", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "address", "name": "_winner", "type": "address"}], "name": "payOutUserWinning", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "poolDepleted", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "profitShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "profitThreshold", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "recoverBankroll", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_address", "type": "address"}], "name": "removeAuthorization", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "reserve", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "reserveShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_admin", "type": "address"}], "name": "setAdmin", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_lottery", "type": "address"}], "name": "setLotteryAddress", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_threshold", "type": "uint256"}], "name": "setProfitThreshold", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_reserve", "type": "address"}], "name": "setReserveAddress", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_houseBankrollShare", "type": "uint256"}, {"internalType": "uint256", "name": "_profitShare", "type": "uint256"}, {"internalType": "uint256", "name": "_lotteryShare", "type": "uint256"}, {"internalType": "uint256", "name": "_reserveShare", "type": "uint256"}], "name": "setShares", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "stakingPool", "outputs": [{"internalType": "contract BitcrushStaking", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalBankroll", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalProfit", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalWinnings", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "transferProfit", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol", "10": "contracts/BankStaking.sol", "11": "contracts/Bankroll.sol", "12": "contracts/CrushToken.sol", "15": "contracts/LiveWallet.sol", "2": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol", "3": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol", "4": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/ERC20Burnable.sol", "5": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol", "6": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol", "7": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol", "8": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol", "9": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol"}, "ast": {"absolutePath": "contracts/Bankroll.sol", "exportedSymbols": {"Address": [6046], "BitcrushBankroll": [10447], "BitcrushLiveWallet": [11296], "BitcrushStaking": [9119], "CRUSHToken": [10533], "Context": [5163], "ERC20": [5751], "ERC20Burnable": [1959], "IERC20": [1915], "IERC20Metadata": [9144], "Ownable": [1837], "SafeERC20": [2183], "SafeMath": [9456]}, "id": 10448, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 9458, "literals": ["solidity", ">=", "0.6", ".5"], "nodeType": "PragmaDirective", "src": "32:24:11"}, {"absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 9459, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 10448, "sourceUnit": 1838, "src": "135:52:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 9460, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 10448, "sourceUnit": 2184, "src": "189:65:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol", "file": "@openzeppelin/contracts/utils/math/SafeMath.sol", "id": 9461, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 10448, "sourceUnit": 9457, "src": "256:57:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jmf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/ERC20Burnable.sol", "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol", "id": 9462, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 10448, "sourceUnit": 1960, "src": "315:74:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/BankStaking.sol", "file": "./BankStaking.sol", "id": 9463, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 10448, "sourceUnit": 9120, "src": "403:27:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LiveWallet.sol", "file": "./LiveWallet.sol", "id": 9464, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 10448, "sourceUnit": 11297, "src": "514:26:11", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 9465, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 1837, "src": "573:7:11"}, "id": 9466, "nodeType": "InheritanceSpecifier", "src": "573:7:11"}], "canonicalName": "BitcrushBankroll", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 10447, "linearizedBaseContracts": [10447, 1837, 5163], "name": "BitcrushBankroll", "nameLocation": "553:16:11", "nodeType": "ContractDefinition", "nodes": [{"id": 9469, "libraryName": {"id": 9467, "name": "SafeMath", "nodeType": "IdentifierPath", "referencedDeclaration": 9456, "src": "594:8:11"}, "nodeType": "UsingForDirective", "src": "588:27:11", "typeName": {"id": 9468, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "607:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 9473, "libraryName": {"id": 9470, "name": "SafeERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 2183, "src": "627:9:11"}, "nodeType": "UsingForDirective", "src": "621:34:11", "typeName": {"id": 9472, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 9471, "name": "ERC20Burnable", "nodeType": "IdentifierPath", "referencedDeclaration": 1959, "src": "641:13:11"}, "referencedDeclaration": 1959, "src": "641:13:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}}, {"constant": false, "functionSelector": "b4055d15", "id": 9475, "mutability": "mutable", "name": "totalBankroll", "nameLocation": "676:13:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "661:28:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9474, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "661:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "203c27a6", "id": 9477, "mutability": "mutable", "name": "poolDepleted", "nameLocation": "708:12:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "696:24:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 9476, "name": "bool", "nodeType": "ElementaryTypeName", "src": "696:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "public"}, {"constant": false, "functionSelector": "e3fd80dd", "id": 9479, "mutability": "mutable", "name": "negativeBankroll", "nameLocation": "742:16:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "727:31:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9478, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "727:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "b359a9f9", "id": 9482, "mutability": "immutable", "name": "crush", "nameLocation": "830:5:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "799:36:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}, "typeName": {"id": 9481, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 9480, "name": "ERC20Burnable", "nodeType": "IdentifierPath", "referencedDeclaration": 1959, "src": "799:13:11"}, "referencedDeclaration": 1959, "src": "799:13:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "visibility": "public"}, {"constant": false, "functionSelector": "0c56ae3b", "id": 9485, "mutability": "immutable", "name": "stakingPool", "nameLocation": "875:11:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "842:44:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}, "typeName": {"id": 9484, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 9483, "name": "BitcrushStaking", "nodeType": "IdentifierPath", "referencedDeclaration": 9119, "src": "842:15:11"}, "referencedDeclaration": 9119, "src": "842:15:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "visibility": "public"}, {"constant": false, "functionSelector": "cd3293de", "id": 9487, "mutability": "mutable", "name": "reserve", "nameLocation": "910:7:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "895:22:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9486, "name": "address", "nodeType": "ElementaryTypeName", "src": "895:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "ba13a572", "id": 9489, "mutability": "mutable", "name": "lottery", "nameLocation": "939:7:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "924:22:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9488, "name": "address", "nodeType": "ElementaryTypeName", "src": "924:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": true, "functionSelector": "3410fe6e", "id": 9492, "mutability": "constant", "name": "DIVISOR", "nameLocation": "979:7:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "955:39:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "955:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "3130303030", "id": 9491, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "989:5:11", "typeDescriptions": {"typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000"}, "value": "10000"}, "visibility": "public"}, {"constant": true, "functionSelector": "f846a885", "id": 9495, "mutability": "constant", "name": "BURN_RATE", "nameLocation": "1025:9:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1001:39:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9493, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1001:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "313030", "id": 9494, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1037:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100"}, "value": "100"}, "visibility": "public"}, {"constant": false, "functionSelector": "f974821a", "id": 9497, "mutability": "mutable", "name": "profitThreshold", "nameLocation": "1062:15:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1047:30:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1047:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "3e1f55e4", "id": 9499, "mutability": "mutable", "name": "profitShare", "nameLocation": "1127:11:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1112:26:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9498, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1112:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "2feda8d4", "id": 9501, "mutability": "mutable", "name": "houseBankrollShare", "nameLocation": "1160:18:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1145:33:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9500, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1145:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "4e584e11", "id": 9503, "mutability": "mutable", "name": "lotteryShare", "nameLocation": "1200:12:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1185:27:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9502, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1185:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "e7cb3d67", "id": 9505, "mutability": "mutable", "name": "reserveShare", "nameLocation": "1234:12:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1219:27:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9504, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1219:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "7d903ecc", "id": 9507, "mutability": "mutable", "name": "brSinceCompound", "nameLocation": "1293:15:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1278:30:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9506, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1278:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "8e4a6142", "id": 9509, "mutability": "mutable", "name": "negativeBrSinceCompound", "nameLocation": "1330:23:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1315:38:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9508, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1315:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "b72481f8", "id": 9511, "mutability": "mutable", "name": "totalWinnings", "nameLocation": "1425:13:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1410:28:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9510, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1410:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "86001519", "id": 9513, "mutability": "mutable", "name": "totalProfit", "nameLocation": "1460:11:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1445:26:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9512, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1445:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "id": 9515, "mutability": "mutable", "name": "admin", "nameLocation": "1488:5:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1480:13:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9514, "name": "address", "nodeType": "ElementaryTypeName", "src": "1480:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"body": {"id": 9529, "nodeType": "Block", "src": "1539:140:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 9524, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 9518, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1572:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1572:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 9522, "name": "admin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9515, "src": "1594:5:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 9521, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1586:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9520, "name": "address", "nodeType": "ElementaryTypeName", "src": "1586:7:11", "typeDescriptions": {}}}, "id": 9523, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1586:14:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1572:28:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416363657373207265737472696374656420746f2061646d696e206f6e6c79", "id": 9525, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1615:33:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4aa5da9237c6f6c0b797fa6ee0420799c2210733e81474737e101e1370d24f39", "typeString": "literal_string \"Access restricted to admin only\""}, "value": "Access restricted to admin only"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4aa5da9237c6f6c0b797fa6ee0420799c2210733e81474737e101e1370d24f39", "typeString": "literal_string \"Access restricted to admin only\""}], "id": 9517, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1550:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9526, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1550:109:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9527, "nodeType": "ExpressionStatement", "src": "1550:109:11"}, {"id": 9528, "nodeType": "PlaceholderStatement", "src": "1670:1:11"}]}, "id": 9530, "name": "adminOnly", "nameLocation": "1527:9:11", "nodeType": "ModifierDefinition", "parameters": {"id": 9516, "nodeType": "ParameterList", "parameters": [], "src": "1536:2:11"}, "src": "1518:161:11", "virtual": false, "visibility": "internal"}, {"constant": false, "functionSelector": "f19e207e", "id": 9534, "mutability": "mutable", "name": "authorizedAddresses", "nameLocation": "1747:19:11", "nodeType": "VariableDeclaration", "scope": 10447, "src": "1715:51:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 9533, "keyType": {"id": 9531, "name": "address", "nodeType": "ElementaryTypeName", "src": "1723:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1715:24:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 9532, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1734:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"anonymous": false, "id": 9544, "name": "SharesUpdated", "nameLocation": "1779:13:11", "nodeType": "EventDefinition", "parameters": {"id": 9543, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9536, "indexed": false, "mutability": "mutable", "name": "_houseBankrollShare", "nameLocation": "1811:19:11", "nodeType": "VariableDeclaration", "scope": 9544, "src": "1803:27:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9535, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1803:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9538, "indexed": false, "mutability": "mutable", "name": "_profitShare", "nameLocation": "1849:12:11", "nodeType": "VariableDeclaration", "scope": 9544, "src": "1841:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9537, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1841:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9540, "indexed": false, "mutability": "mutable", "name": "_lotteryShare", "nameLocation": "1880:13:11", "nodeType": "VariableDeclaration", "scope": 9544, "src": "1872:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9539, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1872:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9542, "indexed": false, "mutability": "mutable", "name": "_reserveShare", "nameLocation": "1912:13:11", "nodeType": "VariableDeclaration", "scope": 9544, "src": "1904:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9541, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1904:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1792:140:11"}, "src": "1773:160:11"}, {"body": {"id": 9603, "nodeType": "Block", "src": "2242:319:11", "statements": [{"expression": {"id": 9569, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9567, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "2253:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9568, "name": "_crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9547, "src": "2261:6:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "src": "2253:14:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9570, "nodeType": "ExpressionStatement", "src": "2253:14:11"}, {"expression": {"id": 9573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9571, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "2278:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9572, "name": "_stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9550, "src": "2292:12:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "src": "2278:26:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "id": 9574, "nodeType": "ExpressionStatement", "src": "2278:26:11"}, {"expression": {"id": 9577, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9575, "name": "reserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9487, "src": "2315:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9576, "name": "_reserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9552, "src": "2325:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2315:18:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 9578, "nodeType": "ExpressionStatement", "src": "2315:18:11"}, {"expression": {"id": 9581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9579, "name": "lottery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9489, "src": "2344:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9580, "name": "_lottery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9554, "src": "2354:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2344:18:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 9582, "nodeType": "ExpressionStatement", "src": "2344:18:11"}, {"expression": {"id": 9585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9583, "name": "profitShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9499, "src": "2373:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9584, "name": "_profitShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9556, "src": "2387:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2373:26:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9586, "nodeType": "ExpressionStatement", "src": "2373:26:11"}, {"expression": {"id": 9589, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9587, "name": "houseBankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9501, "src": "2410:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9588, "name": "_houseBankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9558, "src": "2431:19:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2410:40:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9590, "nodeType": "ExpressionStatement", "src": "2410:40:11"}, {"expression": {"id": 9593, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9591, "name": "lotteryShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9503, "src": "2461:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9592, "name": "_lotteryShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9560, "src": "2476:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2461:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9594, "nodeType": "ExpressionStatement", "src": "2461:28:11"}, {"expression": {"id": 9597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9595, "name": "reserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9505, "src": "2500:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9596, "name": "_reserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9562, "src": "2515:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2500:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9598, "nodeType": "ExpressionStatement", "src": "2500:28:11"}, {"expression": {"id": 9601, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9599, "name": "admin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9515, "src": "2539:5:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9600, "name": "_admin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9564, "src": "2547:6:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2539:14:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 9602, "nodeType": "ExpressionStatement", "src": "2539:14:11"}]}, "id": 9604, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 9565, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9547, "mutability": "mutable", "name": "_crush", "nameLocation": "1977:6:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "1963:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}, "typeName": {"id": 9546, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 9545, "name": "ERC20Burnable", "nodeType": "IdentifierPath", "referencedDeclaration": 1959, "src": "1963:13:11"}, "referencedDeclaration": 1959, "src": "1963:13:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "visibility": "internal"}, {"constant": false, "id": 9550, "mutability": "mutable", "name": "_stakingPool", "nameLocation": "2010:12:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "1994:28:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}, "typeName": {"id": 9549, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 9548, "name": "BitcrushStaking", "nodeType": "IdentifierPath", "referencedDeclaration": 9119, "src": "1994:15:11"}, "referencedDeclaration": 9119, "src": "1994:15:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "visibility": "internal"}, {"constant": false, "id": 9552, "mutability": "mutable", "name": "_reserve", "nameLocation": "2041:8:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "2033:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9551, "name": "address", "nodeType": "ElementaryTypeName", "src": "2033:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9554, "mutability": "mutable", "name": "_lottery", "nameLocation": "2068:8:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "2060:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9553, "name": "address", "nodeType": "ElementaryTypeName", "src": "2060:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9556, "mutability": "mutable", "name": "_profitShare", "nameLocation": "2095:12:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "2087:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9555, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2087:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9558, "mutability": "mutable", "name": "_houseBankrollShare", "nameLocation": "2126:19:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "2118:27:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9557, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2118:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9560, "mutability": "mutable", "name": "_lotteryShare", "nameLocation": "2164:13:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "2156:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9559, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2156:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9562, "mutability": "mutable", "name": "_reserveShare", "nameLocation": "2196:13:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "2188:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9561, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2188:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9564, "mutability": "mutable", "name": "_admin", "nameLocation": "2228:6:11", "nodeType": "VariableDeclaration", "scope": 9604, "src": "2220:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9563, "name": "address", "nodeType": "ElementaryTypeName", "src": "2220:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1952:289:11"}, "returnParameters": {"id": 9566, "nodeType": "ParameterList", "parameters": [], "src": "2242:0:11"}, "scope": 10447, "src": "1941:620:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 9618, "nodeType": "Block", "src": "2819:55:11", "statements": [{"expression": {"id": 9616, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 9612, "name": "authorizedAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9534, "src": "2830:19:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 9614, "indexExpression": {"id": 9613, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9607, "src": "2850:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2830:29:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 9615, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2862:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "2830:36:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9617, "nodeType": "ExpressionStatement", "src": "2830:36:11"}]}, "documentation": {"id": 9605, "nodeType": "StructuredDocumentation", "src": "2569:183:11", "text": "authorize address to register wins and losses\n @param _address the address to be authorized\n @dev updates the authorizedAddresses mapping to true for given address"}, "functionSelector": "4a5db3b5", "id": 9619, "implemented": true, "kind": "function", "modifiers": [{"id": 9610, "kind": "modifierInvocation", "modifierName": {"id": 9609, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "2809:9:11"}, "nodeType": "ModifierInvocation", "src": "2809:9:11"}], "name": "authorizeAddress", "nameLocation": "2767:16:11", "nodeType": "FunctionDefinition", "parameters": {"id": 9608, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9607, "mutability": "mutable", "name": "_address", "nameLocation": "2792:8:11", "nodeType": "VariableDeclaration", "scope": 9619, "src": "2784:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9606, "name": "address", "nodeType": "ElementaryTypeName", "src": "2784:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2783:18:11"}, "returnParameters": {"id": 9611, "nodeType": "ParameterList", "parameters": [], "src": "2819:0:11"}, "scope": 10447, "src": "2758:116:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 9632, "nodeType": "Block", "src": "3161:55:11", "statements": [{"expression": {"id": 9630, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "3172:36:11", "subExpression": {"baseExpression": {"id": 9627, "name": "authorizedAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9534, "src": "3179:19:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 9629, "indexExpression": {"id": 9628, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9622, "src": "3199:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3179:29:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9631, "nodeType": "ExpressionStatement", "src": "3172:36:11"}]}, "documentation": {"id": 9620, "nodeType": "StructuredDocumentation", "src": "2882:209:11", "text": "remove authorization of an address from register wins and losses\n @param _address the address to be removed\n @dev updates the authorizedAddresses mapping by deleting entry for given address"}, "functionSelector": "94f3f81d", "id": 9633, "implemented": true, "kind": "function", "modifiers": [{"id": 9625, "kind": "modifierInvocation", "modifierName": {"id": 9624, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "3151:9:11"}, "nodeType": "ModifierInvocation", "src": "3151:9:11"}], "name": "removeAuthorization", "nameLocation": "3106:19:11", "nodeType": "FunctionDefinition", "parameters": {"id": 9623, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9622, "mutability": "mutable", "name": "_address", "nameLocation": "3134:8:11", "nodeType": "VariableDeclaration", "scope": 9633, "src": "3126:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9621, "name": "address", "nodeType": "ElementaryTypeName", "src": "3126:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3125:18:11"}, "returnParameters": {"id": 9626, "nodeType": "ParameterList", "parameters": [], "src": "3161:0:11"}, "scope": 10447, "src": "3097:119:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 9749, "nodeType": "Block", "src": "3310:1104:11", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 9643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9641, "name": "poolDepleted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9477, "src": "3325:12:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "74727565", "id": 9642, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3341:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "3325:20:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9747, "nodeType": "Block", "src": "4265:142:11", "statements": [{"expression": {"arguments": [{"expression": {"id": 9731, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4303:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4303:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9735, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "4323:4:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}], "id": 9734, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4315:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9733, "name": "address", "nodeType": "ElementaryTypeName", "src": "4315:7:11", "typeDescriptions": {}}}, "id": 9736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4315:13:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9737, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9636, "src": "4330:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9728, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "4280:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9730, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "4280:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9738, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4280:58:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9739, "nodeType": "ExpressionStatement", "src": "4280:58:11"}, {"expression": {"id": 9745, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9740, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "4353:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9743, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9636, "src": "4387:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9741, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "4369:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9742, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "4369:17:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9744, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4369:26:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4353:42:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9746, "nodeType": "ExpressionStatement", "src": "4353:42:11"}]}, "id": 9748, "nodeType": "IfStatement", "src": "3321:1086:11", "trueBody": {"id": 9727, "nodeType": "Block", "src": "3347:912:11", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9646, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9644, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9636, "src": "3366:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 9645, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "3377:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3366:27:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9725, "nodeType": "Block", "src": "3944:304:11", "statements": [{"expression": {"arguments": [{"expression": {"id": 9703, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4008:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9704, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4008:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9707, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "4049:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}], "id": 9706, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4041:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9705, "name": "address", "nodeType": "ElementaryTypeName", "src": "4041:7:11", "typeDescriptions": {}}}, "id": 9708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4041:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9709, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9636, "src": "4084:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9700, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "3963:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9702, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "3963:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9710, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3963:147:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9711, "nodeType": "ExpressionStatement", "src": "3963:147:11"}, {"expression": {"arguments": [{"id": 9715, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9636, "src": "4157:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9712, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "4129:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "id": 9714, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "unfreezeStaking", "nodeType": "MemberAccess", "referencedDeclaration": 8644, "src": "4129:27:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 9716, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4129:36:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9717, "nodeType": "ExpressionStatement", "src": "4129:36:11"}, {"expression": {"id": 9723, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9718, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "4184:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9721, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9636, "src": "4224:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9719, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "4203:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9720, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "4203:20:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9722, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4203:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4184:48:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9724, "nodeType": "ExpressionStatement", "src": "4184:48:11"}]}, "id": 9726, "nodeType": "IfStatement", "src": "3362:886:11", "trueBody": {"id": 9699, "nodeType": "Block", "src": "3395:543:11", "statements": [{"assignments": [9648], "declarations": [{"constant": false, "id": 9648, "mutability": "mutable", "name": "remainder", "nameLocation": "3422:9:11", "nodeType": "VariableDeclaration", "scope": 9699, "src": "3414:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9647, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3414:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9653, "initialValue": {"arguments": [{"id": 9651, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "3446:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9649, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9636, "src": "3434:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9650, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "3434:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9652, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3434:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3414:49:11"}, {"expression": {"arguments": [{"expression": {"id": 9657, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3527:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3527:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9661, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "3568:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}], "id": 9660, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3560:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9659, "name": "address", "nodeType": "ElementaryTypeName", "src": "3560:7:11", "typeDescriptions": {}}}, "id": 9662, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3560:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9663, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "3603:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9654, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "3482:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9656, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "3482:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9664, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3482:156:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9665, "nodeType": "ExpressionStatement", "src": "3482:156:11"}, {"expression": {"arguments": [{"id": 9669, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "3685:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9666, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "3657:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "id": 9668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "unfreezeStaking", "nodeType": "MemberAccess", "referencedDeclaration": 8644, "src": "3657:27:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 9670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3657:45:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9671, "nodeType": "ExpressionStatement", "src": "3657:45:11"}, {"expression": {"id": 9674, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9672, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "3721:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 9673, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3740:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3721:20:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9675, "nodeType": "ExpressionStatement", "src": "3721:20:11"}, {"expression": {"id": 9678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9676, "name": "poolDepleted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9477, "src": "3760:12:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 9677, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3775:5:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "3760:20:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9679, "nodeType": "ExpressionStatement", "src": "3760:20:11"}, {"expression": {"arguments": [{"expression": {"id": 9683, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3822:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9684, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3822:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9687, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3842:4:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}], "id": 9686, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3834:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9685, "name": "address", "nodeType": "ElementaryTypeName", "src": "3834:7:11", "typeDescriptions": {}}}, "id": 9688, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3834:13:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9689, "name": "remainder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9648, "src": "3849:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9680, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "3799:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9682, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "3799:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9690, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3799:60:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9691, "nodeType": "ExpressionStatement", "src": "3799:60:11"}, {"expression": {"id": 9697, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9692, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "3878:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9695, "name": "remainder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9648, "src": "3912:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9693, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "3894:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9694, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "3894:17:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9696, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3894:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3878:44:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9698, "nodeType": "ExpressionStatement", "src": "3878:44:11"}]}}]}}]}, "documentation": {"id": 9634, "nodeType": "StructuredDocumentation", "src": "3224:23:11", "text": "DESCRIPTION PENDING"}, "functionSelector": "151fac7b", "id": 9750, "implemented": true, "kind": "function", "modifiers": [{"id": 9639, "kind": "modifierInvocation", "modifierName": {"id": 9638, "name": "adminOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 9530, "src": "3300:9:11"}, "nodeType": "ModifierInvocation", "src": "3300:9:11"}], "name": "addToBankroll", "nameLocation": "3262:13:11", "nodeType": "FunctionDefinition", "parameters": {"id": 9637, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9636, "mutability": "mutable", "name": "_amount", "nameLocation": "3284:7:11", "nodeType": "VariableDeclaration", "scope": 9750, "src": "3276:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9635, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3276:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3275:17:11"}, "returnParameters": {"id": 9640, "nodeType": "ParameterList", "parameters": [], "src": "3310:0:11"}, "scope": 10447, "src": "3253:1161:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 9878, "nodeType": "Block", "src": "4687:1503:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 9762, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 9757, "name": "authorizedAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9534, "src": "4720:19:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 9760, "indexExpression": {"expression": {"id": 9758, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4740:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4740:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4720:31:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "74727565", "id": 9761, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4755:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "4720:39:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616c6c6572206d75737420626520617574686f72697a6564", "id": 9763, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4774:27:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fce70a759547fc07de5fbf447df245ef9b0c40bbac727fa7000a83a126242f5f", "typeString": "literal_string \"Caller must be authorized\""}, "value": "Caller must be authorized"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fce70a759547fc07de5fbf447df245ef9b0c40bbac727fa7000a83a126242f5f", "typeString": "literal_string \"Caller must be authorized\""}], "id": 9756, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4698:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9764, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4698:114:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9765, "nodeType": "ExpressionStatement", "src": "4698:114:11"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 9768, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9766, "name": "poolDepleted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9477, "src": "5061:12:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "74727565", "id": 9767, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5077:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5061:20:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9872, "nodeType": "Block", "src": "6001:142:11", "statements": [{"expression": {"arguments": [{"expression": {"id": 9856, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6039:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6039:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9860, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "6059:4:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}], "id": 9859, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6051:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9858, "name": "address", "nodeType": "ElementaryTypeName", "src": "6051:7:11", "typeDescriptions": {}}}, "id": 9861, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6051:13:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9862, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9753, "src": "6066:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9853, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "6016:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9855, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "6016:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9863, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6016:58:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9864, "nodeType": "ExpressionStatement", "src": "6016:58:11"}, {"expression": {"id": 9870, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9865, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "6089:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9868, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9753, "src": "6123:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9866, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "6105:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "6105:17:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9869, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6105:26:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6089:42:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9871, "nodeType": "ExpressionStatement", "src": "6089:42:11"}]}, "id": 9873, "nodeType": "IfStatement", "src": "5057:1086:11", "trueBody": {"id": 9852, "nodeType": "Block", "src": "5083:912:11", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9771, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9769, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9753, "src": "5102:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 9770, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "5113:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5102:27:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9850, "nodeType": "Block", "src": "5680:304:11", "statements": [{"expression": {"arguments": [{"expression": {"id": 9828, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5744:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9829, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5744:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9832, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "5785:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}], "id": 9831, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5777:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9830, "name": "address", "nodeType": "ElementaryTypeName", "src": "5777:7:11", "typeDescriptions": {}}}, "id": 9833, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5777:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9834, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9753, "src": "5820:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9825, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "5699:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9827, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "5699:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9835, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5699:147:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9836, "nodeType": "ExpressionStatement", "src": "5699:147:11"}, {"expression": {"arguments": [{"id": 9840, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9753, "src": "5893:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9837, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "5865:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "id": 9839, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "unfreezeStaking", "nodeType": "MemberAccess", "referencedDeclaration": 8644, "src": "5865:27:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 9841, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5865:36:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9842, "nodeType": "ExpressionStatement", "src": "5865:36:11"}, {"expression": {"id": 9848, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9843, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "5920:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9846, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9753, "src": "5960:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9844, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "5939:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9845, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "5939:20:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9847, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5939:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5920:48:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9849, "nodeType": "ExpressionStatement", "src": "5920:48:11"}]}, "id": 9851, "nodeType": "IfStatement", "src": "5098:886:11", "trueBody": {"id": 9824, "nodeType": "Block", "src": "5131:543:11", "statements": [{"assignments": [9773], "declarations": [{"constant": false, "id": 9773, "mutability": "mutable", "name": "remainder", "nameLocation": "5158:9:11", "nodeType": "VariableDeclaration", "scope": 9824, "src": "5150:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9772, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5150:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9778, "initialValue": {"arguments": [{"id": 9776, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "5182:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9774, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9753, "src": "5170:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9775, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "5170:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9777, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5170:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5150:49:11"}, {"expression": {"arguments": [{"expression": {"id": 9782, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5263:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9783, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5263:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9786, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "5304:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}], "id": 9785, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5296:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9784, "name": "address", "nodeType": "ElementaryTypeName", "src": "5296:7:11", "typeDescriptions": {}}}, "id": 9787, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5296:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9788, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "5339:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9779, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "5218:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9781, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "5218:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9789, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5218:156:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9790, "nodeType": "ExpressionStatement", "src": "5218:156:11"}, {"expression": {"arguments": [{"id": 9794, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "5421:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9791, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "5393:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "id": 9793, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "unfreezeStaking", "nodeType": "MemberAccess", "referencedDeclaration": 8644, "src": "5393:27:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 9795, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5393:45:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9796, "nodeType": "ExpressionStatement", "src": "5393:45:11"}, {"expression": {"id": 9799, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9797, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "5457:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 9798, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5476:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5457:20:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9800, "nodeType": "ExpressionStatement", "src": "5457:20:11"}, {"expression": {"id": 9803, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9801, "name": "poolDepleted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9477, "src": "5496:12:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 9802, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5511:5:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "5496:20:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9804, "nodeType": "ExpressionStatement", "src": "5496:20:11"}, {"expression": {"arguments": [{"expression": {"id": 9808, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5558:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9809, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5558:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9812, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5578:4:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}], "id": 9811, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5570:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9810, "name": "address", "nodeType": "ElementaryTypeName", "src": "5570:7:11", "typeDescriptions": {}}}, "id": 9813, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5570:13:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9814, "name": "remainder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9773, "src": "5585:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9805, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "5535:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9807, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "5535:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9815, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5535:60:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9816, "nodeType": "ExpressionStatement", "src": "5535:60:11"}, {"expression": {"id": 9822, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9817, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "5614:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9820, "name": "remainder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9773, "src": "5648:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9818, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "5630:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "5630:17:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9821, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5630:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5614:44:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9823, "nodeType": "ExpressionStatement", "src": "5614:44:11"}]}}]}}, {"expression": {"arguments": [{"id": 9875, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9753, "src": "6174:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9874, "name": "addToBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10115, "src": "6153:20:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 9876, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6153:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9877, "nodeType": "ExpressionStatement", "src": "6153:29:11"}]}, "documentation": {"id": 9751, "nodeType": "StructuredDocumentation", "src": "4422:214:11", "text": "Add users loss to the bankroll\n @param _amount the amount to add\n @dev adds funds to the bankroll if bankroll is in positive, otherwise its transfered to the staking pool to recover frozen funds"}, "functionSelector": "c2e50b16", "id": 9879, "implemented": true, "kind": "function", "modifiers": [], "name": "addUserLoss", "nameLocation": "4651:11:11", "nodeType": "FunctionDefinition", "parameters": {"id": 9754, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9753, "mutability": "mutable", "name": "_amount", "nameLocation": "4671:7:11", "nodeType": "VariableDeclaration", "scope": 9879, "src": "4663:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9752, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4663:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4662:17:11"}, "returnParameters": {"id": 9755, "nodeType": "ParameterList", "parameters": [], "src": "4687:0:11"}, "scope": 10447, "src": "4642:1548:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 9943, "nodeType": "Block", "src": "6484:534:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 9892, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 9886, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6517:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9887, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6517:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 9890, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "6539:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}], "id": 9889, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6531:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9888, "name": "address", "nodeType": "ElementaryTypeName", "src": "6531:7:11", "typeDescriptions": {}}}, "id": 9891, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6531:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6517:34:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616c6c6572206d757374206265207374616b696e6720706f6f6c", "id": 9893, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6566:29:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_da541bd5d964a1cf11d8bdae760d6b3de60b4d929702201227a675548fce0195", "typeString": "literal_string \"Caller must be staking pool\""}, "value": "Caller must be staking pool"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_da541bd5d964a1cf11d8bdae760d6b3de60b4d929702201227a675548fce0195", "typeString": "literal_string \"Caller must be staking pool\""}], "id": 9885, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6495:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9894, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6495:111:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9895, "nodeType": "ExpressionStatement", "src": "6495:111:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9898, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9896, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9882, "src": "6621:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 9897, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "6632:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6621:27:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9941, "nodeType": "Block", "src": "6936:75:11", "statements": [{"expression": {"id": 9939, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9934, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "6951:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9937, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9882, "src": "6991:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9935, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "6970:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9936, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "6970:20:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9938, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6970:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6951:48:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9940, "nodeType": "ExpressionStatement", "src": "6951:48:11"}]}, "id": 9942, "nodeType": "IfStatement", "src": "6617:394:11", "trueBody": {"id": 9933, "nodeType": "Block", "src": "6650:280:11", "statements": [{"assignments": [9900], "declarations": [{"constant": false, "id": 9900, "mutability": "mutable", "name": "remainder", "nameLocation": "6673:9:11", "nodeType": "VariableDeclaration", "scope": 9933, "src": "6665:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9899, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6665:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9905, "initialValue": {"arguments": [{"id": 9903, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "6697:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9901, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9882, "src": "6685:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9902, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "6685:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9904, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6685:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6665:49:11"}, {"expression": {"id": 9908, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9906, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "6729:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 9907, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6748:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6729:20:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9909, "nodeType": "ExpressionStatement", "src": "6729:20:11"}, {"expression": {"id": 9912, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9910, "name": "poolDepleted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9477, "src": "6764:12:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 9911, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6779:5:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "6764:20:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9913, "nodeType": "ExpressionStatement", "src": "6764:20:11"}, {"expression": {"arguments": [{"expression": {"id": 9917, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6822:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9918, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6822:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 9921, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "6842:4:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushBankroll_$10447", "typeString": "contract BitcrushBankroll"}], "id": 9920, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6834:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9919, "name": "address", "nodeType": "ElementaryTypeName", "src": "6834:7:11", "typeDescriptions": {}}}, "id": 9922, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6834:13:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9923, "name": "remainder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9900, "src": "6849:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9914, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "6799:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 9916, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "6799:22:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 9924, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6799:60:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9925, "nodeType": "ExpressionStatement", "src": "6799:60:11"}, {"expression": {"id": 9931, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9926, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "6874:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9929, "name": "remainder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9900, "src": "6908:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9927, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "6890:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9928, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "6890:17:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9930, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6890:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6874:44:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9932, "nodeType": "ExpressionStatement", "src": "6874:44:11"}]}}]}, "documentation": {"id": 9880, "nodeType": "StructuredDocumentation", "src": "6198:231:11", "text": "Deduct users win from the bankroll\n @param _amount the amount to deduct\n @dev deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative"}, "functionSelector": "59c53fd4", "id": 9944, "implemented": true, "kind": "function", "modifiers": [], "name": "recoverBankroll", "nameLocation": "6444:15:11", "nodeType": "FunctionDefinition", "parameters": {"id": 9883, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9882, "mutability": "mutable", "name": "_amount", "nameLocation": "6468:7:11", "nodeType": "VariableDeclaration", "scope": 9944, "src": "6460:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9881, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6460:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6459:17:11"}, "returnParameters": {"id": 9884, "nodeType": "ParameterList", "parameters": [], "src": "6484:0:11"}, "scope": 10447, "src": "6435:583:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 10031, "nodeType": "Block", "src": "7331:900:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 9958, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 9953, "name": "authorizedAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9534, "src": "7364:19:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 9956, "indexExpression": {"expression": {"id": 9954, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7384:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9955, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7384:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7364:31:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "74727565", "id": 9957, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7399:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "7364:39:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616c6c6572206d75737420626520617574686f72697a6564", "id": 9959, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7418:27:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fce70a759547fc07de5fbf447df245ef9b0c40bbac727fa7000a83a126242f5f", "typeString": "literal_string \"Caller must be authorized\""}, "value": "Caller must be authorized"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fce70a759547fc07de5fbf447df245ef9b0c40bbac727fa7000a83a126242f5f", "typeString": "literal_string \"Caller must be authorized\""}], "id": 9952, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7342:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9960, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7342:114:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9961, "nodeType": "ExpressionStatement", "src": "7342:114:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9964, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9962, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9947, "src": "7620:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 9963, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "7630:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7620:23:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 10018, "nodeType": "Block", "src": "7996:130:11", "statements": [{"expression": {"id": 10009, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10004, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "8011:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10007, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9947, "src": "8045:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10005, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "8027:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10006, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "8027:17:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10008, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8027:26:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8011:42:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10010, "nodeType": "ExpressionStatement", "src": "8011:42:11"}, {"expression": {"arguments": [{"id": 10012, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9947, "src": "8085:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10013, "name": "_winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9949, "src": "8094:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 10014, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8103:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 10015, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8103:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 10011, "name": "transferWinnings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10064, "src": "8068:16:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,address,address)"}}, "id": 10016, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8068:46:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10017, "nodeType": "ExpressionStatement", "src": "8068:46:11"}]}, "id": 10019, "nodeType": "IfStatement", "src": "7616:510:11", "trueBody": {"id": 10003, "nodeType": "Block", "src": "7645:345:11", "statements": [{"assignments": [9966], "declarations": [{"constant": false, "id": 9966, "mutability": "mutable", "name": "remainder", "nameLocation": "7668:9:11", "nodeType": "VariableDeclaration", "scope": 10003, "src": "7660:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9965, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7660:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9971, "initialValue": {"arguments": [{"id": 9969, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "7692:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9967, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9947, "src": "7680:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9968, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "7680:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9970, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7680:26:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7660:46:11"}, {"expression": {"id": 9974, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9972, "name": "poolDepleted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9477, "src": "7721:12:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 9973, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7736:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "7721:19:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9975, "nodeType": "ExpressionStatement", "src": "7721:19:11"}, {"expression": {"arguments": [{"id": 9979, "name": "remainder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9966, "src": "7781:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9980, "name": "_winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9949, "src": "7792:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 9981, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7801:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9982, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7801:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 9976, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "7755:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}, "id": 9978, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "freezeStaking", "nodeType": "MemberAccess", "referencedDeclaration": 8606, "src": "7755:25:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,address,address) external"}}, "id": 9983, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7755:57:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9984, "nodeType": "ExpressionStatement", "src": "7755:57:11"}, {"expression": {"id": 9990, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9985, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "7827:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9988, "name": "remainder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9966, "src": "7867:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9986, "name": "negativeBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9479, "src": "7846:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9987, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "7846:20:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9989, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7846:31:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7827:50:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9991, "nodeType": "ExpressionStatement", "src": "7827:50:11"}, {"expression": {"arguments": [{"id": 9993, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "7909:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9994, "name": "_winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9949, "src": "7924:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 9995, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7933:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 9996, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7933:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 9992, "name": "transferWinnings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10064, "src": "7892:16:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,address,address)"}}, "id": 9997, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7892:52:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9998, "nodeType": "ExpressionStatement", "src": "7892:52:11"}, {"expression": {"id": 10001, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9999, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "7961:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 10000, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7977:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7961:17:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10002, "nodeType": "ExpressionStatement", "src": "7961:17:11"}]}}, {"expression": {"arguments": [{"id": 10021, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9947, "src": "8162:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 10020, "name": "removeFromBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10166, "src": "8136:25:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 10022, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8136:34:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10023, "nodeType": "ExpressionStatement", "src": "8136:34:11"}, {"expression": {"id": 10029, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10024, "name": "totalWinnings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9511, "src": "8181:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10027, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9947, "src": "8215:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10025, "name": "totalWinnings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9511, "src": "8197:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "8197:17:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8197:26:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8181:42:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10030, "nodeType": "ExpressionStatement", "src": "8181:42:11"}]}, "documentation": {"id": 9945, "nodeType": "StructuredDocumentation", "src": "7026:231:11", "text": "Deduct users win from the bankroll\n @param _amount the amount to deduct\n @dev deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative"}, "functionSelector": "61433d88", "id": 10032, "implemented": true, "kind": "function", "modifiers": [], "name": "payOutUserWinning", "nameLocation": "7272:17:11", "nodeType": "FunctionDefinition", "parameters": {"id": 9950, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9947, "mutability": "mutable", "name": "_amount", "nameLocation": "7298:7:11", "nodeType": "VariableDeclaration", "scope": 10032, "src": "7290:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9946, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7290:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9949, "mutability": "mutable", "name": "_winner", "nameLocation": "7315:7:11", "nodeType": "VariableDeclaration", "scope": 10032, "src": "7307:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9948, "name": "address", "nodeType": "ElementaryTypeName", "src": "7307:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "7289:34:11"}, "returnParameters": {"id": 9951, "nodeType": "ParameterList", "parameters": [], "src": "7331:0:11"}, "scope": 10447, "src": "7263:968:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 10063, "nodeType": "Block", "src": "8602:186:11", "statements": [{"expression": {"arguments": [{"id": 10045, "name": "_lwAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10039, "src": "8632:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10046, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10035, "src": "8644:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10042, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "8613:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 10044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 1990, "src": "8613:18:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 10047, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8613:39:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10048, "nodeType": "ExpressionStatement", "src": "8613:39:11"}, {"assignments": [10051], "declarations": [{"constant": false, "id": 10051, "mutability": "mutable", "name": "currentLw", "nameLocation": "8682:9:11", "nodeType": "VariableDeclaration", "scope": 10063, "src": "8663:28:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushLiveWallet_$11296", "typeString": "contract BitcrushLiveWallet"}, "typeName": {"id": 10050, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 10049, "name": "BitcrushLiveWallet", "nodeType": "IdentifierPath", "referencedDeclaration": 11296, "src": "8663:18:11"}, "referencedDeclaration": 11296, "src": "8663:18:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushLiveWallet_$11296", "typeString": "contract BitcrushLiveWallet"}}, "visibility": "internal"}], "id": 10055, "initialValue": {"arguments": [{"id": 10053, "name": "_lwAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10039, "src": "8713:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 10052, "name": "BitcrushLiveWallet", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11296, "src": "8694:18:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitcrushLiveWallet_$11296_$", "typeString": "type(contract BitcrushLiveWallet)"}}, "id": 10054, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8694:30:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushLiveWallet_$11296", "typeString": "contract BitcrushLiveWallet"}}, "nodeType": "VariableDeclarationStatement", "src": "8663:61:11"}, {"expression": {"arguments": [{"id": 10059, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10035, "src": "8763:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10060, "name": "_winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10037, "src": "8772:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 10056, "name": "currentLw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10051, "src": "8735:9:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushLiveWallet_$11296", "typeString": "contract BitcrushLiveWallet"}}, "id": 10058, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "addToUserWinnings", "nodeType": "MemberAccess", "referencedDeclaration": 11105, "src": "8735:27:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address) external"}}, "id": 10061, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8735:45:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10062, "nodeType": "ExpressionStatement", "src": "8735:45:11"}]}, "documentation": {"id": 10033, "nodeType": "StructuredDocumentation", "src": "8239:234:11", "text": "transfer winnings from bankroll contract to live wallet\n @param _amount the amount to tranfer\n @param _winner the winners address\n @dev transfers funds from the bankroll to the live wallet as users winnings"}, "id": 10064, "implemented": true, "kind": "function", "modifiers": [], "name": "transferWinnings", "nameLocation": "8488:16:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10040, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10035, "mutability": "mutable", "name": "_amount", "nameLocation": "8523:7:11", "nodeType": "VariableDeclaration", "scope": 10064, "src": "8515:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10034, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8515:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10037, "mutability": "mutable", "name": "_winner", "nameLocation": "8549:7:11", "nodeType": "VariableDeclaration", "scope": 10064, "src": "8541:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10036, "name": "address", "nodeType": "ElementaryTypeName", "src": "8541:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 10039, "mutability": "mutable", "name": "_lwAddress", "nameLocation": "8575:10:11", "nodeType": "VariableDeclaration", "scope": 10064, "src": "8567:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10038, "name": "address", "nodeType": "ElementaryTypeName", "src": "8567:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "8504:88:11"}, "returnParameters": {"id": 10041, "nodeType": "ParameterList", "parameters": [], "src": "8602:0:11"}, "scope": 10447, "src": "8479:309:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 10114, "nodeType": "Block", "src": "9017:504:11", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10072, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10070, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9032:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10071, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9058:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9032:27:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 10112, "nodeType": "Block", "src": "9441:73:11", "statements": [{"expression": {"id": 10110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10105, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "9456:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10108, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10067, "src": "9494:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10106, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "9474:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10107, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "9474:19:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10109, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9474:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9456:46:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10111, "nodeType": "ExpressionStatement", "src": "9456:46:11"}]}, "id": 10113, "nodeType": "IfStatement", "src": "9028:486:11", "trueBody": {"id": 10104, "nodeType": "Block", "src": "9061:374:11", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10075, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10073, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10067, "src": "9080:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 10074, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9090:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9080:33:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 10102, "nodeType": "Block", "src": "9327:97:11", "statements": [{"expression": {"id": 10100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10095, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9346:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10098, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10067, "src": "9400:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10096, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9372:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "9372:27:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10099, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9372:36:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9346:62:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10101, "nodeType": "ExpressionStatement", "src": "9346:62:11"}]}, "id": 10103, "nodeType": "IfStatement", "src": "9076:348:11", "trueBody": {"id": 10094, "nodeType": "Block", "src": "9115:206:11", "statements": [{"assignments": [10077], "declarations": [{"constant": false, "id": 10077, "mutability": "mutable", "name": "difference", "nameLocation": "9142:10:11", "nodeType": "VariableDeclaration", "scope": 10094, "src": "9134:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10076, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9134:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10082, "initialValue": {"arguments": [{"id": 10080, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9167:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10078, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10067, "src": "9155:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10079, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "9155:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10081, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9155:36:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9134:57:11"}, {"expression": {"id": 10085, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10083, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9210:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 10084, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9236:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9210:27:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10086, "nodeType": "ExpressionStatement", "src": "9210:27:11"}, {"expression": {"id": 10092, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10087, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "9256:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10090, "name": "difference", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10077, "src": "9294:10:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10088, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "9274:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10089, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "9274:19:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10091, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9274:31:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9256:49:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10093, "nodeType": "ExpressionStatement", "src": "9256:49:11"}]}}]}}]}, "documentation": {"id": 10065, "nodeType": "StructuredDocumentation", "src": "8796:159:11", "text": "track funds added since last compound and profit transfer\n @param _amount the amount to add\n @dev add funds to the variable brSinceCompound"}, "id": 10115, "implemented": true, "kind": "function", "modifiers": [], "name": "addToBrSinceCompound", "nameLocation": "8970:20:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10068, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10067, "mutability": "mutable", "name": "_amount", "nameLocation": "8999:7:11", "nodeType": "VariableDeclaration", "scope": 10115, "src": "8991:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10066, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8991:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8990:17:11"}, "returnParameters": {"id": 10069, "nodeType": "ParameterList", "parameters": [], "src": "9017:0:11"}, "scope": 10447, "src": "8961:560:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 10165, "nodeType": "Block", "src": "9763:536:11", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10121, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9778:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10122, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9804:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9778:27:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 10163, "nodeType": "Block", "src": "9902:390:11", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10132, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10118, "src": "9921:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 10133, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "9931:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9921:25:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 10161, "nodeType": "Block", "src": "10200:81:11", "statements": [{"expression": {"id": 10159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10154, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "10219:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10157, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10118, "src": "10257:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10155, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "10237:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "10237:19:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10158, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10237:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10219:46:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10160, "nodeType": "ExpressionStatement", "src": "10219:46:11"}]}, "id": 10162, "nodeType": "IfStatement", "src": "9917:364:11", "trueBody": {"id": 10153, "nodeType": "Block", "src": "9948:246:11", "statements": [{"assignments": [10136], "declarations": [{"constant": false, "id": 10136, "mutability": "mutable", "name": "difference", "nameLocation": "9975:10:11", "nodeType": "VariableDeclaration", "scope": 10153, "src": "9967:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10135, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9967:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10141, "initialValue": {"arguments": [{"id": 10139, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "10000:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10137, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10118, "src": "9988:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "9988:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10140, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9988:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9967:49:11"}, {"expression": {"id": 10144, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10142, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "10035:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 10143, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10053:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "10035:19:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10145, "nodeType": "ExpressionStatement", "src": "10035:19:11"}, {"expression": {"id": 10151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10146, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "10073:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10149, "name": "difference", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10136, "src": "10149:10:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10147, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "10099:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10148, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "10099:27:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10150, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10099:79:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10073:105:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10152, "nodeType": "ExpressionStatement", "src": "10073:105:11"}]}}]}, "id": 10164, "nodeType": "IfStatement", "src": "9774:518:11", "trueBody": {"id": 10131, "nodeType": "Block", "src": "9807:89:11", "statements": [{"expression": {"id": 10129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10124, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9822:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10127, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10118, "src": "9876:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10125, "name": "negativeBrSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9509, "src": "9848:23:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "9848:27:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10128, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9848:36:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9822:62:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10130, "nodeType": "ExpressionStatement", "src": "9822:62:11"}]}}]}, "documentation": {"id": 10116, "nodeType": "StructuredDocumentation", "src": "9529:167:11", "text": "track funds remvoed since last compound and profit transfer\n @param _amount the amount to remove\n @dev deduct funds to the variable brSinceCompound"}, "id": 10166, "implemented": true, "kind": "function", "modifiers": [], "name": "removeFromBrSinceCompound", "nameLocation": "9711:25:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10119, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10118, "mutability": "mutable", "name": "_amount", "nameLocation": "9745:7:11", "nodeType": "VariableDeclaration", "scope": 10166, "src": "9737:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10117, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9737:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9736:17:11"}, "returnParameters": {"id": 10120, "nodeType": "ParameterList", "parameters": [], "src": "9763:0:11"}, "scope": 10447, "src": "9702:597:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 10329, "nodeType": "Block", "src": "10533:1660:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 10179, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 10173, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "10566:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 10174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "10566:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 10177, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "10588:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}], "id": 10176, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10580:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 10175, "name": "address", "nodeType": "ElementaryTypeName", "src": "10580:7:11", "typeDescriptions": {}}}, "id": 10178, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10580:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10566:34:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616c6c6572206d757374206265207374616b696e6720706f6f6c", "id": 10180, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10615:29:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_da541bd5d964a1cf11d8bdae760d6b3de60b4d929702201227a675548fce0195", "typeString": "literal_string \"Caller must be staking pool\""}, "value": "Caller must be staking pool"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_da541bd5d964a1cf11d8bdae760d6b3de60b4d929702201227a675548fce0195", "typeString": "literal_string \"Caller must be staking pool\""}], "id": 10172, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10544:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 10181, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10544:111:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10182, "nodeType": "ExpressionStatement", "src": "10544:111:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10183, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "10670:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 10184, "name": "profitThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9497, "src": "10689:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10670:34:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 10327, "nodeType": "Block", "src": "12151:35:11", "statements": [{"expression": {"hexValue": "30", "id": 10325, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12173:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 10171, "id": 10326, "nodeType": "Return", "src": "12166:8:11"}]}, "id": 10328, "nodeType": "IfStatement", "src": "10666:1520:11", "trueBody": {"id": 10324, "nodeType": "Block", "src": "10706:1439:11", "statements": [{"assignments": [10187], "declarations": [{"constant": false, "id": 10187, "mutability": "mutable", "name": "profit", "nameLocation": "10750:6:11", "nodeType": "VariableDeclaration", "scope": 10324, "src": "10742:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10186, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10742:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10189, "initialValue": {"hexValue": "30", "id": 10188, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10759:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "10742:18:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10192, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10190, "name": "profitShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9499, "src": "10779:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10191, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10793:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "10779:15:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 10211, "nodeType": "IfStatement", "src": "10775:238:11", "trueBody": {"id": 10210, "nodeType": "Block", "src": "10796:217:11", "statements": [{"assignments": [10194], "declarations": [{"constant": false, "id": 10194, "mutability": "mutable", "name": "stakingBankrollProfit", "nameLocation": "10823:21:11", "nodeType": "VariableDeclaration", "scope": 10210, "src": "10815:29:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10193, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10815:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10202, "initialValue": {"arguments": [{"id": 10200, "name": "DIVISOR", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9492, "src": "10928:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 10197, "name": "profitShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9499, "src": "10889:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10195, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "10847:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10196, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "10847:41:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10847:54:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 9365, "src": "10847:80:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10201, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10847:89:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10815:121:11"}, {"expression": {"id": 10208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10203, "name": "profit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10187, "src": "10955:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10206, "name": "stakingBankrollProfit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10194, "src": "10975:21:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10204, "name": "profit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10187, "src": "10964:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "10964:10:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10207, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10964:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10955:42:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10209, "nodeType": "ExpressionStatement", "src": "10955:42:11"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10214, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10212, "name": "reserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9505, "src": "11031:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10213, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11046:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "11031:16:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 10233, "nodeType": "IfStatement", "src": "11027:226:11", "trueBody": {"id": 10232, "nodeType": "Block", "src": "11049:204:11", "statements": [{"assignments": [10216], "declarations": [{"constant": false, "id": 10216, "mutability": "mutable", "name": "reserveCrush", "nameLocation": "11076:12:11", "nodeType": "VariableDeclaration", "scope": 10232, "src": "11068:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10215, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11068:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10224, "initialValue": {"arguments": [{"id": 10222, "name": "DIVISOR", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9492, "src": "11151:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 10219, "name": "reserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9505, "src": "11111:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10217, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "11091:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10218, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "11091:19:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10220, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11091:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10221, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 9365, "src": "11091:37:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10223, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11091:86:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11068:109:11"}, {"expression": {"arguments": [{"id": 10228, "name": "reserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9487, "src": "11215:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10229, "name": "reserveCrush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10216, "src": "11224:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10225, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "11196:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 10227, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 1990, "src": "11196:18:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 10230, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11196:41:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10231, "nodeType": "ExpressionStatement", "src": "11196:41:11"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10234, "name": "lotteryShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9503, "src": "11271:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10235, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11286:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "11271:16:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 10255, "nodeType": "IfStatement", "src": "11267:226:11", "trueBody": {"id": 10254, "nodeType": "Block", "src": "11289:204:11", "statements": [{"assignments": [10238], "declarations": [{"constant": false, "id": 10238, "mutability": "mutable", "name": "lotteryCrush", "nameLocation": "11316:12:11", "nodeType": "VariableDeclaration", "scope": 10254, "src": "11308:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10237, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11308:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10246, "initialValue": {"arguments": [{"id": 10244, "name": "DIVISOR", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9492, "src": "11391:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 10241, "name": "lotteryShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9503, "src": "11351:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10239, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "11331:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "11331:19:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10242, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11331:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10243, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 9365, "src": "11331:37:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11331:86:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11308:109:11"}, {"expression": {"arguments": [{"id": 10250, "name": "lottery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9489, "src": "11455:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10251, "name": "lotteryCrush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10238, "src": "11464:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10247, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "11436:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 10249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 1990, "src": "11436:18:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 10252, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11436:41:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10253, "nodeType": "ExpressionStatement", "src": "11436:41:11"}]}}, {"assignments": [10257], "declarations": [{"constant": false, "id": 10257, "mutability": "mutable", "name": "burn", "nameLocation": "11517:4:11", "nodeType": "VariableDeclaration", "scope": 10324, "src": "11509:12:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10256, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11509:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10265, "initialValue": {"arguments": [{"id": 10263, "name": "DIVISOR", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9492, "src": "11559:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 10260, "name": "BURN_RATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9495, "src": "11544:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10258, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "11524:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10259, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "11524:19:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10261, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11524:30:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 9365, "src": "11524:34:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10264, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11524:43:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11509:58:11"}, {"expression": {"arguments": [{"id": 10269, "name": "burn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10257, "src": "11593:4:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10266, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "11582:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 10268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "burn", "nodeType": "MemberAccess", "referencedDeclaration": 1937, "src": "11582:10:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 10270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11582:16:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10271, "nodeType": "ExpressionStatement", "src": "11582:16:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10274, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10272, "name": "houseBankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9501, "src": "11619:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10273, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11640:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "11619:22:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 10293, "nodeType": "IfStatement", "src": "11615:254:11", "trueBody": {"id": 10292, "nodeType": "Block", "src": "11643:226:11", "statements": [{"assignments": [10276], "declarations": [{"constant": false, "id": 10276, "mutability": "mutable", "name": "bankrollShare", "nameLocation": "11670:13:11", "nodeType": "VariableDeclaration", "scope": 10292, "src": "11662:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10275, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11662:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10284, "initialValue": {"arguments": [{"id": 10282, "name": "DIVISOR", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9492, "src": "11774:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 10279, "name": "houseBankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9501, "src": "11728:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10277, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "11686:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10278, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "11686:41:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10280, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11686:61:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 9365, "src": "11686:87:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10283, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11686:96:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11662:120:11"}, {"expression": {"id": 10290, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10285, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "11801:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10288, "name": "bankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10276, "src": "11839:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10286, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "11819:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "11819:19:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11819:34:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11801:52:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10291, "nodeType": "ExpressionStatement", "src": "11801:52:11"}]}}, {"expression": {"id": 10299, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10294, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "11885:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10297, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "11919:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10295, "name": "totalBankroll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9475, "src": "11901:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "11901:17:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10298, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11901:34:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11885:50:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10300, "nodeType": "ExpressionStatement", "src": "11885:50:11"}, {"expression": {"arguments": [{"arguments": [{"id": 10306, "name": "stakingPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9485, "src": "11998:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BitcrushStaking_$9119", "typeString": "contract BitcrushStaking"}], "id": 10305, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11990:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 10304, "name": "address", "nodeType": "ElementaryTypeName", "src": "11990:7:11", "typeDescriptions": {}}}, "id": 10307, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11990:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10308, "name": "profit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10187, "src": "12012:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10301, "name": "crush", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9482, "src": "11971:5:11", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Burnable_$1959", "typeString": "contract ERC20Burnable"}}, "id": 10303, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 1990, "src": "11971:18:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1915_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 10309, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11971:48:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10310, "nodeType": "ExpressionStatement", "src": "11971:48:11"}, {"expression": {"id": 10316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10311, "name": "totalProfit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9513, "src": "12034:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10314, "name": "profit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10187, "src": "12064:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10312, "name": "totalProfit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9513, "src": "12048:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10313, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "12048:15:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10315, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12048:23:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12034:37:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10317, "nodeType": "ExpressionStatement", "src": "12034:37:11"}, {"expression": {"id": 10320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10318, "name": "brSinceCompound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9507, "src": "12086:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 10319, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12104:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12086:19:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10321, "nodeType": "ExpressionStatement", "src": "12086:19:11"}, {"expression": {"id": 10322, "name": "profit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10187, "src": "12127:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 10171, "id": 10323, "nodeType": "Return", "src": "12120:13:11"}]}}]}, "documentation": {"id": 10167, "nodeType": "StructuredDocumentation", "src": "10307:169:11", "text": "transfer profits to staking pool to be ditributed to stakers.\n @dev transfer profits since last compound to the staking pool while taking out necessary fees."}, "functionSelector": "45c9c1d1", "id": 10330, "implemented": true, "kind": "function", "modifiers": [], "name": "transferProfit", "nameLocation": "10491:14:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10168, "nodeType": "ParameterList", "parameters": [], "src": "10505:2:11"}, "returnParameters": {"id": 10171, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10170, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 10330, "src": "10524:7:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10169, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10524:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10523:9:11"}, "scope": 10447, "src": "10482:1711:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 10349, "nodeType": "Block", "src": "12429:197:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10341, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10339, "name": "_threshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10333, "src": "12462:10:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "313030303030303030303030303030303030303030303030", "id": 10340, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12475:24:11", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000000000_by_1", "typeString": "int_const 100000000000000000000000"}, "value": "100000000000000000000000"}, "src": "12462:37:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d61782070726f666974207468726573686f6c642063616e742062652067726561746572207468616e203130306b204372757368", "id": 10342, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "12514:54:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a650d9a9af20d3cb4f2df4ba0fc91440bed183cc3e983a21d9309967aa53fd78", "typeString": "literal_string \"Max profit threshold cant be greater than 100k Crush\""}, "value": "Max profit threshold cant be greater than 100k Crush"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a650d9a9af20d3cb4f2df4ba0fc91440bed183cc3e983a21d9309967aa53fd78", "typeString": "literal_string \"Max profit threshold cant be greater than 100k Crush\""}], "id": 10338, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12440:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 10343, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12440:139:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10344, "nodeType": "ExpressionStatement", "src": "12440:139:11"}, {"expression": {"id": 10347, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10345, "name": "profitThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9497, "src": "12590:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10346, "name": "_threshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10333, "src": "12608:10:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12590:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10348, "nodeType": "ExpressionStatement", "src": "12590:28:11"}]}, "documentation": {"id": 10331, "nodeType": "StructuredDocumentation", "src": "12201:157:11", "text": "Store `_threshold`.\n @param _threshold the new value to store\n @dev stores the _threshold address in the state variable `profitThreshold`"}, "functionSelector": "28821182", "id": 10350, "implemented": true, "kind": "function", "modifiers": [{"id": 10336, "kind": "modifierInvocation", "modifierName": {"id": 10335, "name": "adminOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 9530, "src": "12419:9:11"}, "nodeType": "ModifierInvocation", "src": "12419:9:11"}], "name": "setProfitThreshold", "nameLocation": "12373:18:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10334, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10333, "mutability": "mutable", "name": "_threshold", "nameLocation": "12400:10:11", "nodeType": "VariableDeclaration", "scope": 10350, "src": "12392:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10332, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12392:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12391:20:11"}, "returnParameters": {"id": 10337, "nodeType": "ParameterList", "parameters": [], "src": "12429:0:11"}, "scope": 10447, "src": "12364:262:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 10406, "nodeType": "Block", "src": "13168:604:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10379, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 10376, "name": "BURN_RATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9495, "src": "13353:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 10373, "name": "_reserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10359, "src": "13316:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 10370, "name": "_lotteryShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10357, "src": "13279:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 10367, "name": "_profitShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10355, "src": "13243:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10365, "name": "_houseBankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10353, "src": "13201:19:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "13201:41:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10368, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13201:55:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10369, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "13201:77:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10371, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13201:92:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "13201:114:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10374, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13201:129:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10375, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9320, "src": "13201:151:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10377, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13201:162:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 10378, "name": "DIVISOR", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9492, "src": "13367:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13201:173:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "53756d206f6620616c6c207368617265732073686f756c642061646420757020746f2031303025", "id": 10380, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13389:41:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_32114b9df8dbb32a89ff77547d03ba089620653aabd79206fe422030878162e7", "typeString": "literal_string \"Sum of all shares should add up to 100%\""}, "value": "Sum of all shares should add up to 100%"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_32114b9df8dbb32a89ff77547d03ba089620653aabd79206fe422030878162e7", "typeString": "literal_string \"Sum of all shares should add up to 100%\""}], "id": 10364, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "13179:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 10381, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13179:262:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10382, "nodeType": "ExpressionStatement", "src": "13179:262:11"}, {"expression": {"id": 10385, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10383, "name": "houseBankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9501, "src": "13452:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10384, "name": "_houseBankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10353, "src": "13473:19:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13452:40:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10386, "nodeType": "ExpressionStatement", "src": "13452:40:11"}, {"expression": {"id": 10389, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10387, "name": "profitShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9499, "src": "13503:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10388, "name": "_profitShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10355, "src": "13517:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13503:26:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10390, "nodeType": "ExpressionStatement", "src": "13503:26:11"}, {"expression": {"id": 10393, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10391, "name": "lotteryShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9503, "src": "13540:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10392, "name": "_lotteryShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10357, "src": "13555:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13540:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10394, "nodeType": "ExpressionStatement", "src": "13540:28:11"}, {"expression": {"id": 10397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10395, "name": "reserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9505, "src": "13579:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10396, "name": "_reserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10359, "src": "13594:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13579:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10398, "nodeType": "ExpressionStatement", "src": "13579:28:11"}, {"eventCall": {"arguments": [{"id": 10400, "name": "_houseBankrollShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10353, "src": "13651:19:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10401, "name": "_profitShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10355, "src": "13685:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10402, "name": "_lotteryShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10357, "src": "13712:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10403, "name": "_reserveShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10359, "src": "13740:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 10399, "name": "SharesUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9544, "src": "13623:13:11", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256)"}}, "id": 10404, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13623:141:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10405, "nodeType": "EmitStatement", "src": "13618:146:11"}]}, "documentation": {"id": 10351, "nodeType": "StructuredDocumentation", "src": "12634:352:11", "text": "updates all share percentage values\n @param _houseBankrollShare the new value to store\n @param _profitShare the new value to store\n @param _lotteryShare the new value to store\n @param _reserveShare the new value to store\n @dev stores the _houseBankrollShare address in the state variable `houseBankrollShare`"}, "functionSelector": "f03b6ffc", "id": 10407, "implemented": true, "kind": "function", "modifiers": [{"id": 10362, "kind": "modifierInvocation", "modifierName": {"id": 10361, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "13158:9:11"}, "nodeType": "ModifierInvocation", "src": "13158:9:11"}], "name": "setShares", "nameLocation": "13001:9:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10360, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10353, "mutability": "mutable", "name": "_houseBankrollShare", "nameLocation": "13029:19:11", "nodeType": "VariableDeclaration", "scope": 10407, "src": "13021:27:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10352, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13021:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10355, "mutability": "mutable", "name": "_profitShare", "nameLocation": "13067:12:11", "nodeType": "VariableDeclaration", "scope": 10407, "src": "13059:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10354, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13059:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10357, "mutability": "mutable", "name": "_lotteryShare", "nameLocation": "13098:13:11", "nodeType": "VariableDeclaration", "scope": 10407, "src": "13090:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10356, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13090:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10359, "mutability": "mutable", "name": "_reserveShare", "nameLocation": "13130:13:11", "nodeType": "VariableDeclaration", "scope": 10407, "src": "13122:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10358, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13122:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13010:140:11"}, "returnParameters": {"id": 10363, "nodeType": "ParameterList", "parameters": [], "src": "13168:0:11"}, "scope": 10447, "src": "12992:780:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 10419, "nodeType": "Block", "src": "13999:37:11", "statements": [{"expression": {"id": 10417, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10415, "name": "reserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9487, "src": "14010:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10416, "name": "_reserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10410, "src": "14020:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "14010:18:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 10418, "nodeType": "ExpressionStatement", "src": "14010:18:11"}]}, "documentation": {"id": 10408, "nodeType": "StructuredDocumentation", "src": "13780:151:11", "text": "store new address in reserve address\n @param _reserve the new address to store\n @dev changes the address which recieves reserve fees"}, "functionSelector": "14673d31", "id": 10420, "implemented": true, "kind": "function", "modifiers": [{"id": 10413, "kind": "modifierInvocation", "modifierName": {"id": 10412, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "13989:9:11"}, "nodeType": "ModifierInvocation", "src": "13989:9:11"}], "name": "setReserveAddress", "nameLocation": "13946:17:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10411, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10410, "mutability": "mutable", "name": "_reserve", "nameLocation": "13972:8:11", "nodeType": "VariableDeclaration", "scope": 10420, "src": "13964:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10409, "name": "address", "nodeType": "ElementaryTypeName", "src": "13964:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "13963:18:11"}, "returnParameters": {"id": 10414, "nodeType": "ParameterList", "parameters": [], "src": "13999:0:11"}, "scope": 10447, "src": "13937:99:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 10432, "nodeType": "Block", "src": "14263:37:11", "statements": [{"expression": {"id": 10430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10428, "name": "lottery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9489, "src": "14274:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10429, "name": "_lottery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10423, "src": "14284:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "14274:18:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 10431, "nodeType": "ExpressionStatement", "src": "14274:18:11"}]}, "documentation": {"id": 10421, "nodeType": "StructuredDocumentation", "src": "14044:151:11", "text": "store new address in lottery address\n @param _lottery the new address to store\n @dev changes the address which recieves lottery fees"}, "functionSelector": "2a332b2a", "id": 10433, "implemented": true, "kind": "function", "modifiers": [{"id": 10426, "kind": "modifierInvocation", "modifierName": {"id": 10425, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "14253:9:11"}, "nodeType": "ModifierInvocation", "src": "14253:9:11"}], "name": "setLotteryAddress", "nameLocation": "14210:17:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10424, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10423, "mutability": "mutable", "name": "_lottery", "nameLocation": "14236:8:11", "nodeType": "VariableDeclaration", "scope": 10433, "src": "14228:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10422, "name": "address", "nodeType": "ElementaryTypeName", "src": "14228:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "14227:18:11"}, "returnParameters": {"id": 10427, "nodeType": "ParameterList", "parameters": [], "src": "14263:0:11"}, "scope": 10447, "src": "14201:99:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 10445, "nodeType": "Block", "src": "14524:33:11", "statements": [{"expression": {"id": 10443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10441, "name": "admin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9515, "src": "14535:5:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10442, "name": "_admin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10436, "src": "14543:6:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "14535:14:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 10444, "nodeType": "ExpressionStatement", "src": "14535:14:11"}]}, "documentation": {"id": 10434, "nodeType": "StructuredDocumentation", "src": "14308:159:11", "text": "store new address in admin address\n @param _admin the new address to store\n @dev changes the address which is used by the adminOnly modifier"}, "functionSelector": "704b6c02", "id": 10446, "implemented": true, "kind": "function", "modifiers": [{"id": 10439, "kind": "modifierInvocation", "modifierName": {"id": 10438, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "14514:9:11"}, "nodeType": "ModifierInvocation", "src": "14514:9:11"}], "name": "setAdmin", "nameLocation": "14482:8:11", "nodeType": "FunctionDefinition", "parameters": {"id": 10437, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10436, "mutability": "mutable", "name": "_admin", "nameLocation": "14499:6:11", "nodeType": "VariableDeclaration", "scope": 10446, "src": "14491:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10435, "name": "address", "nodeType": "ElementaryTypeName", "src": "14491:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "14490:16:11"}, "returnParameters": {"id": 10440, "nodeType": "ParameterList", "parameters": [], "src": "14524:0:11"}, "scope": 10447, "src": "14473:84:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 10448, "src": "544:14016:11", "usedErrors": []}], "src": "32:14530:11"}, "bytecode": "60c06040523480156200001157600080fd5b5060405162001d8b38038062001d8b833981016040819052620000349162000105565b6200003f336200009c565b6001600160a01b0398891660805296881660a052600480549689166001600160a01b03199788161790556005805495891695871695909517909455600792909255600855600955600a55600f8054929093169116179055620001ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200010257600080fd5b50565b60008060008060008060008060006101208a8c0312156200012557600080fd5b89516200013281620000ec565b60208b01519099506200014581620000ec565b60408b01519098506200015881620000ec565b60608b01519097506200016b81620000ec565b8096505060808a0151945060a08a0151935060c08a0151925060e08a015191506101008a01516200019c81620000ec565b809150509295985092959850929598565b60805160a051611b0262000289600039600081816102100152818161054c015281816105c2015281816106ae015281816106e9015281816108d801528181610b7701528181610c1601528181610db301528181610fd80152818161104e0152818161113c015261117701526000818161038c01528181610570015281816106420152818161068b0152818161076e015281816109cb01528181610a3101528181610a9301528181610b5501528181610cc101528181610ffc015281816110ce01528181611119015281816111fe01526114c70152611b026000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063860015191161011a578063c2e50b16116100ad578063f03b6ffc1161007c578063f03b6ffc1461040b578063f19e207e1461041e578063f2fde38b14610441578063f846a88514610454578063f974821a1461045c57600080fd5b8063c2e50b16146103d3578063cd3293de146103e6578063e3fd80dd146103f9578063e7cb3d671461040257600080fd5b8063b359a9f9116100e9578063b359a9f914610387578063b4055d15146103ae578063b72481f8146103b7578063ba13a572146103c057600080fd5b806386001519146103515780638da5cb5b1461035a5780638e4a61421461036b57806394f3f81d1461037457600080fd5b80633e1f55e41161019d57806359c53fd41161016c57806359c53fd41461030757806361433d881461031a578063704b6c021461032d578063715018a6146103405780637d903ecc1461034857600080fd5b80633e1f55e4146102da57806345c9c1d1146102e35780634a5db3b5146102eb5780634e584e11146102fe57600080fd5b806328821182116101d957806328821182146102945780632a332b2a146102a75780632feda8d4146102ba5780633410fe6e146102d157600080fd5b80630c56ae3b1461020b57806314673d311461024f578063151fac7b14610264578063203c27a614610277575b600080fd5b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61026261025d3660046118e2565b610465565b005b6102626102723660046118fd565b6104ba565b6002546102849060ff1681565b6040519015158152602001610246565b6102626102a23660046118fd565b6107aa565b6102626102b53660046118e2565b61087f565b6102c360085481565b604051908152602001610246565b6102c361271081565b6102c360075481565b6102c36108cb565b6102626102f93660046118e2565b610bbd565b6102c360095481565b6102626103153660046118fd565b610c0b565b610262610328366004611916565b610cf6565b61026261033b3660046118e2565b610e73565b610262610ebf565b6102c3600b5481565b6102c3600e5481565b6000546001600160a01b0316610232565b6102c3600c5481565b6102626103823660046118e2565b610ef5565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6102c360015481565b6102c3600d5481565b600554610232906001600160a01b031681565b6102626103e13660046118fd565b610f40565b600454610232906001600160a01b031681565b6102c360035481565b6102c3600a5481565b610262610419366004611942565b611240565b61028461042c3660046118e2565b60106020526000908152604090205460ff1681565b61026261044f3660046118e2565b611345565b6102c3606481565b6102c360065481565b6000546001600160a01b031633146104985760405162461bcd60e51b815260040161048f90611974565b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600f546001600160a01b031633146105145760405162461bcd60e51b815260206004820152601f60248201527f416363657373207265737472696374656420746f2061646d696e206f6e6c7900604482015260640161048f565b60025460ff1615156001141561076157600354811061067e576000610544600354836113dd90919063ffffffff16565b90506105a8337f00000000000000000000000000000000000000000000000000000000000000006003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166113f0909392919063ffffffff16565b6003546040516338e7eaa960e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e39faaa490602401600060405180830381600087803b15801561060e57600080fd5b505af1158015610622573d6000803e3d6000fd5b5050600060035550506002805460ff1916905561066a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b6001546106779082611461565b6001555050565b6106d36001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f0000000000000000000000000000000000000000000000000000000000000000846113f0565b6040516338e7eaa960e21b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e39faaa490602401600060405180830381600087803b15801561073557600080fd5b505af1158015610749573d6000803e3d6000fd5b505060035461075b92509050826113dd565b60035550565b6107966001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b6001546107a39082611461565b6001555b50565b600f546001600160a01b031633146108045760405162461bcd60e51b815260206004820152601f60248201527f416363657373207265737472696374656420746f2061646d696e206f6e6c7900604482015260640161048f565b69152d02c7e14af6800000811061087a5760405162461bcd60e51b815260206004820152603460248201527f4d61782070726f666974207468726573686f6c642063616e74206265206772656044820152730c2e8cae440e8d0c2dc40626060d64086e4eae6d60631b606482015260840161048f565b600655565b6000546001600160a01b031633146108a95760405162461bcd60e51b815260040161048f90611974565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109455760405162461bcd60e51b815260206004820152601b60248201527f43616c6c6572206d757374206265207374616b696e6720706f6f6c0000000000604482015260640161048f565b600654600b5410610bb7576007546000901561099057600061098061271061097a600754600b5461146d90919063ffffffff16565b90611479565b905061098c8282611461565b9150505b600a54156109f65760006109b761271061097a600a54600b5461146d90919063ffffffff16565b6004549091506109f4906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683611485565b505b60095415610a5c576000610a1d61271061097a600954600b5461146d90919063ffffffff16565b600554909150610a5a906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683611485565b505b6000610a7a61271061097a6064600b5461146d90919063ffffffff16565b604051630852cd8d60e31b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b5050505060006008541115610b36576000610b2161271061097a600854600b5461146d90919063ffffffff16565b600b54909150610b3190826113dd565b600b55505b600b54600154610b45916113dd565b600155610b9c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000084611485565b600e54610ba99083611461565b600e55506000600b55919050565b50600090565b6000546001600160a01b03163314610be75760405162461bcd60e51b815260040161048f90611974565b6001600160a01b03166000908152601060205260409020805460ff19166001179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c835760405162461bcd60e51b815260206004820152601b60248201527f43616c6c6572206d757374206265207374616b696e6720706f6f6c0000000000604482015260640161048f565b6003548110610ce9576000610ca3600354836113dd90919063ffffffff16565b60006003556002805460ff19169055905061066a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b60035461075b90826113dd565b3360009081526010602052604090205460ff161515600114610d565760405162461bcd60e51b815260206004820152601960248201527810d85b1b195c881b5d5cdd08189948185d5d1a1bdc9a5e9959603a1b604482015260640161048f565b600154821115610e3b576000610d77600154846113dd90919063ffffffff16565b6002805460ff191660011790556040516323d13aff60e21b8152600481018290526001600160a01b0384811660248301523360448301529192507f000000000000000000000000000000000000000000000000000000000000000090911690638f44ebfc90606401600060405180830381600087803b158015610df957600080fd5b505af1158015610e0d573d6000803e3d6000fd5b5050600354610e1f9250905082611461565b600355600154610e309083336114ba565b506000600155610e56565b600154610e4890836113dd565b600155610e568282336114ba565b610e5f82611559565b600d54610e6c9083611461565b600d555050565b6000546001600160a01b03163314610e9d5760405162461bcd60e51b815260040161048f90611974565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ee95760405162461bcd60e51b815260040161048f90611974565b610ef360006115c4565b565b6000546001600160a01b03163314610f1f5760405162461bcd60e51b815260040161048f90611974565b6001600160a01b03166000908152601060205260409020805460ff19169055565b3360009081526010602052604090205460ff161515600114610fa05760405162461bcd60e51b815260206004820152601960248201527810d85b1b195c881b5d5cdd08189948185d5d1a1bdc9a5e9959603a1b604482015260640161048f565b60025460ff161515600114156111f157600354811061110c576000610fd0600354836113dd90919063ffffffff16565b9050611034337f00000000000000000000000000000000000000000000000000000000000000006003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166113f0909392919063ffffffff16565b6003546040516338e7eaa960e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e39faaa490602401600060405180830381600087803b15801561109a57600080fd5b505af11580156110ae573d6000803e3d6000fd5b5050600060035550506002805460ff191690556110f66001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b6001546111039082611461565b60015550611237565b6111616001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f0000000000000000000000000000000000000000000000000000000000000000846113f0565b6040516338e7eaa960e21b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e39faaa490602401600060405180830381600087803b1580156111c357600080fd5b505af11580156111d7573d6000803e3d6000fd5b50506003546111e992509050826113dd565b600355611237565b6112266001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846113f0565b6001546112339082611461565b6001555b6107a781611614565b6000546001600160a01b0316331461126a5760405162461bcd60e51b815260040161048f90611974565b6127106112866064611280848187818b8b611461565b90611461565b146112e35760405162461bcd60e51b815260206004820152602760248201527f53756d206f6620616c6c207368617265732073686f756c642061646420757020604482015266746f203130302560c81b606482015260840161048f565b600884905560078390556009829055600a8190556040805185815260208101859052908101839052606081018290527f1ab182163a0683cd3182c000705483ef0ccdc375a845ab7b68678f89d90de4d79060800160405180910390a150505050565b6000546001600160a01b0316331461136f5760405162461bcd60e51b815260040161048f90611974565b6001600160a01b0381166113d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048f565b6107a7816115c4565b60006113e982846119bf565b9392505050565b6040516001600160a01b038085166024830152831660448201526064810182905261145b9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611673565b50505050565b60006113e982846119d6565b60006113e982846119ee565b60006113e98284611a0d565b6040516001600160a01b0383166024820152604481018290526114b590849063a9059cbb60e01b90606401611424565b505050565b6114ee6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168285611485565b604051630f62cf8d60e41b8152600481018490526001600160a01b03838116602483015282919082169063f62cf8d090604401600060405180830381600087803b15801561153b57600080fd5b505af115801561154f573d6000803e3d6000fd5b5050505050505050565b600c541561157457600c5461156e9082611461565b600c5550565b600b548111156115b1576000611595600b54836113dd90919063ffffffff16565b6000600b55600c549091506115aa9082611461565b600c555050565b600b546115be90826113dd565b600b5550565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600c541561166657600c5481111561165957600061163d600c54836113dd90919063ffffffff16565b6000600c55600b549091506116529082611461565b600b555050565b600c5461156e90826113dd565b600b546115be9082611461565b60006116c8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117459092919063ffffffff16565b8051909150156114b557808060200190518101906116e69190611a2f565b6114b55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161048f565b6060611754848460008561175c565b949350505050565b6060824710156117bd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161048f565b6001600160a01b0385163b6118145760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161048f565b600080866001600160a01b031685876040516118309190611a7d565b60006040518083038185875af1925050503d806000811461186d576040519150601f19603f3d011682016040523d82523d6000602084013e611872565b606091505b509150915061188282828661188d565b979650505050505050565b6060831561189c5750816113e9565b8251156118ac5782518084602001fd5b8160405162461bcd60e51b815260040161048f9190611a99565b80356001600160a01b03811681146118dd57600080fd5b919050565b6000602082840312156118f457600080fd5b6113e9826118c6565b60006020828403121561190f57600080fd5b5035919050565b6000806040838503121561192957600080fd5b82359150611939602084016118c6565b90509250929050565b6000806000806080858703121561195857600080fd5b5050823594602084013594506040840135936060013592509050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156119d1576119d16119a9565b500390565b600082198211156119e9576119e96119a9565b500190565b6000816000190483118215151615611a0857611a086119a9565b500290565b600082611a2a57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611a4157600080fd5b815180151581146113e957600080fd5b60005b83811015611a6c578181015183820152602001611a54565b8381111561145b5750506000910152565b60008251611a8f818460208701611a51565b9190910192915050565b6020815260008251806020840152611ab8816040850160208701611a51565b601f01601f1916919091016040019291505056fea26469706673582212208d5787f2eb03c872ef3d7a599af9b391fd6576f19d57f27f5f932ba68397fdd864736f6c634300080c0033", "bytecodeSha1": "9109e33de1e2d19af123d627e3b84b9b9ef53b74", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.12+commit.f00d7308"}, "contractName": "BitcrushBankroll", "coverageMap": {"branches": {"0": {"Ownable.transferOwnership": {"119": [2006, 2028, true]}}, "10": {}, "11": {"BitcrushBankroll.addToBankroll": {"95": [3325, 3345, false], "96": [3366, 3393, false]}, "BitcrushBankroll.addToBrSinceCompound": {"114": [9032, 9059, false], "115": [9080, 9113, false]}, "BitcrushBankroll.addUserLoss": {"108": [4720, 4759, true], "109": [5061, 5081, false], "110": [5102, 5129, false]}, "BitcrushBankroll.payOutUserWinning": {"106": [7364, 7403, true], "107": [7620, 7643, false]}, "BitcrushBankroll.recoverBankroll": {"104": [6517, 6551, true], "105": [6621, 6648, false]}, "BitcrushBankroll.removeFromBrSinceCompound": {"112": [9778, 9805, false], "113": [9921, 9946, false]}, "BitcrushBankroll.setProfitThreshold": {"97": [12462, 12499, true]}, "BitcrushBankroll.setShares": {"111": [13201, 13374, true]}, "BitcrushBankroll.transferProfit": {"98": [10566, 10600, true], "99": [10670, 10704, false], "100": [10779, 10794, false], "101": [11031, 11047, false], "102": [11271, 11287, false], "103": [11619, 11641, false]}}, "12": {}, "15": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {"SafeERC20._callOptionalReturn": {"120": [3735, 3756, false], "121": [3819, 3849, true]}}, "7": {"Address.functionCallWithValue": {"116": [5145, 5175, true]}, "Address.verifyCallResult": {"117": [7735, 7742, false], "118": [7876, 7897, false]}}, "8": {}, "9": {}}, "statements": {"0": {"Ownable._transferOwnership": {"81": [2378, 2395], "82": [2405, 2450]}, "Ownable.owner": {"0": [1101, 1114]}, "Ownable.renounceOwnership": {"46": [1732, 1762]}, "Ownable.transferOwnership": {"67": [1998, 2071], "68": [2081, 2109]}}, "10": {}, "11": {"BitcrushBankroll.addToBankroll": {"3": [3482, 3638], "4": [3657, 3702], "5": [3721, 3741], "6": [3760, 3780], "7": [3799, 3859], "8": [3878, 3922], "9": [3963, 4110], "10": [4129, 4165], "11": [4184, 4232], "12": [4280, 4338], "13": [4353, 4395]}, "BitcrushBankroll.addToBrSinceCompound": {"83": [9210, 9237], "84": [9256, 9305], "85": [9346, 9408], "86": [9456, 9502]}, "BitcrushBankroll.addUserLoss": {"48": [4698, 4812], "49": [5218, 5374], "50": [5393, 5438], "51": [5457, 5477], "52": [5496, 5516], "53": [5535, 5595], "54": [5614, 5658], "55": [5699, 5846], "56": [5865, 5901], "57": [5920, 5968], "58": [6016, 6074], "59": [6089, 6131], "60": [6153, 6182]}, "BitcrushBankroll.authorizeAddress": {"29": [2830, 2866]}, "BitcrushBankroll.payOutUserWinning": {"35": [7342, 7456], "36": [7721, 7740], "37": [7755, 7812], "38": [7827, 7877], "39": [7892, 7944], "40": [7961, 7978], "41": [8011, 8053], "42": [8068, 8114], "43": [8136, 8170], "44": [8181, 8223]}, "BitcrushBankroll.recoverBankroll": {"30": [6495, 6606], "31": [6729, 6749], "32": [6764, 6784], "33": [6799, 6859], "34": [6951, 6999]}, "BitcrushBankroll.removeAuthorization": {"47": [3172, 3208]}, "BitcrushBankroll.removeFromBrSinceCompound": {"77": [9822, 9884], "78": [10035, 10054], "79": [10073, 10178], "80": [10219, 10265]}, "BitcrushBankroll.setAdmin": {"45": [14535, 14549]}, "BitcrushBankroll.setLotteryAddress": {"16": [14274, 14292]}, "BitcrushBankroll.setProfitThreshold": {"14": [12440, 12579], "15": [12590, 12618]}, "BitcrushBankroll.setReserveAddress": {"2": [14010, 14028]}, "BitcrushBankroll.setShares": {"61": [13179, 13441], "62": [13452, 13492], "63": [13503, 13529], "64": [13540, 13568], "65": [13579, 13607], "66": [13618, 13764]}, "BitcrushBankroll.transferProfit": {"17": [10544, 10655], "18": [10955, 10997], "19": [11196, 11237], "20": [11436, 11477], "21": [11582, 11598], "22": [11801, 11853], "23": [11885, 11935], "24": [11971, 12019], "25": [12034, 12071], "26": [12086, 12105], "27": [12120, 12133], "28": [12166, 12174]}, "BitcrushBankroll.transferWinnings": {"75": [8613, 8652], "76": [8735, 8780]}}, "12": {}, "15": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {"SafeERC20._callOptionalReturn": {"87": [3811, 3896]}, "SafeERC20.safeTransfer": {"74": [813, 899]}, "SafeERC20.safeTransferFrom": {"70": [1050, 1146]}}, "7": {"Address.functionCall": {"88": [4018, 4077]}, "Address.functionCallWithValue": {"89": [5137, 5218], "91": [5228, 5288], "92": [5382, 5440]}, "Address.isContract": {"90": [1458, 1488]}, "Address.verifyCallResult": {"93": [7758, 7775], "94": [8202, 8222]}}, "8": {"Context._msgSender": {"1": [712, 729]}}, "9": {"SafeMath.add": {"71": [2818, 2830]}, "SafeMath.div": {"73": [3913, 3925]}, "SafeMath.mul": {"72": [3528, 3540]}, "SafeMath.sub": {"69": [3185, 3197]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.5.0/Address", "BitcrushLiveWallet", "BitcrushStaking", "CRUSHToken", "OpenZeppelin/openzeppelin-contracts@4.5.0/Context", "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20", "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20Burnable", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata", "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable", "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20", "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath"], "deployedBytecode": "", "deployedSourceMap": "544:14016:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;842:44;;;;;;;;-1:-1:-1;;;;;202:32:22;;;184:51;;172:2;157:18;842:44:11;;;;;;;;13937:99;;;;;;:::i;:::-;;:::i;:::-;;3253:1161;;;;;;:::i;:::-;;:::i;696:24::-;;;;;;;;;;;;965:14:22;;958:22;940:41;;928:2;913:18;696:24:11;800:187:22;12364:262:11;;;;;;:::i;:::-;;:::i;14201:99::-;;;;;;:::i;:::-;;:::i;1145:33::-;;;;;;;;;1138:25:22;;;1126:2;1111:18;1145:33:11;992:177:22;955:39:11;;989:5;955:39;;1112:26;;;;;;10482:1711;;;:::i;2758:116::-;;;;;;:::i;:::-;;:::i;1185:27::-;;;;;;6435:583;;;;;;:::i;:::-;;:::i;7263:968::-;;;;;;:::i;:::-;;:::i;14473:84::-;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1278:30:11:-;;;;;;1445:26;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;1315:38:11;;;;;;3097:119;;;;;;:::i;:::-;;:::i;799:36::-;;;;;661:28;;;;;;1410;;;;;;924:22;;;;;-1:-1:-1;;;;;924:22:11;;;4642:1548;;;;;;:::i;:::-;;:::i;895:22::-;;;;;-1:-1:-1;;;;;895:22:11;;;727:31;;;;;;1219:27;;;;;;12992:780;;;;;;:::i;:::-;;:::i;1715:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;1001:39:11:-;;1037:3;1001:39;;1047:30;;;;;;13937:99;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;14010:7:11::1;:18:::0;;-1:-1:-1;;;;;;14010:18:11::1;-1:-1:-1::0;;;;;14010:18:11;;;::::1;::::0;;;::::1;::::0;;13937:99::o;3253:1161::-;1594:5;;-1:-1:-1;;;;;1594:5:11;1572:10;:28;1550:109;;;;-1:-1:-1;;;1550:109:11;;2824:2:22;1550:109:11;;;2806:21:22;2863:2;2843:18;;;2836:30;2902:33;2882:18;;;2875:61;2953:18;;1550:109:11;2622:355:22;1550:109:11;3325:12:::1;::::0;::::1;;:20;;:12:::0;:20:::1;3321:1086;;;3377:16;;3366:7;:27;3362:886;;3414:17;3434:29;3446:16;;3434:7;:11;;:29;;;;:::i;:::-;3414:49;;3482:156;3527:10;3568:11;3603:16;;3482:5;-1:-1:-1::0;;;;;3482:22:11::1;;;:156;;;;;;:::i;:::-;3685:16;::::0;3657:45:::1;::::0;-1:-1:-1;;;3657:45:11;;::::1;::::0;::::1;1138:25:22::0;;;;3657:11:11::1;-1:-1:-1::0;;;;;3657:27:11::1;::::0;::::1;::::0;1111:18:22;;3657:45:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3740:1:11::1;3721:16;:20:::0;-1:-1:-1;;3760:12:11::1;:20:::0;;-1:-1:-1;;3760:20:11::1;::::0;;3799:60:::1;-1:-1:-1::0;;;;;3799:5:11::1;:22;3822:10;3842:4;3849:9:::0;3799:22:::1;:60::i;:::-;3894:13;::::0;:28:::1;::::0;3912:9;3894:17:::1;:28::i;:::-;3878:13;:44:::0;-1:-1:-1;3253:1161:11;:::o;3362:886::-:1;3963:147;-1:-1:-1::0;;;;;3963:5:11::1;:22;4008:10;4049:11;4084:7:::0;3963:22:::1;:147::i;:::-;4129:36;::::0;-1:-1:-1;;;4129:36:11;;::::1;::::0;::::1;1138:25:22::0;;;4129:11:11::1;-1:-1:-1::0;;;;;4129:27:11::1;::::0;::::1;::::0;1111:18:22;;4129:36:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4203:16:11::1;::::0;:29:::1;::::0;-1:-1:-1;4203:16:11;-1:-1:-1;4224:7:11;4203:20:::1;:29::i;:::-;4184:16;:48:::0;3253:1161;:::o;3321:1086::-:1;4280:58;-1:-1:-1::0;;;;;4280:5:11::1;:22;4303:10;4323:4;4330:7:::0;4280:22:::1;:58::i;:::-;4369:13;::::0;:26:::1;::::0;4387:7;4369:17:::1;:26::i;:::-;4353:13;:42:::0;3321:1086:::1;3253:1161:::0;:::o;12364:262::-;1594:5;;-1:-1:-1;;;;;1594:5:11;1572:10;:28;1550:109;;;;-1:-1:-1;;;1550:109:11;;2824:2:22;1550:109:11;;;2806:21:22;2863:2;2843:18;;;2836:30;2902:33;2882:18;;;2875:61;2953:18;;1550:109:11;2622:355:22;1550:109:11;12475:24:::1;12462:10;:37;12440:139;;;::::0;-1:-1:-1;;;12440:139:11;;3184:2:22;12440:139:11::1;::::0;::::1;3166:21:22::0;3223:2;3203:18;;;3196:30;3262:34;3242:18;;;3235:62;-1:-1:-1;;;3313:18:22;;;3306:50;3373:19;;12440:139:11::1;2982:416:22::0;12440:139:11::1;12590:15;:28:::0;12364:262::o;14201:99::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14274:7:11::1;:18:::0;;-1:-1:-1;;;;;;14274:18:11::1;-1:-1:-1::0;;;;;14274:18:11;;;::::1;::::0;;;::::1;::::0;;14201:99::o;10482:1711::-;10524:7;10566:10;-1:-1:-1;;;;;10588:11:11;10566:34;;10544:111;;;;-1:-1:-1;;;10544:111:11;;3605:2:22;10544:111:11;;;3587:21:22;3644:2;3624:18;;;3617:30;3683:29;3663:18;;;3656:57;3730:18;;10544:111:11;3403:351:22;10544:111:11;10689:15;;10670;;:34;10666:1520;;10779:11;;10742:14;;10779:15;10775:238;;10815:29;10847:89;989:5;10847:54;10889:11;;10847:15;;:41;;:54;;;;:::i;:::-;:80;;:89::i;:::-;10815:121;-1:-1:-1;10964:33:11;:6;10815:121;10964:10;:33::i;:::-;10955:42;;10796:217;10775:238;11031:12;;:16;11027:226;;11068:20;11091:86;989:5;11091:33;11111:12;;11091:15;;:19;;:33;;;;:::i;:86::-;11215:7;;11068:109;;-1:-1:-1;11196:41:11;;-1:-1:-1;;;;;11196:5:11;:18;;;11215:7;11068:109;11196:18;:41::i;:::-;11049:204;11027:226;11271:12;;:16;11267:226;;11308:20;11331:86;989:5;11331:33;11351:12;;11331:15;;:19;;:33;;;;:::i;:86::-;11455:7;;11308:109;;-1:-1:-1;11436:41:11;;-1:-1:-1;;;;;11436:5:11;:18;;;11455:7;11308:109;11436:18;:41::i;:::-;11289:204;11267:226;11509:12;11524:43;989:5;11524:30;1037:3;11524:15;;:19;;:30;;;;:::i;:43::-;11582:16;;-1:-1:-1;;;11582:16:11;;;;;1138:25:22;;;11509:58:11;;-1:-1:-1;11582:5:11;-1:-1:-1;;;;;11582:10:11;;;;1111:18:22;;11582:16:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11640:1;11619:18;;:22;11615:254;;;11662:21;11686:96;989:5;11686:61;11728:18;;11686:15;;:41;;:61;;;;:::i;:96::-;11819:15;;11662:120;;-1:-1:-1;11819:34:11;;11662:120;11819:19;:34::i;:::-;11801:15;:52;-1:-1:-1;11615:254:11;11919:15;;11901:13;;:34;;:17;:34::i;:::-;11885:13;:50;11971:48;-1:-1:-1;;;;;11971:5:11;:18;11998:11;12012:6;11971:18;:48::i;:::-;12048:11;;:23;;12064:6;12048:15;:23::i;:::-;12034:11;:37;-1:-1:-1;12104:1:11;12086:15;:19;12127:6;10482:1711;-1:-1:-1;10482:1711:11:o;10666:1520::-;-1:-1:-1;12173:1:11;;10482:1711::o;2758:116::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2830:29:11::1;;::::0;;;:19:::1;:29;::::0;;;;:36;;-1:-1:-1;;2830:36:11::1;2862:4;2830:36;::::0;;2758:116::o;6435:583::-;6517:10;-1:-1:-1;;;;;6539:11:11;6517:34;;6495:111;;;;-1:-1:-1;;;6495:111:11;;3605:2:22;6495:111:11;;;3587:21:22;3644:2;3624:18;;;3617:30;3683:29;3663:18;;;3656:57;3730:18;;6495:111:11;3403:351:22;6495:111:11;6632:16;;6621:7;:27;6617:394;;6665:17;6685:29;6697:16;;6685:7;:11;;:29;;;;:::i;:::-;6748:1;6729:16;:20;6764:12;:20;;-1:-1:-1;;6764:20:11;;;6665:49;-1:-1:-1;6799:60:11;-1:-1:-1;;;;;6799:5:11;:22;6822:10;6842:4;6665:49;6799:22;:60::i;6617:394::-;6970:16;;:29;;6991:7;6970:20;:29::i;7263:968::-;7384:10;7364:31;;;;:19;:31;;;;;;;;:39;;:31;:39;7342:114;;;;-1:-1:-1;;;7342:114:11;;3961:2:22;7342:114:11;;;3943:21:22;4000:2;3980:18;;;3973:30;-1:-1:-1;;;4019:18:22;;;4012:55;4084:18;;7342:114:11;3759:349:22;7342:114:11;7630:13;;7620:7;:23;7616:510;;;7660:17;7680:26;7692:13;;7680:7;:11;;:26;;;;:::i;:::-;7721:12;:19;;-1:-1:-1;;7721:19:11;7736:4;7721:19;;;7755:57;;-1:-1:-1;;;7755:57:11;;;;;4315:25:22;;;-1:-1:-1;;;;;4414:15:22;;;4394:18;;;4387:43;7801:10:11;4446:18:22;;;4439:43;4315:25;;-1:-1:-1;7755:11:11;:25;;;;;;4288:18:22;;7755:57:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7846:16:11;;:31;;-1:-1:-1;7846:16:11;-1:-1:-1;7867:9:11;7846:20;:31::i;:::-;7827:16;:50;7909:13;;7892:52;;7924:7;7933:10;7892:16;:52::i;:::-;-1:-1:-1;7977:1:11;7961:13;:17;7616:510;;;8027:13;;:26;;8045:7;8027:17;:26::i;:::-;8011:13;:42;8068:46;8085:7;8094;8103:10;8068:16;:46::i;:::-;8136:34;8162:7;8136:25;:34::i;:::-;8197:13;;:26;;8215:7;8197:17;:26::i;:::-;8181:13;:42;-1:-1:-1;;7263:968:11:o;14473:84::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14535:5:11::1;:14:::0;;-1:-1:-1;;;;;;14535:14:11::1;-1:-1:-1::0;;;;;14535:14:11;;;::::1;::::0;;;::::1;::::0;;14473:84::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3097:119:11:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3179:29:11::1;;::::0;;;:19:::1;:29;::::0;;;;3172:36;;-1:-1:-1;;3172:36:11::1;::::0;;3097:119::o;4642:1548::-;4740:10;4720:31;;;;:19;:31;;;;;;;;:39;;:31;:39;4698:114;;;;-1:-1:-1;;;4698:114:11;;3961:2:22;4698:114:11;;;3943:21:22;4000:2;3980:18;;;3973:30;-1:-1:-1;;;4019:18:22;;;4012:55;4084:18;;4698:114:11;3759:349:22;4698:114:11;5061:12;;;;:20;;:12;:20;5057:1086;;;5113:16;;5102:7;:27;5098:886;;5150:17;5170:29;5182:16;;5170:7;:11;;:29;;;;:::i;:::-;5150:49;;5218:156;5263:10;5304:11;5339:16;;5218:5;-1:-1:-1;;;;;5218:22:11;;;:156;;;;;;:::i;:::-;5421:16;;5393:45;;-1:-1:-1;;;5393:45:11;;;;;1138:25:22;;;;5393:11:11;-1:-1:-1;;;;;5393:27:11;;;;1111:18:22;;5393:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5476:1:11;5457:16;:20;-1:-1:-1;;5496:12:11;:20;;-1:-1:-1;;5496:20:11;;;5535:60;-1:-1:-1;;;;;5535:5:11;:22;5558:10;5578:4;5585:9;5535:22;:60::i;:::-;5630:13;;:28;;5648:9;5630:17;:28::i;:::-;5614:13;:44;-1:-1:-1;5057:1086:11;;5098:886;5699:147;-1:-1:-1;;;;;5699:5:11;:22;5744:10;5785:11;5820:7;5699:22;:147::i;:::-;5865:36;;-1:-1:-1;;;5865:36:11;;;;;1138:25:22;;;5865:11:11;-1:-1:-1;;;;;5865:27:11;;;;1111:18:22;;5865:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5939:16:11;;:29;;-1:-1:-1;5939:16:11;-1:-1:-1;5960:7:11;5939:20;:29::i;:::-;5920:16;:48;5057:1086;;;6016:58;-1:-1:-1;;;;;6016:5:11;:22;6039:10;6059:4;6066:7;6016:22;:58::i;:::-;6105:13;;:26;;6123:7;6105:17;:26::i;:::-;6089:13;:42;5057:1086;6153:29;6174:7;6153:20;:29::i;12992:780::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;989:5:11::1;13201:162;1037:3;13201:129;13316:13:::0;13201:129;13279:13;13201:129;:19;13243:12;13201:41:::1;:55::i;:::-;:77:::0;::::1;:92::i;:162::-;:173;13179:262;;;::::0;-1:-1:-1;;;13179:262:11;;4695:2:22;13179:262:11::1;::::0;::::1;4677:21:22::0;4734:2;4714:18;;;4707:30;4773:34;4753:18;;;4746:62;-1:-1:-1;;;4824:18:22;;;4817:37;4871:19;;13179:262:11::1;4493:403:22::0;13179:262:11::1;13452:18;:40:::0;;;13503:11:::1;:26:::0;;;13540:12:::1;:28:::0;;;13579:12:::1;:28:::0;;;13623:141:::1;::::0;;5132:25:22;;;5188:2;5173:18;;5166:34;;;5216:18;;;5209:34;;;5274:2;5259:18;;5252:34;;;13623:141:11::1;::::0;5119:3:22;5104:19;13623:141:11::1;;;;;;;12992:780:::0;;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5499:2:22;1998:73:0::1;::::0;::::1;5481:21:22::0;5538:2;5518:18;;;5511:30;5577:34;5557:18;;;5550:62;-1:-1:-1;;;5628:18:22;;;5621:36;5674:19;;1998:73:0::1;5297:402:22::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;3108:96:9:-:0;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:9:o;912:241:6:-;1077:68;;-1:-1:-1;;;;;6224:15:22;;;1077:68:6;;;6206:34:22;6276:15;;6256:18;;;6249:43;6308:18;;;6301:34;;;1050:96:6;;1070:5;;-1:-1:-1;;;1100:27:6;6141:18:22;;1077:68:6;;;;-1:-1:-1;;1077:68:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:6;-1:-1:-1;;;;;;1077:68:6;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;2741:96:9:-;2799:7;2825:5;2829:1;2825;:5;:::i;3451:96::-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;701:205:6:-;840:58;;-1:-1:-1;;;;;7066:32:22;;840:58:6;;;7048:51:22;7115:18;;;7108:34;;;813:86:6;;833:5;;-1:-1:-1;;;863:23:6;7021:18:22;;840:58:6;6874:274:22;813:86:6;701:205;;;:::o;8479:309:11:-;8613:39;-1:-1:-1;;;;;8613:5:11;:18;8632:10;8644:7;8613:18;:39::i;:::-;8735:45;;-1:-1:-1;;;8735:45:11;;;;;7327:25:22;;;-1:-1:-1;;;;;7388:32:22;;;7368:18;;;7361:60;8713:10:11;;8735:27;;;;;;7300:18:22;;8735:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8602:186;8479:309;;;:::o;9702:597::-;9778:23;;:27;9774:518;;9848:23;;:36;;9876:7;9848:27;:36::i;:::-;9822:23;:62;3253:1161;:::o;9774:518::-;9931:15;;9921:7;:25;9917:364;;;9967:18;9988:28;10000:15;;9988:7;:11;;:28;;;;:::i;:::-;10053:1;10035:15;:19;10099:23;;9967:49;;-1:-1:-1;10099:79:11;;9967:49;10099:27;:79::i;:::-;10073:23;:105;-1:-1:-1;3253:1161:11;:::o;9917:364::-;10237:15;;:28;;10257:7;10237:19;:28::i;:::-;10219:15;:46;9702:597;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;8961:560:11:-;9032:23;;:27;9028:486;;9090:23;;9080:7;:33;9076:348;;;9134:18;9155:36;9167:23;;9155:7;:11;;:36;;;;:::i;:::-;9236:1;9210:23;:27;9274:15;;9134:57;;-1:-1:-1;9274:31:11;;9134:57;9274:19;:31::i;:::-;9256:15;:49;-1:-1:-1;3253:1161:11;:::o;9076:348::-;9372:23;;:36;;9400:7;9372:27;:36::i;9028:486::-;9474:15;;:28;;9494:7;9474:19;:28::i;3207:706:6:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:6;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:6;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:6;;7916:2:22;3811:85:6;;;7898:21:22;7955:2;7935:18;;;7928:30;7994:34;7974:18;;;7967:62;-1:-1:-1;;;8045:18:22;;;8038:40;8095:19;;3811:85:6;7714:406:22;3861:223:7;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:7:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:7;;8327:2:22;5137:81:7;;;8309:21:22;8366:2;8346:18;;;8339:30;8405:34;8385:18;;;8378:62;-1:-1:-1;;;8456:18:22;;;8449:36;8502:19;;5137:81:7;8125:402:22;5137:81:7;-1:-1:-1;;;;;1465:19:7;;;5228:60;;;;-1:-1:-1;;;5228:60:7;;8734:2:22;5228:60:7;;;8716:21:22;8773:2;8753:18;;;8746:30;8812:31;8792:18;;;8785:59;8861:18;;5228:60:7;8532:353:22;5228:60:7;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:7;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:7:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:7;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:7;;;;;;;;:::i;246:173:22:-;314:20;;-1:-1:-1;;;;;363:31:22;;353:42;;343:70;;409:1;406;399:12;343:70;246:173;;;:::o;424:186::-;483:6;536:2;524:9;515:7;511:23;507:32;504:52;;;552:1;549;542:12;504:52;575:29;594:9;575:29;:::i;615:180::-;674:6;727:2;715:9;706:7;702:23;698:32;695:52;;;743:1;740;733:12;695:52;-1:-1:-1;766:23:22;;615:180;-1:-1:-1;615:180:22:o;1174:254::-;1242:6;1250;1303:2;1291:9;1282:7;1278:23;1274:32;1271:52;;;1319:1;1316;1309:12;1271:52;1355:9;1342:23;1332:33;;1384:38;1418:2;1407:9;1403:18;1384:38;:::i;:::-;1374:48;;1174:254;;;;;:::o;1871:385::-;1957:6;1965;1973;1981;2034:3;2022:9;2013:7;2009:23;2005:33;2002:53;;;2051:1;2048;2041:12;2002:53;-1:-1:-1;;2074:23:22;;;2144:2;2129:18;;2116:32;;-1:-1:-1;2195:2:22;2180:18;;2167:32;;2246:2;2231:18;2218:32;;-1:-1:-1;1871:385:22;-1:-1:-1;1871:385:22:o;2261:356::-;2463:2;2445:21;;;2482:18;;;2475:30;2541:34;2536:2;2521:18;;2514:62;2608:2;2593:18;;2261:356::o;5704:127::-;5765:10;5760:3;5756:20;5753:1;5746:31;5796:4;5793:1;5786:15;5820:4;5817:1;5810:15;5836:125;5876:4;5904:1;5901;5898:8;5895:34;;;5909:18;;:::i;:::-;-1:-1:-1;5946:9:22;;5836:125::o;6346:128::-;6386:3;6417:1;6413:6;6410:1;6407:13;6404:39;;;6423:18;;:::i;:::-;-1:-1:-1;6459:9:22;;6346:128::o;6479:168::-;6519:7;6585:1;6581;6577:6;6573:14;6570:1;6567:21;6562:1;6555:9;6548:17;6544:45;6541:71;;;6592:18;;:::i;:::-;-1:-1:-1;6632:9:22;;6479:168::o;6652:217::-;6692:1;6718;6708:132;;6762:10;6757:3;6753:20;6750:1;6743:31;6797:4;6794:1;6787:15;6825:4;6822:1;6815:15;6708:132;-1:-1:-1;6854:9:22;;6652:217::o;7432:277::-;7499:6;7552:2;7540:9;7531:7;7527:23;7523:32;7520:52;;;7568:1;7565;7558:12;7520:52;7600:9;7594:16;7653:5;7646:13;7639:21;7632:5;7629:32;7619:60;;7675:1;7672;7665:12;8890:258;8962:1;8972:113;8986:6;8983:1;8980:13;8972:113;;;9062:11;;;9056:18;9043:11;;;9036:39;9008:2;9001:10;8972:113;;;9103:6;9100:1;9097:13;9094:48;;;-1:-1:-1;;9138:1:22;9120:16;;9113:27;8890:258::o;9153:274::-;9282:3;9320:6;9314:13;9336:53;9382:6;9377:3;9370:4;9362:6;9358:17;9336:53;:::i;:::-;9405:16;;;;;9153:274;-1:-1:-1;;9153:274:22:o;9432:383::-;9581:2;9570:9;9563:21;9544:4;9613:6;9607:13;9656:6;9651:2;9640:9;9636:18;9629:34;9672:66;9731:6;9726:2;9715:9;9711:18;9706:2;9698:6;9694:15;9672:66;:::i;:::-;9799:2;9778:15;-1:-1:-1;;9774:29:22;9759:45;;;;9806:2;9755:54;;9432:383;-1:-1:-1;;9432:383:22:o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"addToBankroll(uint256)": {"notice": "DESCRIPTION PENDING"}, "addUserLoss(uint256)": {"details": "adds funds to the bankroll if bankroll is in positive, otherwise its transfered to the staking pool to recover frozen funds", "notice": "Add users loss to the bankroll", "params": {"_amount": "the amount to add"}}, "authorizeAddress(address)": {"details": "updates the authorizedAddresses mapping to true for given address", "notice": "authorize address to register wins and losses", "params": {"_address": "the address to be authorized"}}, "owner()": {"details": "Returns the address of the current owner."}, "payOutUserWinning(uint256,address)": {"details": "deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative", "notice": "Deduct users win from the bankroll", "params": {"_amount": "the amount to deduct"}}, "recoverBankroll(uint256)": {"details": "deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative", "notice": "Deduct users win from the bankroll", "params": {"_amount": "the amount to deduct"}}, "removeAuthorization(address)": {"details": "updates the authorizedAddresses mapping by deleting entry for given address", "notice": "remove authorization of an address from register wins and losses", "params": {"_address": "the address to be removed"}}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "setAdmin(address)": {"details": "changes the address which is used by the adminOnly modifier", "notice": "store new address in admin address", "params": {"_admin": "the new address to store"}}, "setLotteryAddress(address)": {"details": "changes the address which recieves lottery fees", "notice": "store new address in lottery address", "params": {"_lottery": "the new address to store"}}, "setProfitThreshold(uint256)": {"details": "stores the _threshold address in the state variable `profitThreshold`", "notice": "Store `_threshold`.", "params": {"_threshold": "the new value to store"}}, "setReserveAddress(address)": {"details": "changes the address which recieves reserve fees", "notice": "store new address in reserve address", "params": {"_reserve": "the new address to store"}}, "setShares(uint256,uint256,uint256,uint256)": {"details": "stores the _houseBankrollShare address in the state variable `houseBankrollShare`", "notice": "updates all share percentage values", "params": {"_houseBankrollShare": "the new value to store", "_lotteryShare": "the new value to store", "_profitShare": "the new value to store", "_reserveShare": "the new value to store"}}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}, "transferProfit()": {"details": "transfer profits since last compound to the staking pool while taking out necessary fees.", "notice": "transfer profits to staking pool to be ditributed to stakers."}}, "version": 1}, "offset": [544, 14560], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86001519 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC2E50B16 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF03B6FFC GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF03B6FFC EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xF19E207E EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xF846A885 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2E50B16 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xCD3293DE EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xE3FD80DD EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xE7CB3D67 EQ PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB359A9F9 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xB359A9F9 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xB4055D15 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xB72481F8 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xBA13A572 EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86001519 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8E4A6142 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x94F3F81D EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E1F55E4 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x59C53FD4 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x59C53FD4 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x61433D88 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x7D903ECC EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E1F55E4 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x45C9C1D1 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x4A5DB3B5 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x4E584E11 EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x28821182 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x28821182 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x2A332B2A EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x2FEDA8D4 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x3410FE6E EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC56AE3B EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x14673D31 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x151FAC7B EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x203C27A6 EQ PUSH2 0x277 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x284 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x262 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246 JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x262 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x262 PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x1916 JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x262 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x232 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x232 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x232 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x232 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1942 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373207265737472696374656420746F2061646D696E206F6E6C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x761 JUMPI PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x67E JUMPI PUSH1 0x0 PUSH2 0x544 PUSH1 0x3 SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x5A8 CALLER PUSH32 0x0 PUSH1 0x3 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x38E7EAA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE39FAAA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x3 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x66A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x677 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x6D3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER PUSH32 0x0 DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38E7EAA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE39FAAA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x749 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x75B SWAP3 POP SWAP1 POP DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH2 0x796 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x7A3 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373207265737472696374656420746F2061646D696E206F6E6C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH10 0x152D02C7E14AF6800000 DUP2 LT PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782070726F666974207468726573686F6C642063616E7420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xC2E8CAE440E8D0C2DC40626060D64086E4EAE6D PUSH1 0x63 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265207374616B696E6720706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xB SLOAD LT PUSH2 0xBB7 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 PUSH2 0x980 PUSH2 0x2710 PUSH2 0x97A PUSH1 0x7 SLOAD PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP1 POP PUSH2 0x98C DUP3 DUP3 PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 PUSH2 0x9B7 PUSH2 0x2710 PUSH2 0x97A PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH2 0x9F4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1485 JUMP JUMPDEST POP JUMPDEST PUSH1 0x9 SLOAD ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 PUSH2 0xA1D PUSH2 0x2710 PUSH2 0x97A PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0xA5A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1485 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xA7A PUSH2 0x2710 PUSH2 0x97A PUSH1 0x64 PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x8 SLOAD GT ISZERO PUSH2 0xB36 JUMPI PUSH1 0x0 PUSH2 0xB21 PUSH2 0x2710 PUSH2 0x97A PUSH1 0x8 SLOAD PUSH1 0xB SLOAD PUSH2 0x146D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0xB31 SWAP1 DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0xB SSTORE POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 SLOAD PUSH2 0xB45 SWAP2 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xB9C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP5 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0xBA9 SWAP1 DUP4 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xE SSTORE POP PUSH1 0x0 PUSH1 0xB SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265207374616B696E6720706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0xCE9 JUMPI PUSH1 0x0 PUSH2 0xCA3 PUSH1 0x3 SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 POP PUSH2 0x66A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x75B SWAP1 DUP3 PUSH2 0x13DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x10D85B1B195C881B5D5CDD08189948185D5D1A1BDC9A5E9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0xE3B JUMPI PUSH1 0x0 PUSH2 0xD77 PUSH1 0x1 SLOAD DUP5 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x23D13AFF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE CALLER PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x8F44EBFC SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0xE1F SWAP3 POP SWAP1 POP DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 SLOAD PUSH2 0xE30 SWAP1 DUP4 CALLER PUSH2 0x14BA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SSTORE PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE48 SWAP1 DUP4 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xE56 DUP3 DUP3 CALLER PUSH2 0x14BA JUMP JUMPDEST PUSH2 0xE5F DUP3 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xE6C SWAP1 DUP4 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0xEF3 PUSH1 0x0 PUSH2 0x15C4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x10D85B1B195C881B5D5CDD08189948185D5D1A1BDC9A5E9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x11F1 JUMPI PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x110C JUMPI PUSH1 0x0 PUSH2 0xFD0 PUSH1 0x3 SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1034 CALLER PUSH32 0x0 PUSH1 0x3 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x38E7EAA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE39FAAA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x3 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x10F6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1103 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 SSTORE POP PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x1161 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER PUSH32 0x0 DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38E7EAA9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE39FAAA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x11E9 SWAP3 POP SWAP1 POP DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x1226 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1233 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x126A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1286 PUSH1 0x64 PUSH2 0x1280 DUP5 DUP2 DUP8 DUP2 DUP12 DUP12 PUSH2 0x1461 JUMP JUMPDEST SWAP1 PUSH2 0x1461 JUMP JUMPDEST EQ PUSH2 0x12E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F6620616C6C207368617265732073686F756C642061646420757020 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x746F2031303025 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x8 DUP5 SWAP1 SSTORE PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x1AB182163A0683CD3182C000705483EF0CCDC375A845AB7B68678F89D90DE4D7 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x136F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 DUP5 PUSH2 0x19BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x145B SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1673 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 DUP5 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 DUP5 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 DUP5 PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x14B5 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1424 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14EE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP6 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF62CF8D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0xF62CF8D0 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x153B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x154F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD ISZERO PUSH2 0x1574 JUMPI PUSH1 0xC SLOAD PUSH2 0x156E SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 GT ISZERO PUSH2 0x15B1 JUMPI PUSH1 0x0 PUSH2 0x1595 PUSH1 0xB SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH2 0x15AA SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xC SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x15BE SWAP1 DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0xB SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD ISZERO PUSH2 0x1666 JUMPI PUSH1 0xC SLOAD DUP2 GT ISZERO PUSH2 0x1659 JUMPI PUSH1 0x0 PUSH2 0x163D PUSH1 0xC SLOAD DUP4 PUSH2 0x13DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x1652 SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0xB SSTORE POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x156E SWAP1 DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x15BE SWAP1 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1745 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x14B5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x16E6 SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x14B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1754 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x175C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1830 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1882 DUP3 DUP3 DUP7 PUSH2 0x188D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x189C JUMPI POP DUP2 PUSH2 0x13E9 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x18AC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E9 DUP3 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1939 PUSH1 0x20 DUP5 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19D1 JUMPI PUSH2 0x19D1 PUSH2 0x19A9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19E9 JUMPI PUSH2 0x19E9 PUSH2 0x19A9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x1A08 PUSH2 0x19A9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A6C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A54 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x145B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A8F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A51 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AB8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 JUMPI DUP8 CALLCODE 0xEB SUB 0xC8 PUSH19 0xEF3D7A599AF9B391FD6576F19D57F27F5F932B 0xA6 DUP4 SWAP8 REVERT 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ", "sha1": "c4c094ff4ba4a448f16c3353e433987a650d08c7", "source": "//SPDX-License-Identifier: MIT\npragma solidity >=0.6.5;\n\n//BSC Address: 0xF43A7d04DcD76601dE0B0d03D761B09fBF095502\n//openzeppelin\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n//bitcrush\nimport \"./BankStaking.sol\";\n//import \"../interfaces/IBankroll.sol\";\n///@dev use interface IBitcrushBankroll\nimport \"./LiveWallet.sol\";\n\ncontract BitcrushBankroll is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for ERC20Burnable;\n    uint256 public totalBankroll;\n    bool public poolDepleted;\n    uint256 public negativeBankroll;\n    //address of the crush token\n    ERC20Burnable public immutable crush;\n    BitcrushStaking public immutable stakingPool;\n\n    address public reserve;\n    address public lottery;\n\n    uint256 public constant DIVISOR = 10000;\n    uint256 public constant BURN_RATE = 100;\n    uint256 public profitThreshold;\n\n    //consistent 1% burn\n    uint256 public profitShare;\n    uint256 public houseBankrollShare;\n    uint256 public lotteryShare;\n    uint256 public reserveShare;\n\n    //profit tracking\n    uint256 public brSinceCompound;\n    uint256 public negativeBrSinceCompound;\n\n    //tracking historical winnings and profits\n    uint256 public totalWinnings;\n    uint256 public totalProfit;\n\n    address admin;\n    // MODIFIERS\n    modifier adminOnly() {\n        require(\n            msg.sender == address(admin),\n            \"Access restricted to admin only\"\n        );\n        _;\n    }\n\n    //authorized addresses\n    mapping(address => bool) public authorizedAddresses;\n    event SharesUpdated(\n        uint256 _houseBankrollShare,\n        uint256 _profitShare,\n        uint256 _lotteryShare,\n        uint256 _reserveShare\n    );\n\n    constructor(\n        ERC20Burnable _crush,\n        BitcrushStaking _stakingPool,\n        address _reserve,\n        address _lottery,\n        uint256 _profitShare,\n        uint256 _houseBankrollShare,\n        uint256 _lotteryShare,\n        uint256 _reserveShare,\n        address _admin\n    ) {\n        crush = _crush;\n        stakingPool = _stakingPool;\n        reserve = _reserve;\n        lottery = _lottery;\n        profitShare = _profitShare;\n        houseBankrollShare = _houseBankrollShare;\n        lotteryShare = _lotteryShare;\n        reserveShare = _reserveShare;\n        admin = _admin;\n    }\n\n    /// authorize address to register wins and losses\n    /// @param _address the address to be authorized\n    /// @dev updates the authorizedAddresses mapping to true for given address\n    function authorizeAddress(address _address) public onlyOwner {\n        authorizedAddresses[_address] = true;\n    }\n\n    /// remove authorization of an address from register wins and losses\n    /// @param _address the address to be removed\n    /// @dev updates the authorizedAddresses mapping by deleting entry for given address\n    function removeAuthorization(address _address) public onlyOwner {\n        delete authorizedAddresses[_address];\n    }\n\n    /// DESCRIPTION PENDING\n    function addToBankroll(uint256 _amount) public adminOnly {\n        if (poolDepleted == true) {\n            if (_amount >= negativeBankroll) {\n                uint256 remainder = _amount.sub(negativeBankroll);\n                crush.safeTransferFrom(\n                    msg.sender,\n                    address(stakingPool),\n                    negativeBankroll\n                );\n                stakingPool.unfreezeStaking(negativeBankroll);\n                negativeBankroll = 0;\n                poolDepleted = false;\n                crush.safeTransferFrom(msg.sender, address(this), remainder);\n                totalBankroll = totalBankroll.add(remainder);\n            } else {\n                crush.safeTransferFrom(\n                    msg.sender,\n                    address(stakingPool),\n                    _amount\n                );\n                stakingPool.unfreezeStaking(_amount);\n                negativeBankroll = negativeBankroll.sub(_amount);\n            }\n        } else {\n            crush.safeTransferFrom(msg.sender, address(this), _amount);\n            totalBankroll = totalBankroll.add(_amount);\n        }\n    }\n\n    /// Add users loss to the bankroll\n    /// @param _amount the amount to add\n    /// @dev adds funds to the bankroll if bankroll is in positive, otherwise its transfered to the staking pool to recover frozen funds\n    function addUserLoss(uint256 _amount) public {\n        require(\n            authorizedAddresses[msg.sender] == true,\n            \"Caller must be authorized\"\n        );\n        //make game specific\n        //check if bankroll is in negative\n        //uint is unsigned, keep a bool to track\n        //if negative send to staking to replenish\n        //otherwise add to bankroll and check for profit\n        if (poolDepleted == true) {\n            if (_amount >= negativeBankroll) {\n                uint256 remainder = _amount.sub(negativeBankroll);\n                crush.safeTransferFrom(\n                    msg.sender,\n                    address(stakingPool),\n                    negativeBankroll\n                );\n                stakingPool.unfreezeStaking(negativeBankroll);\n                negativeBankroll = 0;\n                poolDepleted = false;\n                crush.safeTransferFrom(msg.sender, address(this), remainder);\n                totalBankroll = totalBankroll.add(remainder);\n            } else {\n                crush.safeTransferFrom(\n                    msg.sender,\n                    address(stakingPool),\n                    _amount\n                );\n                stakingPool.unfreezeStaking(_amount);\n                negativeBankroll = negativeBankroll.sub(_amount);\n            }\n        } else {\n            crush.safeTransferFrom(msg.sender, address(this), _amount);\n            totalBankroll = totalBankroll.add(_amount);\n        }\n        addToBrSinceCompound(_amount);\n    }\n\n    /// Deduct users win from the bankroll\n    /// @param _amount the amount to deduct\n    /// @dev deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative\n    function recoverBankroll(uint256 _amount) public {\n        require(\n            msg.sender == address(stakingPool),\n            \"Caller must be staking pool\"\n        );\n        if (_amount >= negativeBankroll) {\n            uint256 remainder = _amount.sub(negativeBankroll);\n            negativeBankroll = 0;\n            poolDepleted = false;\n            crush.safeTransferFrom(msg.sender, address(this), remainder);\n            totalBankroll = totalBankroll.add(remainder);\n        } else {\n            negativeBankroll = negativeBankroll.sub(_amount);\n        }\n    }\n\n    /// Deduct users win from the bankroll\n    /// @param _amount the amount to deduct\n    /// @dev deducts funds from the bankroll if bankroll is in positive, otherwise theyre pulled from staking pool and bankroll marked as negative\n    function payOutUserWinning(uint256 _amount, address _winner) public {\n        require(\n            authorizedAddresses[msg.sender] == true,\n            \"Caller must be authorized\"\n        );\n\n        //check if bankroll has funds available\n        //if not dip into staking pool for any remainder\n        // update bankroll accordingly\n        if (_amount > totalBankroll) {\n            uint256 remainder = _amount.sub(totalBankroll);\n            poolDepleted = true;\n            stakingPool.freezeStaking(remainder, _winner, msg.sender);\n            negativeBankroll = negativeBankroll.add(remainder);\n            transferWinnings(totalBankroll, _winner, msg.sender);\n\n            totalBankroll = 0;\n        } else {\n            totalBankroll = totalBankroll.sub(_amount);\n            transferWinnings(_amount, _winner, msg.sender);\n        }\n        removeFromBrSinceCompound(_amount);\n        totalWinnings = totalWinnings.add(_amount);\n    }\n\n    /// transfer winnings from bankroll contract to live wallet\n    /// @param _amount the amount to tranfer\n    /// @param _winner the winners address\n    /// @dev transfers funds from the bankroll to the live wallet as users winnings\n    function transferWinnings(\n        uint256 _amount,\n        address _winner,\n        address _lwAddress\n    ) internal {\n        crush.safeTransfer(_lwAddress, _amount);\n        BitcrushLiveWallet currentLw = BitcrushLiveWallet(_lwAddress);\n        currentLw.addToUserWinnings(_amount, _winner);\n    }\n\n    /// track funds added since last compound and profit transfer\n    /// @param _amount the amount to add\n    /// @dev add funds to the variable brSinceCompound\n    function addToBrSinceCompound(uint256 _amount) internal {\n        if (negativeBrSinceCompound > 0) {\n            if (_amount > negativeBrSinceCompound) {\n                uint256 difference = _amount.sub(negativeBrSinceCompound);\n                negativeBrSinceCompound = 0;\n                brSinceCompound = brSinceCompound.add(difference);\n            } else {\n                negativeBrSinceCompound = negativeBrSinceCompound.sub(_amount);\n            }\n        } else {\n            brSinceCompound = brSinceCompound.add(_amount);\n        }\n    }\n\n    /// track funds remvoed since last compound and profit transfer\n    /// @param _amount the amount to remove\n    /// @dev deduct funds to the variable brSinceCompound\n    function removeFromBrSinceCompound(uint256 _amount) internal {\n        if (negativeBrSinceCompound > 0) {\n            negativeBrSinceCompound = negativeBrSinceCompound.add(_amount);\n        } else {\n            if (_amount > brSinceCompound) {\n                uint256 difference = _amount.sub(brSinceCompound);\n                brSinceCompound = 0;\n                negativeBrSinceCompound = negativeBrSinceCompound.add(\n                    difference\n                );\n            } else {\n                brSinceCompound = brSinceCompound.sub(_amount);\n            }\n        }\n    }\n\n    /// transfer profits to staking pool to be ditributed to stakers.\n    /// @dev transfer profits since last compound to the staking pool while taking out necessary fees.\n    function transferProfit() public returns (uint256) {\n        require(\n            msg.sender == address(stakingPool),\n            \"Caller must be staking pool\"\n        );\n        if (brSinceCompound >= profitThreshold) {\n            //-----\n            uint256 profit = 0;\n            if (profitShare > 0) {\n                uint256 stakingBankrollProfit = brSinceCompound\n                    .mul(profitShare)\n                    .div(DIVISOR);\n                profit = profit.add(stakingBankrollProfit);\n            }\n            if (reserveShare > 0) {\n                uint256 reserveCrush = brSinceCompound.mul(reserveShare).div(\n                    DIVISOR\n                );\n                crush.safeTransfer(reserve, reserveCrush);\n            }\n            if (lotteryShare > 0) {\n                uint256 lotteryCrush = brSinceCompound.mul(lotteryShare).div(\n                    DIVISOR\n                );\n                crush.safeTransfer(lottery, lotteryCrush);\n            }\n\n            uint256 burn = brSinceCompound.mul(BURN_RATE).div(DIVISOR);\n            crush.burn(burn);\n\n            if (houseBankrollShare > 0) {\n                uint256 bankrollShare = brSinceCompound\n                    .mul(houseBankrollShare)\n                    .div(DIVISOR);\n                brSinceCompound = brSinceCompound.sub(bankrollShare);\n            }\n\n            totalBankroll = totalBankroll.sub(brSinceCompound);\n            //-----\n            crush.safeTransfer(address(stakingPool), profit);\n            totalProfit = totalProfit.add(profit);\n            brSinceCompound = 0;\n            return profit;\n        } else {\n            return 0;\n        }\n    }\n\n    /// Store `_threshold`.\n    /// @param _threshold the new value to store\n    /// @dev stores the _threshold address in the state variable `profitThreshold`\n    function setProfitThreshold(uint256 _threshold) public adminOnly {\n        require(\n            _threshold < 100000000000000000000000,\n            \"Max profit threshold cant be greater than 100k Crush\"\n        );\n        profitThreshold = _threshold;\n    }\n\n    /// updates all share percentage values\n    /// @param _houseBankrollShare the new value to store\n    /// @param _profitShare the new value to store\n    /// @param _lotteryShare the new value to store\n    /// @param _reserveShare the new value to store\n    /// @dev stores the _houseBankrollShare address in the state variable `houseBankrollShare`\n    function setShares(\n        uint256 _houseBankrollShare,\n        uint256 _profitShare,\n        uint256 _lotteryShare,\n        uint256 _reserveShare\n    ) public onlyOwner {\n        require(\n            _houseBankrollShare\n                .add(_profitShare)\n                .add(_lotteryShare)\n                .add(_reserveShare)\n                .add(BURN_RATE) == DIVISOR,\n            \"Sum of all shares should add up to 100%\"\n        );\n        houseBankrollShare = _houseBankrollShare;\n        profitShare = _profitShare;\n        lotteryShare = _lotteryShare;\n        reserveShare = _reserveShare;\n        emit SharesUpdated(\n            _houseBankrollShare,\n            _profitShare,\n            _lotteryShare,\n            _reserveShare\n        );\n    }\n\n    ///store new address in reserve address\n    /// @param _reserve the new address to store\n    /// @dev changes the address which recieves reserve fees\n    function setReserveAddress(address _reserve) public onlyOwner {\n        reserve = _reserve;\n    }\n\n    ///store new address in lottery address\n    /// @param _lottery the new address to store\n    /// @dev changes the address which recieves lottery fees\n    function setLotteryAddress(address _lottery) public onlyOwner {\n        lottery = _lottery;\n    }\n\n    ///store new address in admin address\n    /// @param _admin the new address to store\n    /// @dev changes the address which is used by the adminOnly modifier\n    function setAdmin(address _admin) public onlyOwner {\n        admin = _admin;\n    }\n}\n", "sourceMap": "544:14016:11:-:0;;;1941:620;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:8;921:18:0;:32::i;:::-;-1:-1:-1;;;;;2253:14:11;;;;;2278:26;;;;;2315:7;:18;;;;;-1:-1:-1;;;;;;2315:18:11;;;;;;2344:7;:18;;;;;;;;;;;;;;;2373:11;:26;;;;2410:18;:40;2461:12;:28;2500:12;:28;2539:5;:14;;;;;;;;;;;544:14016;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:146:22:-;-1:-1:-1;;;;;104:31:22;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:1158::-;353:6;361;369;377;385;393;401;409;417;470:3;458:9;449:7;445:23;441:33;438:53;;;487:1;484;477:12;438:53;519:9;513:16;538:46;578:5;538:46;:::i;:::-;653:2;638:18;;632:25;603:5;;-1:-1:-1;666:48:22;632:25;666:48;:::i;:::-;785:2;770:18;;764:25;733:7;;-1:-1:-1;798:48:22;764:25;798:48;:::i;:::-;917:2;902:18;;896:25;865:7;;-1:-1:-1;930:48:22;896:25;930:48;:::i;:::-;997:7;987:17;;;1044:3;1033:9;1029:19;1023:26;1013:36;;1089:3;1078:9;1074:19;1068:26;1058:36;;1134:3;1123:9;1119:19;1113:26;1103:36;;1179:3;1168:9;1164:19;1158:26;1148:36;;1229:3;1218:9;1214:19;1208:26;1243:48;1283:7;1243:48;:::i;:::-;1310:7;1300:17;;;165:1158;;;;;;;;;;;:::o;:::-;544:14016:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/Bankroll.sol", "type": "contract", "deployment": {"address": "0xb40287dA5A314F6AB864498355b1FCDe6703956D", "chainid": "97", "blockHeight": 17690216}}